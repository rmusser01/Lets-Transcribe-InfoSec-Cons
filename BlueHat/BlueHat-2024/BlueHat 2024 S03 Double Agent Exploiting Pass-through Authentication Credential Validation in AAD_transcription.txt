{
  "webpage_url": "https://www.youtube.com/watch?v=4Yrslt6wXN4",
  "title": "BlueHat 2024: S03: Double Agent: Exploiting Pass-through Authentication Credential Validation in AAD",
  "description": "BlueHat 2024: Session 03: Double Agent: Exploiting Pass-through Authentication Credential Validation in Azure AD Presented by Avihai Ben Yossef from Cymulate\n\nThis session was presented by Avihai Ben Yossef on behalf of Ilan Kalendarov and Elad Beber from Cymulate, who were unable to attend the conference.\n\nAbstract: This research explores the vulnerabilities within Microsoft Azure Active Directory's Pass-Through Authentication (PTA) mechanism, focusing on the credential validation process. By analyzing PTA's architecture and operation, the study identifies specific weaknesses that could be exploited by attackers to bypass authentication and gain unauthorized access to cloud environments. The research provides a detailed examination of these vulnerabilities, supported by practical examples and potential attack scenarios, offering insights into improving the security of Azure AD deployments.",
  "channel_url": "https://www.youtube.com/channel/UCKmzq2lAhDxLy36KtvVWpaQ",
  "duration": 1716,
  "channel": "Microsoft Security Response Center (MSRC)",
  "uploader": "Microsoft Security Response Center (MSRC)",
  "upload_date": "20241108"
}

0.00s - 4.40s | This text was transcribed using whisper model: large-v2

 Okay, perfect. So yeah, thank you very much for hosting me
5.80s - 9.32s |  And happy to be here. So I'm actually
10.12s - 12.12s |  gonna talk about
12.28s - 19.44s |  Pass-through exploitation. So there is a research we've done at simulate. So I'll introduce us and the research in a in a few seconds
21.08s - 22.88s |  But as you
22.88s - 25.16s |  Kind of giving, you know a little bit on the agenda
26.04s - 28.70s |  Really just a quick introduction to me the team
29.42s - 32.22s |  And of course the research that we've done
33.58s - 36.72s |  We'll give an overview of password authentication because I think the main
37.42s - 39.42s |  research we've done was
39.86s - 42.58s |  researching the hybrid environment between like an
43.26s - 47.34s |  on-prem active directory and as your active directory and the
47.90s - 49.38s |  connection between the two
49.38s - 51.38s |  We'll give an overview of the attack
52.38s - 57.66s |  show a demo kind of even like a video demo a nice one to show exactly what's going on and
58.54s - 62.70s |  Talk about the potential impact of this vulnerability that we found
63.82s - 67.46s |  And of course, we'll leave maybe even a few minutes for questions
69.26s - 72.26s |  So just introducing the team, so my name is Avichai Ben Yosef
72.26s - 78.98s |  I'm one of the co-founders and the CTO at simulate. So what we aim to do at simulate is, you know attack simulation
78.98s - 84.94s |  That's kind of the whole idea of the company and the product that we've built and that's where most our researchers come from
84.94s - 90.62s |  we're looking for different attack scenarios that are that might exist in different kind of environments because of you know,
92.14s - 96.90s |  Features things that can happen things that the attacker can exploit why they can do it and how they can do it
96.90s - 99.38s |  And that's also what led us. We focused a lot on
100.34s - 104.74s |  Hybrid environments a lot of our enterprises are these kind of hybrid environments
104.74s - 108.50s |  And that was a key factor and a key parameter that led us to create that
109.26s - 111.26s |  to research these kind of
111.58s - 117.78s |  Capabilities in the environment you also see here Ilan and Elad. So they are the one that actually conducted the research
117.78s - 120.34s |  I'm just stealing their credit for like this next 30 minutes
121.10s - 125.38s |  Unfortunately, they couldn't make it. So I'm giving this talk in their behalf
126.14s - 131.92s |  so
132.48s - 138.68s |  Pretty straightforward thing like again a very quick introduction to of course cloud and cloud services. So pretty straightforward idea
139.24s - 145.56s |  You know, the adoption of cloud is pretty intense and I think like there's so many workloads and SAS application these days
146.12s - 151.84s |  There is I would say any enterprise has moved some of their services to the cloud by now
151.84s - 157.68s |  Okay, even if it's a few if it's some if it's all of their services, but the adoption is a hundred percent
158.56s - 162.88s |  Increasing rapidly and that's why we took that initiative to validate, you know
163.32s - 169.08s |  How does that look like if somebody is actually adopting cloud services specifically in a Microsoft environment
170.12s - 172.68s |  What are the concerns that lead from that?
173.40s - 175.40s |  perspective
179.16s - 185.12s |  Okay, so the entire presentation will be about pass-through authentication that will be that service
185.76s - 187.76s |  that we're going to talk about but
188.32s - 193.44s |  Really? Why did we actually tackle the pass-through authentication? Okay, so there are a few
194.76s - 198.40s |  Points that led us to research the pass-through authentication survey
198.40s - 203.36s |  Which I'll go further on into the presentation to explain. What is that pass-through authentication service?
204.04s - 207.20s |  But again a wise very widespread adoption
207.20s - 213.20s |  so cloud adoption is why is of course increasing as we mentioned, but companies and environment they don't just
213.96s - 218.08s |  At first step move all of the workloads and all of their services to the cloud
218.32s - 223.32s |  So they do use that what we call it's called ad connect and the password authentication
223.32s - 227.08s |  They do have still an on-premise environment and the cloud environment
227.12s - 233.96s |  there is still something that connects between them and that will be that password authentication that kind of enables all of that to happen, so
234.72s - 240.60s |  There is a very widespread adoption of the password authentication on Microsoft environments
241.00s - 243.68s |  The second would be the fact that this
244.40s - 246.32s |  service
246.32s - 250.32s |  Is very critical inside the identity infrastructure when you have an it
250.48s - 256.12s |  I think these days it's it's okay to say identity infrastructure, you know, the identity of an entire
257.08s - 259.08s |  company environment is an
259.12s - 266.64s |  Entire infrastructure built behind it and the password authentication is a very critical factor in the identity infrastructure
267.44s - 273.32s |  And some you know, the last point is and and I'll show later on why is that right?
273.84s - 277.32s |  It is a very high value target. So if an attacker gets
278.16s - 280.16s |  access or ownership
280.32s - 282.32s |  on the password authentication service
284.64s - 290.72s |  There is a lot of impact to that point and that's why we also targeted it and again, I'll go through it
291.32s - 293.32s |  throughout my presentation
294.36s - 298.52s |  So let's give a quick overview of password authentication. So I think it's a
299.04s - 306.60s |  As we mentioned we're talking about hybrid environments in this specific case like an on-prem active directory environment and azure ad
306.76s - 308.76s |  on the cloud
308.76s - 312.60s |  So a pretty simple process, you know, very straightforward if somebody want to
313.12s - 319.68s |  Sign in and you a user signs in to like a cloud resource. For example, he is being redirected to
321.12s - 325.48s |  Azure a default authentication he logs in puts his username and passwords
325.48s - 332.24s |  it goes through the password authentication service the password authentication service then forwards that request to the
332.64s - 338.20s |  domain controller on-prem if the username and password are indeed correct it
338.84s - 341.40s |  forwarded back to the Azure tenant saying
342.08s - 347.32s |  That's a valid credentials. Go ahead. Let him access the resource that he wanted to get
347.84s - 351.08s |  Pretty straightforward nothing very crazy about that
354.42s - 356.62s |  Okay. Oops, that's too much
358.10s - 359.98s |  Okay
359.98s - 361.10s |  so
361.10s - 366.46s |  Very again very abstract of how that does the pass-through authentication works
366.70s - 371.34s |  So when you install the ad connect and the service on-prem
371.86s - 378.66s |  The first thing it does it's like a bootstrap it initialize a connection to the Azure ad tenant using the relevant key
379.02s - 385.42s |  It then starts and basically what it does at that point is signs up to like a queue that Azure has so that will
385.42s - 391.38s |  Be like a queue that whenever somebody logs in it's it's been written to that queue and every time
392.02s - 397.94s |  We'll say like a there is like a polling mechanism on the PTA on the password authentication service
398.10s - 404.54s |  it's going to pull try and pull every time that somebody logs in is getting is it's going to be written to that queue and
404.94s - 409.18s |  The password authentication service will pull it from that queue
409.18s - 413.90s |  but that's a very again very abstract very straightforward connects to Azure and then
414.34s - 418.82s |  Constantly trying to see if there is something he needs to do using that polling mechanism
419.54s - 425.54s |  There is a reason why I'm actually explaining that as we go throughout the presentation. This will give us some new
426.14s - 429.46s |  Things that can happen throughout this process
435.70s - 440.86s |  Yep. Okay. Okay. So let's go into more even a little bit more details. Okay, so
442.34s - 448.34s |  Yep
452.04s - 454.12s |  Okay, we can leave that it's okay
454.76s - 459.72s |  Basically, so a user signs in as we mentioned the username and password go to the you know
459.72s - 466.76s |  He's being redirected to the Azure AD login page. It puts his credentials. They are being encrypted and sent to
467.48s - 473.52s |  That queue. Basically, they are being written on that same queue the password authentication servers
473.52s - 476.20s |  As I mentioned is constantly pulling from that queue
476.20s - 483.16s |  it takes the username and pass from to that queue and then goes to the domain controller that is synced to the Azure AD and
483.44s - 489.48s |  He asked him is those credit are those credentials valid the domain controller then forwards
489.80s - 492.80s |  Binary yes or no answer to that questions
493.28s - 500.08s |  Then forwards back to the Azure tenant saying yes or no. Is that user actually authenticated again?
500.60s - 504.44s |  Nothing, very crazy about the pass-through workflow
507.63s - 508.75s |  so
508.75s - 512.91s |  You know when you think about why is that so important?
512.91s - 515.43s |  So I think first of all user experience, okay
515.43s - 520.27s |  If I'm in a hybrid environment and I have an identity infrastructure as mentioned
520.87s - 525.31s |  I don't want people, you know logging in with different passwords. I want the
526.03s - 531.79s |  the transition to a hybrid environment to be as clean and seamless as possible and that's why
532.55s - 537.11s |  That's a super important feature when you want to go hybrid and start moving resources to the cloud
539.19s - 544.07s |  Second in is it's really really easy to deploy very easy to administrator
544.99s - 550.55s |  It's it's a very very clean feature that can be used and of course
550.55s - 553.79s |  It's also helps with security because I think there are so many
554.51s - 559.03s |  Throughout the history of security. There is a lot about multiple passwords
559.07s - 564.55s |  So I think there's there's been done a lot of researches about multiple passwords and how it's that's not a good
564.75s - 567.27s |  But it's not a best practice for security
567.27s - 573.43s |  You want to reduce the amount of passwords being used in your company? And that's why it's also an important feature
573.43s - 578.19s |  You don't want one username for your on-prem and another one for your cloud environment
579.59s - 584.51s |  Just like you know any other kind of an SSO concept very similar idea
585.95s - 593.43s |  But that's definitely the part where you know that we wanted to tackle is it really secured and maybe there are flaws in this process
594.15s - 596.15s |  That needs to be acknowledged
596.55s - 600.31s |  So the first thing that we did
600.67s - 603.19s |  honestly by mistake that wasn't even a
603.99s - 610.89s |  Direction we took but we just linked and or maybe synced two different domains to one Azure tenant
611.55s - 615.63s |  So we created two on-prem domain one is called a the other is called B
615.63s - 620.39s |  And we sync them both to the same Azure ad tenant
622.28s - 624.28s |  What we saw at that point
626.04s - 631.56s |  Is some kind of an inconsistency with logging in so, oh, sorry again jump the gun there
632.12s - 637.44s |  Some kind of an inconsistency with the login which means like I you know
637.44s - 642.68s |  when you kind of log into like an app or something and you put the right password and you know,
642.88s - 648.56s |  You obviously you get like a bad login and you're absolutely right that the password was indeed, correct
648.56s - 654.68s |  You're saying what just happened. Am I in a phishing right now? Am I being phished or because I'm 100% sure
654.68s - 658.24s |  I use me the same password and you know what? I'll try again and the second time it worked
659.24s - 665.52s |  And you kind of scratch your head saying was that on purpose did something weird just happened and
666.36s - 668.36s |  That's what happened here
669.12s - 671.12s |  Which you'll see here on the video
672.28s - 674.88s |  That's exactly what happened. We've logged in. Oops
676.76s - 682.20s |  We've logged in one time with one of the on-prem domains and
682.40s - 684.40s |  And
684.44s - 688.48s |  What happened is we got an error saying you cannot log in
690.36s - 692.36s |  But we were absolutely sure
692.84s - 696.68s |  We were using the right password. Sorry. I'll just
698.75s - 705.69s |  Play the demo. It's not playing
708.29s - 713.06s |  right, I
713.06s - 717.46s |  Don't want to click that play. I think it's a so one slide back and
718.42s - 720.42s |  Click play, please
720.74s - 729.56s |  Okay. Yeah, that's good
729.64s - 733.08s |  Perfect. Okay, so you can see here. We've used the right password
733.08s - 738.96s |  That's one of the on-prem domains username and password because we are in a hybrid environment. This is a sync domain and
739.88s - 744.60s |  For some reason like I've mentioned we we didn't really know why we got bad login
744.80s - 748.76s |  But we were absolutely sure we're using the right password. We've tried it again and
749.56s - 751.00s |  for some
751.00s - 753.32s |  unknown reason we did get logged in so
754.32s - 761.68s |  That led us okay, that's definitely something we should investigate. Why did that happen? This is not a phishing domain
761.68s - 766.44s |  This is the right domain. This is the right link for the Azure portal. Nothing has changed
767.16s - 773.20s |  What you can see here. We've started decompiling the PTA agent. We started thinking maybe something with that
773.64s - 775.76s |  Password dedication agent is off
776.60s - 778.60s |  So we decompile it. This is a dotnet
779.12s - 783.44s |  Agent so we didn't have to like reverse engineer assembly code or anything like that
783.44s - 787.44s |  We decompile it with a different kind of dotnet decompile tools
788.20s - 793.84s |  And what you can see here is something nice so you can see the who am I here you can see the domain?
793.84s - 795.52s |  We are currently on
795.52s - 800.68s |  But what you also see here on the debugger that the domain that got to this
802.20s - 807.72s |  PTA agent is not the same domain that we have logged in with it's a different one
808.00s - 810.80s |  so the reason why we weren't able to log in was
811.48s - 812.48s |  because
812.48s - 820.16s |  This is not the right domain. We have used domain a and we've got to domain controller B, which didn't know who is domain a
821.32s - 824.04s |  Why did we get a different domain controller?
824.04s - 831.04s |  So we said we connected a and B to the same Azure tenant for some we've logged in with the username from domain a but we
831.52s - 833.52s |  Got the request to domain B
835.00s - 838.12s |  Okay
838.16s - 840.12s |  That's definitely a question
840.12s - 845.92s |  We started asking more what happened right now or and not only that like what's what can happen more than that?
846.48s - 849.52s |  We'll get to that in a few minutes. So what we started thinking
849.52s - 857.00s |  okay, if I'm an attacker and I want to exploit this fact that I can log in with domain B and it will get
857.00s - 861.44s |  To the domain controller of domain a so we started creating like a POC
861.44s - 867.24s |  We created a you know a DLL that we're going to inject into the PTA process
867.36s - 874.12s |  so it's gonna be like a dotnet DLL like a managed DLL and we're going to inject into it, basically, we're going to use the
874.64s - 880.96s |  CLR of dotnet we're going to inject to it. We created an unmanaged DLL. That's gonna hook those functions
881.64s - 883.64s |  basically at the first
884.00s - 887.68s |  There is the validate credential function. We're gonna hook and
888.44s - 890.44s |  filter traffic to that function
890.96s - 893.84s |  basically owning the pre
894.76s - 901.08s |  Authentication and the post and using that pre authentication once we hook to that PTA agent function of validate credentials
901.24s - 908.68s |  We're gonna just print out every different credentials that come into the PTA agent just to show us what we can see there
908.68s - 916.42s |  And of course the second thing we thought about doing is why not return true every time somebody tries to log in and there is a
916.68s - 920.92s |  Validate credentials request to the PTA agent. We'll just return true and
921.52s - 925.36s |  Whatever as anybody's trying to sign in doesn't matter. We'll just let him in
927.48s - 932.80s |  Forcing like a true like an authentication a successful authentication on the PTA agent
935.28s - 941.32s |  So the the attack process, you know, the steps is basically a user logs in okay from
942.24s - 945.00s |  domain a sorry from domain B and
946.36s - 949.40s |  It goes throughout that same process that we've mentioned all the way
950.40s - 953.16s |  With like the fact that instead of going to domain
954.12s - 959.76s |  B is gonna go to domain a because as we mentioned we got two domains connected to the same Azure tenant
959.76s - 961.76s |  We don't know why but for some reason
962.36s - 968.80s |  it can land the authentication request can land at domains domain a domain controller and
969.68s - 974.92s |  If we are hooked to it, we can just say yes, you are authenticated. Go ahead
976.16s - 978.04s |  And that's what we did
978.08s - 984.16s |  So you'll see here's, you know the managed DLL as we mentioned it will basically print
984.76s - 986.28s |  like a pre
986.28s - 989.36s |  Prefix of the function of the validate credential
989.36s - 994.48s |  it will just print out to a log file all the credentials that got to the PTA agent and
995.12s - 996.92s |  a post fix
996.92s - 998.92s |  It will return true
999.12s - 1001.12s |  Every time somebody tries to sign in
1002.85s - 1006.57s |  There is also the unmanaged DLL that we that is actually being injected
1007.01s - 1013.21s |  Not very interesting, but basically loading CLR and then loading the managed DLL that's going to help us
1014.77s - 1025.23s |  Bypassing the PTA agent activity. Yes. Let's go for okay. So let's see the demo of
1026.07s - 1028.23s |  The attack. Let's hope it plays
1029.79s - 1034.91s |  And if not, we'll just go and click play I don't know who's gonna click but yes
1037.57s - 1044.09s |  But I think you're about to see probably, you know pretty straightforward to what I've mentioned
1044.09s - 1050.21s |  we're gonna manage basically to we're gonna first start with injecting so we've used process hacker to inject the
1051.69s - 1057.13s |  the unmanaged DLL into the PTA agent on that server and
1058.09s - 1062.29s |  We're gonna start logging in, you know in different credentials different
1062.89s - 1065.29s |  Usernames and passwords and let's see what happens, you know
1065.61s - 1067.09s |  we're
1067.09s - 1074.65s |  Just like I've mentioned. I don't know which domain controller these sign-in are gonna land domain a domain B
1074.97s - 1077.09s |  It's pretty random. I'll give a
1078.13s - 1083.69s |  Possibility of how is it working? But what you'll see in front of you we can every time we log in at that moment
1084.49s - 1092.49s |  Basically, we let everybody in everybody can now access as you it doesn't matter what you put in the username and password
1093.49s - 1100.94s |  It can be user from domain a user from domain B
1101.30s - 1107.14s |  If if the authentication requests lands in our PTA agent the one we are hooked to
1107.62s - 1114.70s |  That's it. You are logged in to your Azure portal. You can reach out to those resources and of course
1115.22s - 1117.42s |  You know when one nice side effect
1118.02s - 1122.10s |  We can also list out the different credentials and start
1122.58s - 1128.18s |  Packing them up and every credential that gets over the PTA agent that we are currently hooking
1128.18s - 1134.10s |  We can just list them out and start gathering more and more credentials. That's being logged in through that
1134.94s - 1137.34s |  pass through authentication service
1139.62s - 1144.18s |  You can see throughout the demo that we're trying, you know, it doesn't really matter what we're putting in
1144.18s - 1146.18s |  but the nice thing about it is that
1146.18s - 1151.34s |  If somebody connects with that different domain if that username and password is from domain
1151.98s - 1153.98s |  B and we are hooked to domain a
1154.54s - 1160.86s |  We are logging him as well. He's still logged in. He's gonna be logged in and he can actually get different
1161.62s - 1163.74s |  permissions, okay, that's also at that point like a
1164.90s - 1171.38s |  Permission issue because at the end of the day if you can log in from even a different domain from the one that we are
1171.58s - 1173.58s |  That should be
1173.58s - 1180.68s |  Maybe you have a different role on that same Azure tenant and that's a classic privilege escalation idea here
1181.06s - 1187.22s |  I'm on domain. I'm gonna do totally different on-prem domain and at that point I've managed to get a
1190.30s - 1193.34s |  Privileged user from a totally different on-prem domain
1193.98s - 1201.50s |  On a cloud environment on a cloud portal on a cloud and a sass of the Azure not even related to the on-prem domains
1202.30s - 1208.90s |  That's a totally I would say like if you think about the attack scenarios and that's what we're kind of researched here
1209.18s - 1212.18s |  if an attacker managed to own
1212.94s - 1214.94s |  an attack an on-prem domain and
1215.50s - 1217.50s |  Get to the PTA agent
1217.90s - 1224.18s |  Not only that he can get to other cloud resources that might not even be a part of his own
1224.98s - 1231.48s |  Domain right now. He can also even move laterally to a totally different on-prem domain as well
1231.70s - 1234.10s |  Which might not have any relation between the two
1234.82s - 1240.18s |  Just because he's managed to get access to that PTA agent in that same domain
1242.42s - 1245.38s |  And yeah, you can see here in the last kind of
1246.62s - 1252.66s |  seconds of the video this is a totally different user that has the same and no access to the Azure tenant and
1253.78s - 1259.52s |  He's an is a global admin on Azure and we just got there just from you know
1260.36s - 1267.36s |  Being an administrator on an on-prem service server with the PTA agent totally unrelated to the Azure portal
1267.92s - 1284.02s |  Okay
1284.02s - 1288.46s |  So the potential impact I think I've mentioned a few of them along the way. First of all
1289.50s - 1295.04s |  Unauthorized access to Azure services. So again an attacker that got access to your
1296.58s - 1303.30s |  On-prem domain domain a in this example can start now getting more access to more Azure resources
1303.50s - 1305.50s |  That he just didn't have before
1306.50s - 1308.54s |  The second would be credential theft
1308.54s - 1313.54s |  So once I'm on that hooking of the PTA agent as I've seen on the video
1313.54s - 1315.02s |  You can just print, you know
1315.02s - 1321.90s |  Start logging different credentials and you might find their credentials from not only from domain a but from domain B
1321.90s - 1327.26s |  maybe C maybe D maybe E who knows who knows who's gonna try and log in and those
1328.26s - 1335.42s |  Credential requests are gonna get to the PTA agent that we are currently hooking on because that's totally random
1335.42s - 1337.94s |  So if two domains are connected to that same Azure tenant
1338.50s - 1342.28s |  Whether they go to domain a or B, you don't really know
1342.98s - 1347.90s |  What we have seen is it's probably because of that polling mechanism that I've mentioned earlier
1347.90s - 1350.94s |  So if you connect two domains to that same Azure tenant
1350.94s - 1356.66s |  it's probably a race condition between the two both of them are pulling from that same queue from that Azure queue and
1357.26s - 1359.26s |  Whoever pulls it first
1359.38s - 1360.90s |  Got the request
1360.90s - 1366.18s |  So there is no way to control it. You don't know where it's gonna that authentication request is gonna land
1366.58s - 1372.02s |  But if it landed on the domain that you currently on the PTA agent, sorry that you currently hook
1372.10s - 1375.10s |  That's a win. You can start moving naturally to other domains
1375.90s - 1380.90s |  And yeah, and that's the way you can escalate privileges to Azure services or you know
1380.90s - 1383.06s |  Even to another on-prem domain as well
1383.06s - 1390.70s |  So that can actually lead to that from movement between two different on-prem domains. It has zero connection between them. They're only
1391.74s - 1397.22s |  Their only mistake that they've done is that they are both synced with that same Azure tenant. That's it
1397.74s - 1402.76s |  And and that's a totally new paradigm to like, you know
1404.10s - 1409.26s |  Protecting your on-prem environment and your cloud and Azure environment
1409.70s - 1411.70s |  And
1411.86s - 1416.66s |  Yeah, and that's a pretty big win for an attacker that managed to attack a domain
1417.58s - 1421.86s |  Getting to a totally different domain getting to you know escalating privileges on your Azure
1423.46s - 1427.14s |  Tenant hopefully getting even a global admin from owning
1427.14s - 1429.86s |  You know an on-prem domain all the way to you know
1429.86s - 1435.70s |  Getting global admin on Azure getting domain admin on a totally different domain and domain control
1435.94s - 1443.10s |  That's a pretty big win for an attacker that just managed to get access to a server with the PTA agent on
1446.31s - 1449.27s |  So some of the mitigation strategies that we of course
1450.23s - 1457.79s |  Recommend, you know to handling with this kind of an attack scenario is first of all MFA will probably do a lot here
1457.79s - 1464.35s |  So there was also like an article with that on Forbes about Microsoft, of course issuing a
1465.15s - 1469.23s |  Lot of mandatory MFA logins in their services
1469.75s - 1472.95s |  This would of course solved a lot of these problems right now
1473.99s - 1478.03s |  They've even referenced the because of the research that we have done
1479.63s - 1482.99s |  They've also referenced that as again a driver to
1483.63s - 1485.83s |  Implement and enforce MFA on
1486.55s - 1490.43s |  Login attempt because in this case, yes MFA would have solved the issue
1490.79s - 1495.35s |  You could not have logged in because you have been redirected at the end to enter your
1496.11s - 1499.75s |  Second factor and that would have killed the entire process here
1502.55s - 1507.47s |  One more thing that I think is also important to mention is that PTA agent here
1508.87s - 1515.75s |  It's it's not by necessary something that is installed on your environment as a tier 0 server
1515.87s - 1518.07s |  It can be installed at your domain control
1518.07s - 1522.83s |  It can also be installed in a different server that can that has a connection to the domain controller
1523.35s - 1527.27s |  This PTA agent is not something people talk about or know too much
1527.27s - 1532.27s |  But if you have that ad connect with a PTA agent in your on-prem environment
1532.63s - 1538.71s |  This needs to be highly monitored. Okay, this is not a regular service in your environment
1538.71s - 1541.07s |  If an attacker gets to the PTA agent
1541.31s - 1548.27s |  He has a lot of control of your authentication not just on your on-prem environment but on different
1549.23s - 1551.71s |  Domains that might be synced with the same Azure tenant
1551.71s - 1558.51s |  It means that it has a lot of control of your Azure tenant as well. There is a lot you can do just by
1559.55s - 1566.15s |  Having administrator rights on your PTA agent server as I've shown throughout the presentation
1574.26s - 1576.26s |  so, of course, we've
1576.62s - 1579.22s |  You know cooperated with Microsoft
1579.94s - 1581.94s |  with MSRC and
1582.38s - 1584.62s |  the first thing we of course suggested is
1585.22s - 1586.98s |  first of all that
1586.98s - 1591.44s |  Kind of a multi-domain lateral movement capability that popped up from this research
1591.94s - 1596.50s |  First of all make the authentication process domain aware
1596.66s - 1601.70s |  It doesn't make sense if I'm gonna authenticate from domain B. I should be
1602.38s - 1608.30s |  Referred to the password authentication of domain B not domain A
1608.78s - 1613.86s |  This should not be only a polling like a race condition who gets it first
1614.30s - 1620.46s |  You can do a validation that the domain that was entered in the username is indeed domain B
1621.50s - 1623.50s |  So, of course, we've offered that
1623.98s - 1631.54s |  And yeah, and if there are different kind of logical separation and segregation between domains that should be implemented during this process
1632.70s - 1636.30s |  and
1636.30s - 1642.46s |  Just really just a summary of the report and the timeline. So I think we have
1643.34s - 1646.62s |  We've reported this at around July
1647.46s - 1654.42s |  To the MSRC they have got they given us a feedback very quickly as you can rightly see here
1654.94s - 1659.90s |  With the fact that they acknowledge this it's not currently listed as a CV
1659.90s - 1664.86s |  But the they have acknowledged and of course, they have invited us here to even share it with the crowd
1665.78s - 1673.34s |  And they do see that as something that needs fixing not just but not currently posing and as an immediate threat
1674.82s - 1678.98s |  And yeah, and I think the team is not me the actual team that did the research
1679.66s - 1685.02s |  Will also be listed in the Hall of Fame of Microsoft as MSRC
1687.12s - 1693.04s |  That's it there is you know, thank you for listening and thank you for inviting me on the Microsoft team and
1694.40s - 1697.36s |  We got here the emails of the two nice
1698.04s - 1704.72s |  guys that actually did their research if somebody want to reach out to us or get some more details about it and how to
1705.24s - 1712.32s |  You know, maybe implement some of the mitigation strategies that we have offered here. We are happy to create that connection
1712.72s - 1714.72s |  Thank you very much