**Overview of Presentation**

- **Event**: BlueHat 2024
- **Session**: LT04: Scaling Out Securing Open Source
- **Presenter**: Zachary Steindler from Microsoft

**Programming Language Package Repositories**

- **Targets for Attackers**: Serve billions of requests, making them attractive for distributing malware
- **Unique Ecosystem Challenges**: Community values and architecture vary, complicating security implementation

**OpenSSF Securing Software Repositories Working Group**

- **Role**: Provides roadmaps, implementation guidance, and partnerships for funding
- **Achievements**: Significant progress in package repository security capabilities

**Lessons Learned and Roadmap Development**

- **Challenges**: No budget or authority; participation is voluntary
- **Goal**: Facilitate sharing of lessons and collaborative security efforts
- **Inspiration**: Success of PyPI's Trusted Publishing feature

**Trusted Publishing**

- **Concept**: Secure publishing of packages using OIDC tokens instead of passwords or long-lived secrets
- **Adoption**: Successful implementation in PyPI and RubyGems; spreading to other ecosystems
- **Guidance**: Documented as "Trusted Publishing for All Package Repositories" available at repos.openssf.org

**Build Provenance**

- **Objective**: Sign builds with supply chain metadata using OIDC tokens and SIGstore
- **Implementation**: First applied in NPM; guidance available for broader adoption
- **Impact**: Ensures package integrity and traceability of source code and build instructions

**Maturity Model for Package Repository Security**

- **Purpose**: Assess security capabilities and guide funding applications
- **Levels**: Four maturity levels to prioritize impactful, low-effort security improvements
- **Partnership**: Co-published with US CISA to enhance reach and impact

**Implementation Guidance and Engagement**

- **Approach**: Living documents for iterative improvement and team collaboration
- **Roadmap Development**: Helps organizations prioritize and track security progress
- **Patience and Consistency**: Essential for successful security capability delivery in open source

**Resources and Contact**

- **Guidance Availability**: All materials published at repos.openssf.org
- **Engagement**: Presenter available for questions in the villages later