**Event Details**
- **Title**: BlueHat 2024: S02: Tokens & Takeovers: Cloud-Powered Supply Chain Attacks
- **Presenters**: Nitesh Surana from Trend Micro, Gaurav Mathur from Microsoft
- **Channel**: Microsoft Security Response Center (MSRC)
- **Duration**: 2266 seconds
- **Upload Date**: November 8, 2024

**Overview**
- Focus on **supply chain attacks** using **overly permissive SAS tokens**.
- Example of 2023 leak of 38 TB of Microsoft's AI research data due to misconfigured SAS token.
- Explored methods to control and execute attacks on Microsoft tools like PC Manager.

**Supply Chain Attacks**
- Notable attacks: **Polyfill library hijacking**, **CCleaner backdoor**, **SolarWinds Orion updates**, **CodeCoff CI compromise**.
- Common attack patterns: Target single vulnerable components, such as **open-source dependencies** and **third-party services**.
- **Implicit trust** issues with Microsoft's official resources like AKMS URL shorteners.

**Azure Storage and SAS Tokens**
- **Azure Storage**: Scalable, secure cloud storage solution supporting blob, files, queues, and tables.
- File access through **shared keys**, **shared access signatures (SAS)**, and **Azure AD**.
- **SAS tokens**: Grant access via signed URLs; categorized as account, service, and user delegation SAS tokens.
- **Security concerns**: Misconfiguration, infinite validity, lack of tracking for SAS generation.

**Case Studies**
- **Microsoft Documentation**: Found overly permissive SAS tokens in SQL managed instance documentation, leading to potential code execution via backdoored stored procedures.
- **Web Scanning**: Identified SAS tokens on websites allowing modification of JavaScript resources due to missing SRI checks.
- **Microsoft PC Manager**: Exploited SAS tokens to access internal builds and modify release files, circumventing Winget protections via overly permissive tokens found in AKMS links.

**Defense and Response**
- **MSRC Response**: Revoke, rotate, remove, and check for abuse within 24 hours of report.
- **Engineering collaboration**: Ensure **least privilege principle**; remove credentials from code.
- Continuous **monitoring** for unauthorized use and **real-time source code scanning**.

**Security Practices**
- Encourage reporting of exposed tokens to MSRC without proof of concept.
- **Detection tools**: Real-time scanning and push protections in CI/CD pipelines.
- **Prevention strategies**: Short-lived SAS tokens, stored access policies for tracking.

**Takeaways**
- Emphasize **least privilege** principle for credentials.
- **Hunt for SAS tokens** using storage analytics logs and external sources like VirusTotal, GitHub.
- **Inspect network traffic** for overly permissive tokens and scan code bases for potential vulnerabilities.
- **Update security tools** like TruffleHog, GitLeaks to detect cloud credentials.

**Acknowledgments**
- Thanks to Zero Day Initiative and Microsoft for addressing reported vulnerabilities.