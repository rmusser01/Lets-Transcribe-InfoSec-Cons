{
  "webpage_url": "https://www.youtube.com/watch?v=uCcyd3lTPXk",
  "title": "DEF CON 32 - MFT Malicious Fungible Tokens  - Mauro Eldritch, Cybelle Oliveira",
  "description": "In this technical talk, we will uncover a new aspect of NFTs: using them as attack vectors to relay C2 commands. Fingerprinting a system? Exfiltrating information? Encrypting and wiping data? Executing arbitrary commands? Of course! But with a dark twist: deployed NFTs are blockchain-backed assets immune to takedowns. Imagine having your own \u201cimmortal\u201d C2 Server for less than $10 dollars in $ETH.\n\nFor this, we will introduce \u201cmFT\u201d an open-source tool that automates the creation of malicious payloads and provide sample harmless NFTs, allowing attendees to explore this novel attack vector on their own machines safely. This talk is the spiritual successor of \"Everything is a C2 if you're brave enough\".",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1300,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 2.76s | This text was transcribed using whisper model: large-v2

 Welcome, everybody, to our talk, Malicious Fungible Tokens.
3.50s - 7.22s |  My name is Mauro and my partner today is Ivel, and we welcome you.
7.22s - 8.34s |  Thank you for choosing our talk.
10.02s - 11.84s |  Hey, everyone, good evening.
11.84s - 13.22s |  Hi, how are you doing?
13.22s - 15.68s |  Thanks for being here to our talk.
15.68s - 18.44s |  First, of course, English is not our first language.
18.44s - 19.90s |  We have a little bit accent.
19.90s - 24.36s |  So if you don't understand any word, please raise your hands or say
24.36s - 26.82s |  you are saying so much bullshit in English.
26.98s - 31.32s |  That's OK, because we can speak, improve our English.
31.32s - 33.40s |  OK, thank you.
33.40s - 34.44s |  So let's start.
35.56s - 37.24s |  As I said, my name is Ivel.
37.24s - 39.16s |  I'm from Brazil, Sao Paulo, Brazil.
39.16s - 41.12s |  I work at Cyber Threat Intelligence.
41.12s - 44.08s |  And well, I like malware.
44.08s - 48.20s |  I like to research about malware, hands-on wares and things like this.
48.46s - 51.62s |  It's pretty cool. You know, I know how it works.
53.54s - 54.68s |  Well, my name is Mauro.
54.68s - 56.64s |  I'm a Uruguayan-Argentinian hacker.
56.66s - 58.50s |  I'm here today to show this talk.
58.50s - 60.80s |  And I spoke at different events around the world.
60.80s - 63.58s |  And I'm the leader of the BITSOC Quetzal team, which is the first
63.58s - 67.04s |  Latin American Web3 Threats Research Team.
69.94s - 75.38s |  This talk, we are going to use NFTs as immortal command and control servers.
75.62s - 77.46s |  We are not going to sell you any NFT.
77.46s - 80.08s |  We are not going to try to put you into crypto.
80.08s - 82.46s |  So we are not going to make you invest into anything.
82.46s - 85.54s |  This talk is the continuation or the spiritual successor of
85.56s - 87.76s |  Everything is a C2, if you're brave enough,
87.76s - 91.50s |  which was a talk at the previous Adversary Village, where we used the Spotify,
91.72s - 96.30s |  World of Warcraft, Wikipedia and whatever you can name as a C2 server in the past.
97.94s - 103.52s |  So this talk is 30 minutes only, but it's divided in two parts, OK?
103.70s - 107.62s |  First, I will give ingredients and then, Mauro, you cook this.
107.66s - 110.16s |  OK, first, let me introduce you.
110.16s - 114.74s |  Podo, or Leopoldo, is his dog, Amazing Dog, a golden retriever.
115.12s - 118.90s |  OK, so let's talk.
118.94s - 126.62s |  Let's clarify what NFTs, C2 servers and lovely golden retriever, the lovely dog.
127.00s - 132.34s |  So NFTs, basically they are all information when you
133.96s - 137.50s |  upload, you know, an NFT in a blockchain.
137.72s - 139.68s |  This is all information storage.
139.68s - 142.14s |  And well, everything is there.
142.50s - 145.38s |  Data, metadata and things like that.
145.76s - 148.64s |  But you can store this image as well.
148.64s - 154.84s |  And off-chain, I mean, in a decentralized platform for this.
155.10s - 158.48s |  And it's immortal as well.
158.48s - 162.22s |  You know, you can change like in blockchain.
162.44s - 164.28s |  This is very important.
164.28s - 165.48s |  So we have two types.
165.48s - 170.58s |  You know how we can store our image on-chain and off-chain.
171.42s - 173.48s |  On blockchain and not in the blockchain.
174.26s - 176.06s |  Oops, sorry.
176.32s - 177.90s |  OK, sorry.
178.10s - 180.90s |  So what is a C2 command and control servers?
181.12s - 185.98s |  It's a server that we can send and receive information of malware.
185.98s - 189.66s |  So we can use this in anywhere, right?
189.66s - 191.16s |  But not in this case.
191.42s - 198.34s |  But the problem is if I try to do something in NFT, if I use a regular server,
198.38s - 200.68s |  you know, for C2, what can happen?
201.14s - 207.56s |  This can be banned or blacklisted, you know, and the list that
207.98s - 213.32s |  denies a list or everything can be messy and can be taken down,
213.32s - 215.78s |  even if it's in Tor browser.
215.98s - 220.58s |  So, yeah, it works, of course, but not in this case.
220.58s - 224.82s |  This particular case, we need something more resilient, right?
224.82s - 235.36s |  OK, so, as I said, blockchain, I don't know if everybody's familiar with blockchain,
235.36s - 236.40s |  I guess, right?
236.58s - 241.08s |  So everything is there, back that sits there is permanent.
241.08s - 243.78s |  You can change, it's there and that's it.
244.00s - 246.08s |  You just upload there and you keep there.
246.24s - 249.62s |  Can ban it, can flag anything.
249.92s - 258.18s |  But usually NFTs can be stored there or no, can be NFT is an image.
259.18s - 266.98s |  In NFT image, you can put like name, description, trade and everything, including metadata is there, right?
268.44s - 277.38s |  So instead we do this with that ugly monkeys, we everybody saw that ugly monkeys aware or weird image
277.42s - 283.88s |  because we see weird image from artists that say, oh, this is a brand new thing, but it's not my thing.
283.88s - 287.26s |  Sorry. What about Golden Retriever?
287.34s - 289.06s |  They are really, really cool.
289.06s - 291.02s |  And as a dog, too bad it's not a cat.
291.02s - 292.52s |  But let's start with a dog.
292.52s - 293.86s |  Maybe the next time, right?
294.40s - 297.98s |  Maybe. Now let's explain what is this.
298.90s - 301.94s |  Mostly NFTs, there's a platform.
301.94s - 306.28s |  The most known one is OpenSea, that one with the ugly monkey.
307.26s - 311.14s |  That was hacked several times, but it's not about this talk.
312.10s - 319.24s |  This is a very big market, probably is whitelist for almost all Web3, you know, companies.
319.48s - 321.94s |  All traffic go through this API.
322.12s - 325.44s |  OK, but that is off-chain, too.
326.16s - 331.96s |  It's partially stored in on-chain, I mean in the blockchain.
332.26s - 338.68s |  But the metadata is decentralized in other places, like this file system is in another place.
339.18s - 346.74s |  Now, this is very important when you use decentralized metadata, where it can be in many, many places.
346.74s - 351.28s |  But here is specifically talk about interplanetary file system.
351.94s - 355.36s |  I don't know if some everybody is familiar with this.
355.82s - 359.46s |  It's a cool place, you know, very decentralized platforms.
359.72s - 367.68s |  It's like torrent, you know, when you try to download or upload a file, a music there, you have seeds, no?
368.04s - 371.76s |  So these seeds, everything is shared among these seeds.
372.16s - 380.12s |  And when you have these, you hold these files and you can share, you know, and hold these files.
380.16s - 381.84s |  You have, you receive coins.
381.92s - 386.12s |  I mean, you are paid, you know, to have these files.
386.46s - 393.78s |  This is really nice for who's, you know, who have this, you have these files as a file coin, I guess the name.
393.82s - 394.66s |  Yes, right.
396.14s - 401.30s |  And then this image, when you upload there, is converted in another kind of file.
401.50s - 409.42s |  This AVIF, I'm not so familiar with this kind of, you know, I'm not an artist to convert the images.
409.76s - 418.84s |  And then the original file that's stored in this decentralized place is highly distributed among the seeds.
419.24s - 425.04s |  And this is the thing, you know, everything is in the seeds, all these files.
425.16s - 431.00s |  So starting from here is the thing, you know, what we're talking about.
431.20s - 435.32s |  Please explain what we do with these files that are decentralized.
435.86s - 443.94s |  Well, the point with the Interplanetary File System is that it's used widely by Lockheed Martin, IBM, other high vendors.
444.38s - 446.74s |  The point is that everything is distributed.
446.78s - 448.54s |  Anyone can run an APFS node.
449.02s - 454.02s |  So if you want to take something down, you have to ask every single node owner to take it down.
454.46s - 462.34s |  But as my partner here said, OpenSea and some other platforms reward you for holding the file or sharing the file with Filecoin.
462.60s - 467.08s |  So if you get a hold of a file, everybody deletes it and you have it.
467.36s - 469.96s |  There's a supply-demand problem here.
470.40s - 474.68s |  You can make lots of money by being the last one, the last holder of that file.
475.20s - 482.56s |  So that opens the path to certain kind of abuses of people not actually honoring takedown requests.
485.39s - 487.39s |  Okay, so now comes the important part.
488.39s - 494.27s |  This sounds pretty good in theory, but we have to make it into code, especially into Ruby code.
494.27s - 500.47s |  So if any one of you knows Ruby, you know that it might be nice, but it's not as flexible as other languages.
500.55s - 512.59s |  So what we need right now, we need a malicious C2 server, a malware that can interpret and send commands from NFTs, and obviously the malicious NFTs.
512.61s - 514.61s |  I'm going to switch the mic.
515.09s - 517.09s |  Okay, I'm back here.
517.49s - 523.37s |  So for this experiment, we have Leopoldo. I presented him in the previous slides.
523.49s - 533.97s |  We have four NFTs, which every single one does anything different, and we're going to test different attack vectors encoded inside these NFTs.
533.97s - 539.41s |  We have Initial Access Marker, Ramson Retriever, Treat Actor, and Golden Locker, my personal favorite.
540.01s - 541.73s |  It's not for sale.
541.73s - 547.09s |  Okay, on the left, you can see the malware coded in Ruby called MFT, Malicious Fungible Tokens.
547.09s - 552.67s |  And on the right side, you can see the C2 server coded once again in Ruby and Sinatra.
553.89s - 557.33s |  Let's start by exploiting the most basic things in OpenSea.
557.89s - 560.93s |  Let's start by exploiting the common fields, the low-hanging fruit.
561.69s - 567.09s |  Treat Actor, what it actually does, is has a description field publicly viewable by anyone.
567.25s - 571.93s |  It's visible to anyone, which is encoded in Base64 and ROT13.
572.25s - 577.69s |  When decoded, it says IP address, which is always hard-coded on all examples to local hosts,
577.85s - 580.61s |  so you cannot do any damage to anyone else.
581.53s - 583.53s |  It has a code
583.73s - 590.41s |  parameter that actually represents UNIX command and actions, which are actually proprietary modules of the malware.
590.93s - 597.17s |  This is not detected by CyberChef, even with magic on DEV10, so that was pretty awesome for me.
597.89s - 605.13s |  Then we have Golden Locker, which has a description just encoded in Base64, which is not also discovered by
605.81s - 610.09s |  CyberChef, and has other actions. We will see them in detail now.
611.05s - 614.41s |  Here's the malware, and we will have a demo at the end of this talk.
615.01s - 622.17s |  When you search for an account, for an ENS domain name or an Ethereum account, it will list all NFTs,
622.61s - 626.93s |  showing the newer ones first, because if you are pricing Situ servers,
626.93s - 631.65s |  this one will have the latest information that you need, the most up-to-date information and commands.
632.09s - 637.01s |  Then, if you can see the contract and the description and the collection.
637.61s - 641.49s |  And then, here's the thing. If you see the description, you will see the encoded
642.45s - 643.93s |  payload.
643.93s - 649.13s |  But if you see below, you will see the URL for the picture and the metadata, and then you'll go to
649.53s - 653.09s |  IPFS.IO, and here you will say, Mauro, what happens if I
653.73s - 660.89s |  send a takedown request to IPFS.IO? Absolutely nothing, because IPFS.IO is just an IPFS browser.
661.33s - 663.61s |  All this information is stored on different
664.41s - 669.45s |  IPSF nodes across the world, and you have to make a takedown request to every single one.
670.45s - 675.13s |  Then, if any one of you is familiar with Terraform,
675.69s - 681.73s |  actually, Terraform has a Terraform plan, which will show you what changes will happen before you push the button.
682.05s - 687.57s |  So you can avoid something like, you know, a CrowdStrike incident and things like that.
688.41s - 692.77s |  Actually, I tried to implement that. It's a function I'm super in love with.
693.01s - 698.65s |  So the malware will tell you what's going to happen once you run that NFT. Will the code tell you step-by-step
698.65s - 701.69s |  what's going to happen before you push the button?
702.57s - 709.13s |  And then, you will see it running in action, as you can see here. They will say, okay, I'm using this server as a relay.
709.13s - 715.81s |  I will run this custom code, WhoAmI, which answers back with Mauro Eldritch ID, which answers back with my ID,
716.37s - 721.49s |  hostname, and so on. There are some fake functions that I have not coded in,
721.85s - 727.33s |  obviously, for obvious reasons, that are wipe, encrypt, and open a reverse shell. That won't work at all.
728.69s - 732.69s |  And this is what the attacker will see from the Sitio server.
733.13s - 738.69s |  We'll see all the answers, for example, new exfiltration from localhost, and everything that happens.
738.69s - 745.25s |  But let's see how it works in the back. Before exploiting this, which is a super low-hanging fruit,
745.77s - 749.85s |  we will try to do something more complex. Remember that my partner told that
750.25s - 755.93s |  once you send a picture to an NFT, it will be stored in ABIF format and decentralized.
756.17s - 761.53s |  Well, the original file, the raw file, will be decentralized as well, for no apparent reason.
762.17s - 765.49s |  So, that's where we can inject more shenanigans.
765.93s - 769.57s |  In this case, I just wanted to test that the steganography will work.
769.57s - 776.01s |  So, I put Mauro Eldritch was here. The method is the most simple method on steganography, less single bit or LSB,
776.93s - 780.05s |  which has a hard-coded location that everyone knows.
781.05s - 786.69s |  And then, if you see here, you have once again the picture URL and the metadata URL.
786.69s - 791.77s |  Let's try to download the picture and check if the message made it to production on OpenSea.
792.77s - 798.65s |  And, for nobody's surprise, once downloaded and check it with setsteg, which is a third-party tool I do not own,
798.93s - 801.17s |  you can see the message replicated.
801.77s - 804.73s |  This means that we can decentralize messages,
805.33s - 809.29s |  steganographic messages, across all the world of using OpenSea.
809.85s - 811.69s |  Why is this so important?
811.69s - 818.13s |  Because the malware will only send traffic to OpenSea API.
818.69s - 824.45s |  So, when doing forensics on an affected device, you will see that the traffic and the attack comes from OpenSea,
824.89s - 826.85s |  from nowhere else, just OpenSea.
827.21s - 831.73s |  From Wireshark, from TCP DAM, you will see only connections to OpenSea API.
832.73s - 840.85s |  And then, I decided to create, let's say, my master hardcraft, Initial Access Marker, which has all the attack vectors.
841.17s - 844.09s |  It has steganographic signet messages.
844.41s - 849.29s |  It has a trait, which is a common field on all NFTs.
849.57s - 854.49s |  But it also has something called Exif field.
854.93s - 860.29s |  Exif metadata is data that is usually put by machines, by your processors,
860.57s - 863.21s |  by your cameras, by your phones.
863.77s - 870.05s |  The point is, the trick here is that, Exif metadata, it's hard to just put any arbitrary value in, you know?
870.77s - 874.49s |  You can put numbers, you have certain fields that are more flexible than others.
875.01s - 880.97s |  But there's a field, a specific field called profile copyright, that allows you to put basically anything you want without limit.
881.33s - 883.17s |  And that's where it stores the payload as well.
884.05s - 889.89s |  And once you check it, once you go to any IPFS browser,
890.29s - 895.61s |  you will see that the trait is already distributed globally.
896.05s - 902.21s |  So you can rely on the trait and not even start messing with metadata or messing with Exif metadata as well.
903.25s - 907.97s |  But then, I say, OK, let's try if we can check the other two vectors.
908.45s - 911.97s |  Downloading the picture that you can see here, which is hosted on IPFS.io,
913.13s - 919.49s |  you can see that by running Exif tool on the specific field, you will see once again the payload.
920.17s - 925.13s |  Running SetStag will render once again the payload.
925.65s - 930.73s |  So this adds different layers of resilience to store the same or different payloads on a simple NFT.
931.57s - 935.37s |  Remember that minting an NFT is something super, absolutely cheap.
936.09s - 943.05s |  So you can basically write immortal C2 servers for five pounds, seven dollars, or whatever is in your currency.
943.81s - 948.41s |  You can also check this with different third-party tools I do not own to see that the payload is reflected.
949.49s - 952.65s |  And now it's time to the demos. We are very good in time.
952.65s - 957.41s |  The demos don't have sound, but you will enjoy my angel voice narrating it.
961.92s - 968.68s |  This first example is, sorry, let's try to improve the quality because you deserve better.
971.73s - 980.86s |  Give me a second. Basically, what we are going to do here is run GoldenLocker,
981.06s - 983.14s |  one of the low-hanging fruit exploitation.
983.62s - 988.38s |  Above you can see the malware and below you can see the C2 server.
988.78s - 992.66s |  They are both running on the same machine in order to not damage anything.
993.26s - 995.42s |  We'll try to decode the instructions.
995.86s - 1002.50s |  The network is not cooperating, but we will try to decode instructions that are hosted on the malware.
1003.22s - 1008.76s |  Give me a second, which belongs to GoldenLocker.
1010.52s - 1012.76s |  It will then give us an action plan.
1013.24s - 1014.24s |  Sorry about that.
1018.42s - 1021.22s |  It will give us an action plan then, and what will happen?
1021.78s - 1028.26s |  It will try to run WhoAmI, id, hostname, and will try to uniquely identify the host and do some other shenanigans.
1029.74s - 1031.18s |  Then we need to execute it.
1031.86s - 1037.47s |  Sorry.
1037.67s - 1039.27s |  Hackers with tech problems.
1039.63s - 1040.63s |  Happens.
1040.71s - 1042.03s |  This happens from time to time, you know.
1047.66s - 1048.82s |  We will try to run it again.
1055.27s - 1060.19s |  The idea is to then execute it and see how the commands are reflected on the other server.
1060.59s - 1061.91s |  Here it is trying to work.
1062.23s - 1063.39s |  Give it some seconds.
1068.87s - 1072.39s |  The quality is not the best, but let's try to bear with it.
1075.53s - 1079.37s |  And then it tries to find a viable payload.
1079.49s - 1084.29s |  If you see here, you will see that it says, I have found a tainted exif registry.
1084.45s - 1087.53s |  I have found a tainted steganographic message that I can use.
1088.33s - 1094.49s |  And if it will try to find the description first, it will try to then jump into something more complex each time
1094.89s - 1098.37s |  in order to try to use the low-hungered fruit available first.
1099.89s - 1100.89s |  Sorry, just.
1107.27s - 1112.87s |  And then the idea, the final idea is that, as I said before, you will see all the traffic being reflected to OpenSea.
1113.55s - 1120.79s |  That makes it actually difficult for forensic teams to know where the tanks come from, but also it will help them in another way.
1122.03s - 1128.99s |  If any of you is a defender or forensic analyst or similar, you will really appreciate the value of having
1129.83s - 1134.19s |  basically immortal C2 server, because you will have an artifact that you can
1135.03s - 1138.67s |  dissect and check basically forever and use as an example forever.
1139.03s - 1143.63s |  You won't have to rely on malware libraries and you won't have to rely on, you know,
1144.55s - 1146.83s |  platforms that simulate attacks on malware.
1148.51s - 1151.63s |  Well, since this is not cooperating, I will move on.
1153.68s - 1155.96s |  I'm sorry about that. Sometimes that happens.
1156.04s - 1159.88s |  Sometimes it's not easy, but we'll move on.
1163.80s - 1169.80s |  And as in all crypto experiments, there is something that you cannot just be safe from and are scammers.
1170.24s - 1176.32s |  As soon as we publish it, the pictures of my golden retriever, I have people trying to buy it for 15th, 20th and so on.
1176.72s - 1179.28s |  And let me tell you, it's not worth it.
1179.32s - 1182.68s |  He showers once a month, so he smells like a seal.
1182.72s - 1183.72s |  It's not worth it.
1184.76s - 1192.40s |  And then going back to the serious track, as I was discovering this and reporting these issues with IPFSIO,
1192.96s - 1196.12s |  I started seeing some ads, promoted ads on Twitter.
1196.64s - 1198.12s |  I refuse to call it X.
1199.32s - 1205.88s |  If you look at the lower left corner of the post on the left, you will see that the source address is IPFSIO.
1206.36s - 1214.60s |  Somebody is hosting a drainer campaign, a phishing campaign on IPFSIO, rendering it basically immortal, unable to be taken down.
1215.20s - 1220.40s |  So it has a rent-free web server to host the campaign forever.
1221.32s - 1226.72s |  Those are the dangers of decentralization when it's weaponized.
1229.24s - 1231.80s |  And then, so I hope you enjoyed this talk.
1231.84s - 1232.92s |  It's time to say goodbye.
1233.28s - 1235.20s |  I know that you may have questions.
1235.60s - 1239.76s |  This talk is not exactly about NFTs or blockchain in general, but rather how to end up using it.
1240.08s - 1240.96s |  I hope you enjoyed it.
1240.96s - 1242.48s |  Sorry for the demo not working.
1242.48s - 1243.84s |  I apologize, heartfelt.
1244.40s - 1245.92s |  And well, thanks for coming.
1245.92s - 1246.80s |  Thanks for your time.
1247.24s - 1248.60s |  I really enjoy your company today.
1248.64s - 1249.72s |  You can contact us here.
1253.20s - 1254.20s |  Thank you, everyone.
1254.24s - 1257.64s |  Any questions, comments, or something like this?
1258.36s - 1259.44s |  The dog is not for sale.
1259.88s - 1262.52s |  Did you release the tool?
1262.56s - 1263.56s |  Yeah, the tool is released.
1263.72s - 1269.68s |  You can actually create your own MetaMask address, jump to OpenSea, and start dealing with it.
1270.04s - 1272.20s |  Feel free to fork it, change it, your call.
1273.92s - 1274.72s |  Someone else?
1274.96s - 1275.72s |  Questions?
1276.24s - 1276.88s |  Comments?
1277.88s - 1278.40s |  No?
1278.72s - 1280.84s |  So, a quick advertisement.
1281.64s - 1283.92s |  We are holding a new village here.
1284.20s - 1285.28s |  It's La Villa Hacker.
1285.28s - 1289.20s |  It's more focused on people who speak Spanish and Portuguese.
1289.20s - 1292.48s |  We have awesome talks, all in Spanish and Portuguese.
1292.84s - 1294.96s |  If you want to visit us, it would be awesome.
1295.00s - 1296.76s |  And thank you very much, guys.
1297.36s - 1297.84s |  Thank you.