**Introduction to MaLDAPtive**

- **LDAP and AD**: LDAP (Lightweight Directory Access Protocol) and Active Directory (AD) are tightly linked in security contexts.
- **Tools**: BloodHound and PingCastle highlight the offensive potential of LDAP queries.
- **Visibility Challenge**: Comprehensive visibility for LDAP queries is often expensive and limited to organizations with significant resources.

**MaLDAPtive Research**

- **Goal**: Create an obfuscation/de-obfuscation/detection framework.
- **Development**: Over 2,000 hours spent developing a custom LDAP search filter tokenizer and syntax tree parser.
- **Purpose**: Transform LDAP from "lightweight" to "heavyweight" by enhancing its visibility and detection capabilities.

**Speakers**

- **Daniel Bohannon**: Principal Threat Researcher at Permiso Security with a focus on endpoint security and obfuscation.
- **Sabajete Elezaj**: Senior Cyber Security Engineer at Solaris, passionate about cyber defense and threat hunting.

**Historical Context of LDAP and AD**

- **DAP and LDAP Evolution**: Originated in the 1980s, with LDAP emerging as a lightweight version.
- **Microsoft's Role**: Released Active Directory in 2000, ensuring LDAP compliance.

**LDAP Query Components**

- **Base Object**: Starting point in AD structure.
- **Scope**: Defines search extent.
- **Filter**: Logic for directory search.
- **Attribute Selection**: Properties to be returned.

**Obfuscation Techniques**

- **Attribute Token**: Case sensitivity, OID object identifier, ambiguous name resolution.
- **Comparison Operator**: Use of range operators for obfuscation.
- **Boolean Operator**: Logical inversion, double negation, DeMorgan's laws.
- **Extensible Match Filter**: Bitwise breakout for complex filters.
- **Value Obfuscation**: Casing, prepended zeros, hex encoding, wildcards.

**Detection and Solution**

- **Parsing**: C# state machine parser for tokenization and structure understanding.
- **Enrichment**: Decoding and enriching LDAP syntax for better detection.
- **Detection Module**: "Find Evil" function with rules for identifying obfuscations.

**Conclusion and Future Plans**

- **Release Strategy**: Partial release of MaLDAPtive with a focus on defensive capabilities.
- **Future Work**: Plans to release the obfuscation module and dive deeper into client and server-side logging distinctions.