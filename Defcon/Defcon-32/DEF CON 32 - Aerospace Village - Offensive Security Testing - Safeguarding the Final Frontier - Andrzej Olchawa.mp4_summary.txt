**Introduction**
- Presenter: Andy
- Topic: **Offensive Security Testing** in aerospace
- Focus: **Mission Control System**

**Ground Segment Overview**
- Composed of interconnected components
- Components depend on each other for input and output
- **Mission Control System**: Main interface for ground station and spacecraft

**Security Vulnerabilities**
- Human element is the weakest link
- **Remote Operations** increase attack surface
- **Outdated Software**: Prone to vulnerabilities

**Security Measures**
- Expansion of strategies to include security aspects
- Imposition of **Security Policies**
- Introduction of **Security Requirements**

**Offensive Security Testing**
- Importance of **Offensive Security Testing** in identifying vulnerabilities
- Organizations developing own software, some open source

**Vulnerability Findings**
- **NASA OpenMCT**: Prototype pollution, XSS, CSRF
- **IMCS**: Directory traversal, arbitrary file deletion, session hijacking, XSS
- **NASA AIT Core**: SQL injection, local code executions, missing encryption

**Attack Scenario**
- Typical scenario involves phishing and internal attacks
- Example: Attacker compromises Alice and Bob's workstations to retrieve files

**Demo Explanation**
- Demonstration of how vulnerabilities can be exploited
- **Payload Generation** and execution on **Mission Control System**
- **Reverse Shell** obtained through man-in-the-middle attack

**Analysis Techniques**
- **Static Analysis**: Identifies low-hanging vulnerabilities
- **Dynamic Analysis**: Essential for comprehensive security testing

**Conclusion**
- **Space Applications** need better offensive security testing
- Recommendation: Hire services or conduct in-house testing
- Research findings published and available for further reading

**Contact Information**
- Slides and publications available upon request after the talk