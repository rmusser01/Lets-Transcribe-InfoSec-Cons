{
  "webpage_url": "https://www.youtube.com/watch?v=zBP2deuPQTg",
  "title": "DEF CON 32 -Your Smartcard is Dumb A Brief History of Hacking Access Control Systems - Chad Shortman",
  "description": "Have you ever wondered how those little boxes that you tap your card to open doors work? What are they reading on the card? How do they ultimately unlock the door? And, are they even secure? In this talk, we will answer all of those questions and more. We will walk through how access-control systems, in general, work, and dig into the details of the most popular systems. Fortunately for the entertainment value of this talk, there be dragons in our doors. We will walk through some of the most high-profile attacks in detail and then dive into some more fundamental flaws with how the systems are designed. All of these discussions will be accompanied with live demos and first hand experience. After this talk, you will look at the world, especially doors, differently -- weaknesses everywhere! My hope is that we can all learn from past mistakes and create a more secure and less frustrating tomorrow together",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 3201,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 4.70s | This text was transcribed using whisper model: large-v2

 All right, let's kick this thing off. So I found out today. This was not an hacker tracker
4.92s - 9.60s |  So everybody in here must read the old ink version of the schedule
9.60s - 15.80s |  So thank you for reading the old paper version and showing up today. We're gonna learn how to break into buildings
16.44s - 20.00s |  Plain and clear why do I like breaking into buildings?
20.00s - 22.32s |  I've actually never broken into a building for context
22.32s - 28.20s |  But when you can do a computer exploit and it touches the real world that has always been the ultimate for me
28.20s - 31.68s |  So I played CTF for a long time done a lot of binary exploitation
32.08s - 39.28s |  But seeing a pound sign pop up on your screen versus seeing a door unlock is a very different adrenaline hit. So
40.04s - 41.16s |  let's
41.16s - 43.16s |  go back through the history and
44.08s - 49.24s |  See all the different ways you can break into buildings with laptops. So first we'll go over access control one-on-one
49.24s - 55.76s |  I'll just explain how these systems work. That's step one. What a smart card is. This is actually a pretty overloaded word
56.76s - 59.44s |  Everything looks like a smart card is just a piece of plastic with some
60.12s - 64.88s |  microcontrollers in it and then I'll go over all of the attacks that we've seen come out over the last couple decades and
65.32s - 68.36s |  Then some food for thought on what the future might look like
69.52s - 74.68s |  So if you look at a typical access control system, there's only a couple of components
74.68s - 80.08s |  This is the most complicated system you would ever see on the left side. You'll see that there's a door reader
80.08s - 82.92s |  this is the little box you tap your card to and it goes boop and
83.56s - 86.00s |  Green or red or blue or whatever color it turns
86.48s - 92.18s |  That then has a couple of wires that run all the way to the secure side into a controller board
92.28s - 94.64s |  That will ultimately make the yes-no decision
94.68s - 100.60s |  So it's gonna compare that number to some database and say does this person have access if it does it opens the door
101.00s - 106.48s |  For security reasons if you're using a mag lock, which is just an electromagnet
106.48s - 111.04s |  You'll plug it into 12 or 24 volts that electromagnet will hold the door shut
111.72s - 115.36s |  There's a problem here though that if you're on the inside of that building
115.52s - 119.88s |  You cannot get out unless you can pull harder than a let that electromagnet
119.88s - 124.28s |  Which is typically like 1,500 kilograms for a cheap one and they go way up
124.72s - 129.84s |  So in the event of a fire you need a button that you can push to cut the power
130.32s - 134.88s |  This actually was not deployed. Well on the initial ones a lot of people burned to death
134.88s - 139.36s |  So this is like fire marshal enforced now every door that has an electromagnetic lock
139.60s - 146.12s |  Will have a motion sensor and an exit button for egress and by law it has to be one motion
146.24s - 150.96s |  So if you hit the exit button, that needs to be all you do or a strike a big bar
151.36s - 156.08s |  So that comes into play quite a bit when you see some of the attacks and how to bypass these
157.08s - 161.32s |  So if we take away all the fluffy words and just look at what this is
161.32s - 165.20s |  It's an Arduino project at any high school or middle school student could build
165.88s - 167.88s |  There's just three relays
168.16s - 169.80s |  Ultimately there's one that matters
169.80s - 175.20s |  so on the secure side if that relay trips the power is either turned off or on and
175.60s - 177.60s |  The door will unlock on
177.92s - 185.36s |  The readers side there's just a little microcontroller that is going to do something over RF and then send a number out
185.76s - 186.72s |  over weekend
186.72s - 193.88s |  Which is this unencrypted two-wire protocol that has a data zero line to encode the number zero and a data one line to encode
193.88s - 195.32s |  the number one
195.32s - 197.86s |  Once it gets the other side decision is made
198.60s - 205.24s |  the other two things are also just relays the exit button when you hit it, it's just gonna cut the power and
205.96s - 213.36s |  The motion sensor again when you wave at it, it just touches a relay. These are either normally closed or normally open
213.88s - 216.28s |  We getting those relays a chip the door will unlock
217.28s - 224.76s |  So let's look at some of the worst relay fails in honor of the Olympics. This is not a running relay
224.76s - 226.76s |  We're talking about though. This is an electronic relay
227.12s - 230.12s |  I'm going to gamble that the internet works and show you
230.76s - 235.76s |  How you can trip these relays and not so sophisticated ways. We'll get to interesting
236.28s - 240.88s |  Computer hacks later, but you can see here in this video. The exit button is on the left
241.28s - 244.48s |  You get yourself a nice sturdy piece of metal
245.04s - 250.80s |  Shove that thing through the door and you just click that relay bang. You're in this is
251.36s - 257.56s |  Let's we'll keep going up in complexity. This is probably the least advanced way to trip one of those relays
258.64s - 260.96s |  So I call this the hook key
261.56s - 267.84s |  There's also the magnet key. So if you're aware of the internal mechanics in a relay
267.84s - 275.04s |  It's just two pieces of metal like this you touch them together. The connection is made you separate them. The connection is not made
275.48s - 277.48s |  so some of these
277.64s - 280.12s |  This is the locksmith lock picking lawyer
280.88s - 282.88s |  You hit the pin pad the door unlocks
283.24s - 289.12s |  You can literally take a magnet touch it to where the relay is and it just clicks the relay
289.40s - 296.36s |  So if you buy this system put on the outside of your building anyone can just come up with a magnet click clack click clack
298.16s - 300.16s |  Click the relay on
300.48s - 306.72s |  So don't do that when you install these systems make sure the relay is on the inside of the building not the outside
307.48s - 309.48s |  And then there's the motion sensor
309.96s - 311.00s |  so
311.00s - 313.40s |  For obvious reasons when there's motion
313.40s - 320.60s |  It's going to trigger if you vape it turns out the smoke in your vape for most of these motion sensors is
321.00s - 322.32s |  thick enough
322.32s - 329.52s |  That it will actually trip the motion sensor and you can just blow smoke through the crack and walk right through the door
330.00s - 333.16s |  So we'll call these the very unsophisticated
334.12s - 336.20s |  Uninteresting why the hell did I come to this talk?
336.72s - 338.84s |  Hacks there are much more
339.80s - 341.80s |  fun ways to do this
342.08s - 347.88s |  Just to note when you're looking at these systems, so there's the electromagnets that are just huge chunky electromagnets over the top
348.32s - 349.92s |  There's also electric strikes
349.92s - 353.64s |  so these are solenoids that are gonna have a pin that by and it's
354.16s - 359.08s |  Unpowered position is stuck down in the hole and then when you power it it pulls the solenoid out
359.20s - 361.20s |  These are far better for
361.68s - 366.92s |  Various reasons you can't get locked into your building and die. They're a little harder to trip
366.92s - 371.16s |  You know, you can't vape into these and have them, you know, pull a solenoid up
371.68s - 377.20s |  So if you're given an option you're installing these anytime you can put an electric strike. So
378.24s - 380.24s |  Now let's look at smart cards
381.12s - 387.04s |  First we need to answer the question. What do I mean by smart card? There's really I think three different forms
387.04s - 392.24s |  You'll see there's the ones that look like our credit cards that have these little pads on them
392.52s - 398.48s |  There's ones that are just pieces of plastic that do some RF stuff and then there's ones with the mag stripe on the back
399.64s - 400.80s |  so
400.80s - 403.80s |  These are all very very different technologies
403.80s - 409.44s |  the end goal of all of this is to take stuff from our digital world and encode it somehow and a
409.44s - 413.32s |  Physical piece of plastic that fits in our wallet and is the same size as our driver's license
414.52s - 416.52s |  so if we look at a mag stripe
417.76s - 424.32s |  This one normally like fascinates people that stuff that is stored on the magnetic strip of your credit card is
424.64s - 430.64s |  Exactly the data that is printed on the front of your credit card. It is just a way to encode
431.40s - 436.36s |  ASCII text effectively in a magnetic form. There is no security involved
436.36s - 441.60s |  There is no encryption if you want to clone some mag stripe cards. We have them over in the physical security village
441.76s - 444.56s |  This was like, you know attempt number one at hey
444.56s - 448.64s |  We're gonna use a physical thing to interface with a digital world. There is
449.52s - 454.00s |  Nothing interesting or sophisticated there other than some physics with like magnetic poles
454.76s - 456.76s |  Not smart at all
457.52s - 459.52s |  Then came the prox cards
459.76s - 466.48s |  These you literally just emanate radio waves at them. They can be passively powered which is really cool
466.48s - 472.36s |  So the the radio waves actually give them the power they need to power on and then they respond with a number
472.56s - 474.40s |  You can actually
474.40s - 478.44s |  Hack these things with AM radios. I have like a little kit when my sister was like five
478.44s - 483.48s |  We were playing around and like emulating these kind of smart cards. They are not encrypted
483.48s - 487.88s |  There is nothing really interesting from a cryptography standpoint going on there
488.08s - 493.56s |  The only thing to figure out is how they encode the data that coming back. Is it amplitude shift keying?
493.56s - 496.80s |  Is it phase shift keying? How are they encoding the radio frequency?
497.60s - 498.64s |  At the end of the day
498.64s - 505.38s |  It is just a number and that number is typically printed on the card just to add to the security of the whole situation
505.56s - 508.40s |  These were never intended as a high security thing yet
508.40s - 510.40s |  If you go to most enterprises on earth
510.84s - 517.28s |  Including the one my wife works at they still use these exact cards today as does the high-rise that my company is in in
517.60s - 521.40s |  Downtown Houston. It's it's a bummer. Like I saw her come home first day of work
521.40s - 526.16s |  Like why like I know where you work. Don't do that. Do you have sensitive stuff?
527.00s - 528.60s |  so
528.60s - 535.68s |  Then came along the near-field communication cards NFC or high-frequency cards. These run at 13.5 6 megahertz
535.76s - 542.36s |  These do have cryptography on them the way to think of the cryptography on all of these is as a memory card
542.48s - 545.28s |  There is a symmetric key that is on the card
545.28s - 548.76s |  And if you have it, you can read and write to that card
548.76s - 555.20s |  And if you don't you cannot so there is one key that will let you read and write data from these cards
555.88s - 557.84s |  Otherwise, I
557.84s - 561.16s |  Colloquially call them dumb cards there. They're not doing anything sophisticated
561.16s - 566.16s |  They're just memory cards, but they are better than the mag stripes and the prox cards
567.00s - 568.32s |  so
568.32s - 570.40s |  There's gonna be a shared key, which
571.36s - 575.96s |  That screen still looks like it's on so there's gonna be a key on the card and a key on the reader
576.24s - 579.16s |  So for the reader to read the card, it needs another key
580.60s - 584.84s |  Which you can kind of see where this is going if I'm deploying, you know a million of these
585.20s - 589.28s |  That means that that key has to be on all of the readers and all 1 million cards
591.60s - 596.00s |  Now we look at what is actually considered a smart card
596.00s - 601.40s |  So our credit cards that look like this with the little chip. These are actually little
602.24s - 609.56s |  Microprocessors, they're not microcontrollers. They actually run Java OS. They have a CPU. They have memory
609.72s - 612.68s |  They have non-volatile storage. They have you know
613.52s - 618.24s |  Dedicated crypto units and they can do public key cryptography. So these are actually
619.00s - 623.84s |  Smart in the sense that we would hope they are and do proper security things
625.44s - 629.88s |  With the asymmetric encryption, this is much better than the symmetric key encryption
629.88s - 631.00s |  It means if you break my card
631.00s - 636.16s |  You only get my private key and you're not going to take down my whole company and be able to clone every employee's card
637.76s - 641.20s |  Which is very good for the scalability point
641.60s - 647.80s |  And I put this diagram there because I think it's interesting that I didn't realize this till I started hacking smart cards in my
647.80s - 650.52s |  Career that these really are just little embedded
651.44s - 653.12s |  systems like I
653.12s - 657.60s |  There's far more sophisticated stuff in there than I thought and you can kind of see the overlap
657.60s - 659.72s |  You have contact cards that speak one protocol
659.88s - 663.92s |  You have contactless cards and then you have the dual interface cards
663.92s - 669.92s |  Which almost all credit cards are today you can tap to pay or you can shove that thing, you know into the the credit card reader
670.52s - 673.88s |  And if you look at the specs, you know, they're 1k mbit flash
673.88s - 681.64s |  There's an EEPROM that speaks I square seed and spy and spy they have segmented memory with a 64 kbit EEPROM like
682.36s - 684.64s |  Pretty decent specs for a credit card
685.20s - 691.14s |  If the way they work is if you look at those pads only
691.26s - 696.62s |  Formatter you have your power in your ground to power the little computer on you drive the clock externally
696.62s - 701.46s |  Which is interesting from a glitching perspective. So you have a you control both the voltage and the clock
701.46s - 704.70s |  And then you just have a single pin for IO
704.70s - 710.22s |  So as you're driving the clock use that IO to read and write commands and application data units
710.50s - 717.42s |  so a PD use you're gonna send commands you can actually send like admin commands and install Java applets and
717.82s - 719.82s |  manipulate the operating system or
720.42s - 724.46s |  You know unauthenticated commands that are just gonna query this thing for a challenge response
725.74s - 727.10s |  so I
727.10s - 733.58s |  Got my doctorate in embedded system security where I was glitching and doing all sorts of crazy things that break into embedded systems
733.82s - 740.66s |  So smart cards have always fascinated me because they actually do a very very good job at physical attacks
740.94s - 745.38s |  So it's common that you would drop your credit card and somebody could pick it up, right?
745.58s - 750.10s |  They can still go make payments, but actually extracting that key cloning cards is a big deal
750.70s - 756.94s |  So they actually lay if you look at the IC and delid it between every single layer of logic
756.94s - 759.86s |  There is a layer of mesh. That is a destroy
760.90s - 764.50s |  Mechanism if that is tampered and you break a single one of those traces
764.50s - 769.20s |  It actually will self-destruct the card by deleting all of the sensitive material
769.60s - 774.34s |  They also have to have brownout detection because you're controlling the voltage externally
774.62s - 781.70s |  There are glitching attacks you can do on embedded systems where while they are doing computation you can brown the voltage out
781.70s - 785.14s |  So that means you're gonna take it from your positive 5 volts to negative 5 volts
785.38s - 789.90s |  That can make your D flip-flops go crazy and you can have an if statement
790.14s - 793.90s |  Evaluate to true that otherwise should have been false or vice versa
795.30s - 802.82s |  They also because you're controlling power clock all of these things you have to program the logic very specially
803.10s - 807.78s |  So one of these two statements on the right is correct in
808.66s - 814.42s |  An embedded system standpoint if you're writing this for a computer software, they're both probably fine
814.94s - 820.70s |  But these this is the code to check the pin when I'm entering the pin to say unlock my debit card
821.10s - 823.30s |  Does anybody have an inkling of?
824.46s - 826.46s |  Which one is better than the other?
827.14s - 835.86s |  We think number two is better
836.62s - 838.74s |  Correct number two is better
839.14s - 846.30s |  So the reason that number one would fall vulnerable on a smart card is because you can do side channel analysis to actually see
846.30s - 849.54s |  if that if statement evaluated to true or false and
850.06s - 855.50s |  What you can do in this attack is that if you believe it evaluated to false you cut the power
855.82s - 860.74s |  Immediately before it has time to increment the counter and write that to the non-volatile storage
861.74s - 864.74s |  Which means you could then brute-force this with unlimited tries
864.86s - 870.34s |  Whereas if you increment the counter before you do the check you can still limit it to 10 or you know
870.34s - 872.34s |  15 pin attempts, whatever you have
872.86s - 875.38s |  The awesome part is on these smart cards
875.38s - 881.22s |  This is all actually they've thought about a lot of this because it's used for financial transactions in the EU, especially
881.94s - 886.34s |  So I read the whole book on smart card security and these were the highlights that I thought were
887.06s - 889.06s |  particularly interesting of security done well
889.90s - 891.66s |  So
891.66s - 894.58s |  Before we go break all these why did we even build these in the first place?
895.06s - 898.34s |  The real problem is that physical keys are one-to-one
898.34s - 902.74s |  There's one key that opens one door if I want 1,000 people to open that one door
902.74s - 908.50s |  They all have the exact same key and if one of those 1,000 people is bad and I have to fire them
908.50s - 910.50s |  I now have to give out
911.06s - 913.06s |  999
913.06s - 915.06s |  9999 new keys and rekey that door
915.18s - 921.02s |  So in enterprise this sucks smart cards can be one-to-many you can have many different
921.74s - 923.74s |  Credentials that get into the same door
923.82s - 929.90s |  It used to be really complicated to carry a full computer in your pocket as you can see the modern smart cards are actually little
929.90s - 931.90s |  mini computers our smartphones are
932.14s - 934.14s |  really big fast computers and
934.42s - 938.42s |  You can put a picture on them. This should not be you know ignored
938.42s - 943.86s |  It is nice that when you come to conferences and things there is something around everyone's neck that indicates
943.90s - 946.82s |  They are meant to be here and should not be escorted out
947.02s - 954.48s |  So even all the security and stuff aside the fact that people have things hanging around the neck that says that they belong is actually
954.48s - 956.06s |  valuable
956.06s - 959.70s |  Enough with all that fluffy stuff. Let's go through some exploits. That's why I write DEF CON
960.42s - 961.66s |  so
961.66s - 967.22s |  When you're doing a vulnerability assessment you first want to ask yourself. What's the goal right? What's the worst that can happen?
967.62s - 970.22s |  So we could use a card without someone's permission
970.22s - 973.86s |  I could you know, swipe it out of your back pocket. I
974.46s - 978.66s |  Can clone the smart card or I can subvert the need for it all together
978.98s - 984.62s |  So we already saw at the beginning some of the ways that you can just completely ignore the card
984.62s - 986.50s |  If you go to the physical security village
986.50s - 992.38s |  they have many many many more ways to get into buildings that have nothing to do with computer science and
993.18s - 998.22s |  Using the card without a person's permission is not particularly interesting because you're just stealing the card
998.26s - 1002.74s |  There are ways that there are some smart cards that will have like biometrics built into them
1003.30s - 1008.22s |  You know other things like that. We're gonna specifically focus on cloning the smart cards
1009.74s - 1013.50s |  So the way it works when you have a good, you know
1013.86s - 1021.78s |  One of the dumb cards the 13.5 megahertz 5 6 megahertz cards. There's gonna be two keys that really have to
1022.38s - 1024.94s |  Work together to store this credential
1024.94s - 1029.46s |  So there's me one an authentication key an in-transit key that lets you read and write data
1029.46s - 1033.14s |  And then you can also encrypt the data at rest on the card
1033.50s - 1039.86s |  So if my employee credential is 1 2 3 3 4 5 6 8 9 0 I will encrypt that while it's on the card
1039.86s - 1046.78s |  And then I will also have effectively a key that encrypts the in transit that lets me even talk to the card
1047.46s - 1053.74s |  It doesn't matter what the key for the encryption on the card is if I'm just going to clone it outright
1054.02s - 1061.98s |  So that is worth noting because one of the fixes I'll explain later. They fixed the in the in transit key or sorry
1062.46s - 1066.78s |  Yeah, they changed the in transit key, but it didn't actually fix the problem
1068.26s - 1074.18s |  So the whole goal of this when we're trying to break into buildings with laptops is just find that dang key
1074.18s - 1077.78s |  whatever the key is that lets me read and write data from the cards is
1078.30s - 1084.30s |  Game over for that security system because now I can walk up next to anybody and just outright clone
1084.50s - 1088.78s |  Employee IDs and in the case that I also know the at-rest key
1088.78s - 1092.54s |  I can just fabricate whatever keys I want and if it's printed on the badge
1092.54s - 1099.14s |  I can just read someone's ID badge walking by and then go become them and just go in whatever door
1099.14s - 1101.14s |  I know they can go into
1101.94s - 1103.26s |  So
1103.26s - 1105.42s |  How are these attacks done? These are
1106.62s - 1113.78s |  Almost all exclusively physical attacks on the cards and their readers first this one on the my fair classic
1113.78s - 1116.06s |  So this was the most prolific card
1117.06s - 1121.22s |  Early in the smart card era. This was used for everything public transit
1121.62s - 1125.38s |  Cash cards, so you'd actually store money in the value on the card
1125.74s - 1129.18s |  So breaking these was a really big deal in the research world
1129.70s - 1136.02s |  There were a couple professors at UVA that actually delidded the chip they dissolved it in acid and went layer by layer
1137.02s - 1143.90s |  Delidding this chip and taking really high-resolution pictures that you see here of the actual ASIC
1144.18s - 1148.14s |  Like the the circuitry of the IC and then they applied
1149.10s - 1155.26s |  Image recognition to all of these images to reverse engineer the algorithm that was encoded in that chip
1155.26s - 1158.46s |  And then from there, we're able to start analyzing
1158.70s - 1165.14s |  You know doing like crypt analysis to figure out if there are any vulnerabilities in the cryptography on these my fair classics
1165.82s - 1169.58s |  spoiler alert, yes, there was my fair classic at this point is
1170.50s - 1174.50s |  Quite broken anybody with a flipper zero can just go to RFID read
1174.78s - 1181.30s |  Put it up to the back of the flipper zero or to the back of the card and it will run some version of this
1181.30s - 1183.34s |  Program I wasn't involved in the porting of it
1183.34s - 1185.46s |  But mostly a user of all these great tools
1185.46s - 1190.74s |  But this is what it looked like way back in the day in your terminal window now, it's a very awesome
1191.14s - 1198.30s |  You know handheld little device, but you can effectively brute force all of those keys break the keys back to being a talk
1198.30s - 1201.50s |  Once you have the key it's game over you tap any card you're reading and writing
1202.70s - 1204.38s |  You can again come over to our booth
1204.38s - 1210.26s |  There's still hotel key cards and public transit cards and things today that are still using my for classic
1211.26s - 1215.06s |  So in the enterprise environment, there's
1215.66s - 1216.74s |  HID
1216.74s - 1218.74s |  dominated they were by far the
1219.22s - 1220.38s |  monopolist in
1220.38s - 1226.02s |  You know enterprise access control this thing on the left probably looks very familiar to most of you
1226.02s - 1232.62s |  You have to they're all around this conference. You've seen them probably in tons of buildings airports financial institutions, whatever
1232.62s - 1234.62s |  Every elevator here has one of these
1235.46s - 1240.46s |  These use symmetric keys, right so we go back to how would you deploy a system like this?
1241.22s - 1246.06s |  Every single one of these on earth that is sold has the exact same symmetric key
1246.42s - 1250.26s |  Every single card every single reader has the exact same key
1250.26s - 1256.62s |  So they've sold millions of these to many different buildings one of which we are standing in today with the same key
1257.02s - 1262.18s |  So that would be absolutely terrible if that one key got leaked
1263.18s - 1270.02s |  It took a while actually to get this key they did pretty good security nobody dissolved the cards in acid
1270.66s - 1276.62s |  Didn't anything like that back in 2010 below. She Marriac was looking at the back of one of these readers
1276.62s - 1283.78s |  I think is the rw40 said hey that looks a lot like the pin header on my pick my pick kit my pick microcontroller
1284.62s - 1290.06s |  turns out the way they secured this system was by flipping pin 1 and pin 3 because
1290.18s - 1296.46s |  You know nobody on earth would ever dream of flipping pin 1 and 3 pin 3 on their pick kit
1296.58s - 1300.18s |  So he just swapped pins 1 and pin 3
1301.02s - 1302.54s |  Plugged it in
1302.54s - 1310.10s |  Great. We're debugging it. There is a security feature on pick though where you can't just read memory that would be catastrophic and extremely dumb
1310.10s - 1315.62s |  They did not do that this particular one though had a vulnerability where you could wipe
1316.14s - 1318.02s |  individual sectors and
1318.02s - 1322.82s |  Write data to individual sectors. So the way this should work is I'm gonna write new firmware
1322.82s - 1325.70s |  I have to wipe the whole firmware and write my own custom firmware
1326.30s - 1332.06s |  With this little subtlety you could erase sector 0 write code in there
1332.06s - 1336.82s |  That would dump sectors 1 through n and then take another sacrificial reader
1337.54s - 1342.70s |  Delete sectors 1 through n and write code in all of those that would dump sector 0
1342.94s - 1349.06s |  So by sacrificing two of these you now put all of that together and you have the complete firmware
1349.62s - 1352.70s |  Dumped on your computer that you can now analyze with IDA Pro
1353.54s - 1356.42s |  They stored everything in PIC memory
1356.94s - 1362.30s |  Including those keys they weren't stored off chip and some sort of secure RAM or anything like that
1362.82s - 1368.58s |  So once you reverse engineer this go through lo and behold the keys just pop right out at you
1369.14s - 1374.30s |  That's game over since these are symmetric keys now when you go to clone an HID card
1374.30s - 1379.10s |  There is no brute brute forcing going on. You just read the freaking card
1379.46s - 1382.58s |  They did add an I class SE
1382.58s - 1386.90s |  So if you're in the industry and you see this on the back your card the SE I
1387.50s - 1393.38s |  Think stands for secure encryption or something like that, but they did encrypt the data at rest on the card
1393.94s - 1396.14s |  So it used to be you'd use this key
1396.14s - 1403.30s |  You just read the the credential off and you could write arbitrary credentials with the SE. They did use AES. That's good
1403.30s - 1408.06s |  They used a known algorithm to encrypt the blob on the card, but you can still clone it outright
1408.18s - 1412.40s |  So if I want to become you I just tap your card. I take your blob. I put on my card. Boom. I'm you
1413.14s - 1419.38s |  They also had a version that they would upsell you on called HID elite class
1419.74s - 1423.22s |  So what elite class would do is it would just change that standard key?
1423.22s - 1426.90s |  That's on every door on earth for your organization
1426.90s - 1432.78s |  They would give you an organization specific key and then your cards your employees would use a different key
1432.78s - 1434.78s |  So people couldn't come up and clone it
1434.98s - 1436.98s |  Sounds good
1436.98s - 1440.38s |  Unfortunately, the firmware at this point is you know, it's not open sourced
1440.38s - 1443.18s |  But it's out there if you know the right people and know where to look
1443.62s - 1447.70s |  There were some researchers Flavio Garcia a couple other folks
1448.26s - 1452.50s |  Looked at this algorithm and found that there was actually a vulnerability in the way
1452.74s - 1457.78s |  That the elite keys were derived and they were able to go up to an elite key reader
1458.38s - 1461.46s |  Send I think it was seven failed attempts of
1462.34s - 1465.90s |  Cards that wouldn't register at all the back end. It would never spit them out
1465.90s - 1470.36s |  They were total failed transactions and then offline you could brute force the elite key
1470.62s - 1473.04s |  So even if you paid to upgrade to the elite key
1473.44s - 1477.48s |  Somebody's had to walk by one of your readers tap their proxmark. Boom
1477.48s - 1481.80s |  Now they have the key and we're back to where we started just clone and employee IDs
1482.20s - 1484.88s |  This was like, I don't know at least in my career
1484.88s - 1492.08s |  This is like the coolest like heyday couple of years and breaking into the RFID things and all these papers are published
1492.08s - 1496.96s |  I'm like implementing the stuff as they're publishing it like emailing these guys like oh my god
1496.96s - 1502.28s |  Like I can't believe this works. Is this a typo? Is this algorithm real and then yes, it's all real
1502.28s - 1506.32s |  I've like wrote these on proxmarks. I wrote a version of Python wrote a version C
1506.32s - 1509.32s |  And now that's all been ported to the flipper zero
1509.32s - 1514.40s |  I think the guy who ported it was hanging out and the RFID village actually one of the co-authors. So like
1515.60s - 1517.88s |  It's awesome like crazy stuff
1519.00s - 1522.08s |  Totally works and people are literally flipping out these days
1522.08s - 1523.88s |  This used to be something that like
1523.88s - 1528.60s |  Do you know there was a small group of us that knew about these things and we come to DEF CON like hey
1528.60s - 1531.64s |  You know talk about these exploits. We had email threads going back and forth
1532.20s - 1533.24s |  Now it is
1533.24s - 1539.76s |  Everybody here is walking around with one of these things on their neck with the ability to just walk into pretty much any door
1539.76s - 1544.68s |  They run if they find the correct employee and kind of just nudge into them correctly. So
1545.56s - 1547.56s |  It is a pretty strange
1548.52s - 1553.32s |  Time to be in this world and that's why we're hosting at the physical security village now
1553.44s - 1555.72s |  The decades leading up to the flipper zero
1555.72s - 1558.32s |  I'm like, you know, this probably isn't the right time to talk about this
1558.32s - 1561.84s |  Like this is a pretty bad exploit, but now that it's commoditized
1562.52s - 1564.32s |  Hey come play with it
1564.32s - 1570.60s |  So the implications of this are actually huge most of the employee badges on like the world's largest companies
1570.60s - 1571.44s |  I still
1571.44s - 1577.80s |  today walk around and have friends and I'm always looking at people's IDs and trying to clone everything and I have like way way too
1577.80s - 1581.48s |  Many oh my god moments given that this key was leaked back in 2010
1581.76s - 1583.76s |  Like there are so many
1583.76s - 1590.12s |  Organizations either have the prox cards with no encryption at all or still have these standard i-class cards like in use
1590.12s - 1595.32s |  There was a brand new building that was built. I was a tenant there for like six months and on day one
1595.32s - 1600.28s |  I just like cloned the card. They gave me and started walking through doors. I'm like, this is
1600.92s - 1605.48s |  Why in 2024 did we just build this and buy this technology?
1606.36s - 1610.52s |  There's so there's still security theater though. So this actually is interesting
1610.52s - 1615.96s |  There is something to be said about like keeping the honest people honest and like as long as it looks good on paper
1616.40s - 1617.44s |  You know
1617.44s - 1620.74s |  You have all these security audits and sock twos and things like that
1620.74s - 1625.96s |  They're like you do have to do these things and it is not highly publicized that this is out there
1625.96s - 1632.56s |  It's highly publicized at DEF CON but outside of this, you know, there's not big signs like your HID reader key was leaked in 2010
1632.76s - 1634.76s |  What version are you running?
1634.84s - 1638.68s |  And it's just a absolute headache for admins like that
1638.68s - 1640.68s |  Now you don't know if your keys have been cloned
1640.68s - 1645.64s |  Upgrading these is a huge hassle because this is your whole infrastructure. These readers aren't cheap
1645.64s - 1651.60s |  They're like they can go up like $1,500 a piece not to mention the labor of ripping one out and rewiring it
1653.44s - 1655.44s |  so
1655.56s - 1662.52s |  Just to take a step back though, the only common feature here is bad implementation like trying to roll your own crypto
1663.12s - 1665.12s |  you know doing things that
1666.08s - 1669.88s |  In the grand scheme you'd look back and say that was a terrible decision
1669.88s - 1675.04s |  I wasn't there making the decision and normally you don't realize it at the time like, you know
1675.04s - 1681.12s |  Encoding strings that ended null bytes at the time you're writing see what could go wrong and now we have buffer overflows forever
1681.12s - 1685.76s |  So the design process I'm sure never dreamed that it would get to the point where my god
1685.76s - 1688.92s |  There's too many of these on earth and every building can be walked into
1689.72s - 1694.28s |  But otherwise the smart card community as a whole has really crushed it
1694.28s - 1701.60s |  I mean to attack like the DoD CAC or a modern credit card is actually pretty complicated
1701.76s - 1706.72s |  You'll see attacks here kind of few and far between the last one. I remember those quite notable
1707.72s - 1714.32s |  When I was in the smart card hacking world, there's somebody who found that on SIM cards. They use triple DES to authenticate and
1714.92s - 1719.08s |  I remember going through this with my colleague and I'm like man everything actually does look fine
1719.08s - 1725.80s |  It looks totally shady. But if anyone use single key DES instead of like the triple keys on triple DES
1725.80s - 1727.32s |  This would be catastrophic
1727.32s - 1730.64s |  There was a talk at DEF CON that was like hey every SIM card for this entire
1730.92s - 1735.48s |  manufacturer only uses a single key and they were just root SIM cards like crazy because
1735.72s - 1739.84s |  SIM cards are these cards if you just cut more plastic off and shove it in a phone
1740.24s - 1746.12s |  But the security of these at the at its core is actually quite good if implemented well
1747.00s - 1748.32s |  so
1748.36s - 1752.60s |  Okay, Chad, we have these ultra secure cards. Why don't we have more of them then?
1752.60s - 1754.60s |  Why don't I have one for my credit card?
1754.80s - 1760.56s |  They don't scale well at all. Like they were intended to have a bunch of applets. We'd all have one card
1760.56s - 1765.60s |  I'd have my Chad card and it has my bank ID and my gym pass and my employee ID
1765.92s - 1771.40s |  But the security architecture in this Java OS has almost no isolation and it's pretty terrible
1771.48s - 1777.96s |  So you can't trust that Gold's Gym had the same security standards as Bank of America to throw those in the same
1778.32s - 1783.76s |  Memory space. So now I need one card for everything and if I'm using them to log into websites now
1783.76s - 1786.52s |  We're talking a huge freaking nightmare, right?
1786.52s - 1790.08s |  I'm gonna have a Rolodex of 800 cards coming in here trying to log into a site
1790.72s - 1797.08s |  They also require extra hardware, which people don't love so like for me to log into this computer the smart card
1797.08s - 1801.56s |  I need some little dongle thing that I'm gonna plug into and then for all you know
1801.56s - 1807.16s |  Your wallets are just gonna be crazy fat and they have no user interface. This one is actually pretty relevant
1807.36s - 1811.48s |  So going back to the first attack of being able to use someone else's card
1811.84s - 1815.48s |  If you drop your smart card someone else picks it up. They become you instantly
1815.48s - 1819.48s |  There's no way to verify that if you had a user interface on there
1819.48s - 1820.92s |  Even with just as you know
1820.92s - 1827.28s |  Four digit pin you could pretty much mitigate that attack a four digit pin with some throttling or some, you know
1827.28s - 1834.72s |  Threshold of five attempts anyone who picked up that card would be doomed, but these are passively powered so you can't have interfaces
1835.48s - 1836.68s |  So
1836.68s - 1841.80s |  This is the research question. I've asked myself my whole career like can we do better?
1841.80s - 1844.56s |  I hate passwords smart cards things in my pocket and
1846.44s - 1848.36s |  This was back in
1848.36s - 1850.40s |  God, I don't know 2009
1850.60s - 1856.12s |  I'm like, why don't we use iPhones when they were new and everyone's like no one will ever take their iPhone to work
1856.32s - 1859.04s |  It's a terrible idea. The security on them was bad at the time
1859.68s - 1861.84s |  But I really do think we're at a point where
1862.88s - 1864.36s |  smartphones
1864.36s - 1869.48s |  Can kind of completely eliminate smart cards over the next 10 20 30 years
1869.68s - 1873.36s |  So they actually already put smart cards in every single smartphone today
1873.48s - 1876.80s |  So if you take that exact chip that I'm telling you that's in the SIM card
1876.80s - 1879.84s |  That's in your credit card take all the plastic off of it
1880.16s - 1884.60s |  It's called a secure element and it is soldered on the motherboard of every single person's phone in here today
1884.76s - 1887.72s |  And when you do tap-to-pay, that's where you're interacting with
1888.36s - 1891.32s |  Everything is stored in that secure element. In fact all of the initial
1891.88s - 1897.64s |  NFC stuff implemented on phones. They kind of had a hybrid chip that would do NFC plus the secure element
1897.64s - 1902.56s |  They're just taking everything they knew from a smart card trying to put in a phone so that you can do your digital payments
1903.08s - 1906.40s |  The other interesting thing that has unfolded on phones
1907.12s - 1909.28s |  Every modern arm processor on earth
1909.28s - 1915.52s |  Even the embedded processors have something in there called a trusted execution environment an arms version. They call it trust zone
1916.12s - 1919.60s |  So when the phone boots it boots into a secure world
1919.88s - 1926.92s |  That is your first stage bootloader in there is where you're supposed to keep only your most sacred secrets and code
1927.28s - 1932.28s |  So your cryptographic keys anything you use for authentication payments secure world
1932.48s - 1939.64s |  Then you create a sandbox called the non secure world and that's where you let iOS and Android and the operating systems play
1940.08s - 1945.28s |  So now if iOS gets totally rooted 100% rooted exploited
1945.28s - 1948.20s |  They still cannot touch the code in the secure world
1948.48s - 1952.40s |  So if you've ever played around with your Android phone, it tells you to push the physical button
1952.76s - 1956.16s |  That's because that code is I don't work for Google
1956.16s - 1961.44s |  But it's very likely running in the secure world and they're getting the interface from the physical button
1961.60s - 1966.52s |  Nobody to date has written a driver for all of the touchscreen all the graphics in the secure world
1966.68s - 1969.64s |  But you can securely detect yes
1969.80s - 1974.88s |  Somebody's physically hitting this button and wants to do this thing that is being requested of me
1975.08s - 1979.44s |  But not just being used by malware or some proximity trying to read your phone
1980.80s - 1982.12s |  so
1982.12s - 1987.64s |  the future that I am hoping for and literally bet my career on is that
1987.88s - 1993.92s |  We can put all of this cool security that we've learned to the smart car world into these phones that we already carry
1993.92s - 2000.76s |  And you get really amazing interactions because these can interact with everything they can interact with the smart card readers
2000.76s - 2006.00s |  We already have our computers each other and then we can replace everything in our wallet with these phones
2006.36s - 2008.40s |  And once you have a private key store
2008.40s - 2009.24s |  So, you know
2009.24s - 2014.76s |  we can do something more akin to what they wanted to do with the applets where we actually can store multiple different credentials in here and
2014.76s - 2021.24s |  I could have my gym pass next to my Bank of America card next to my DEF CON badge or whatever
2022.24s - 2026.00s |  So I quit my job in academia or I
2026.40s - 2032.84s |  Declined all my professorship offers and what I've built since is a company called authenticate where we actually do that
2032.84s - 2037.92s |  We have a an app that can talk to doors door readers. It all uses
2038.44s - 2043.46s |  Asymmetric encryption uses all the good stuff. We can also talk to computers SSH and servers
2044.16s - 2049.60s |  Websites, you name it. You can use that credential for all sorts of different protocols. So I
2050.56s - 2054.72s |  Would now welcome any questions about breaking into buildings or maybe
2055.16s - 2061.96s |  Securing buildings if you're into that as I've since switched my career to go from I don't know the fun side to the not fun
2061.96s - 2065.60s |  Side of trying to patch all of these holes that I just showed you
2066.28s - 2068.28s |  So thank you for attending
2076.24s - 2077.84s |  question
2077.84s - 2081.06s |  And I think on time I am very early
2081.76s - 2082.88s |  so
2082.88s - 2084.08s |  there's
2084.08s - 2097.36s |  Plenty of time for questions. Has anybody broken into the cat card?
2098.40s - 2102.68s |  That's one of those questions where even if I knew the answer I couldn't tell you
2105.20s - 2110.96s |  There is a library that we published when I used to work in Lincoln Laboratory called LL smart card
2110.96s - 2114.80s |  if you want to pull that on github and play with it, it gives you a
2115.52s - 2122.52s |  Decent interface in Python to like fuzz smart card interfaces over both the contact and contactless interface. So
2123.16s - 2128.56s |  If you want to look for yourself and plug some cards in it's and I I think we have some templates on there for like
2128.56s - 2131.74s |  A visa card and a cat card objects like basic interactions with it
2158.64s - 2163.48s |  What how well do trust execution environments stand up against physical attacks?
2164.28s - 2170.16s |  Is that a downgrade from smart cards that have all of these physical anti tamper in there? The answer is
2171.36s - 2174.72s |  Yes, there are some side channel attacks and things have been published on T's
2175.20s - 2180.48s |  The way you would implement this is really to couple the T with a secure element though
2180.56s - 2185.00s |  So you would keep all of your keying infrastructure in the secure element
2185.00s - 2187.76s |  So all of your digital signatures all of the cryptography
2188.00s - 2192.80s |  Everything is done in the secure element that has all of this physical anti tamper and side channel
2193.20s - 2196.34s |  You know defenses built in and you really need the T
2197.00s - 2199.64s |  Specifically for like a trusted user interaction
2199.76s - 2203.80s |  So you really want the T to like disable all of the you know
2204.12s - 2212.32s |  Accelerometers and side channels and then anything that's mildly sensitive interacting with the secure element, but the computation itself
2212.92s - 2214.92s |  should not be in
2215.48s - 2217.48s |  The T because you know
2217.48s - 2219.04s |  You don't want like RSA side channels
2219.04s - 2224.76s |  The one thing that I focused a lot of my PhD on on the T security in particular was glitching attacks
2224.76s - 2231.04s |  So the one thing you can do when you're booting into secure world is if you can glitch at just the right time
2231.04s - 2233.04s |  This is actually how the Xbox one was hacked
2233.24s - 2234.56s |  I love it
2234.56s - 2238.44s |  I if that person is here introduce me to them so I can like hug them and give them a high-five
2238.92s - 2241.36s |  but they actually you're able to glitch it and
2242.32s - 2245.32s |  Skip the part where you would then put everything in non secure world
2245.40s - 2250.40s |  So then you could have unfettered access to the secure element and start doing crazier attacks
2250.76s - 2252.48s |  So I actually looked
2252.48s - 2259.00s |  Extensively into how to write glitching resistant code in software only with a clang pass. We published a paper on it
2259.00s - 2261.60s |  I wanted to call it glitch glitch, please
2262.12s - 2268.52s |  In honor of bitch, please, but academics don't have the same sense of humor that I do. So I had to change it to
2269.28s - 2271.76s |  Glitching demystified or something far more lame
2271.76s - 2278.52s |  But we did show that in software only you can actually do an LLVM pass and make your code
2279.12s - 2285.24s |  Glitching resistant for all practical purposes on your bootloader to keep the the T code at least in the secure world where it belongs
2285.92s - 2316.06s |  So how effective are the RFID blocking badge holders and little sleeves that they get you?
2317.30s - 2322.78s |  They're very effective that like when I was doing this research that was actually my number one thing
2322.78s - 2328.94s |  I recommended to everybody and probably got the most enemies from cuz I'm like, hey these things are annoying
2328.94s - 2334.90s |  But they absolutely work and like I work here. I'm trying to protect, you know the stuff we're doing
2335.06s - 2340.74s |  So my favorite ones they have these badge holders that are plastic and they're spring-loaded
2340.74s - 2343.46s |  You can put your ID in them that has a Faraday cage in the back
2343.50s - 2349.98s |  but then you can flip the plastic up tap your badge and flip it back because otherwise you're like in this fight every morning trying
2349.98s - 2351.98s |  To like slide it out of this stupid metal thing
2352.34s - 2355.22s |  They're not cheap. So they're hard to do at scale
2355.22s - 2360.70s |  but I don't know they bought me one because I guess I exposed all this stuff and
2361.38s - 2365.62s |  They were not happy with me, but happy enough to get me the fancy one
2365.86s - 2369.18s |  But they totally work like RFID wallets and stuff
2369.18s - 2375.66s |  I guess the one thing I didn't mention here the one attack that can pretty much never be protected against and smart cards
2375.66s - 2380.58s |  It's called the relay attack. So this is where I would come near you with a software-defined radio
2380.58s - 2388.22s |  I would touch somewhere near your card and I my friend anywhere on earth with another software-defined radio that just re-emits back and forth
2388.46s - 2394.98s |  So there's almost no way to defend against that unless you have some like capacitive touch on the smart card that would stop it
2395.46s - 2397.92s |  And that's really like those RFID wallets
2398.18s - 2400.66s |  That's what those are all about because somebody could come up to you
2400.66s - 2402.58s |  You're nowhere near the cash register
2402.58s - 2408.44s |  Someone else has a Proxmark up their sleeve and then they just bought you know, a really fancy dinner on you. Thank you very much
2408.76s - 2445.08s |  So, yeah, they totally work though we've tested them in the lab and they do their job the question there was about the the
2445.72s - 2450.76s |  Legal action since the you know, this key has been leaked since 2010. Has there any been class action suits?
2450.76s - 2456.04s |  I I don't know. I and I don't know what the law is around that
2456.04s - 2461.80s |  I actually have a friend who's a law professor in Texas and asked her to speak recently about cyber security law
2462.24s - 2468.00s |  In particular and I came out of that talk with far more questions than I got answers. It is extremely
2468.76s - 2472.60s |  Complicated and confusing it does seem to me though
2472.60s - 2480.00s |  just like a gut feeling that if there's a security vulnerability the fix for it should be free for customers and it should be like
2480.80s - 2488.68s |  Strongly advertised like hey, you haven't updated yet. Maybe you should consider this free firmware update
2489.08s - 2490.92s |  so I
2490.92s - 2493.56s |  Don't know. I mean though that was part of the reason I also
2494.72s - 2496.80s |  Decided to throw my hat in the ring and try to build
2497.28s - 2501.44s |  Products instead of staying in my every tower just pointing fingers at people saying you did it wrong
2501.52s - 2505.64s |  It is really freaking hard though. I will stress like building a security product
2505.64s - 2510.32s |  It is way harder than it sounds when you're on the offensive side your whole career
2510.32s - 2514.22s |  Like why didn't they just do this and then you're on the other side like oh damn that is
2514.84s - 2519.92s |  That's a lift there. That is that is not as easy as I made it sound in my publication
2520.44s - 2544.65s |  Okay, I should have had this in my talk
2544.65s - 2550.37s |  Is there any way to secure your enterprise today with smart cards that I didn't go over? Yes hundred percent
2550.37s - 2552.37s |  These are just the known vulnerabilities
2552.37s - 2557.25s |  They do there there are cards like the Dez fire even like the my for Dez fire my for ultralights
2557.25s - 2562.57s |  There are cards that are properly like they're using Dez they're using a yes, they're using good cryptography
2562.57s - 2567.05s |  that is not broken so you can get these cards with the good cryptographic standards on them and
2567.61s - 2573.05s |  Key them to your organization and you know, at least for now, there's no known vulnerabilities
2573.57s - 2577.53s |  You're cruising. So yeah, there there are card stocks out there
2578.25s - 2580.25s |  HID even sells Dez fire cards
2580.29s - 2583.57s |  so it's not that like all of their cards have to be this I class or
2583.97s - 2588.73s |  You know any brand and most of these readers will read the good cards
2588.73s - 2591.41s |  So even if you buy off-brand readers, they'll read Dez fire cards
2591.41s - 2595.37s |  They'll read whatever cards you want and you can set them up in a way that you know
2595.37s - 2597.37s |  someone can't just come up with their flipper and
2597.97s - 2601.13s |  We plan on our website if we get time after Def Con
2601.13s - 2602.13s |  So I get this question a lot
2602.13s - 2607.81s |  We want to publish all of the known vulnerabilities kind of like the thumbs down don't buy this and then you know
2607.81s - 2613.47s |  Some of the other card stocks at least we'll try and keep a record of what's been broken. What hasn't on our website?
2614.05s - 2621.74s |  Any other question about how to break into buildings?
2622.38s - 2631.03s |  You got me for I'm legally allowed to stay up here for ten more minutes where I get ripped off the stage is what I?
2631.03s - 2658.62s |  Was told so we can hang out for a little bit more this question. I never know the answer to it
2658.62s - 2660.02s |  Someone's been coming to Def Con forever
2660.02s - 2664.54s |  How dangerous is it to walk around Def Con without the faith without your cards in a Faraday cage?
2664.66s - 2667.78s |  Your credit cards are fine unless it's a relay attack
2667.78s - 2673.94s |  There's no known like wireless attack that I'm aware of that can just clone cards if it is your employee badge
2673.94s - 2678.06s |  I would say if you have a 125 kilohertz card, it's pretty likely
2679.02s - 2682.58s |  Somebody here has read that card last year in the physical security village
2682.58s - 2688.10s |  We had the wall of sheep for everybody that would walk in with their prox cards in their pocket and it it caught quite a few
2688.10s - 2690.10s |  people
2690.70s - 2695.86s |  Yeah, and if you have an i-class card that you know if you're a target and someone bumped into you awkwardly
2695.86s - 2699.04s |  You know, maybe maybe go get a new badge when you get back to work
2699.26s - 2706.66s |  But I I don't know. I generally think that like the shenanigans at Def Con is I hope it's overhyped as someone
2706.66s - 2710.10s |  Who's been coming my whole life, but someone did steal something from our village this year
2710.10s - 2715.78s |  So now I'm like more more on your team like no, there's bad people here. We're not all good
2715.86s - 2719.86s |  We're not all honest hackers. So but I you know credit cards and stuff
2720.42s - 2727.10s |  You know, I would put them potentially in like a Faraday wallet or something, but you don't need to cancel them. You should be fine
2733.50s - 2735.14s |  Yeah
2735.14s - 2762.74s |  Well, let's keep let's keep rifting. Yeah, so if we let's say we go from smart cards to phones
2763.42s - 2766.46s |  What risk would we open ourselves up to so?
2767.46s - 2769.74s |  The biggest one there and the one
2770.26s - 2775.14s |  That I've spent a lot of my research thinking about was the software attack, right?
2775.14s - 2778.14s |  There are phones are on the internet. Our smart cards are not so
2778.86s - 2785.02s |  The question that's kind of been like my brain itch for the past 15 years. Like what if my phone gets hacked, right?
2785.02s - 2786.30s |  like that's
2786.30s - 2789.50s |  That's now an attack factor that wouldn't have existed on a smart card
2789.90s - 2795.38s |  So that's where the secure element the trust execution environment a lot of the hardware architecture
2795.38s - 2797.38s |  That's been built out on these phones
2797.62s - 2800.54s |  back to the bad implementation if done
2800.54s - 2806.26s |  Well, if done correctly, you can actually mitigate that the software based attack
2806.82s - 2808.90s |  It'll never be fully gone, right?
2808.90s - 2813.14s |  There's always gonna be a chance that you didn't have before it was zero percent chance before now
2813.14s - 2819.46s |  It's nonzero, but you really can push it down quite low to the point where you know
2819.46s - 2823.62s |  I think my hope is eventually we can use that to like vote for the president, right?
2823.62s - 2827.70s |  You could have your government ID on your phone and like election day comes out
2827.70s - 2831.10s |  You don't worry about waiting in some line. You could just cast your vote in some secure way
2831.82s - 2835.04s |  the physical attacks on the phone are gonna be no
2835.78s - 2841.58s |  no better than the physical attacks on the card because it's the same chip at the end of the day that you're gonna be attacking so
2842.14s - 2845.14s |  You're not really opening yourself up to another physical interface
2845.14s - 2848.62s |  But now that you do have all these radios you have an application processor
2848.62s - 2853.18s |  You have a lot more other ways to poke on that card remotely
2854.38s - 2856.70s |  That's the one that I've spent most of my research
2857.50s - 2863.14s |  Freaking out about and if you look at all my publications, we're like fuzzing the trusted execution environment on
2864.14s - 2866.94s |  Smartphones to figure out our other apps in there
2867.66s - 2870.38s |  Secure, you know if we put our stuff in there
2870.38s - 2874.70s |  Does it as a neighbor gonna be the one that actually crumbles the whole security? So that's
2876.75s - 2880.15s |  That's the sticky part of putting things on phones it can be done well
2880.15s - 2886.93s |  But it's it's hard and it is gonna take people to collaborate which you know and agree on security standards
2887.11s - 2922.27s |  Yeah, the question was in 2010 Chase sent out a bunch of you know
2922.27s - 2927.07s |  Tap to pay cards and then actually had a recall on them and had to send out new ones
2927.07s - 2931.87s |  And the question was was that because of a security vulnerability? I'm not I'm not sure
2933.39s - 2935.07s |  Probably
2935.07s - 2937.07s |  That seems like a good reason I
2937.23s - 2941.99s |  Know like that is the biggest issue with hardware tokens in general and back to the counterpoint on phones
2941.99s - 2946.75s |  You can actually push over there updates to phones where you can't the physical security keys like I know
2947.67s - 2953.63s |  YubiKey had an issue where they had some of their FIPS keys that had a vulnerability in them and you have to reissue hardware
2953.75s - 2955.75s |  So that is actually another
2956.23s - 2962.03s |  Interesting thing but then you run into these like specter meltdown attacks where you know, not only reissuing hardware
2962.03s - 2965.47s |  But you now have to like refab processors. That's gonna take 10 years
2966.47s - 2972.63s |  So it's it's a tough game like trying to build secure systems. It's it's really really complicated
2972.63s - 2977.03s |  I do think we're getting much better at it though. Just if you look at the frequency of exploits
2977.03s - 2981.51s |  It actually is going down over time. I don't think we're gonna be out of jobs anytime soon
2981.51s - 3000.27s |  But you know, we are doing a good job going forward. Am I familiar with laser fault injection?
3000.59s - 3003.79s |  Yes, like optical glitching attacks on hardware
3003.79s - 3008.55s |  I am familiar with I've actually done one of them not with the intent to succeed
3008.55s - 3013.11s |  but with the intent to learn and it is freaking rad like to look at a
3014.07s - 3019.39s |  electron microscope you're looking at like a couple nanometer resolution on this chip and like I
3020.23s - 3022.67s |  It's sweet. He's like red fuming nitric acid
3023.19s - 3025.79s |  So, how do I think that'll play into this going future?
3025.79s - 3030.17s |  I think that's where you stand on the the shoulders of giants in the smart card world, right?
3030.17s - 3032.17s |  So like these secure elements
3032.81s - 3040.93s |  Really are done. Well to try to prevent against that stuff like these physical attacks have really been thought about in depth
3041.49s - 3047.37s |  So if we can take all of that learned really leverage those secure elements on the phone and all that same technology
3048.09s - 3048.69s |  You know
3048.69s - 3052.73s |  We start to move forward the problem with kind of the industry as a whole
3052.85s - 3059.41s |  It's as being a hardware industry as it has been you're using all these low-end microcontrollers, right? You're trying to drive cross down
3059.93s - 3064.21s |  And I know pics in particular. That's what we had a pick is vulnerable to that attack
3064.41s - 3066.17s |  So we wanted to see that happen
3066.17s - 3066.65s |  We're like, okay
3066.65s - 3072.09s |  We want to spread hit UV light here flip the right protect bit and dump the firmware in particular
3072.25s - 3075.49s |  We were messing around with my Subaru WRX. I was like
3076.41s - 3080.21s |  We were able to roll the odometer and make the odometer say leet
3080.21s - 3085.01s |  That was like one of the fun the fun wins of that and then we just found some other things with known
3085.33s - 3092.45s |  Some other processors with known attacks, so I mean a hundred percent the more security we start putting in our phones
3092.85s - 3097.33s |  The more we need to beef up the defense and if you look at how phones have advanced
3097.33s - 3103.69s |  we're already at the point where like they are really wildly impressive from a hardware architectural point of view and
3104.09s - 3109.09s |  The more we throw in there the better job we have to do and I'll leave you with like
3109.25s - 3111.25s |  My adage on why I think that's a good thing
3111.97s - 3115.01s |  As a defender and I worked for the DoD for a bit
3115.01s - 3120.33s |  So if you watch the movie 300 as a defender, you want to create a choke point, right?
3120.33s - 3121.65s |  Like that's how you beat the Persians
3121.65s - 3126.17s |  You know exactly where they're coming and you can focus all of your attack power there and all your defensive power
3126.65s - 3131.85s |  So we really do put it all in the phone all in the secure element and this one chip that has a single line
3132.13s - 3133.53s |  for IO
3133.53s - 3136.25s |  Like you now your parsers are very
3137.01s - 3140.61s |  Rudimentary can actually be audited quite well
3140.61s - 3144.65s |  And if you get to the point where all you're looking at is this one input
3145.29s - 3147.29s |  Like one input channel in and out
3147.57s - 3153.13s |  You actually have a chance to defend that whereas now, you know with passwords and credentials and smart cards, you know
3153.13s - 3156.89s |  You have all these cards out in the wild. You have no clue what's
3157.77s - 3163.49s |  Happening where all these different technologies. So if you really do put all your eggs in one basket and guard that basket
3163.85s - 3170.53s |  It's not as crazy as it initially sounds or I've at least convinced myself of that after a 15-year academic career that
3170.77s - 3174.57s |  You know, I've convinced myself. I'm not crazy. I don't know if I've convinced others yet. I
3176.91s - 3181.31s |  Have two minutes for either a final question or an awkward silence
3181.95s - 3191.15s |  All right
3191.15s - 3193.75s |  Thank you all so much. Hopefully this was educational and useful
3194.15s - 3199.39s |  swing by the physical security village if you want to play with any of this stuff hands-on and see what it's actually like to
3199.39s - 3201.39s |  clone a card