{
  "webpage_url": "local:1731818404:fb21a103:DEF CON 32 - Car Hacking Village - Programming a CTS - V Gauge Cluster into an ATS - V out of pure spite - Varjitt Jeeva.mp4",
  "title": "DEF CON 32 - Car Hacking Village - Programming a CTS - V Gauge Cluster into an ATS - V out of pure spite - Varjitt Jeeva.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 5.00s | This text was transcribed using whisper model: large-v2

 All righty, it's about 4.30 so I'll start.
30.48s - 32.80s |  The high level process results in the future
32.80s - 36.04s |  of GM programming and open source.
36.04s - 37.88s |  So an introduction to myself,
37.88s - 40.88s |  I'm just a software engineer, but I'm into cars.
40.88s - 42.78s |  I grew up in the Fast and Furious era,
42.78s - 45.20s |  so I was into Japanese cars for a long time.
45.20s - 47.96s |  And I somehow ended up buying a Cadillac ATS-V
47.96s - 49.04s |  earlier this year.
49.04s - 51.20s |  It was a six-speed manual with 400 wheel horsepower
51.20s - 52.70s |  and I love that thing.
52.70s - 54.88s |  I fall more in love with it every single day.
54.88s - 56.24s |  But I almost didn't buy it.
56.24s - 57.08s |  Why?
57.08s - 59.36s |  Because it came with a gauge cluster on the left.
59.40s - 60.64s |  It's needles.
60.64s - 62.78s |  2016 to 2019, this car was made
62.78s - 65.28s |  and GM shipped it with needles.
65.28s - 67.32s |  The rest of the fleet that they had
67.32s - 68.36s |  had digital gauge clusters
68.36s - 70.34s |  with the fancy stuff you see on the right,
70.34s - 72.24s |  but for my car, they never made it.
72.24s - 75.32s |  But I bit the bullet and bought the car
75.32s - 78.32s |  because turns out people were selling programming services
78.32s - 81.28s |  to retrofit a digital gauge cluster into my car.
81.28s - 83.08s |  So when I went into that,
83.08s - 84.36s |  there was one dude that was like,
84.36s - 87.24s |  oh, pay me 350 bucks, then you can do it.
87.92s - 90.28s |  And this was the only guy doing it for a long time.
90.28s - 91.32s |  Then some other dude showed up
91.32s - 93.40s |  from the shadows of Facebook marketplace.
93.40s - 95.08s |  It was like $250.
95.08s - 97.84s |  I was like, huh, how did this guy figured it out?
97.84s - 99.44s |  And then I look a little bit further,
99.44s - 101.52s |  there's another guy on the Corvette forum
101.52s - 104.36s |  that put a 2021 digital gauge cluster
104.36s - 107.32s |  into his 2019 C7 Corvette.
107.32s - 108.16s |  And I was like, huh,
108.16s - 109.84s |  if those two people can figure it out,
109.84s - 110.88s |  then I should be able to.
110.88s - 113.06s |  And then there's a couple of people selling courses
113.06s - 115.80s |  and weird tools and all the sketchy websites.
115.80s - 118.12s |  I don't wanna pay any of these people any money.
118.12s - 119.08s |  I just want to figure it out.
119.08s - 121.16s |  I don't want to go bankrupt in the process too.
121.16s - 125.56s |  So what project points actually made this possible?
125.56s - 129.24s |  So first, the 12.3 inch gauge cluster I'm talking about,
129.24s - 131.80s |  the fully digital one was available
131.80s - 134.92s |  in a whole bunch of Cadillac models of the same year,
134.92s - 136.80s |  but with different views and stuff like that.
136.80s - 138.92s |  They just didn't ship it with my car.
138.92s - 139.80s |  On top of that,
139.80s - 141.72s |  the plug that was on the back of this thing
141.72s - 143.20s |  was the same thing as my car.
143.20s - 145.68s |  So that was already a good indication.
146.52s - 147.36s |  Then the view that I want to see
147.36s - 148.64s |  on this 12.3 inch cluster
148.64s - 151.52s |  was the same thing that was available
151.52s - 153.56s |  on a Cadillac CTS V Sport,
153.56s - 156.00s |  which was the same engines, 3.6 liter twin turbo
156.00s - 158.04s |  with the gauges and everything.
158.04s - 159.34s |  It's got what I needed.
159.34s - 162.72s |  And then turns out that between the needle gauge cluster
162.72s - 164.68s |  and the 12.3 inch digital one,
164.68s - 167.20s |  the total set of configuration flags
167.20s - 169.12s |  was the exact same between the two.
169.12s - 170.96s |  So basically what I'm saying is
170.96s - 173.72s |  this gauge cluster could have fit my car the whole time,
173.72s - 175.28s |  but GM just decided to not ship it.
176.08s - 177.96s |  That's why this programming became a thing.
177.96s - 179.64s |  And here's how I figured it out.
179.64s - 180.72s |  And here's the funny thing.
180.72s - 183.52s |  I've added a counter into these slides
183.52s - 187.12s |  where people sell courses and tools
187.12s - 188.40s |  on how to do this stuff.
188.40s - 191.00s |  And that total ran up to over $1,000
191.00s - 192.26s |  just to do this one thing.
192.26s - 194.42s |  So I'll show you through these slides
194.42s - 195.44s |  how much you get to save
195.44s - 197.40s |  by just listening to the presentation.
197.40s - 199.68s |  So from the beginning,
199.68s - 200.72s |  let's say you're me,
200.72s - 201.80s |  you have this car
201.80s - 204.24s |  and you want to retrofit this cluster into it.
204.24s - 205.56s |  So the programming advertisement,
205.56s - 206.56s |  they'll tell you,
206.56s - 208.44s |  get any of the 12.3 inch clusters
208.44s - 211.48s |  from any of the Cadillac cars from the same year.
211.48s - 214.52s |  And then we'll program it to show the V cluster on there
214.52s - 216.86s |  and with the correct red line and all this stuff.
216.86s - 218.74s |  I was like, huh, interesting.
218.74s - 222.52s |  So can I retrofit this from another car?
222.52s - 223.92s |  Did they make all this custom?
223.92s - 225.60s |  No, there's no way they made the graphics
225.60s - 227.24s |  and stuff like that themselves.
227.24s - 229.88s |  But was there a car that had the same,
231.04s - 232.92s |  the same basically engine and stuff
232.92s - 234.60s |  that could show the right view?
234.60s - 235.68s |  It was like, yeah,
235.68s - 237.20s |  it was the Cadillac CTS-V Sport.
237.20s - 239.64s |  So I just had to get a 12.3 inch cluster,
239.64s - 241.24s |  doesn't matter from what car,
241.24s - 244.16s |  show that specific car's view
244.16s - 246.40s |  and then put it into my car.
246.40s - 249.80s |  So how do I make my cluster
249.80s - 252.00s |  look like the one from the target vehicle?
252.00s - 256.96s |  So I ended up buying a cluster from a 2017 Escalade
256.96s - 258.38s |  and I had to make it show the view
258.38s - 261.40s |  for the 2017 Cadillac CTS-V Sport.
261.40s - 263.28s |  So the first thing I did with this cluster
263.28s - 264.68s |  was pop the back of it.
264.68s - 267.44s |  If you see the middle chip right there,
267.44s - 268.72s |  it's a middle to the little bit to the right,
268.72s - 269.76s |  there's a silver one.
269.76s - 272.04s |  That's a Texas Instruments ARM CPU.
272.04s - 273.28s |  It was Linux-based basically.
273.28s - 276.44s |  So I'm looking at PNG files, whatever, all those graphics.
276.44s - 279.44s |  So it's pretty straightforward, I guess, at that point.
279.44s - 282.24s |  But the next three questions I had at this point were,
282.24s - 284.54s |  one, can this cluster connect to my car?
284.54s - 286.48s |  Two, are the right files on there?
286.48s - 288.40s |  Do I have to somehow patch them
288.40s - 290.88s |  to get the right gauge cluster to show up?
290.88s - 292.92s |  And three, how do I configure the cluster
292.92s - 293.76s |  to work with my car,
293.76s - 296.84s |  with my specific feature set and stuff?
296.84s - 300.12s |  So those three questions actually relate
300.12s - 305.12s |  to the three steps of CAN bus module programming in GM.
305.72s - 308.00s |  First, you have to configure authentication,
308.00s - 310.88s |  then programming for the general purpose firmware,
310.88s - 312.18s |  software, whatever,
312.18s - 315.00s |  and the setup and configuration to set the config flags
315.00s - 320.00s |  according to what your car has.
320.76s - 322.04s |  So the first thing,
322.04s - 323.56s |  can I just plug and play this cluster?
323.56s - 324.52s |  No.
324.52s - 325.80s |  The first thing that you have to do
325.80s - 328.16s |  is actually make sure that the cluster can authenticate
328.16s - 329.76s |  with the rest of the CAN bus.
329.76s - 332.04s |  And it does that with two specific pieces of information,
332.04s - 334.64s |  which is the VIN number and the security pin,
334.64s - 336.24s |  which is derived from the VIN number.
336.24s - 340.24s |  So all I had to do was program those onto the cluster.
340.24s - 341.36s |  But how do you do that?
341.36s - 342.60s |  I looked in the back of the thing.
342.60s - 343.88s |  And if anyone in here
343.88s - 345.80s |  has ever touched a gauge cluster before,
345.80s - 347.36s |  usually this kind of information is stored
347.36s - 348.20s |  on an EEPROM chip.
348.20s - 350.20s |  So I already had,
350.20s - 352.16s |  one of the best things I think in this market
352.16s - 354.64s |  is a CH341A EEPROM programmer,
354.64s - 356.88s |  which is like $5 on AliExpress.
356.88s - 358.40s |  And it turns out that the chip that was holding this
358.40s - 360.48s |  was an I2C24C16.
361.44s - 362.96s |  People were selling a tool
362.96s - 365.92s |  that can do this programming for $100.
365.92s - 368.40s |  I figured it out for $5 and I read the chip.
368.40s - 370.24s |  So what I did was I read it immediately.
370.24s - 371.40s |  I didn't even have to repin it,
371.40s - 373.12s |  just read the chip, dumped it.
373.12s - 375.88s |  And it turns out that in plain text,
375.88s - 378.40s |  the first 17 digits was the VIN number.
378.40s - 380.72s |  And there's a auspicious four digits right under,
380.72s - 382.12s |  which is the security pin.
382.12s - 384.88s |  All I did was set those to my values for my car
384.88s - 387.36s |  and immediately it worked.
387.36s - 390.00s |  The first thing this picture shows
390.00s - 392.72s |  is that the cluster works with my car.
392.72s - 394.00s |  It's pulling values and stuff,
394.00s - 395.28s |  but it's just not showing the right thing.
395.28s - 397.64s |  And I know this worked because you could see
397.64s - 401.20s |  that the mileage for the vehicle actually showed up there.
401.20s - 404.24s |  In GM, the mileage for the car
404.24s - 405.68s |  is actually not stored in the gauge cluster
406.36s - 407.20s |  like other cars.
407.20s - 409.52s |  It's actually stored in the body control module.
409.52s - 412.32s |  And if your module face will authenticate with that module
412.32s - 414.40s |  because of the mismatch of the VIN and pin,
414.40s - 417.40s |  then that mileage will actually show up as dash, dash, dash.
417.40s - 418.64s |  So I know I got this right
418.64s - 423.16s |  because I got the odometer to show up actually.
423.16s - 424.00s |  So cool.
424.00s - 425.36s |  I got it to connect to the car.
425.36s - 426.92s |  Now, how do I make sure the right files
426.92s - 428.32s |  and the graphics are on there?
428.32s - 429.60s |  So now I'll talk a little bit
429.60s - 431.40s |  about how GM programming actually works
431.40s - 433.84s |  with the DO software called SPS2.
433.88s - 436.80s |  I don't exactly remember what the acronym means,
436.80s - 439.52s |  but that's basically the DO software like any other car.
439.52s - 441.84s |  You get that, you get a subscription with that VIN number
441.84s - 445.76s |  for your car, $45 for two years, not expensive.
445.76s - 449.84s |  Then you get the DO cable, $186, not a big deal either.
449.84s - 452.00s |  So the programming step, what this does
452.00s - 455.72s |  is that it loads the firmware, all the software,
455.72s - 458.36s |  whatever it needs just to run the general purpose
458.36s - 459.82s |  of this module.
459.82s - 462.48s |  So there's even a step before this
462.48s - 465.04s |  because in the world of GM programming,
465.04s - 468.12s |  people can actually check what files are going to be loaded
468.12s - 471.40s |  by the software into the modules ahead of time.
471.40s - 473.88s |  And surprisingly, there was a light version
473.88s - 476.20s |  of this running on the internet open to the public,
476.20s - 478.52s |  which is called, which is hosted by Opal.
478.52s - 481.72s |  Turns out that GM has been selling their Canva system
481.72s - 483.40s |  to a whole bunch of other manufacturers.
483.40s - 485.88s |  One of them being Opal, Skoda, I think.
485.88s - 488.44s |  And then I think a Chinese manufacturer, I don't remember.
488.44s - 490.56s |  But it turns out, I used this website
490.56s - 492.68s |  just to check what programming files
492.68s - 495.64s |  are going to be loaded into this module.
495.64s - 498.24s |  And I did that by taking the VIN number
498.24s - 500.64s |  from my donor Escalade cluster.
500.64s - 502.90s |  I took the VIN number from a target car,
502.90s - 505.44s |  which is the Cadillac CTS-V Sport.
505.44s - 508.52s |  And I just ran the programming steps
508.52s - 512.52s |  to just see what VIN number was going to come out.
512.52s - 514.48s |  These numbers are actually called calibration numbers.
514.48s - 515.40s |  That's how you know.
515.40s - 517.14s |  It's a unique identifier in the GM world
517.14s - 520.44s |  where they say this has this specific set of files in it.
521.28s - 523.76s |  It turns out, though, that the number is the exact same
523.76s - 524.64s |  in both of these cars.
524.64s - 527.28s |  That means that my Escalade cluster
527.28s - 530.36s |  already had the views that I needed for a CTS-V,
530.36s - 531.32s |  which is a sports car.
531.32s - 533.44s |  It was already on all these cars.
533.44s - 535.32s |  I just had to be able to reveal it.
535.32s - 536.68s |  And how do I do that?
536.68s - 538.36s |  That gets to step number three,
538.36s - 542.36s |  the setup and configuration of GM programming.
542.36s - 545.32s |  So now I have to actually set the configuration values
545.32s - 546.76s |  according to what I need.
546.76s - 548.60s |  So a couple of slides here.
548.60s - 550.32s |  This is actually some screen caps
550.32s - 553.88s |  from when you actually go to get SPS-2 from ACDelco.
553.88s - 554.88s |  You go to this website here,
554.88s - 556.52s |  you sign up for your VIN number,
556.52s - 557.76s |  you download the thing.
557.76s - 561.24s |  It's a Java-based program.
561.24s - 562.36s |  And you go into here,
562.36s - 564.36s |  then you see right there, instrument cluster.
564.36s - 566.84s |  You go to set up a configuration, just run that.
567.88s - 569.52s |  And it does a two-step process
569.52s - 573.40s |  where it pulls the files from the GM servers,
573.40s - 574.72s |  stores it on your computer,
574.72s - 577.44s |  and then programs it against your car.
578.32s - 581.16s |  And it turns out that they dumped all these files
581.16s - 583.88s |  to your local C drive.
583.88s - 585.40s |  So a couple of bonus slides here
585.40s - 586.56s |  where you can save some money.
586.56s - 587.96s |  $450.
587.96s - 590.32s |  This one was $450, which is ridiculous.
591.96s - 594.16s |  This is how to grab any BIN file
594.16s - 596.76s |  or config files from SPS-2 for any vehicle.
596.76s - 599.64s |  All you have to do is buy the VIN number
599.64s - 602.04s |  for the car that you don't have in front of you.
602.04s - 604.52s |  And then you just have to connect to your car,
604.52s - 606.28s |  even though it doesn't have the right VIN number,
606.28s - 607.72s |  and then just download,
607.72s - 610.12s |  and then run the programming for whatever you need
610.12s - 611.24s |  for whatever module.
611.24s - 613.56s |  It'll save the files to your computer.
613.56s - 615.16s |  And then as soon as it's done downloading,
615.16s - 616.48s |  yank the cable from your car.
616.48s - 617.32s |  That's it.
617.32s - 619.96s |  That's all I did to pull out these files from the car.
619.96s - 620.96s |  And the thing is,
620.96s - 624.00s |  people were advertising emulators online for this.
624.00s - 627.84s |  This would have costed $450 just to do this
627.84s - 629.28s |  when there was an override button
629.28s - 631.56s |  right in front of you with a screen cap.
631.56s - 633.20s |  And also those emulators get you banned
633.20s - 634.68s |  from the GM servers.
634.68s - 636.68s |  So instead of paying $450,
636.68s - 639.24s |  you press an override button, which is ridiculous.
640.52s - 642.12s |  Then another bonus slide,
642.12s - 643.60s |  how to grab the security PIN
643.60s - 645.32s |  from a VIN number from the car
645.32s - 647.32s |  for a VIN number from GM.
648.40s - 649.44s |  So what you do here
649.44s - 652.12s |  is that you actually run a dummy configuration
652.12s - 653.88s |  that's just kind of safe
653.88s - 656.52s |  because it only sets configuration flags in your module.
656.52s - 660.00s |  All I did was run that with a vehicle that I don't own.
660.00s - 662.20s |  Well, I don't have access to it really.
662.20s - 663.96s |  And then just run it against my car.
664.00s - 665.52s |  It'll just fail to authenticate
665.52s - 666.84s |  with the module inside the car.
666.84s - 669.12s |  So then it'll just bomb out, doesn't do anything.
669.12s - 672.36s |  And then you go check inside the C drive over here.
672.36s - 673.60s |  And there's a file right here
673.60s - 676.72s |  called SPSToolBridge.log.
676.72s - 678.64s |  Right there's the VIN number that I was attempted
678.64s - 680.80s |  and the security PIN that was right there.
680.80s - 684.32s |  So right then and there, you get it for free.
684.32s - 685.32s |  Well, almost for free.
685.32s - 686.92s |  There's also VIN-to-PIN services
686.92s - 689.56s |  that you could buy online for $50 from some random website,
689.56s - 693.00s |  or you can get it from GM directly using this method.
693.00s - 695.92s |  Now, before I can explain what I did
695.92s - 699.28s |  for the configuration flags, I have to explain two things.
699.28s - 701.96s |  What a build code and RPO code is.
701.96s - 705.60s |  So in those local files I was talking about earlier,
705.60s - 708.48s |  there's a build record.bld,
708.48s - 710.52s |  which has your VIN number, chassis code,
710.52s - 713.04s |  and then a bunch of things called RPO codes.
713.04s - 715.00s |  These are build codes or like option codes
715.00s - 716.00s |  for the stuff in your car.
716.00s - 717.80s |  Like, oh, if you have a digital cluster
717.80s - 720.20s |  or this fancy suspension, whatever.
720.20s - 721.88s |  Then there's an S3 file right there
721.88s - 724.44s |  where ACDelco publishes every single RPO code
724.44s - 725.96s |  that they've ever made for GM.
725.96s - 727.68s |  And you can just look it up there.
727.68s - 729.56s |  And the next file that was inside the C drive
729.56s - 733.96s |  was an XML file that says something quite interesting.
733.96s - 736.52s |  It turns out it is a logical mapping
736.52s - 739.96s |  of P underscore whatever flag
739.96s - 742.60s |  that says set this flag to this value
742.60s - 745.00s |  based on the existence of this RPO code
745.00s - 746.96s |  and this chassis code in the car.
746.96s - 748.92s |  So I looked through this
748.92s - 751.12s |  and I knew that I wanted to get the gauge cluster
751.12s - 753.64s |  from a CTS Vsport,
753.64s - 757.96s |  which has the chassis code of 6AL69, right there.
757.96s - 759.44s |  And the engine code,
759.44s - 762.08s |  and turns out that right here,
762.08s - 765.68s |  PDDH variant gets set to the value of six
765.68s - 770.36s |  to get the V fancy graphic out.
770.36s - 773.52s |  So all I did was edit this file to include my car,
773.52s - 775.52s |  which is a 6AE47 chassis code
775.52s - 778.48s |  with an engine code of LF4.
778.48s - 779.64s |  I left the UDV in there
779.64s - 782.80s |  and then edited my build record to have a UDV,
782.80s - 784.92s |  which is for the 12.3 inch cluster.
784.92s - 786.60s |  UDD is for the needle one, whatever.
786.60s - 787.72s |  I just changed it.
787.72s - 789.44s |  Just so that everything that,
789.44s - 791.64s |  all the files that get enabled by this XML file
791.64s - 792.68s |  will be for my car.
792.68s - 794.40s |  So it fully works.
794.40s - 795.60s |  And then as soon as I did that,
795.60s - 797.88s |  saw this, ran to my car.
797.88s - 798.72s |  Oh yeah, by the way,
798.72s - 799.88s |  this would have cost an extra $350.
799.88s - 802.08s |  We're at $950 right now already.
803.28s - 804.88s |  Ran to my car.
804.88s - 807.52s |  Press the configuration function.
807.52s - 810.40s |  Turns out that also the cache files on here
810.40s - 811.24s |  are not checksum.
811.24s - 812.72s |  You could just edit the files
812.72s - 817.08s |  and GM will just detect the existence of the files,
817.08s - 818.20s |  not even check anything else.
818.20s - 820.00s |  You click, it'll just run with the files on your disk
820.00s - 820.84s |  and then that's it.
820.84s - 823.32s |  So I managed to click programs to this thing for free
823.32s - 824.92s |  without paying anyone anything,
824.92s - 826.68s |  which is fucking awesome.
826.68s - 827.88s |  So tying this all together,
827.88s - 829.28s |  high level process.
829.28s - 830.80s |  There's a list of requirements right here.
830.80s - 833.00s |  I'm not gonna read this all out to you guys.
834.72s - 836.56s |  High level programming steps.
836.56s - 838.64s |  It's just setting up your Windows laptop,
838.64s - 842.44s |  then running a cluster configuration with your OEM cluster
842.44s - 845.20s |  just to get the RPO codes and the XML files out.
845.20s - 848.92s |  Then you edit the EEPROM on the cluster,
848.92s - 850.12s |  which I explained earlier,
850.12s - 852.44s |  then also edit the cache files locally
852.44s - 853.92s |  and then just run the configuration again.
853.92s - 855.16s |  And that's it.
855.16s - 858.84s |  So the future of GM programming in open source.
859.84s - 862.04s |  I posted this right away on GitHub
862.04s - 863.80s |  and I posted it right away in the Cadillac forum.
863.80s - 865.44s |  So a few people actually got to use this
865.44s - 868.32s |  and fix their own problems, which was really nice.
868.32s - 870.72s |  But the crazy thing is I don't understand
870.72s - 872.64s |  how I had to spend a thousand dollars
872.64s - 873.48s |  just to figure this out.
873.48s - 875.56s |  And thank God I did not pay any of that money
875.56s - 878.56s |  because for how complicated this process was,
878.56s - 879.88s |  it really wasn't that complicated.
879.88s - 882.92s |  Most of the stuff was just open to the public,
882.92s - 885.60s |  open on your laptop, open on the internet.
885.60s - 886.76s |  It didn't really make sense.
886.76s - 890.28s |  So I hope that with this,
890.28s - 893.00s |  that more people get into modifying their GM cars
893.00s - 893.84s |  to do cool stuff like this
893.84s - 896.72s |  without having to pay $350 and stuff like that
896.72s - 897.60s |  to do this stuff.
897.60s - 901.60s |  So I really hope that this helps maybe a couple of people.
901.60s - 904.12s |  Big shout out to the DEF CON conference
904.12s - 907.24s |  and the Car Hacking Village for selecting my talk.
907.24s - 908.72s |  This is actually my first DEF CON ever.
908.72s - 910.36s |  So being up on the stage is crazy.
910.36s - 912.32s |  So thank you guys so much.
912.32s - 913.16s |  And yeah.