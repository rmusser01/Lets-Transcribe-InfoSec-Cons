**Discovery of the XZ Backdoor**

- **Date and Time**: 29 Mar 2024, 08:51:26
- **Key Person**: Andres Freund, software engineer at Microsoft
- **Discovery**: Backdoor in upstream xz/liblzma that could compromise SSH servers
- **Maintainer**: Jia Tan, a mysterious figure involved in the compromise
- **Implications**: Entire internet at risk, discovery avoided the worst

**Investigation Process**

- **Initial Trigger**: SSH logins failing and substantial CPU usage during SSH
- **Key Findings**: 
  - 500-millisecond delay identified in a new package
  - Specific Debian unstable version affected
  - Use of Valgrind for process tracing

**Technical Details of the Backdoor**

- **Package**: exe-utils package used for lossless data compression
- **Versions Affected**: 5.6.0 and 5.6.1
- **Backdoor Introduction**: Feb 2024 by user Jiatan
- **Vulnerability ID**: CVE 2024-30-94
- **Impact on SSH**: OpenSSH uses exe for data compression, making it a target

**Timeline of Events**

- **Phase 1**: Initial involvement of Jiatan (Oct 2021 - Jun 2022)
  - Gained trust in the project
  - Pressure campaign against main maintainer, Lassie Collin

- **Phase 2**: Transition of Mentorship (Sep 2022 - Mar 2023)
  - Jiatan gains more influence
  - Lassie Collin added to Tukeni organization on GitHub

- **Phase 3**: Preparation for the Attack (Mar 2023 - Jan 2024)
  - Jiatan updates Google OSS-fuzz
  - Disables iPhone support during OSS-fuzz build

- **Phase 4**: Backdoor Insertion and Distribution (Feb 2024 - Mar 2024)
  - Release of version 5.6.0 with hidden backdoor code
  - Subsequent update and release of version 5.6.1

- **Phase 5**: Discovery and Response (Mar 2024)
  - Andres Freund discovers and alerts community
  - Internet response to the backdoor revelation

**Social Engineering Aspect**

- **Pressure Campaign**: Multiple personas involved in pushing Jiatanâ€™s involvement
- **Key Personas**: Jigar Kumar, Dennis Hance, and others
- **Tactics**: Messages and pressure to change maintainership

**Technical Deployment of Backdoor**

- **Files Involved**: Bad3corrupt_lzma2.exe, Goodlarge_compressed.lzma
- **Malicious File**: build2host.m4 included in the release but not in the repository
- **Payload Execution**: 
  - Decompression and obfuscation techniques used
  - Use of specific macros and scripts for execution

**Backdoor Functionalities**

- **iFunc Feature**: Dynamic resolution of functions during runtime
- **Hijacking**: Manipulation of the global offset table
- **DLL Audit Mechanism**: Setup hooks and bypass memory protections
- **SSH Targeting**: Focus on SSHD processes and liblzma

**Attack Execution and Evasion**

- **Certificate Payload**: Use of RSA certificates for payload embedding
- **Decryption Process**: Involves magic numbers and specific keys
- **Obfuscation Techniques**: String obfuscation and function hooks
- **Advanced Features**: Encryption, anti-replay, and embedded disassembler

**Conclusion and Industry Implications**

- **Security Community Impact**: Reliance on open-source tools and potential vulnerabilities
- **Discovery Significance**: Combination of luck, coincidence, and expertise
- **Sophistication of Attack**: Redefines understanding of sophisticated attackers
- **Future Preparedness**: Importance of knowledge and awareness in preventing future incidents

**Open Questions**

- **Potential Other Threats**: Consideration of other similar backdoor insertions in open-source projects