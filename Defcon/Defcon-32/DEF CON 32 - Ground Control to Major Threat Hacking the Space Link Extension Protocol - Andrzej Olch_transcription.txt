{
  "webpage_url": "https://www.youtube.com/watch?v=QvywfDmdasc",
  "title": "DEF CON 32 - Ground Control to Major Threat Hacking the Space Link Extension Protocol - Andrzej Olch",
  "description": "Space missions have increasingly been the subject in the context of security breaches and satellite hacks. The majority of discussions revolve around direct communication and access to spacecraft through means such as Software Defined Radio. However, the reality is that this approach isn't practical for most adversaries, as it requires substantial resources and is easily detectable due to the power and radio frequencies required to command a spacecraft. Instead, adversaries might shift their focus away from the Space Segment and opt for a more practical approach, such as accessing and exploiting the Ground Segment vulnerabilities and flaws in order to gain control over spacecraft. Every space mission comprises custom-made hardware and software components, which interact with each other utilizing dedicated protocols and standards designed and developed for this sole purpose. Numerous potential failure points can adversely impact a space mission, many of which persist on the ground. Considering the essential services they facilitate and the extent to which contemporary society relies on space technology, each component utilized in space missions should be regarded as integral to critical infrastructure and treated as such, particularly from a security standpoint. This study centers on the Space Link Extension (SLE) protocol, which is employed as a standard for communication between mission data systems and ground stations by various space agencies and organizations, including NASA and ESA. We will address the security concerns inherent in the SLE protocol. At the same time, we demonstrate methods and techniques malicious actors can employ to conduct a Denial of Service (DoS) or tap into the ground station communications, gaining control over an actual spacecraft. We will conclude this publication by presenting the reader with a possible mitigation strategy that we believe should be employed at the SLE protocol level. Additionally, we will outline a forecast for future work, detailing both planned endeavors and those already in progress, to further expand on this research.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1526,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 2.00s | This text was transcribed using whisper model: large-v2

 Okay, so I'm gonna start
2.94s - 9.36s |  My name is Andy I work as a open security in in space industry in Europe
10.92s - 15.52s |  How many of you know or how many of you work in space industry
17.10s - 22.88s |  How many of you okay, that's some hands up how many of you know what the SLE is
25.30s - 27.30s |  Okay, that's like three people
27.90s - 29.38s |  excellent
29.38s - 33.04s |  so
33.16s - 35.70s |  Hacking satellites is nothing you think obviously
38.84s - 40.84s |  However, most of the discussion
41.12s - 43.68s |  revolve around the space segment and
44.76s - 49.00s |  the means of directly hacking the or accessing the satellite
50.48s - 52.48s |  However, I would argue that
54.16s - 56.16s |  It is the ground segment that is more
56.16s - 62.80s |  More likely to be targeted by the adversaries and that's because of it's
64.68s - 66.84s |  That's that's mainly because of the large
68.12s - 70.12s |  attack surface that it presents
70.84s - 75.80s |  So in this presentation, I will briefly compare the space segment with the ground segment
76.56s - 83.84s |  As in the in terms of attack surface, I will introduce you to the SLE protocol and some security
84.48s - 90.12s |  Aspects of it and then I will proceed to demonstrate how you can exploit
91.96s - 97.40s |  Some exploitation methods of the protocol and some mitigations against them
99.16s - 101.16s |  So just very briefly
101.40s - 103.40s |  Every space missions can be divided
103.96s - 110.64s |  Like loosely into space segment and the ground segment and the ground segment, of course also include the user segment for simplicity
113.84s - 117.76s |  In general, the space segment usually is much more complex than the ground segment
118.36s - 121.52s |  However, if you think about it, it is just like one node in the whole system
122.20s - 124.48s |  So the satellite is a very complete
125.48s - 131.20s |  Node, however, there is only one interface one one entry point interface and because of that
131.56s - 136.40s |  It has a very small attack surface and ground segment on the other hand has
137.32s - 140.04s |  Less complex elements to it, but there are many
141.16s - 143.16s |  available and because of that
143.16s - 145.76s |  It imposes much larger attack surface
147.48s - 149.48s |  On top of that
149.48s - 155.92s |  communicating the directives spacecraft is is quite challenging and not because of the technical aspect of it, but
156.52s - 158.40s |  because of the
158.40s - 164.24s |  environmental aspects like visibility orbit and also the distance from Earth and
166.08s - 168.08s |  On the other hand the ground segment
168.08s - 170.08s |  It
170.52s - 173.48s |  Uses main or it uses standard infrastructure, which means that
175.08s - 179.32s |  Most of the most of its components are also available are also vulnerable to
181.56s - 188.64s |  To the vulnerabilities that are present in any other infrastructure or software that we are using on a daily basis
189.32s - 190.52s |  and
190.52s - 196.24s |  Because most of the applications that are using space industry on the ground segment are custom development
196.72s - 198.72s |  I would say that there is
198.92s - 205.68s |  That that creates some additional avenues to find new vulnerabilities in it. And then again and then again
206.56s - 208.36s |  to add to
208.36s - 210.36s |  Try to hack the grounds segment
211.24s - 218.66s |  Components, there is no sophisticated equipment required. So this is an extremely high level
220.34s - 224.22s |  Like a presentation of a space mission where we divide space segment and
225.22s - 232.14s |  Separate it from the ground segment. Obviously on the space segment you have like you have a space asset, which is this might be a spacecraft
233.26s - 237.90s |  And then you have a ground station that communicates with the spacecraft. You have our mission control that
238.98s - 246.06s |  Uses ground station to communicate with the spacecraft and then you have a you have users that use the mission control applications
246.66s - 249.82s |  and they either work internally on
250.46s - 256.58s |  Dedicated workstations or they connect remotely through a VPN or jump hosts or whatever you might have
258.18s - 262.14s |  Now my argument is that it's gonna be much easier to hack
262.66s - 267.26s |  This thing that you see on the screen don't actually build it in order to communicate with
268.30s - 272.02s |  With many satellites, which you would like to which you would like to hack
273.42s - 275.42s |  So what is SLE?
276.62s - 278.62s |  SLE is a protocol
278.62s - 280.38s |  developed or
280.38s - 282.38s |  created by CCSDS
282.70s - 283.90s |  certification
283.90s - 285.90s |  Standardization body is a standard
286.26s - 288.26s |  It is used to send
288.34s - 291.10s |  telecommands and receive telemetry from
291.78s - 299.14s |  Spacecraft it is based on TCP IP. It supports transport layer and encoding and authentication
300.38s - 304.74s |  And it can have two roles. One is the SLE provider, which is in our case
304.74s - 310.26s |  It's like a ground station and then you have SLE user which which is like a mission control system
310.74s - 317.70s |  Now, so in a nutshell it defines our a protocol to transfer the PDUs
318.82s - 320.82s |  using the TCP
321.42s - 325.58s |  For transfer for data transfer and ASL one for data encoding and
326.42s - 330.98s |  In the system, there are two places. Well, okay, there could be many places
330.98s - 334.78s |  But in principle there are at least two places where the SLE is used
335.14s - 341.06s |  it is in the communication between the MCS which is mission control system and the ground station and
341.58s - 346.98s |  Also between the ground station and the and the SAT and the space asset, right?
347.66s - 349.66s |  so big but because we are hacking the
350.26s - 354.46s |  We are hacking the ground segment. We are focusing only on the link that is highlighted on the slide
355.18s - 357.78s |  So here is our this slide here
357.78s - 363.46s |  you can see all the organizations and most of the companies that use or the most famous companies that use the
364.02s - 366.02s |  SLE to some extent
367.26s - 369.26s |  If you look on the standard
369.34s - 374.58s |  Itself for the documentation. Here's a list of all agencies that are responsible for development of the standard
375.46s - 378.50s |  so there are quite a few quite a few of them and
379.10s - 386.14s |  There are at least three times more different organizations public and private companies using
387.02s - 389.02s |  the standard for space operations
390.70s - 393.02s |  Also some of the ground segment
394.02s - 401.14s |  Specialized equipment comes with support to the SLE if you look at the for instance Saffron Cortex devices
401.22s - 403.22s |  They all support SLE
403.74s - 408.70s |  And also here NASA space near space network they proudly
410.54s - 417.06s |  Share that they are also supporting SLE protocols on the list of their interfaces and capabilities
418.62s - 424.10s |  So for the purpose of this research research we focus only on the commanding capabilities
424.18s - 427.14s |  So it is called FCLTU which is forward link
427.94s - 429.94s |  forward communication in transport
430.46s - 432.46s |  unit transmission unit and
432.98s - 435.66s |  It is basically the thing that you are sending to spacecraft
436.38s - 441.18s |  It combined it or the service that you are using to send telecommands to spacecraft
442.02s - 444.02s |  it defines a number of
444.34s - 449.66s |  Quite a decent list of different types of operations, but for this research. We are focusing only on the bind
450.38s - 455.18s |  Unbind to establish and connection and disconnect and then start and stop to set up
455.54s - 459.74s |  Certain properties on the ground station equipment, and then we also
460.26s - 465.70s |  Look at the transfer data operation, which is used to send the actual telecommands to spacecraft
467.64s - 469.64s |  now as per documentation
469.92s - 476.16s |  There is no data private privacy that comes with the SLE as a protocol or and also standard
477.16s - 483.80s |  It comes with a sequence numbering and this is supposed to be helped in preventing
484.76s - 486.64s |  injection as
486.64s - 488.96s |  potentially seizing control of spacecraft, but
489.92s - 491.92s |  That doesn't really work
491.96s - 499.36s |  There is an easy way to to bypass this restriction. And also there is an authentication that is provided
499.96s - 504.84s |  out of the box, however is very susceptible to many the middle attacks because of the
505.88s - 512.04s |  Because of lack of the encryption. So later I will show you the demos how how this actually can work in practice
513.20s - 517.28s |  We have a very very very simple test environment
518.28s - 521.20s |  Where we assume that so this is
522.84s - 528.16s |  Assume bridge testing we assume that the adversaries are in the in the network already
529.24s - 534.20s |  and we have SLE provider that plays role as a ground station and
535.28s - 542.24s |  Which is like a simple Debian VM and with European Space Agency SLE API implementation installed on it
543.24s - 547.20s |  SLE user is another VM which plays role as a mission control system
548.04s - 554.20s |  It's also Debian and the SLE implementation used there is the simple Python SLE, which is which is like a
555.08s - 557.20s |  PIB package you can download it
558.32s - 560.76s |  And this is just demonstrate that it doesn't really matter
560.76s - 567.56s |  What is the implementation of the SLE as long as you are using any SLE or any implementation that follows the standard your
567.96s - 569.96s |  operations are gonna be vulnerable to
570.92s - 572.92s |  Those attacks which I'm gonna demonstrate
573.56s - 576.60s |  So the because there is no encryption. We thought that the best
577.92s - 583.40s |  The best idea will be to wrap our attack scenarios within the many the middle attack
583.80s - 587.00s |  Technique, so at the high level we do the ARP spoofing
587.52s - 591.96s |  We capture the data at the TCP frame level we decode them using the ISP 1
592.40s - 595.76s |  We decode the ISP 1 frames. I will explain what it is in a second
596.76s - 603.20s |  And then we manipulate the content of the CLTUs that are gonna be sent to spacecraft and then we update the TCP frame and
603.20s - 604.96s |  Then push it forward
604.96s - 606.96s |  to the receiving part
609.28s - 612.92s |  Okay, you everyone knows how the ARP spoofing works, so I'm gonna skip that part
613.24s - 616.92s |  We basically grab the packets and put it in the net filter queue
616.92s - 622.48s |  And then we process them so the interesting part is the the processing part
623.48s - 625.48s |  As I mentioned before the
627.40s - 633.12s |  The data is obviously in the TCP frame data field and these are the SLE PDUs
633.84s - 640.08s |  elements which are in the ISP 1 format now ISP 1 is based on the ASN 1 encoding and
641.24s - 643.88s |  Which is basically a simple tagline value
644.52s - 648.80s |  Data, which varies very easy to decode and however there are a few
649.72s - 651.72s |  apart from the TLV there are a few
653.32s - 657.64s |  The custom structures and context related sequences, which
658.40s - 662.12s |  You would have to struggle a little bit to decode, but the standard is pretty well described
662.12s - 666.08s |  So it didn't take too much time to figure out what they are
667.16s - 673.52s |  so and as I mentioned before we in our demo we are focusing on the only only on the telecommanding part because our goal is to
674.44s - 677.16s |  Start sending something to spacecraft to the ground station
679.60s - 681.60s |  Once you decode the
681.72s - 683.80s |  The data using the ASN 1
685.52s - 689.48s |  Encoding you have to map it to the FCLTU structures
690.12s - 696.72s |  And this is also something that is described in the standard. So it's available to everyone and that's what we used
697.40s - 700.40s |  So this is an example of a bind
701.24s - 707.20s |  Message or bind operation between the ground station and between the mission control system and the ground station
707.64s - 711.20s |  So we can see that we have an ISP header then you have a main structure
711.20s - 718.56s |  Which is followed by the additional structure and then somewhere in the middle. We have the credentials and there's also some additional
719.36s - 722.52s |  Additional elements which you can overwrite or you can you can play with
725.48s - 729.04s |  Again there is no encryption. So all those all those bytes are
731.04s - 733.04s |  They mean what it says, right
733.48s - 735.76s |  so in terms of demo
736.76s - 743.04s |  Just to establish the baseline, I will show you how the typical communication between the MCS and the ground station looks like
743.96s - 747.72s |  In this demo, you will see that first we are doing the binding between the two nodes
747.72s - 753.96s |  Then we are sending the we are asking the receiving node to start the operations. We are sending some data
754.60s - 757.52s |  Then we are stopping it and then we are unbinding it
759.00s - 761.08s |  Unbinding it and I'll try to play
762.08s - 769.31s |  I'll try to play the video. Let me know if you can see it
770.99s - 777.23s |  Okay, so on the on the top screen you see the on the bottom part you see the
777.87s - 780.39s |  SLE provider on the top you see the SLE
781.87s - 783.55s |  SLE user
783.55s - 787.11s |  The provider is the ground station and the user is the mission control system
787.99s - 789.19s |  so
789.19s - 790.79s |  we start
790.79s - 792.79s |  the SLE provider and
793.63s - 799.64s |  Then we run our test you can see that we have first established the connection
800.68s - 805.32s |  we send the bind which was the successful operation and then we are
808.53s - 812.09s |  We are sending the start operation and then we are sending the data
813.41s - 816.29s |  We are sending the data to the ground station. So this this
818.37s - 820.37s |  This
820.89s - 826.25s |  String of bytes is what was gonna get eventually to the spacecraft like some of those bytes
826.93s - 828.93s |  and then we stop it and
830.13s - 836.13s |  And then we unbind right so that's like the nominal
837.41s - 842.38s |  situation
842.50s - 855.97s |  So what happens then so one of the things the first things which is which we can do is to
856.89s - 858.89s |  cost a little bit of denial of service
859.25s - 866.81s |  by preventing the users from authenticating to the ground station and the reason why it's it's it's an annoying way of
867.37s - 870.37s |  Doing this for the user is because the SLE provider when
870.97s - 877.45s |  When the user fails authentication the SLE provider simply drops the connection. There is no and there is no feedback whatsoever
877.45s - 882.17s |  So the users don't know what is the reason of failing the connection?
882.81s - 884.81s |  It's only the ground station that knows
885.33s - 887.05s |  so in this case, we
887.05s - 892.53s |  We basically do the same which we try to grab the bind operation the bind operation
892.69s - 895.25s |  Which has a very well-defined structure
895.25s - 896.33s |  so when you
896.33s - 897.93s |  Monitoring what's happening on the wire?
897.93s - 904.53s |  You can easily find patterns and then you can simply mangle the bytes which are responsible for the authentication
905.57s - 907.25s |  so
907.25s - 908.93s |  What's gonna happen?
908.93s - 922.77s |  So what's gonna happen is the following
923.45s - 925.69s |  On the right hand side you have our exploit
926.33s - 933.01s |  And then on the right hand side you have at the bottom you again have SLE provider and on the top is the is our
934.81s - 938.77s |  Is our MCS mission control system that connects to the ground station
939.73s - 953.98s |  So we start the ARF spoofing and we start observing the communication between the both and then you can see
956.02s - 958.02s |  Despite the fact that we have
958.82s - 960.82s |  Sent the start the bind request
961.10s - 963.78s |  We didn't succeed. There is an exception on the
964.58s - 966.58s |  ESSA SLE implementation
967.02s - 969.02s |  But there is no no feedback
969.74s - 971.42s |  Going back to the user
971.42s - 980.10s |  So at this point we we cannot really do anything
980.66s - 991.26s |  We see the authentication failure. So this way you can you can create a denial of service
992.30s - 994.30s |  As long as you are in the network
994.42s - 999.21s |  so the next
999.21s - 1000.29s |  demo
1000.29s - 1008.35s |  This is also quite similar similar to the previous one. But here we are actually grabbing the credentials because
1008.89s - 1011.09s |  As I mentioned before we can actually reuse them
1012.53s - 1014.53s |  So here you will see
1014.61s - 1018.21s |  Here you will see grabbing the credentials from the bind message
1019.01s - 1030.84s |  And then display them on the screen. It's a similar situation
1031.80s - 1040.39s |  So we start the SLE provider. We started our exploit. We start the SLE provider. We start the
1042.87s - 1044.83s |  our MCS
1044.83s - 1047.43s |  We capture the credentials the bind is successful
1048.15s - 1050.75s |  But we did capture the credentials. So now we can reuse them
1053.47s - 1055.35s |  the credentials are
1055.35s - 1059.15s |  Encrypted but it doesn't matter because you will see later that
1060.27s - 1063.55s |  SLE as a protocol is vulnerable to replay attacks. So
1065.11s - 1068.39s |  You can just grab them and then you can use them for your own connection
1068.71s - 1081.05s |  I'm trying to okay
1081.05s - 1088.89s |  So as mentioned before we can we can let the management operations go as they are and instead we can in a stealth mode
1089.73s - 1093.97s |  Try to tamper with the data themselves the ones that are gonna get to the spacecraft
1094.61s - 1100.69s |  So we're gonna in this case, we're not gonna cut we're not gonna do anything to the operations. We only capture the
1102.05s - 1104.41s |  The frames which contain the transfer data PDFs
1106.05s - 1108.05s |  And then we
1108.89s - 1115.25s |  Change the content of the of the commands that are sent that are being sent to spacecraft
1115.73s - 1128.93s |  So here basically on the at the bottom screen at the bottom side
1129.25s - 1135.57s |  You can see on the left side you can see the SLE provider or the ground station and then mission control system on the right
1135.57s - 1139.05s |  side and then on top you can see our exploit which
1140.13s - 1141.57s |  is
1141.57s - 1143.57s |  searching for a specific
1144.93s - 1146.93s |  String of bytes and then
1147.97s - 1158.70s |  replaces it with something else so
1160.02s - 1166.06s |  Because there is absolutely no verification of what the MCS is actually sending to the ground station
1166.90s - 1170.66s |  And the ground station simply takes it and forwards it to the spacecraft
1171.98s - 1173.98s |  this can be done in a stealth mode and
1174.66s - 1180.06s |  It's gonna be very difficult unless you are monitoring for our spoofing then it's gonna be difficult for
1180.82s - 1196.62s |  For the operators to realize that they are sending something that they have not meant to send. So
1198.38s - 1200.38s |  This is the string which we
1201.10s - 1207.74s |  This is what the MCS sent and this is what has been received at the ground station
1209.14s - 1211.14s |  However, we can see that in the communication
1212.26s - 1215.18s |  Everything is everything is verified. Everything is fine
1216.42s - 1219.98s |  Neither MCS nor ground station complain about it. So
1223.01s - 1225.85s |  This way we can send whatever we want to spacecraft
1225.85s - 1237.78s |  And so I think the most interesting demo is where you can actually take all those
1238.50s - 1240.50s |  All those elements together and
1240.74s - 1246.26s |  You can prepare an exploit in a way that it will take over or let you take over the SLE session
1246.70s - 1252.94s |  So here we are capturing the bind and manipulate the credential structures in order to prevent authentication
1253.58s - 1258.26s |  Then we reuse the credentials which we have captured for our own SLE session
1259.14s - 1261.14s |  and we can
1261.38s - 1267.78s |  Keep on using those credentials for as long as it is defined in the authentication delay of the SLE provider
1270.22s - 1272.38s |  Configuration and from what I have seen so far
1273.30s - 1275.26s |  It is a very long
1275.26s - 1278.10s |  very long delay because of the because of the
1279.26s - 1281.26s |  because the propagation delay and all
1282.70s - 1287.58s |  All the distance depending on the distance between the between the earth and and the spacecraft
1288.54s - 1293.58s |  By default this value is usually around 600 seconds. So that's that's a lot of time to actually
1294.42s - 1297.48s |  cause a damage and start sending something that is
1298.54s - 1303.94s |  It's gonna make some trouble on the spacecraft side. So
1304.66s - 1310.06s |  So here it is
1310.06s - 1315.54s |  It is a it is a semi automated exploit because I want to show you how you can actually
1316.94s - 1318.94s |  How this works in details
1319.10s - 1322.46s |  So we are starting the we are starting on the right hand side
1322.46s - 1328.54s |  We are starting the SLE provider on the right hand side on the top. We are starting the MCS. MCS tries to bind
1329.26s - 1332.94s |  but it fails our exploit code
1333.74s - 1336.98s |  credentials and then we are gonna copy those credentials and
1338.14s - 1340.14s |  Reuse them in another
1343.66s - 1345.66s |  In another exploit
1346.30s - 1353.10s |  As you can see nothing really happened on the ground station there is an exception but that's because that implementation doesn't handle it properly
1353.58s - 1357.42s |  but from the ground segment from from the ground station point of view, that's
1358.34s - 1366.14s |  That's um, that's a nominal situation because someone tried to authenticate they failed so nothing happened on the ground station
1366.14s - 1368.94s |  We're gonna keep on waiting and then in the meantime, the adversaries can actually
1369.50s - 1378.87s |  Bind to the ground station as if they were a legitimate mission control system and then
1379.55s - 1381.55s |  We managed to bind to the ground station
1388.82s - 1390.82s |  We are starting the
1390.98s - 1394.78s |  Typical management operations and then we are sending the data
1395.62s - 1407.10s |  As adversaries or as the MCS, but we are adversaries in this case. So
1408.02s - 1412.54s |  That's basically how you take over control of a spacecraft if you have access to the ground station
1412.98s - 1423.91s |  So in conclusion, it was just one one of the methods that you can take over the control of spacecraft using SLE
1425.47s - 1430.67s |  Protocol as mentioned before we focus only on the commanding parts, but there is also telemetry
1431.27s - 1435.79s |  Part which if you if you if you can imagine there are there are quite
1436.55s - 1444.19s |  Nasty things you can do with telemetry and and how we can mangle the bytes and how we can affect the operations
1444.75s - 1446.63s |  by
1446.63s - 1449.07s |  Changing the telemetry that the spacecraft is receiving
1450.07s - 1457.47s |  So important bit is that all that knowledge which I presented here is is based on OSINT all the standards or the documentations are
1457.79s - 1458.87s |  public
1458.87s - 1460.87s |  So you can go and have a look
1461.87s - 1467.23s |  CCSDS is trying to mitigate those issues providing space data link security
1467.55s - 1474.51s |  However, this is only between the ground station and the between the ground station the spacecraft itself. The ground segment is still going to be vulnerable and
1475.59s - 1480.99s |  Our argument will be that CCSDS PKI concept could be used
1481.87s - 1484.91s |  Instead of SDS to enable TSL like
1485.31s - 1491.99s |  Features on the ISP level and therefore all the communication will be encrypted and everything all the issues, which I'm presenting today
1492.23s - 1495.93s |  They will go away
1496.61s - 1503.69s |  Currently we are discussing with European Space Agency to currently we're discussing space industry with we want to make some additional tests
1504.57s - 1505.73s |  and
1505.73s - 1508.89s |  Here is the list of all resources. You can have a look and
1509.81s - 1515.97s |  The publication is gonna be available as of today on this website so you can have a look at all the details
1516.61s - 1521.17s |  How it is on what I have just described in this presentation
1522.41s - 1524.41s |  So, thanks. Thank you very much