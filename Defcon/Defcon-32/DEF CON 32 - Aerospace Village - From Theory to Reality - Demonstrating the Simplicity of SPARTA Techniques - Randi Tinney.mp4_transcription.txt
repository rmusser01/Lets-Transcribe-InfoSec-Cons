{
  "webpage_url": "local:1731741659:647cdf17:DEF CON 32 - Aerospace Village - From Theory to Reality - Demonstrating the Simplicity of SPARTA Techniques - Randi Tinney.mp4",
  "title": "DEF CON 32 - Aerospace Village - From Theory to Reality - Demonstrating the Simplicity of SPARTA Techniques - Randi Tinney.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.34s - 5.46s | This text was transcribed using whisper model: large-v2

 I'm Randy Tinney. I represent the Aerospace Corporation, and today I'm going to be talking about
5.98s - 8.10s |  SPARTA techniques and how easy they are.
9.62s - 12.38s |  If I can get my slide deck working.
12.94s - 20.71s |  There we go. So a little bit about me. I first got into this industry
21.31s - 28.47s |  back in 2018. I was hired on as a contractor at NASA's Independent Verification and Validation Center. In 2022,
28.47s - 33.11s |  I was hired on at the Aerospace Corporation, kind of as a jack-of-all-trades,
33.31s - 38.11s |  let's say. I do a little bit of everything. The exploit developer, vulnerability researcher,
39.11s - 47.19s |  website developer, because I am the main developer for the Space Attack Research and Tactic Analysis Framework, also known as SPARTA.
47.75s - 53.31s |  And then finally, my last kind of name to fame is, last year
53.31s - 58.71s |  I was part of the team that won the Red Alert ICS CTF, where we got a black badge.
59.31s - 61.31s |  So that's pretty exciting.
62.31s - 67.83s |  So let's kind of back up and talk about SPARTA. In case anybody didn't know about SPARTA, SPARTA is a
68.27s - 71.99s |  cybersecurity framework that we launched back in October of 2022.
72.35s - 79.51s |  We're actually coming up on our second year anniversary, and it is a cybersecurity matrix that mainly
79.99s - 81.63s |  focuses on
81.63s - 83.63s |  spacecraft and space-related systems.
83.79s - 89.87s |  It's very similar to the MITRE ATT&CK Framework, where it looks at all of the
90.51s - 99.39s |  threats, tactics, techniques, and procedures, only this one focuses on the space systems, while MITRE ATT&CK focuses on more on the ground side of things.
99.95s - 105.15s |  And really, we built this tool for both the commercial and the government users to
105.87s - 110.59s |  mainly stay up to date for the various attacks that may threaten their field.
111.07s - 114.67s |  And it's really gotten a lot of attention from the
114.91s - 121.07s |  industry itself. We've had a lot of good feedback, and it's really grown thanks to the contributions that everybody's done.
122.19s - 126.75s |  Unfortunately, because everything is kind of unclassified, a lot of the,
127.55s - 132.51s |  let's say, attacks that we've talked about are more from a tabletop perspective.
133.23s - 135.23s |  We can't really give any kind of
135.79s - 138.91s |  actual attacks that have occurred. Nobody wants to reveal that information.
139.31s - 142.91s |  And so a lot of people that are just getting into this industry don't know what
142.99s - 148.67s |  they look like. They don't know where they can be detected. They don't know how to really block them.
149.23s - 155.63s |  And so that's another reason why I did the research that I did in order to actually
156.19s - 160.19s |  do these attacks in a simulated environment to help people see
160.99s - 164.59s |  where things are going to be detected and how they actually look like.
165.47s - 167.79s |  To do this, though, I need to kind of take a step back
168.35s - 171.31s |  and really look at what the
171.63s - 177.55s |  how a spacecraft, how we can communicate with it. And so I'm a simple, a very simple person.
178.11s - 180.11s |  So I designed this very simple
180.99s - 182.19s |  image.
182.19s - 186.51s |  And really the idea is, you know, you have a person behind a computer. We call that command and control server.
187.07s - 190.03s |  And they're pressing buttons, sending commands up to the spacecraft.
190.83s - 198.11s |  That command will then flow over to the front-end processor, which then travels to a modem. Now, sometimes, not always
198.19s - 204.27s |  a mission or a operation will have a encryptor or authenticator. We call that the bulk crypto unit.
204.59s - 207.87s |  Usually it's placed between the front-end processor and your modem.
207.87s - 211.47s |  So right before those packets are transferred to the RF signal.
212.03s - 217.63s |  This is not always the case. We are encouraging that more often, but still it's a it's a slow thing to be included.
218.35s - 222.43s |  But anyways, after it either goes through the bulk crypto unit or it doesn't exist,
222.43s - 227.15s |  it goes to the modem, gets transferred to the RF signal, and then it's transferred to the
227.15s - 232.59s |  RF signal, to the ground satellite, up to the spacecraft. And there we go. Same with
233.61s - 237.09s |  telemetry. It just comes back in the reverse direction.
238.35s - 243.47s |  And of course, I added this little feature where you can see where it goes from human readable to
244.19s - 246.99s |  spacecraft communication to the RF signal.
247.87s - 248.83s |  So
248.83s - 252.99s |  knowing this and seeing this very simplified manner,
253.15s - 258.27s |  I immediately thought about where could the best method of attack be for this system.
258.83s - 264.43s |  Because a lot of the people in the space industry think that their systems are untouchable just because they're in space. They're
264.91s - 266.91s |  high above earth,
266.99s - 269.95s |  hard to talk to, radio frequency is hard to decode.
270.75s - 273.79s |  So in my mind, the most logical attack vector
274.43s - 275.71s |  was
275.71s - 282.27s |  to the left of that bulk crypto unit or the modem if it doesn't exist. And really focusing on either the person itself
283.07s - 287.87s |  the command and control server, or the front end processor, or any combination of the between.
288.67s - 295.39s |  So the idea is you're going to be actually compromising that ground station in some way and attacking at that point.
296.35s - 299.15s |  Now, unfortunately, because I've been on a lot of missions
299.79s - 303.71s |  as a cyber assessor, I've heard a lot of excuses of why this won't work.
304.19s - 308.93s |  Actually, people do not like it whenever you say that their mission operation center could be compromised.
309.33s - 314.53s |  They think because they have a lot of, you know, guards with guns,
315.65s - 318.55s |  you know, different fences with barbed wires, that they're untouchable.
319.73s - 322.05s |  In fact, they really don't even like
323.07s - 328.61s |  acknowledging that there could be a breach in their system and they come up with a ton of different excuses.
328.93s - 332.31s |  Some of my favorites are, you know, we got a lot of firewalls.
333.01s - 335.01s |  They're not going to get past that, obviously.
335.57s - 337.33s |  Everybody knows that's the case.
337.33s - 339.73s |  We're air gapped. Our systems don't even touch
340.37s - 342.37s |  the network at all.
342.45s - 343.73s |  Okay.
343.73s - 347.41s |  And then they also say that we just accept that risk of insider threat.
347.49s - 352.31s |  You know, the guy behind the command and control server, he may send a bad command, but we've got mitigations.
353.25s - 355.65s |  Not always the case and we show them that.
356.51s - 357.97s |  Unfortunately, just
357.97s - 363.89s |  it's a lot easier to assume that at any point in time, you're going to have a breach.
364.13s - 368.69s |  You're going to be attacked in some manner. It doesn't matter how. There's always going to be a vulnerability available.
368.77s - 372.05s |  So if you assume that that is a possibility, you'll be more likely to patch it.
372.21s - 375.17s |  We definitely promote defense in depth and that's where this comes from.
375.65s - 381.33s |  So whenever I say that we're assuming that our initial access vector is the compromised ground system,
381.65s - 387.01s |  I am referring to the actual Sparta TTP that we've created of the compromised ground system.
387.33s - 390.93s |  And this is one of the ones that has the highest notional risk score as well.
391.25s - 394.93s |  So we definitely take this very seriously and we're saying like,
395.57s - 399.17s |  this is going to happen. So just assume it, accept it, and be done.
400.29s - 405.73s |  And like I said earlier, I'm a very simple person. So my attack that I did was very simple.
406.29s - 408.93s |  In fact, it's so simple that I just did a man in the middle
409.57s - 411.73s |  to prove that all these attacks can be done.
412.27s - 417.03s |  Specifically, I do an ARP spoof between the command and control server and the front end processor.
417.99s - 421.27s |  Now, once again, I kind of feel what you all are saying.
422.31s - 428.55s |  Now, nobody's going to do an ARP spoof on a very complex system. This is too hard. That's script kitty stuff.
429.75s - 434.31s |  Well, a couple of weeks back, we were actually at a training event
434.87s - 437.99s |  where we were testing some things and we did these attacks
438.71s - 442.55s |  and they couldn't detect us because they also thought they were too simple.
443.35s - 448.15s |  So even in these complex systems, please don't overlook the simple stuff like
448.71s - 451.67s |  script kitties exist and they will try to attack you at all times.
452.07s - 456.55s |  So that's what I'm saying. And that's what I've done for this entire presentation.
456.87s - 459.67s |  So I created a tool that was just a very simple man in the middle.
460.39s - 464.49s |  I called it the Sparta Cyber Exploiter just because, you know, I liked acronyms.
465.11s - 469.03s |  I'm not here to promote the tool because I will tell you the tool itself is a
469.35s - 473.03s |  Python Flask server running Scapi and the Netfilter queue.
473.43s - 477.03s |  So you too can create your own space invader if you wish. Very simple.
477.03s - 480.95s |  You just have to know what those three things are and some CCSDS decoding.
482.47s - 485.43s |  So let's talk about the actual environment because these are the attacks.
485.43s - 487.43s |  You can read what the attacks are going to do later.
487.43s - 493.03s |  But the actual environment we're going to be attacking is NASA's open source NOS cube. You can go to GitHub.
493.11s - 494.23s |  I've included the link here.
494.23s - 499.35s |  It's a very, very awesome tool if you want to play with a realistic spacecraft system.
499.59s - 502.15s |  And you're going to see how realistic it is in these demos.
503.75s - 507.05s |  All right, so let's go actually start talking about some TTPs.
508.23s - 511.59s |  The very first one is just exfiltrating telemetry and command.
512.55s - 517.67s |  This one really is kind of overlooked because once again, it's just packets. Nobody knows what to do with them.
517.75s - 520.79s |  Actually, this is kind of pretty serious. You're going to see why in a little bit.
521.27s - 524.87s |  Everything that you see here will actually be used in future attacks.
525.19s - 528.79s |  I will not force you to decode CCSDS.
529.11s - 532.87s |  Just know that if it starts with a zero, it's a telemetry. If it starts with a one, it's a command.
533.51s - 540.31s |  Okay, very simple. And this is all done just because we're man-in-the-middle, not doing anything special, just printing out those packets to the screen.
542.44s - 546.84s |  So the second attack that we're going to do is actually falsifying the telemetry that's downlinked.
547.64s - 554.92s |  In a mission operations center, the telemetry is probably the most important information that a person can get because that tells them the
555.40s - 562.12s |  health and status of their spacecraft. So what we're going to do is we're going to degrade that confidence and we're going to do that
562.84s - 564.84s |  by manipulating packets.
565.40s - 571.80s |  So I have a video here where we've captured a telemetry packet and we're actually going to change every telemetry that has a specific
571.80s - 573.80s |  AP ID or application ID
573.88s - 579.82s |  so that the ground station is going to see what we want them to see and they're just going to start communicating.
580.04s - 584.44s |  So here I'm sending a bunch of NOOP commands to a camera. NOOP stands for no operation.
584.68s - 591.56s |  And really that's just going to send the command counter up. But since we're falsifying telemetry, they don't see that information at all.
592.12s - 598.84s |  So they are probably thinking, oh, we've lost complete control of our spacecraft or our flight application isn't working.
599.24s - 603.48s |  However, after we stop the command, you will see that command counter
604.28s - 608.20s |  go up by like, you know, a lot since I sent a bunch of commands.
608.76s - 616.12s |  So yeah, that's an immediate degrade of confidence level in your ground system, which is, I don't know, kind of terrifying in my mind.
617.40s - 622.76s |  The next one is very similar. We're modifying the packets on the fly. So in this example,
623.00s - 629.64s |  we're taking a very specific or we're watching for a very specific command and we're changing it to something else.
630.36s - 636.12s |  In this example, we're going to be modifying the camera NOOP just to the executive services NOOP
636.44s - 638.92s |  just to show and demonstrate what this does.
639.72s - 641.72s |  But this can actually be pretty dangerous.
641.96s - 646.44s |  You know, let's say you captured a command that was changing a registry key on the system
646.92s - 651.88s |  and you sent that off and you wanted to block the ground station from, you know, changing it back.
652.84s - 657.72s |  This is a specific way in which to do that where it's going to block every attempt to change it
658.44s - 661.08s |  with very little effort on your part.
664.49s - 668.17s |  Yeah, so we just send in those commands just to show that they've sent and then we come back.
668.97s - 673.37s |  The next one is super easy. It's jamming your man in the middle. Just block the packets.
673.69s - 678.03s |  Once again, this stops, this degrades the confidence in your downlinked
678.71s - 682.01s |  telemetry and it can also stop any commands from going up.
682.09s - 687.63s |  So once again, if you've attacked the spacecraft in any way, you can just stop them from communicating entirely.
688.73s - 694.17s |  In this case, all you need to know is the whatever port and IP you wanted to block.
694.41s - 698.33s |  In this case, we're blocking the command and control server and the telemetry downlink.
698.97s - 703.05s |  And yeah, telemetry is not going and then whenever we stop it,
704.25s - 709.61s |  it's going back. So once again, it's a very simplistic attack, but
710.25s - 712.73s |  it's detrimental to the mission operation center.
715.05s - 718.65s |  And the other way on the other spectrum of that is flooding attack.
719.37s - 725.61s |  Flooding, you're just sending a bunch of information to whatever port you want. In this case,
725.77s - 731.61s |  and just for a visual effect, I send it to the telemetry just so you can see what information's there.
732.09s - 735.45s |  There's actually two different flooding attacks that we follow in Sparta.
735.69s - 738.41s |  One is the valid commands and the other one's just random data.
738.41s - 744.25s |  I'm going to be showing the random data one just to show like how you can degrade confidence in that ground station again.
744.81s - 748.65s |  And as you can see, it's just complete chaos on the ground station itself.
750.25s - 754.43s |  The idea of this though is that you want to basically block all communications.
755.13s - 759.37s |  You could also send a bunch of random data up to the satellite.
759.61s - 764.41s |  The only reason I didn't do that here is because due to the simulation, it has to be pretty beefy.
765.13s - 768.97s |  Thanks to the 42 simulator, which we're going to talk about in a little bit.
769.69s - 772.97s |  So really it didn't show any kind of good visual effects.
773.77s - 778.57s |  But yeah, you could totally do that. And if you send it up to the bird, you could do everything from locking it up or
779.05s - 783.03s |  crashing it, really.
783.19s - 785.19s |  Oh, skipped too far ahead.
785.83s - 790.55s |  All right. So this is probably one of my favorite ones that we're going to do. It's the rogue ground station.
790.63s - 794.39s |  You do not have to be man in the middle for this. In fact, this one's probably even more dangerous.
794.39s - 799.11s |  It's another initial access factor with a very high notional risk score.
799.59s - 804.79s |  The only thing you really need to know is what IP and port the front-end processor is talking on.
805.43s - 809.21s |  A lot of front-end processors that I've looked at does not have any kind of authentication
809.81s - 815.43s |  enabled to talk to that port. So you can send whatever data you want.
815.99s - 823.35s |  I'm just doing it in this tool just because I like everything, once again, simple together in a nice GUI for visual effect.
823.51s - 826.31s |  That's the only reason it's here. Now for the rogue ground station,
826.31s - 830.57s |  you actually need to have the command and control server or command and control database,
831.11s - 836.55s |  or you need to be having captured packets like in the man in the middle. In this case, as a good hacker,
836.63s - 840.63s |  I have had the command and control database and I'm going to upload that to my system.
842.07s - 844.55s |  Command and control database is probably crown jewels of your
845.19s - 848.95s |  operation. If for some reason it gets leaked or
850.31s - 851.59s |  it's
851.59s - 853.03s |  captured,
853.03s - 856.23s |  yeah, your system's done if they can figure out how to decode it.
856.87s - 859.19s |  In this case, I upload it. I know how to do everything.
859.83s - 864.55s |  I send it to that front-end processor and I just send it a bunch of commands just to make sure that it works.
864.79s - 870.07s |  In this case, just no ops, not really caring, just to show that I have access to it.
870.47s - 875.83s |  But I thought it would be really cool if we combined some attacks. So I'm going to work with the reaction wheel.
876.39s - 881.67s |  Now the reaction wheel on a spacecraft is how it turns in space to point to where it needs to go.
882.47s - 885.27s |  So I thought it'd be fun if we, you know, activated one.
885.83s - 891.43s |  But I'm actually going to combine this with an attack previously where we were changing the telemetry down.
891.99s - 897.03s |  So I captured a telemetry packet that we had and I go back to my changing packet
897.67s - 904.63s |  attack. I'm just going to change it to whatever that is. So, you know, the ground operations doesn't know that I'm doing anything.
905.19s - 908.55s |  Launch the attack, go back to my road ground station.
909.11s - 914.47s |  I really don't care, you know, what wheel I use. So this is the 42 server, by the way.
914.71s - 920.55s |  This is what makes it so beefy. This cube set will actually rotate around earth and spin, which is really nice.
920.63s - 923.75s |  And that's another reason why this NOS cube simulator is pretty awesome.
925.03s - 929.43s |  It'll spin with every tick, so you'll actually see it. So yeah, with the reaction wheel, I don't care.
929.51s - 932.39s |  I'm just going to set the torque to 10 and let it fly.
934.07s - 937.75s |  So every tick in the 42 server, it actually, you know,
938.23s - 942.39s |  flops along. So eventually you'll start seeing that cube set
943.19s - 950.47s |  rotate on that wheel as it's been activated. And of course the ground operators, they're not aware. I'm completely blocking them.
950.55s - 952.55s |  They have no clue.
952.87s - 955.27s |  And yeah, so they think everything's fine and dandy.
956.39s - 960.71s |  Pretty awesome. Now, they would see it if I went back into my, you know,
960.87s - 966.55s |  my ground station and I stopped that attack, which I'll go ahead and do just to show you what that would look like.
967.75s - 974.47s |  And if you look over on the Cosmos packet, you'll actually see that wheel zero start to change.
974.55s - 980.07s |  And that's how you're going to see that the reaction wheel is changing. But once again, they had not a single clue.
980.79s - 982.23s |  Man in the middle.
982.23s - 984.23s |  Who would have known it's that powerful?
985.67s - 988.95s |  So for my last attack, and this is the one, you know,
989.35s - 993.19s |  I had a lot of help with this. I did not write this road flight application.
993.19s - 996.47s |  It was actually written by some of my friends at the IBM feed facility,
996.85s - 1002.15s |  specifically the JSTAR team. And they wrote this rogue flight application that they called Havoc,
1002.47s - 1008.47s |  which is a backdoor into CFS. I just kind of modified a little bit to fit our needs, but this is
1009.27s - 1013.35s |  pretty dangerous. This assumes that the initial access vector was the supply chain risk.
1014.07s - 1016.07s |  And in this idea,
1016.23s - 1019.53s |  because supply chain risk, our flight application is uploaded.
1019.93s - 1025.13s |  The ground operation is not aware. And because we can talk to the front-end processor, we can then talk to
1025.85s - 1027.37s |  our flight app.
1027.37s - 1034.09s |  Specifically, this flight app does three things. It can upload a file, download a file, and basically give us full command access to
1034.25s - 1041.21s |  the satellite. Because a lot of satellites right now are running on a Linux system. So we have full Linux terminal with this.
1042.33s - 1044.33s |  So yeah, let me show you.
1044.65s - 1049.85s |  So once again, all I have to do is just point it at the front-end processor, IP and port,
1050.49s - 1055.29s |  and just select which command I want. I set a quick no op just to make sure it's working.
1056.17s - 1058.41s |  But really, I'm more interested in uploading a file.
1058.97s - 1064.89s |  As a good hacker, I was trying to think of a way to take over the satellite and make sure it was mine and nobody
1064.89s - 1067.93s |  else can touch it. So I created a ransomware script.
1069.21s - 1071.53s |  You know, because why not? I thought that'd be fun.
1072.25s - 1076.25s |  So we send that up. I wanted it to be low and slow so that nobody could really detect me.
1076.25s - 1078.25s |  So it takes a good couple minutes.
1079.45s - 1084.17s |  But it's a pretty fun idea to think that you're going to ransomware a satellite, right?
1084.65s - 1088.97s |  Because then you're the only ones that are going to attack it. I'm going to get Buku money.
1089.45s - 1092.73s |  And, you know, whatever mission it is, just, you know, SOL.
1093.53s - 1098.73s |  So yeah, I uploaded the satellite and now I'm going to run my command literally like I was on a Linux terminal.
1098.89s - 1101.21s |  So make sure it can execute and
1101.69s - 1103.69s |  encrypt the system.
1105.37s - 1112.33s |  Now the fun thing with CFS and the reason why this works is all of their flight applications are actually in their own individual startup scripts.
1112.89s - 1117.85s |  So I can encrypt everything except for the command ingestion, the base CFS,
1117.93s - 1122.25s |  the, you know, the bus and of course my own application because I want to be able to talk to myself.
1122.81s - 1129.13s |  And once that's encrypted, I just do a hardware reboot because I have the command and telemetry database.
1129.37s - 1131.37s |  Because who doesn't need a good reboot after a while?
1132.01s - 1134.01s |  And then we just wait for it to come back up.
1134.49s - 1136.89s |  Now, I will tell you that this takes a long time to come up.
1136.89s - 1139.45s |  So I'm just going to talk about Havoc and how awesome it is.
1139.77s - 1145.45s |  Because with this tool, and I'm really excited to continue researching on this, we can do so much more.
1145.69s - 1149.61s |  I can actually start doing way more Sparta TTPs with this one tool
1149.85s - 1152.49s |  than I could with the actual man-in-the-middle road ground station.
1152.73s - 1157.21s |  Because I'm going to have access to the actual bus so we can do bus replay attacks.
1157.29s - 1161.13s |  We'll be able to do, you know, GPS spoofing, attack the hardware.
1161.77s - 1163.77s |  There's all kinds of things we can do.
1164.49s - 1169.69s |  So while it's getting ready, I was just opening up some command centers so you can see that they have no access.
1170.09s - 1173.69s |  Because I really want to prove that point of how like in the dark they are.
1174.01s - 1179.77s |  Because there is no, especially in this system, there's no way to run a script like I just did.
1180.09s - 1184.57s |  So literally, I am the only one that's able to do anything. They can't even upload a file.
1185.13s - 1188.65s |  So they're really, you know, not doing good.
1188.97s - 1193.85s |  Yeah, so telemetry's down. They're not even getting telemetry back. They're not sending any commands.
1194.57s - 1196.81s |  Nothing's happening. I've already sent my ransom.
1197.05s - 1200.09s |  You know, I want to get paid a lot of money for whatever system this is.
1200.49s - 1203.53s |  And if I was a good hacker, of course, I'm going to go decrypt it.
1203.77s - 1206.89s |  You know, make sure they get their stuff back. I don't want to keep that running.
1208.41s - 1209.61s |  And that's what I'm just doing here.
1209.61s - 1212.81s |  I'm just going to send a quick decrypt command because I'm not going to encrypt my own script.
1213.77s - 1217.61s |  And make sure it's decrypted. Do another reboot of the system.
1218.25s - 1221.21s |  And then wait for it to come back up. And then they'll have full access again.
1221.93s - 1227.21s |  So if you ever wanted to know how to ransomware a satellite, there you go.
1229.05s - 1232.97s |  All right. So while this is running, that was the end of my attacks.
1232.97s - 1237.85s |  And if any of these kind of gave you like heartburn, made you worry, you know, like,
1238.41s - 1240.65s |  oh, my God, what's happening? Why are this so simple?
1240.73s - 1243.05s |  Why are she able to do this with nothing but an ARP spoof?
1243.77s - 1248.17s |  Luckily, every single attack I did is described in Sparta.
1248.17s - 1252.01s |  And with those descriptions, we've actually included countermeasures.
1252.57s - 1256.65s |  So these countermeasures will tell you exactly how to, you know, how to block it.
1256.65s - 1261.13s |  It'll tell you all of the different NIST controls that you can add.
1261.13s - 1265.85s |  If you're an ISO 27001 person, those are in there, too.
1265.85s - 1270.89s |  We've tried to map it to every single thing that people that we know in the industry use.
1271.93s - 1275.77s |  So, yeah, I would definitely recommend going and looking and reading on that
1275.77s - 1281.13s |  and just making sure that you are, you know, you have those controls enabled.
1282.89s - 1286.33s |  All right. So in summary, defense in depth is very important.
1286.33s - 1289.37s |  There are a lot of different ways that these attacks could be blocked.
1289.37s - 1293.85s |  But, you know, really, we wouldn't have realized that until I did this research.
1294.41s - 1297.29s |  For example, the best way that these attacks could have been blocked,
1297.29s - 1302.73s |  which I mentioned here, is either including in the bulk crypto unit way earlier on in the system,
1303.53s - 1306.89s |  which, you know, I would not have been able to communicate with my rogue app.
1306.89s - 1312.81s |  The rogue ground station wouldn't have worked without the encryption keys.
1312.81s - 1317.69s |  So that would have definitely blocked a vast majority of this information or these attacks.
1318.97s - 1322.09s |  And I also include the space data link security.
1322.09s - 1325.05s |  If you do use CCSCS, it's another protocol that they've released
1325.69s - 1329.37s |  to include both authentication and encryption to their packets.
1329.37s - 1335.29s |  So once again, it's very simple things that you can add just to block these kind of attacks.
1337.53s - 1339.77s |  I've also included in this PowerPoint some reading material,
1339.77s - 1342.81s |  because I know you guys like to read and you want more things to read.
1342.81s - 1347.21s |  So a lot of these briefs are on Sparta, like how we thought of the idea.
1347.77s - 1349.93s |  We've also included a lot of links to Sparta,
1349.93s - 1353.85s |  like how to get started with it, where to get started with it, because it's a huge application.
1354.65s - 1357.77s |  And there's a lot of different media examples of other talks
1357.77s - 1360.17s |  that have been done on this kind of sort of same topic.
1361.21s - 1366.89s |  I've also included these more DEF CON talks that my colleague Brandon Bailey have done,
1367.45s - 1369.77s |  also including some of the SISAT work he's done,
1369.77s - 1373.61s |  and a lot of different papers and articles that also talk about
1373.61s - 1376.73s |  different attack vectors and countermeasures that you can include.
1377.29s - 1379.05s |  And that's it.
1381.05s - 1383.77s |  So, thank you very much.
1385.37s - 1390.94s |  Good. I can't see anything.
1392.70s - 1394.30s |  All right. I can't see.
1394.30s - 1395.34s |  That light is blocked.
1396.86s - 1397.58s |  Are there any questions?
1397.58s - 1398.06s |  Yeah.
1398.78s - 1400.86s |  I can't see if they have any questions, though.
1402.78s - 1403.74s |  Anybody have any questions?
1404.30s - 1426.28s |  So this is just assuming CFS, which CFS, if you're not aware,
1427.16s - 1430.92s |  is NASA's open source satellite kind of information.
1430.92s - 1434.28s |  So you can actually go to their GitHub, download CFS, and build your own spacecraft.
1434.92s - 1437.72s |  So CFS has this methodology in which, like I said,
1437.72s - 1444.12s |  it uploads or it starts all of its flight applications through those .SO files.
1444.12s - 1447.80s |  So if, you know, say I wanted to do a supply chain attack,
1447.80s - 1452.84s |  I would just find that development server and just put my SO file in there.
1452.84s - 1456.76s |  Or if they had, like, upload file protocol, like CFDP,
1457.48s - 1461.16s |  then I would be able to upload my own startup script and just do another reboot.
1462.12s - 1464.28s |  So there's a lot of different methods in which
1464.28s - 1467.08s |  I could get that flight application onto the actual system.
1471.56s - 1472.06s |  Yeah.
1473.00s - 1473.50s |  Yes.
1477.10s - 1477.82s |  Any other questions?
1482.19s - 1482.69s |  All right.
1483.39s - 1485.39s |  Thanks, guys.