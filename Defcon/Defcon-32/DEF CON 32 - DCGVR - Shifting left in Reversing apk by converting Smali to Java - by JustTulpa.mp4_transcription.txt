{
  "webpage_url": "local:1731861126:f21a8758:DEF CON 32 - DCGVR - Shifting left in Reversing apk by converting Smali to Java - by JustTulpa.mp4",
  "title": "DEF CON 32 - DCGVR - Shifting left in Reversing apk by converting Smali to Java - by JustTulpa.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

2.45s - 8.43s | This text was transcribed using whisper model: large-v2

 I'm glad to see you here, Jess Tulpa, this is excellent.
8.43s - 13.21s |  Jess Tulpa is from DC9111 in New Delhi, India.
13.21s - 17.59s |  And by the way, if you ever want to see an excited Discord, go look at their Discord.
17.59s - 18.41s |  It is amazing.
18.41s - 24.49s |  Jess Tulpa is presenting Shifting Left and Reversing Applications
24.49s - 26.71s |  by Converting Smally to Java.
27.13s - 28.43s |  This should be interesting.
28.93s - 32.79s |  Jess Tulpa is currently pursuing a Master's in Information Security
33.05s - 35.57s |  and is really interested in Android security.
35.57s - 38.03s |  So with that, Jess Tulpa, take it away.
39.11s - 39.79s |  Yes, sure.
40.41s - 65.18s |  Yeah. So an introduction about myself, I am not currently in any job or anything.
65.90s - 73.42s |  But I do like to research about security and digital forensics or whichever topic I like.
74.34s - 80.22s |  I am also, as you can see, the tech support of my family and friends,
80.22s - 87.90s |  like anything related to technology, which might be trouble for my families.
88.02s - 89.64s |  I am there to help them.
90.36s - 93.10s |  Also, my real name is Ayan Ambesh.
93.98s - 98.26s |  As you can see that my surname is similar to Bash.
98.86s - 102.10s |  So I used to call myself Ayan Bash.
103.06s - 105.26s |  So yeah, that's fun.
106.02s - 110.22s |  And the thing, why did I wanted to convert Smally to Java?
110.90s - 120.14s |  So in my batch years, I was doing an internship where I was supposed to use JADX, which is J-A-D-X.
120.38s - 122.86s |  It is a Dex to Java decompiler.
124.02s - 129.62s |  Which was used for Android applications, static testing.
130.70s - 136.35s |  So how, yeah, how does it work?
136.51s - 138.83s |  How does JADX works?
139.95s - 143.87s |  For JADX, Dex is native for it.
144.35s - 149.31s |  Like the input which goes into the JADX, it is native for it.
150.03s - 156.27s |  So it can, and why this Dex is converted to Java directly?
157.19s - 165.95s |  Because the Dex format, which is in direct bytecode, is similar to Java AST.
166.51s - 169.07s |  That is why Java code is generated.
170.35s - 176.19s |  This is based on the comment made by the author of the tool, who is Skylot.
177.07s - 188.11s |  And in one issue, he talked about this, like how does Java is converted from Dex and so on.
192.08s - 204.39s |  And yeah, the purpose of my talk, why do I wanted to give this talk and why I wanted to convert Smally to Java?
205.07s - 210.51s |  As you can see, JADX is not 100% error free.
211.07s - 222.03s |  There are a lot of errors and sometimes since applications can be obfuscated, or they can be like abstracted in multiple times.
223.07s - 232.03s |  There, the JADX is unable to convert it into Java and thus it gives inconsistent Java code.
232.59s - 235.75s |  But it is not the problem with Smally.
236.71s - 251.11s |  Smally is alright when it, like it's like, you can convert Dex to Smally easily, but you are not able to convert from Dex to Java that much easily.
258.28s - 281.00s |  When I was like, when I was in, when I was researching about it, there were very less resources on Smally, since it's not like, it's not a, I don't know why, but there were not many resources on the language.
281.16s - 302.12s |  And when I was searching about it, I found out about a person named Gabe Peller and his work in Android, his work was quite nice, which gave me the idea that I can understand Dalvik and I can then maybe try to read Smally and then convert it into Java.
302.60s - 319.16s |  It's not that another person has not tried converting Smally to Java, they have, but it's not like they don't, it's like they are just not talking about it or anything like that.
319.72s - 336.44s |  As you can see, Smally syntax is like, it's basic syntax, like for void we use v, for boolean we use z, for byte we use b, for short s and so on.
336.84s - 343.32s |  For classdef, classdef is like the class name or the interface name, we use l for that.
343.72s - 347.48s |  And for array we use bracket and so on.
348.20s - 374.20s |  As you can see, the project I am currently working on, I was able to convert a Smally Hello World program to Java, but this is not the conclusion I wanted to reach, I wanted to convert an application, which is from Dex, then to Smally and then to Java.
375.16s - 385.40s |  Since this is directly Smally, there is no application and any layers upon it, so it's just directly converting Smally to Java.
385.88s - 394.36s |  The thing about converting Smally is that it has a lot of spaces.
394.92s - 402.92s |  If you can see like const string in the method and const string, there are a lot of spaces.
404.28s - 418.28s |  So it's like if you were to read Smally and like read each word by word and then take word by word, it would be a little hard, but it's manageable.
418.68s - 426.60s |  As you can see, I have instructions and of course, and I have regarded them as different.
427.16s - 454.45s |  So yeah, also, you can see that why I wanted to convert Smally to Java is that the Smally language, if you can read it, you can find out that it gives out like in method, it gives out that it is public static main and then it's using string of array.
455.17s - 472.85s |  And then as you can see, let's get that it is using a sprintString out, the function of printString out, and then it is using a const string, hello world, and then it is invoking the virtual and it is using that.
473.41s - 477.33s |  So it's easy to convert Smally to Java like that.
477.33s - 511.06s |  And yeah, also since Zedex is literally an industrial level tool, I'm not saying that it is like it is bad or anything else, but it has errors and it is like impossible to reach 100% error free.
512.50s - 536.26s |  So why the thing is that the why I wanted to convert Smally to Java is that in Android testing, static application testing, when you are given an Android application and you don't know anything about it, you have to convert it to code to understand it.
537.22s - 564.36s |  Smally is like a language type, assembly type language for Android, but it's not that, but it is similar and yeah, yeah, yeah, that is all. I'm sorry, this is my first time. Yeah, any questions, if you have.
577.56s - 583.40s |  So what's next for your research? What are you trying to take it to next?
584.92s - 594.12s |  For next, I'm taking it to like, as you can see the applications, there are multiple text files.
595.08s - 600.68s |  And so you have to convert those text file into Smally and then that Smally to Java.
601.64s - 609.80s |  So you have to create a whole structure of the application and Zedex does it quite nicely.
610.44s - 623.84s |  So I want to reach at least that much, but only by Smally to Java, not by the Zedex way.
624.80s - 631.22s |  Yeah, what has been the biggest challenge for you this far?
632.18s - 652.74s |  The biggest challenge this far is like, if you can see, yeah, if you can see the spaces between like, yeah, there's not like the spaces between objects, strings is not constant.
653.62s - 668.26s |  It's like, you have to use, sometimes use regex or sometimes you have to use some other method to, you know, break out a string from a line, like in method public static main.
668.26s - 685.62s |  You have to like the break public, then static, then main. And then from main you have to break the bracket for the array. And this one. So that's the biggest challenge I've been dealing with.
686.58s - 699.60s |  Would it be possible to, would it be possible to collapse all the multiple spaces down to single spaces? Would that help?
703.60s - 705.60s |  Okay, how's that? Is that better?
705.60s - 707.60s |  Yeah, yeah.
707.60s - 715.60s |  Okay. Well, would it be possible to automatically replace all the multiple spaces down to a single space? Would that help?
715.60s - 717.60s |  Yeah, that would help. Yeah.
721.22s - 724.79s |  Yeah, that would make it easier.
724.79s - 728.79s |  So a series of regex tools might help with cleaning that up.
728.79s - 744.39s |  Yeah, but with regex, the problem is that sometimes regex don't work. Like, it may not be constant for the same string elsewhere.
745.35s - 766.98s |  Like for array in method, it may be different in another instruction. It may be possible that some keywords or whichever I'm trying to find, it might not be able to regex it.
766.98s - 770.29s |  Hmm.
770.29s - 774.29s |  Yeah, I have tried it out. Yeah, but I'm still working on it.
774.29s - 776.29s |  That's an interesting problem.
777.25s - 791.25s |  Yes, yes, it is. That's why I was fascinated by it. And I want to talk about it. Although I don't think it is anything fancy or like that. It's just a small thing. Yeah.
791.25s - 793.25s |  I have a question.
793.25s - 795.25s |  Yeah, sure. Go ahead.
795.25s - 799.25s |  Is it something just conceptual for the research or do you have...
800.21s - 841.22s |  It is for research, but I do want to make anything, something like that, like the people who want to learn about security, they can maybe, you know, run this up and then try to read the Java code and then be like, oh, this, this function works like this. Maybe I can make the free descriptor like that.
841.22s - 843.22s |  And so on.
844.18s - 850.18s |  Oh, so you're saying you can develop it into a sort of a security tool, essentially.
850.18s - 868.18s |  Yeah, JEDx is also like that. If you see the JEDx interface, you can like right click any function and then you can basically create a free descriptor, which you can run and then hook the function directly. Yeah.
868.18s - 870.18s |  Hmm.
870.18s - 875.22s |  Thanks.
876.18s - 881.76s |  Any more questions?
881.76s - 889.76s |  I hope in the future you can return and let us know how it went with your, you know, provide us with an update on your research.
889.76s - 901.78s |  Yeah, yeah. I will. I will be sure to do that. Yeah. I don't think it will take that much, but yeah, I will do that. Yeah. Thank you.
901.78s - 903.78s |  Thank you very much.