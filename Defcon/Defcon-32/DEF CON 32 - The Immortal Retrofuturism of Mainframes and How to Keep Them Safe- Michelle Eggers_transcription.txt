{
  "webpage_url": "https://www.youtube.com/watch?v=1upEyCKVpkI",
  "title": "DEF CON 32 - The Immortal Retrofuturism of Mainframes and How to Keep Them Safe- Michelle Eggers",
  "description": "When you used your debit card today, do you know where that transaction was sent? Though it may conjure archival images of a 1950\u2019s IT room stocked with enormous, low-tech machines, Mainframe technology is both modernized and heavily relied upon today.\n\nMainframe architecture is some of the most reliable tech available, able to manage incredibly large input/output volumes with low risk of downtime and there are few signs of it being sunset in the decades to come. As protectors of the cyber landscape, understanding how mainframes are incorporated into a businesses topology and ways to secure mainframe architecture will remain important for any entity that utilizes this technology.\n\nIn this talk we'll explore the pervasiveness of mainframe technology, why it will remain relevant to the future landscape of mission critical-applications, and several trusted solutions for helping to secure these incredible computers.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1547,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

2.54s - 4.04s | This text was transcribed using whisper model: large-v2

 All right
4.04s - 11.44s |  Thanks everyone for being here. We know it's Sunday and 10 a.m. So my heart goes out. I appreciate you so much today
11.44s - 16.48s |  We're gonna talk about the immortal retrofuturism of mainframe computers and how to keep them safe
16.48s - 22.24s |  I will give you a small disclaimer. I am coming from of course the red team side offensive security side
22.24s - 28.16s |  So this how to keep safe tips will not be as expansive as perhaps someone who is on the defensive side
28.16s - 30.28s |  But we will touch on it a little bit. So to begin
30.64s - 32.64s |  Let me see
32.68s - 33.88s |  Yes
33.88s - 35.88s |  It worked. Okay. This is me
35.88s - 40.72s |  It looks a little weird. It's all blown out. But I am Michelle Eggers. I'm a security consultant with Netspy
40.72s - 46.80s |  I've been with them for a couple of years. I specialize in mainframe web application and network penetration testing
46.80s - 48.56s |  I have a background in accounting and finance
48.56s - 53.88s |  Which is a little bit linked to mainframe because you know, the financial industry is essentially held up by mainframe
53.88s - 59.32s |  We'll touch on that in a minute more here, and I'm passionate about legacy tech. I like old things
59.32s - 65.60s |  I think they're interesting and cool and we are still using them. So it's important that we make sure we're still securing them
65.60s - 69.72s |  We can't forget to pay attention to the entire topology. All right, so
70.92s - 73.48s |  This is our outline. We're gonna do a history debrief
73.64s - 77.48s |  We're gonna look at how it kind of started and some things that have changed over the years
77.64s - 83.44s |  We're gonna look at mainframes today why people still elect to use them. What's special about them? What even are they?
83.84s - 86.44s |  We're gonna look at a few modern threats some notable
87.24s - 92.80s |  Breaches that have happened in the last decade or so and then some things that we see in our pen tests currently
93.68s - 97.08s |  Yeah, and I have a demo which is really cool. That shows a real thing that happened
97.08s - 100.48s |  It's a little scary, but it'll be interesting and then of course the tips to secure
101.28s - 107.00s |  Okay, so before we get into the history and all of that. I want to know whoever doesn't currently work with mainframe
108.04s - 113.72s |  Anybody want to volunteer what you think mainframe is give a description on it?
113.72s - 117.88s |  Just a sentence or or two any takers
118.96s - 139.88s |  Yes, right. So we have she said a cluster of computers with sort of different
140.76s - 142.76s |  applications use cases
143.00s - 145.00s |  Yes
145.52s - 148.12s |  Close you're on your way
149.72s - 155.57s |  What's that everything's bigger yeah, well depending yes
155.57s - 157.57s |  Hmm
157.65s - 162.25s |  Yes, wait, yeah, they're they're big systems obviously she's yes, of course
166.45s - 174.55s |  Yes, I love it. Okay, great. Everybody's super smart. You'll get big gold stars
176.15s - 182.07s |  So mainframes are actually just computers, right they're specialized computers that have insane
182.43s - 188.59s |  Processing power storage power their input output stuff it billions of turns that transactions a day literally billions
188.83s - 193.09s |  So it's not something like a quantum computer where you're having a highly
193.91s - 195.55s |  complex
195.55s - 198.63s |  Transaction that's occurring. They're more simplistic, but they have to be
199.15s - 204.35s |  Incredibly precise and very very fast and happening in tandem at the same time happened
204.35s - 211.43s |  They did parallel sysplex makes this possible and they have unique operating systems like, you know, IBM Z right and Linux
211.79s - 217.11s |  So very cool. You're not gonna find Windows on a mainframe. Just I hope not. Please don't
219.59s - 221.31s |  I don't do it
221.31s - 223.31s |  So let's look at a few myth versus facts
223.79s - 228.43s |  Something that has been fun for me this week is this first myth is something I've had to fight with people
228.91s - 236.27s |  Basically every day on like Oh mainframe. Oh, that's like 1960s as 4000 and I'm like no no
238.71s - 243.87s |  They've continuously evolved right there are some of the first systems to introduce virtualization
244.55s - 250.31s |  Built-in encryption their continue. I mean, there's more things coming out all the time. There's real-time a inferencing
250.31s - 254.73s |  There are new things coming out next year from IBM. I'll tell you a little bit more about that, too
255.39s - 257.51s |  But they're not locked in the past
257.51s - 264.71s |  It's not like this green screen terminal from a 1980s movie or this image of this woman in this room with base
264.71s - 268.95s |  That's basically one computer in the entire room. We're way beyond that
269.23s - 272.07s |  Okay, another myth is that cloud replaces mainframe?
272.63s - 276.91s |  Due to regulatory compliance reasons, this is impossible in many scenarios
277.59s - 280.59s |  Also, it's kind of expensive to move off of the mainframe
280.63s - 285.99s |  So that's another reason why if you know if you have a use case for it and you've implemented it
285.99s - 291.03s |  It's kind of a who's you to keep it running because once you have it, it's actually pretty inexpensive
291.15s - 297.39s |  It's less expensive than cloud in that regard. You can also use them to host your own virtual private cloud, which is nice
297.91s - 303.35s |  And then hybridization, okay, so if you're gonna look at cloud and mainframe, it's not gonna knock mainframe away
303.35s - 304.47s |  You're not gonna replace it
304.47s - 310.51s |  But we are seeing more and more cases of hybridization where certain applications and functions are in the cloud
310.59s - 314.43s |  Right, and there's you know, just API calls or whatever making these things possible
315.15s - 319.19s |  Oh, yeah, and then I like this the CLT that is extract load and transform
319.19s - 326.87s |  So that's a way of getting your data off of the mainframe into a different environment so that you can do more analysis, right?
327.87s - 331.83s |  Love it. Okay, and then another myth is it's just too specialized. No one knows what it is
331.83s - 337.43s |  Nobody knows how to do it. There really are literally maybe like five to ten mainframe hackers in the world
337.87s - 340.87s |  So that's real. That's true, but there are
341.51s - 343.35s |  moves underway
343.35s - 349.77s |  To rebuild that workforce. It sort of took a hit in the mid 90s to the early 2010s in staffing
349.91s - 354.63s |  The funding went down as far as you know building people bringing them into the workforce
354.75s - 355.95s |  But
355.95s - 360.43s |  I was actually I was at share which is like one of the biggest mainframe conferences that happens in a year
360.43s - 366.39s |  They do it twice and I met a lot of people that were early career professionals that are you know in college and they're learning
366.39s - 372.79s |  Cobol and we're like really? Oh, that's great. They're becoming these sort of system programmers in the mainframe environment
372.79s - 378.43s |  There's there's money going into it now because they're still being used and there's still innovation happening and people kind of woke up and said
378.43s - 383.75s |  Oh, they're not dead. We have to keep going. So oh and then this Watson X code assist
383.91s - 390.07s |  That's that's a cool feature that's coming out and it's basically just means you can take your cobalt and use these tools
390.11s - 393.27s |  To help translate it into a language like Java or Python
393.27s - 396.59s |  It's a lot easier to find developers who are specialized in those languages
396.59s - 401.07s |  It's much more common than someone who specializes in cobalt, even though we are rebuilding cobalt people. So
401.79s - 404.91s |  All right. I love old pictures. I hope you do too brief history
405.91s - 408.19s |  We need these lights down. It's all washed out
409.19s - 416.23s |  1937 okay. We've got u.s. U.s. Navy Bureau ships pre mainframe technology. These were not digital systems, right?
416.39s - 421.07s |  We're just talking about analog computers mechanical calculators. These are fairly gunnery
421.67s - 423.15s |  calculations
423.15s - 429.83s |  Navigation this is very military. This is pre-world war two stuff, but it's sort of like the the bones where it began
429.83s - 432.75s |  This is where we started seeing innovation in this area
433.51s - 435.51s |  1951 the Eckert Mockley Computer Corporation
436.03s - 442.07s |  They made it possible for businesses to now get this technology for their own use
442.07s - 448.23s |  It was no longer simply relegated to government. However, it was the UNIVAC system. That was for the census
448.23s - 455.35s |  I there's 1950 census and then they rolled out the UNIVAC in 1951 to help process that data that they pulled in that year
455.35s - 457.11s |  So really cool
457.11s - 458.87s |  Time marches on
458.87s - 465.55s |  When is this next one? Yes, I oh, I love this one. Okay, so unified architecture was a major achievement
466.71s - 472.51s |  Previous to the unified architecture you had let's say you had several different types of mainframe boxes
472.87s - 474.87s |  They could not speak to each other
475.19s - 480.15s |  They didn't have you know similar software or even the language wasn't quite the same
480.15s - 486.61s |  And so you'd have to have a person trained up on each one or different people trained on each one and they could not work together
487.29s - 490.93s |  But with unified architecture it changed all of that and now you could have you know
490.93s - 494.61s |  A few different types of machines and they could communicate together really nice
494.61s - 498.49s |  And then of course the vacuum tubes were replaced by this
499.29s - 503.81s |  Sorry, the stall solid-state technology if you have vacuum tubes in an earthquake
504.77s - 508.73s |  That's just bad news. Like it's not gonna live. So it got a lot better
509.61s - 514.35s |  1970 the innovation continued we had magnetic ferrite cores replaced by silicon drem memory chips
515.03s - 519.15s |  Virtual memory was introduced and dynamic address translation was also introduced
519.15s - 526.03s |  So as we're seeing mainframe is really pushing right? It's not lagging behind. It's constantly sort of at this
526.99s - 528.19s |  parallel
528.19s - 533.79s |  Level with innovation as along with other technologies. It's just maybe not as talked about
535.51s - 540.11s |  1991 the saga continues. This is great. This guy Stuart Alsop. He was
540.87s - 544.59s |  He was like a talking head right for for the technology
546.63s - 549.91s |  You really wrote new newspaper articles or something but
550.99s - 553.99s |  He said that mainframe would be dead that it would be sunset
553.99s - 559.35s |  The last one's gonna be unplugged and this very specific date and that was published that date
559.35s - 562.59s |  He like stood on that hill and he was very much wrong
563.67s - 567.43s |  Because as we can see mainframe is still being used, right?
568.23s - 573.75s |  By finance by military health care if you use your debit card today
574.43s - 581.11s |  That transaction touched a mainframe if you have ever been to a doctor or you go to a hospital for something
581.11s - 586.75s |  Your information is in a mainframe somewhere. It is so now, you know
587.95s - 591.03s |  And then we've got the new developments coming along something cool
591.79s - 593.15s |  so
593.15s - 596.51s |  There's already AI on the I have the z15
597.07s - 601.39s |  But this next coming year IBM is releasing a new box. That's gonna have
602.03s - 606.53s |  more increased capabilities and what we're gonna see is the the real-time
606.87s - 612.23s |  Inferencing is going to step in in such a way that if there's fraud, right?
612.43s - 618.07s |  So this actually happened to my family pretty recently like someone's at home and then they get a call 10 or 15 minutes later
618.07s - 621.47s |  Hey, are you at Legoland? Did you just spend $800? No, okay
621.47s - 623.75s |  We're gonna cancel your card and reissue a new one
623.75s - 628.63s |  It's this whole process and then that company has to eat that cost because you as you know
628.63s - 631.03s |  The account holder and there's fraud you're not gonna pay for that
631.03s - 635.47s |  Hopefully you shouldn't pay for that and then are they gonna catch the person who did the fraud likely?
635.47s - 638.79s |  No, so these companies are just eating all these fraud costs constantly
638.91s - 645.07s |  Well, if they can catch the fraudulent charge as it's occurring instead of you know, even five minutes later
645.23s - 647.23s |  It's gonna really reduce
647.35s - 651.15s |  That cost that inconvenience having to get a new card. I
652.11s - 656.25s |  Love it. All right. So why do people use mainframe now?
657.91s - 659.31s |  Why do we care
659.31s - 662.95s |  There are three reasons you'll hear this acronym in the mainframe community
662.95s - 668.19s |  It's kind of like sell sales talking points, but reliability availability and serviceability
668.19s - 672.19s |  So if you're looking at the New York Stock Exchange or Nasdaq something like that
672.19s - 678.83s |  They have to have what is called the five nines of reliability. So it's ninety nine point nine nine nine percent uptime
678.83s - 683.83s |  They cannot have more than five and a half minutes of downtime in a given year
684.95s - 691.19s |  They cannot right and so mainframe is able to do this. It's got well, it's not gonna go through
691.35s - 697.03s |  Let's break out the slides a little more built-in redundancy across your hardware levels your input output paths your power supply
697.47s - 701.99s |  You've got error detection correction. You've got these machines that are so robust
702.39s - 707.55s |  They can withstand up to seven magnitude earthquakes, right? The vacuum tubes are gone. They're strong now
709.31s - 712.11s |  Availability, right? We want to make sure that the machine itself
713.67s - 718.87s |  Beyond it just being strong you can still actually get your data out of it and it's accurate data at any given time, right?
718.87s - 724.11s |  It's available to you. So you've got transaction rollback checkpoint restart complex job scheduling
724.15s - 728.11s |  they have a hundred ninety configurable cores in this one specific example of the
728.83s - 734.19s |  Z15 right so you can basically finally tune your machine you make like a bespoke system for yourself
734.87s - 738.67s |  Basically out of the box you can start tuning it and fitting it to your specific use case
738.91s - 743.51s |  And again with the unified architecture, they can all talk to each other. So we love it and then the service ability
743.51s - 749.27s |  This is actually one of my favorite features. They're modular by design. Okay, so and then I mentioned parallel sysplex
749.27s - 755.71s |  It means if you have a workflow or process that is relegated to one L power one logical partition, right? It's like the virtual
756.95s - 758.87s |  segmentation within your mainframe
758.87s - 765.87s |  You can just swap those workflows over to another section of your box without any interruption without any issues
765.87s - 770.79s |  So if you need to change a card out or you need to do some kind of repair the machine itself never has to go
770.79s - 778.27s |  Down ever you just move the pieces you need to move when you need to move them because they're so modular. It's intentional
778.87s - 784.59s |  Got the in-depth logging for problem-solving on-site accessible for repair maintenance. So I
785.67s - 792.75s |  Live by a Google plant, right and you know, they're just what is the clouds just other people's computers. We understand this
792.75s - 799.03s |  So I'm driving home and it's dark and I'm on the freeway and I can see the plant kind of over near the river
799.03s - 803.43s |  and there are all these police cars and a couple fire engines an
803.71s - 808.79s |  Ambulance and all the lights are going like this and then keep driving like what's going on and then the road to get to the plant
808.79s - 814.43s |  Same thing it's blocked off. I don't know what's going on if your data is there. Are they gonna tell you?
815.27s - 817.03s |  We're like, oh, well, that's just one region
817.03s - 817.23s |  well
817.23s - 818.19s |  what if there was I mean
818.19s - 819.51s |  I don't know if it was a
819.51s - 824.83s |  Physical breach or if there was a fire if there's some other kind of problem and they'll never tell you like well
824.83s - 826.63s |  Oh, well, it's a redundancy. We have different regions
826.63s - 826.87s |  Okay
826.87s - 832.07s |  what if there was a coordinated attack against multiple regions at the same time and they just so happen to be the regions that
832.07s - 834.07s |  your data
834.27s - 835.71s |  Are stored in
835.71s - 842.75s |  something to think about if it's on-site and you have incredibly sensitive business critical data and
843.39s - 845.39s |  You can protect it with your own security
845.39s - 850.07s |  You know if there's a fire, you know, your organization knows if there's some kind of physical breach
850.71s - 852.71s |  You're gonna you have a better
852.95s - 856.59s |  Just you have more insight into the security of your own systems
856.87s - 857.79s |  You're not you know
857.79s - 863.87s |  Hoping Azure is gonna call you and say hey somebody broken and start a bunch of fires and hopefully didn't affect your stuff. So
864.95s - 866.47s |  and
866.47s - 872.39s |  This is this I love this. Okay. So this is a little demo. Oh, I wonder if it'll play. Oh, I wish it will
873.39s - 881.07s |  It may not darn well basically it's not gonna play they do this testing I'll just simulate
887.75s - 891.15s |  So in New Jersey about eight months ago there was a
891.99s - 898.11s |  4.5 magnitude earthquake and there's a campus near there. I mean that earthquake went up the coast as well. It affected a lot of places
898.67s - 905.83s |  There is a campus with 200 mainframes and not a single one was affected there was no damage whatsoever
906.51s - 908.51s |  You want to start an earthquake?
909.35s - 911.83s |  In your server room and see how it goes
912.71s - 914.63s |  Probably not, right?
914.63s - 919.87s |  Yeah, yeah a little bit scary mainframes can do that. They're literally built to do that
919.99s - 923.07s |  So apologies for the lack of the shaking I can show you later
924.07s - 926.07s |  All right, so
926.23s - 932.15s |  We've gotten a little bit of an understanding about why people care about mainframe why they use it. What are the benefits of it?
932.87s - 936.87s |  What are the things that can affect it? What are we scared of? Why?
937.55s - 939.67s |  Do we need to think about the security? So
940.59s - 946.23s |  One of the big things that affects mainframe are the integrations, right? We see a lot of
946.39s - 948.39s |  Entry
948.47s - 953.67s |  Into the mainframe environment not by not starting at the mainframe level, of course
953.67s - 959.15s |  But with things like web applications that connect to it or just the general network in this case
959.15s - 963.65s |  Even it was the Wi-Fi network. So the TJX company's data breach payment card data breach
964.59s - 970.75s |  45.7 million user cards were affected exfiltrated. This is a weakness in the wireless network. That's how that one kicked off
970.75s - 973.87s |  We're gonna see a trend here Heartland payment systems breach
974.59s - 980.23s |  Doubled the last hundred million cards compromised. This is at the hands of a global cyber fraud operation
980.31s - 983.91s |  Okay, and this was a combined attack of network and application vulnerabilities
984.31s - 986.31s |  Then we see the Equifax data breach
986.63s - 992.03s |  Okay, this was now a hundred and forty seven million users exposed which is just goes up every single time
992.15s - 997.51s |  It's worse every time in this instance. It was the web application that provided the initial foothold
998.27s - 1004.11s |  And this one is a little bit harder to find information on this is the logica
1004.51s - 1007.67s |  Data breach this was in Sweden and it affected the government
1008.19s - 1014.35s |  And it was so bad and word got out that the government just published the documents. They just put everything public
1014.35s - 1019.07s |  They said just here go ahead and find it. You can find it if you want to it's in Swedish
1019.11s - 1021.55s |  But you can find all the documents about this
1021.63s - 1023.63s |  This
1023.63s - 1028.59s |  This was initial access to be in the FTP network so unencrypted protocol, okay
1029.27s - 1034.23s |  The hackers use something like Hercules, which is an emulator. I use an emulator in my testing
1034.23s - 1035.83s |  I use x 3270
1035.83s - 1041.19s |  But I tell you this to say it's not that hard to get some of these tools to start getting into the places that maybe
1041.19s - 1042.67s |  You shouldn't be getting into
1042.67s - 1049.67s |  this attack specifically leveraged some zero days, which may be a little more difficult to you know make happen, but
1050.51s - 1052.95s |  They were based on default configurations
1053.51s - 1058.95s |  Right, so this is something that is easy to fix and not have in your environment
1058.95s - 1063.35s |  Please if just as soon as you have something new turn off your default configurations
1064.15s - 1066.15s |  Change it as soon as possible
1067.63s - 1069.27s |  120,000 username stolen from rack F
1069.27s - 1075.99s |  Rack F is like a security management tool in the mainframe environment and the guy you know what guy head guy who's in charge of it?
1075.99s - 1079.43s |  He was in Cambodia at the time stole a bunch of money. It was it was very bad
1079.43s - 1082.51s |  It was very bad and the entire government made all these new policies
1083.27s - 1085.55s |  specifically because of this this breach
1086.71s - 1090.19s |  Okay, so next up. I'm going to show you a demo. I'll give a little information on it
1090.95s - 1093.63s |  What you'll see me doing. Hopefully you'll be able to see it is
1093.63s - 1101.35s |  I'm authenticating to an L power to a logical partition right assume that the endpoints that I navigate to have already been enumerated
1101.95s - 1107.03s |  Previously during the engagement, so I'm not gonna you don't see the enumeration part in this demo
1107.03s - 1110.15s |  But you'll see me sort of navigate to some endpoints. That's why
1111.03s - 1117.27s |  The user I am that you'll see is a lower level user. This is not an admin user, right?
1117.27s - 1120.99s |  So of course it means there are specific resources that should they should not be able to access
1121.55s - 1123.55s |  Okay, so the goal of this
1124.19s - 1126.19s |  Hack was to try to access
1127.15s - 1129.71s |  of course more privileged information, so
1131.19s - 1133.87s |  Okay, and we're up and running okay, so
1134.87s - 1137.19s |  This is me logging in
1138.51s - 1140.51s |  Got TSO here
1140.95s - 1142.19s |  All right is PF
1142.19s - 1148.51s |  And then now you're gonna see me begin to access a command-line utility which is a Unix like feature within the mainframe environment
1149.39s - 1150.95s |  through OMVS
1150.95s - 1154.59s |  All right
1154.59s - 1159.07s |  So it's if it looks familiar to you a Unix base. You can just use your similar commands, right?
1159.11s - 1164.19s |  So I'm gonna navigate to this opt secrets location. I'm gonna see what's in there
1167.10s - 1170.58s |  List it out. We've got a readme.txt and an SSH key
1170.90s - 1174.94s |  We're gonna cat the readme.txt file says this is the SSH private key
1174.94s - 1177.18s |  You need to log on as an admin do not share well
1177.18s - 1180.30s |  Can I just cat SSH key and just maybe access it anyway?
1180.78s - 1183.66s |  No permission denied game over right wrong
1183.66s - 1189.90s |  I used the same IP that the LPAR is on and just navigated it to it in the web browser over 8080, right?
1190.90s - 1196.18s |  Again we already had the endpoints enumerated. Okay, so this specific location
1197.10s - 1200.22s |  The requests that are generated pull information
1200.90s - 1202.90s |  From the mainframe, right?
1203.02s - 1209.84s |  So just open up the network tab and you can look at the requests that have made and maybe modify it and see what happens
1209.84s - 1210.78s |  Okay
1210.78s - 1216.66s |  So I'm generating the request it makes a post request that pulls information from the mainframe. All right, we're gonna crack that open
1217.54s - 1223.64s |  You don't even need to use an intercepting tool for this you really can just use the network tab in your browser
1223.80s - 1225.52s |  It's a little bit insane
1225.52s - 1228.92s |  So in the message body, there's a request for a specific file
1229.64s - 1236.16s |  Modify that to point to what was disallowed earlier. Keep in mind. I have not authenticated. This is simply in the web browser
1237.04s - 1243.52s |  Okay, got a 200. Okay, that sounds promising. There's the endpoint I went to with that SSH key
1244.28s - 1246.28s |  Let's see what's in the response
1247.57s - 1249.57s |  There it is
1250.53s - 1252.53s |  I
1261.41s - 1265.97s |  Will just say within the past year to be somewhat vague and it was not an SSH key
1265.97s - 1274.09s |  But it was definitely some very very private information completely unauthenticated access not even on within the mainframe emulated environments
1274.13s - 1275.97s |  Just over the browser
1275.97s - 1280.13s |  So this is why I'm saying we need to look at the entire topology
1280.65s - 1286.97s |  And make sure we're investigating the integrations with the mainframe because people say well mainframe is it's older. It's safe
1287.49s - 1293.05s |  Yes, and no. All right. So we've talked about integration once what about the mainframe itself?
1293.05s - 1298.37s |  If you're just looking at the mainframe, we're gonna stay in this little box of the mainframe. Is it safe all by itself?
1299.25s - 1304.89s |  These are things we find on a regular basis within our pen tests. Okay local file include
1305.97s - 1307.97s |  We find insecure
1308.33s - 1309.41s |  Insecure
1309.41s - 1312.93s |  Protocols all the time. There's so much 23. It's yeah
1313.65s - 1316.73s |  Unauthenticated access happens. So there been instances where I will
1317.53s - 1323.97s |  Begin the authentication process and then back out of it not complete authenticating and I can still run kicks CICS commands
1324.37s - 1329.29s |  Or you know run Kim's things like this, which you should you should be authenticated to run these
1329.85s - 1334.25s |  So we do find this a lot injection sequel injection into DB to databases
1334.89s - 1339.17s |  JCL job job control language injections or rec scripts injections if you're able to
1339.89s - 1343.01s |  Use these when you're not supposed to you could delete modify
1343.89s - 1345.89s |  erase entire data sets
1346.37s - 1350.65s |  Bad news. Okay, and then we do see security misconfigurations
1350.65s - 1358.37s |  I I don't see a lot of default credentials thankfully, but it does occur weak password policies often. I will see
1359.21s - 1361.65s |  They'll allow mixed case passwords
1361.65s - 1363.81s |  So let's say you're supposed to have a cap
1363.81s - 1370.13s |  but like your actual password is capital this and lowercase this and some numbers and whatever else you can switch the case around and do
1370.13s - 1372.13s |  Whatever you want and we'll still accept it
1372.13s - 1373.89s |  It's like don't do that
1373.89s - 1374.93s |  and
1374.93s - 1382.97s |  Not using external security management tools like raka for top secret. Thankfully most shops that have mainframe are implementing these things
1383.97s - 1389.09s |  But it's just as a safeguard as a you know, just make sure that you're using these these things
1389.89s - 1393.05s |  Okay, and then now the promised ways to secure
1393.85s - 1399.01s |  From the blue team side properly configure your network topology as a whole. I can't stress that enough
1399.13s - 1403.21s |  Please mainframe is not its own weird thing off to the side
1403.21s - 1408.93s |  It is part of your stack treated as such make appropriate use of your logical partitions
1408.93s - 1415.25s |  Make sure if a user has access to L par one, they can't also somehow navigate to L part two and three and four
1416.77s - 1422.33s |  Your regions your ESM tools and see this again disallow unencrypted protocols secure with compliance
1422.89s - 1425.45s |  the CIS benchmarking is really great for
1426.17s - 1433.37s |  Regular auditing purposes and then the DSA stigs. These are your Department of Defense guides from NIST. I've used these on a test
1433.45s - 1437.17s |  I've actually it's really nice. So I had a DB to test where
1437.65s - 1439.65s |  It's basically sequel based and
1440.09s - 1444.41s |  They have whole lists of commands you can run to check. Okay. Well if I run this command
1444.41s - 1446.89s |  Can I access this when I shouldn't if I run this command?
1446.89s - 1452.69s |  Can I elevate my privileges and so on and like this is this is great. I love this very helpful helpful tools
1452.93s - 1459.77s |  Secure the ongoing reviews. This is real basic stuff that everybody should be doing regardless of its mainframe or something else
1460.17s - 1463.33s |  Audit your identity and access management on a regular basis, right?
1463.77s - 1468.25s |  Establish recurring audits for all features and do recurring pen tests
1468.25s - 1472.81s |  I love a good internal team literally like you're closer to your stack
1472.81s - 1478.29s |  You're rolling out new features you sort of understand what's going on and you need to be there, right?
1478.89s - 1482.77s |  But you know, I am biased again because I'm third-party pen tester
1482.77s - 1489.81s |  Which is I think is incredibly important to get fresh eyes on your about five minutes. Okay. Thank you. I'm hurry up here
1491.05s - 1493.05s |  fresh set of eyes
1494.01s - 1500.01s |  Not having the source code being you know, somewhat unfamiliar with the environment and then getting in and just
1500.81s - 1505.83s |  Gently breaking it so you can help the company fix it. I think is really really nice
1505.83s - 1511.01s |  It's a special place to be I love it. So again, what have we learned today?
1511.01s - 1513.29s |  We're gonna cover it real quick and a few bullet points
1514.17s - 1518.01s |  Mainframe is not going away anytime soon. Okay, please keep paying attention to it
1518.01s - 1525.11s |  We like we rely on it globally to support finance health care government all these critical industries
1525.93s - 1531.85s |  Okay, so we need to keep securing it. There are more possible vulnerabilities now due to the prevalence of integrations
1531.85s - 1533.53s |  It's just gonna keep increasing
1533.53s - 1540.01s |  But if we work together we can combat it. So thank you so much for coming to learn about mainframe