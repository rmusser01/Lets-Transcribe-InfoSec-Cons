**Introduction to Popping Shells with Arduino Magic**
- Speaker: Dan Beard, software engineer at MedCrypt
- Background: Extensive experience with medical devices, especially in vitro diagnostic instruments and therapeutic devices

**Medical Device Design**
- **Medical device design 101:** Focus on IVD and therapeutic devices
- **Embedded boards:** Typically run on RTOS, bare metal, custom FPGA
- **User interface boards:** Usually run Windows or Linux, connected via CAN bus, CAT6, RS232

**BadUSB and Security Risks**
- **Bad USB:** USB dongles that mimic human interface devices like keyboards and mice
- **Security vulnerabilities:** No signature checks for USB devices, potential for exploitation
- **Industry misconceptions:** Belief that physical access and internet connection are required for exploitation

**RadioJack and T-Dongle S3**
- **Device requirements:** Wireless, cheap, USB hit device emulation
- **T-Dongle S3:** $10 device with wifi, Bluetooth, programmable in multiple languages
- **RadioJack software:** Open source, emulates keyboard and mouse, hosts wifi server

**Usage and Demonstration**
- **How to use:** Plug into target, connect to SSID, telnet to IP address, follow CLI commands
- **Features:** Drop payloads, open remote PowerShell prompts, emulate keyboard and comport
- **Proof of concept:** Demonstration of payload drop on a Windows PC

**LoRa and Long-Range Exploitation**
- **Introduction to LoRa:** Long-distance radio with theoretical range of 3+ miles
- **LoRa S3 device:** Similar to T-Dongle S3 but with LoRa capability
- **Usage:** Same process as wifi but over LoRa, extends range for remote exploitation

**Security Implications and Mitigations**
- **Exploitation risks:** Minimal physical access required, potential for network penetration
- **Mitigation strategies:** Cover USB ports, disable USB stack unless explicitly needed

**Discussion and Q&A**
- **Tested devices:** Various Windows PCs, medical devices in biohacking village
- **Potential for wider network access:** Using device as entry point into air-gapped networks
- **Physical access concerns:** Confidence in unnoticed device insertion, potential for unnoticed exploitation

**Final Thoughts**
- **Open source collaboration:** Encouragement for community contributions and improvements
- **Impact on industry standards:** Challenging misconceptions about security in air-gapped environments