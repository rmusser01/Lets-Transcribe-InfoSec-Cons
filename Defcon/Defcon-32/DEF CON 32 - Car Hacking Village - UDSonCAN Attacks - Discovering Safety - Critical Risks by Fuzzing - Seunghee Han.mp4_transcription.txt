{
  "webpage_url": "local:1731818606:477e8463:DEF CON 32 - Car Hacking Village - UDSonCAN Attacks - Discovering Safety - Critical Risks by Fuzzing - Seunghee Han.mp4",
  "title": "DEF CON 32 - Car Hacking Village - UDSonCAN Attacks - Discovering Safety - Critical Risks by Fuzzing - Seunghee Han.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 3.44s | This text was transcribed using whisper model: large-v2

 Hello, my name is Seunghee Han.
3.44s - 7.12s |  I'm a small girl from Korea, and the first author
7.12s - 9.76s |  of this talk.
9.76s - 12.60s |  It's my first time at DEF CON, so I'm
12.60s - 16.12s |  very nervous and so excited.
16.12s - 19.48s |  Anyway, the title of this talk is
19.48s - 24.00s |  UDS on CAN attacks, discovering safety critical risk
24.00s - 26.32s |  by fuzzing.
26.32s - 28.80s |  In this presentation, I will talk
28.80s - 33.20s |  about the weak points that I found in the latest EV
33.20s - 38.78s |  models by fuzzing test.
38.78s - 43.26s |  Before the presentation, let me introduce ourselves.
43.26s - 47.74s |  We are all security researchers at AutoCrypt.
47.74s - 51.66s |  AutoCrypt is a mobility security company.
51.66s - 56.94s |  Nowadays, we are focusing on vehicle security.
56.98s - 65.50s |  With the 2020 WP.29, it's car cybersecurity rules.
65.50s - 69.94s |  All car makers must get CSMS certification.
69.94s - 75.02s |  So we have been doing fuzzing tests with many OEMs
75.02s - 78.38s |  and tier suppliers.
78.38s - 82.22s |  During the fuzzing test, I found some strange behavior
82.22s - 83.58s |  in the car.
83.58s - 88.46s |  The moving car was stopped, or it didn't move.
88.46s - 91.46s |  This video is showing the weak point
91.46s - 95.94s |  that I found in the latest EV model.
95.94s - 101.53s |  Let's take a look.
101.53s - 113.32s |  Can we play a sound?
113.32s - 117.84s |  OK, let's see one more.
117.84s - 120.08s |  The moving car was stopped.
120.08s - 122.96s |  Are you interested?
122.96s - 126.60s |  Now, I will explain why this happens,
126.60s - 130.16s |  so please pay attention.
130.16s - 132.64s |  Contents are as follows.
132.64s - 136.68s |  First, I will explain UDS and fuzzing.
136.68s - 142.84s |  Then, I will explain what the type of attacks that I did
142.84s - 148.60s |  and explain how to prevent this weak point.
148.60s - 153.64s |  I told you I found a weakness during the fuzzing test.
153.64s - 158.56s |  The moving car was stopped or didn't move at all.
158.56s - 163.68s |  I will explain how these problems are connected to UDS
163.68s - 166.96s |  and what caused them.
166.96s - 171.72s |  First, UDS is a protocol used for communication
171.72s - 173.20s |  with vehicles.
173.20s - 177.72s |  It is defined in ISO 14229.
177.72s - 181.20s |  I don't have a car, but if you have one,
181.20s - 184.96s |  you probably go to a repair shop when something
184.96s - 188.76s |  goes wrong with your car, right?
188.76s - 194.40s |  The tool used to find out what's wrong is UDS.
194.40s - 198.72s |  During this process, the diagnostic tool and the car
198.72s - 205.69s |  communicate using UDS to determine the problem.
205.69s - 211.65s |  As I mentioned, UDS services perform important functions,
211.65s - 217.25s |  so not everyone can use these services freely.
217.25s - 221.41s |  You can see some of the security measures on this slide.
221.41s - 226.65s |  I will give you more details later.
226.65s - 231.09s |  To ensure that UDS is well-protected,
231.09s - 235.25s |  many car companies do fuzzing tests.
235.25s - 238.09s |  Fuzzing is a testing method where
238.09s - 243.85s |  random or unusual data is fed into a system to find problems.
243.85s - 247.21s |  The goal of this test is to see how
247.21s - 253.53s |  the system behaves under stress and to find security issues.
253.53s - 256.89s |  In the vehicle industry, we commonly
256.89s - 261.77s |  do black box fuzzing using commercial fuzzers.
261.77s - 268.41s |  There are many talks about CAN, UDS, and UDS fuzzing in CHP.
268.41s - 274.29s |  Check out those talks for more details.
274.29s - 280.89s |  During the UDS fuzzing test, we discovered something is wrong.
280.89s - 285.09s |  The vehicle malfunctioned with two services.
285.09s - 292.21s |  The first is ECU reset, and the second is communication control.
292.21s - 298.29s |  Based on these findings, we made real-world attack scenarios.
298.29s - 301.81s |  The first scenario is sudden stop,
301.81s - 309.51s |  and the second is disabling of vehicle usage.
309.51s - 312.27s |  Before explaining the attacks, you
312.27s - 316.39s |  need to understand the two services.
316.39s - 320.51s |  The first service is ECU reset.
320.51s - 323.59s |  It is used to reset the ECU.
323.59s - 328.35s |  It is often used for troubleshooting or testing
328.35s - 337.75s |  purposes.
337.75s - 342.35s |  This is the actual message that I did.
342.35s - 351.43s |  You can perform hard reset with the first sub-function.
351.43s - 354.79s |  This is the hard reset message.
354.79s - 362.82s |  And you can perform soft reset with the third sub-function.
362.82s - 372.84s |  It's the soft reset message.
372.84s - 376.40s |  With the ECU reset message, you can
376.40s - 380.76s |  stop the vehicle's engine.
380.76s - 384.60s |  There are two scenarios that I did.
384.60s - 388.96s |  The first is sending an ECU reset message to a moving
388.96s - 392.48s |  vehicle to make it stop suddenly.
392.48s - 398.84s |  And second scenario is vehicle disabling.
398.84s - 401.76s |  Continuously sending ECU reset messages
401.76s - 405.72s |  to disable the vehicle's functions.
405.72s - 408.60s |  The root cause of these issues is
408.60s - 414.56s |  that ECU reset is not disabled in drive mode.
414.56s - 419.12s |  Normally, this service is restricted during driving
419.12s - 422.64s |  because it can be dangerous.
422.64s - 427.76s |  And ISO 14229 says that the condition of server
427.76s - 437.99s |  is ignition is on and system not be in an operational mode.
437.99s - 444.87s |  I tested this on a new Lattice EV SUV model.
444.87s - 449.11s |  And the target ECU is the gateway control unit.
449.11s - 457.46s |  I conducted the test while the vehicle was driving.
457.46s - 460.18s |  Here are the attack steps.
460.18s - 463.74s |  Connect the laptop to the vehicle's OBD port
463.74s - 466.30s |  using a CAN interface.
466.30s - 469.58s |  And just start the engine.
469.58s - 473.98s |  Then we send a message and observe the vehicle.
473.98s - 477.75s |  It's that simple.
477.75s - 481.75s |  This photo shows the hardware setup.
481.75s - 485.83s |  The OBD cable is connected to the OBD port.
485.83s - 490.31s |  And the laptop is connected via the CAN interface.
490.31s - 497.46s |  The CAN bus parameters are set to standard values.
497.46s - 503.38s |  The first scenario is sudden stop scenario.
503.38s - 505.70s |  Set up the hardware setting.
505.70s - 514.50s |  And just we send the ECU reset message to moving vehicle.
514.50s - 521.23s |  Then the moving vehicle comes to a sudden stop.
521.23s - 524.91s |  Let's check it out through the video.
524.91s - 528.79s |  The video is very short, so watch it carefully.
540.53s - 545.69s |  No sounds, OK?
545.69s - 549.98s |  Let's see one more.
549.98s - 552.22s |  We sent a message.
552.22s - 557.38s |  Then the moving car was stopped.
557.38s - 559.06s |  I'm going to play one more.
559.06s - 568.00s |  This time, please look at the cluster.
568.00s - 572.52s |  After the message, the cluster was turned off.
572.52s - 577.04s |  It was rebooted, but the car shut down.
577.04s - 590.70s |  The video on the left shows the exterior.
590.74s - 593.70s |  You can see the car moving back and forth,
593.70s - 598.78s |  and back and forth, which shows that the brake pedal was not
598.78s - 601.83s |  pressed.
601.83s - 607.31s |  This attack can cause mechanical failure or damage.
607.31s - 615.87s |  At high speeds, this could lead to serious accidents.
615.87s - 620.15s |  The second scenario is vehicle disabling.
620.15s - 624.55s |  It's similar to the first scenario, but in this case,
624.55s - 629.63s |  the ECU reset message is sent continuously.
629.63s - 638.42s |  The vehicle cannot be controlled until the attack stops.
638.42s - 649.48s |  The vehicle starts, and the message is sent continuously.
649.48s - 656.36s |  The vehicle will not start, and the gear shifting is disabled.
656.36s - 668.30s |  The vehicle is completely uncontrollable.
668.30s - 671.86s |  Let's watch it one more time.
671.86s - 673.94s |  Again, the cluster.
673.94s - 679.54s |  Please look at the cluster.
679.54s - 689.83s |  The cluster screen turns off, and multiple warnings appear.
689.83s - 694.23s |  Due to the continuous attack, the cluster shuts down,
694.23s - 699.96s |  and the vehicle becomes uncontrollable.
699.96s - 708.47s |  The driver appears to be very confused.
708.47s - 712.51s |  Here are the logs of the ECU reset attacks.
712.51s - 716.75s |  Some parts are blurred for security reasons.
716.75s - 724.69s |  You can see the logs of both hard reset and soft reset.
724.69s - 729.53s |  To summarize the ECU reset attack, in drive mode,
729.53s - 736.77s |  you can stop the engine by using ECU reset message.
736.77s - 739.85s |  Continuous attacks can prevent the driver
739.85s - 742.37s |  from controlling the vehicle.
742.37s - 749.05s |  Also, the cluster will reboot, and appear multiple warning.
749.05s - 753.65s |  These attacks can be very dangerous on the road.
753.65s - 756.89s |  Therefore, the service, this service,
756.89s - 763.06s |  must be operated only in not ready state.
763.06s - 765.70s |  Here is the first service description.
765.70s - 767.30s |  How is it?
767.30s - 768.10s |  It's right?
768.10s - 769.18s |  Good?
769.82s - 776.69s |  Now, I will explain the second service.
776.69s - 782.53s |  The second service is communication control.
782.53s - 787.61s |  This service is used to control the communication
787.61s - 792.24s |  functions of the ECU.
792.24s - 797.18s |  This is the actual message that I did.
797.18s - 800.34s |  And also, you can set the control type
800.34s - 804.02s |  using the sub-functions.
804.02s - 816.24s |  The strange behavior appears with sub-function 1 and 3.
816.24s - 822.56s |  Use sub-function 1 to enable RX and disable TX of the ECU.
825.84s - 830.28s |  This is the message for sub-function 1.
830.28s - 839.28s |  And you also use sub-function 3 to disable RX and TX.
839.28s - 843.96s |  This is the message for sub-function 3.
843.96s - 847.48s |  You can control the issue's communication type
847.48s - 853.14s |  using this method.
853.14s - 858.74s |  An attacker can disable TX and RX of the ECU
858.74s - 863.26s |  by transmitting communication control message.
863.26s - 867.70s |  I performed two scenarios.
867.70s - 872.50s |  The first is brief pause and sudden movement.
872.50s - 877.26s |  And second scenario is vehicle disabling.
877.26s - 880.30s |  The root cause of this strange behavior
880.30s - 886.22s |  is that communication control is not disabled in drive mode.
886.22s - 892.42s |  And also, this service does not require
892.42s - 897.02s |  security authentication.
897.02s - 902.46s |  The first scenario is brief pause and sudden movement.
902.46s - 908.62s |  Set the hardware setting and set the gear to drive.
908.62s - 913.86s |  Then just we send a message.
913.86s - 920.78s |  The driver will release the brake pedal to move forward.
920.78s - 924.58s |  But the vehicle does not move for a few seconds,
924.58s - 930.42s |  even when the foot is taken off the brake pedal in drive mode.
930.42s - 938.22s |  After a few seconds, the vehicle suddenly moves.
938.22s - 962.26s |  OK, let's check it out through the video.
962.26s - 963.58s |  I'm sorry, too.
963.58s - 967.82s |  The sound is not playing.
967.82s - 970.50s |  I'm going to play one more.
970.50s - 975.73s |  Please check the cluster.
975.73s - 978.01s |  The gear is set to drive.
978.01s - 981.17s |  Then we send a message.
981.17s - 983.89s |  The vehicle doesn't move, even when the brake pedal
983.89s - 985.33s |  is released.
985.33s - 990.57s |  Then, after a few seconds, it suddenly moves.
990.57s - 996.74s |  It's an interesting symptom.
996.74s - 999.42s |  I'll explain the second scenario.
999.42s - 1004.98s |  The second scenario is vehicle disabling attack.
1004.98s - 1007.78s |  It's similar to the first, but this time,
1007.78s - 1011.58s |  we send message continuously.
1011.58s - 1015.46s |  When attack messages are sent in succession,
1015.46s - 1022.87s |  the driver loses complete control over the vehicle.
1022.87s - 1044.94s |  Let's take a look.
1044.94s - 1058.07s |  We send message continuously.
1058.07s - 1065.22s |  Yeah, the driver sets the gear to drive.
1065.22s - 1069.42s |  Then we send a message.
1069.42s - 1075.47s |  We send message continuously.
1075.47s - 1077.79s |  The scariest part is that we don't
1077.79s - 1082.03s |  know when the attacker will stop.
1082.03s - 1093.58s |  When we stop the attack, the vehicle suddenly starts moving.
1093.58s - 1095.94s |  If the driver is pressing the gas,
1095.94s - 1097.42s |  it's very, very dangerous.
1099.94s - 1105.30s |  OK, let me summarize the communication control attack.
1105.30s - 1109.42s |  This type of attack can disable the transmission
1109.42s - 1112.70s |  and reception of the ECU.
1112.70s - 1116.02s |  As shown in the previous video, it
1116.02s - 1122.62s |  can control the vehicle either briefly or continuously.
1122.62s - 1128.02s |  Unlike on previous attack, ECU reset,
1128.02s - 1132.70s |  this attack doesn't turn off the ECU.
1132.70s - 1141.37s |  So when the attack stops, the vehicle could suddenly move.
1141.37s - 1149.22s |  Therefore, this service should be operated only in not ready.
1149.22s - 1153.26s |  Here are the logs of communication attacks.
1153.26s - 1160.84s |  Some parts are blurred for security reasons too.
1160.84s - 1166.64s |  So how could these attacks happen in real life?
1166.64s - 1168.88s |  You might wonder.
1168.88s - 1172.12s |  Here are some examples.
1172.12s - 1177.08s |  First, an attacker secretly enter the vehicle
1177.08s - 1184.34s |  and connect the wireless OBD device.
1184.34s - 1188.94s |  Some OEMs use wireless diagnostic tools.
1188.94s - 1192.90s |  Since drivers usually don't check the OBD part,
1192.90s - 1197.34s |  the vehicle could be unprotected.
1197.34s - 1201.90s |  And second, attacks can happen from a short distance
1201.90s - 1208.10s |  using wireless communication like Wi-Fi or Bluetooth.
1208.10s - 1214.90s |  Some OEMs use Wi-Fi to connect diagnostic tools.
1214.90s - 1217.06s |  Vehicle without security measures
1217.06s - 1220.94s |  are very vulnerable to these type of attacks.
1220.94s - 1226.26s |  That's why such attacks could happen at any time.
1226.26s - 1229.82s |  So I'll suggest two countermeasures
1229.82s - 1231.42s |  for these attacks.
1231.42s - 1236.90s |  The first, important services like ECU reset and communication
1236.90s - 1241.70s |  control must be operated only in not ready state.
1241.70s - 1245.18s |  It's meaning when the engine is off.
1245.18s - 1248.66s |  The second, these services should only
1248.66s - 1252.46s |  be possible after a security access authorization
1252.46s - 1254.22s |  is granted.
1254.22s - 1261.82s |  I shortly mentioned the security access service earlier.
1261.82s - 1266.98s |  To time restrictions, I will explain just one thing
1266.98s - 1270.70s |  about the security access authorization.
1270.70s - 1273.30s |  There is the security access service.
1273.30s - 1280.42s |  This service uses a seed and key to provide security procedure.
1280.42s - 1286.98s |  It only unlocks security when the correct seed and the key.
1286.98s - 1292.90s |  If authentication fails, it locks the ECU for a certain time
1292.90s - 1296.71s |  to enhance security.
1296.71s - 1301.63s |  There is also, when connecting a diagnostic tool,
1301.63s - 1307.11s |  some OEMs use security algorithms.
1307.11s - 1314.00s |  And another measure is the gateway safety function.
1314.00s - 1318.08s |  Previously, various data could be accessed without filtering.
1318.08s - 1322.36s |  But now, the gateway filters the data,
1322.36s - 1326.92s |  allowing only certain information to be accessed.
1326.92s - 1331.64s |  So I discovered this weak point in April.
1331.64s - 1338.48s |  After conducting additional tests, I reported on June 10.
1338.48s - 1342.72s |  But I was told that the vulnerability is not
1342.72s - 1348.72s |  actionable in reality and that it works as designed.
1348.72s - 1355.16s |  However, I still believe it is a weakness.
1355.16s - 1360.88s |  I believe that after hearing my presentation today,
1360.88s - 1364.66s |  you will agree with me.
1364.66s - 1368.14s |  OK, finally, let me summarize.
1368.14s - 1372.38s |  Some diagnostic services can have a significant impact
1372.38s - 1374.74s |  on vehicle driving.
1374.74s - 1379.06s |  If an attacker transmits the diagnostic message
1379.06s - 1383.82s |  to a driving vehicle, a serious accident may occur.
1383.82s - 1391.54s |  So security for diagnostic services is essential.
1391.54s - 1394.66s |  That's all for my presentation.
1394.66s - 1399.26s |  Thank you for listening.
1399.26s - 1402.10s |  OK, my name is Seunghee Han.
1402.10s - 1405.42s |  I'm from South Korea, not North.
1405.42s - 1407.26s |  Thank you.