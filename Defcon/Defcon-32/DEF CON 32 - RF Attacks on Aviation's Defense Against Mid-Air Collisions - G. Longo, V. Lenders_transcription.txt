{
  "webpage_url": "https://www.youtube.com/watch?v=p1H6-0clP7U",
  "title": "DEF CON 32 - RF Attacks on Aviation's Defense Against Mid-Air Collisions - G. Longo, V. Lenders",
  "description": "Aviation's Traffic Collision Avoidance System (TCAS) II has been touted as a foolproof safety net since its introduction in the 1980s. But what if we told you that this supposedly impenetrable system can be compromised? For years, attacks on TCAS have been mere theoretical exercises, foiled by an (accidental) built in security feature. That is, until now. In this presentation, we'll reveal the first working RF attacks on TCAS II, demonstrating how to hijack collision avoidance displays and create fake Traffic Advisories (TAs) and Resolution Advisories (RAs). We'll walk you through the technical challenges of building the necessary tooling using commercial off-the-shelf hardware.\n\nBut that's not all. Our research has also uncovered a second attack capable of remotely disabling an aircraft's TCAS capabilities, rendering it vulnerable to mid-air collisions. The implications are clear: if our findings can be exploited in real-world scenarios, the safety of millions of passengers hangs in the balance. Join us as we lift the lid on this shocking vulnerability and explore the dark side of aviation security.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1581,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.08s - 6.20s | This text was transcribed using whisper model: large-v2

 Hello everybody, so welcome to our presentation on the radio frequency attacks on the
6.76s - 11.00s |  Aviation's last line of defense against media collisions
11.32s - 18.68s |  It will be a talk on the attacks on the traffic collision avoiding system in aviation the so-called TCAS
19.36s - 26.44s |  So my name is Vincent Lenders. I'm a cyber security researcher for most more than 20 years focusing on
26.96s - 33.12s |  The security of wireless networks and I'm also the director of the cyber defense campus in Switzerland
33.28s - 37.20s |  I'll be giving this talk together with Giacomo. I'm Giacomo
37.20s - 40.60s |  I'm a third year PhD student from Italy in the University of Genoa
40.60s - 47.48s |  And I work also on radio security of the Onyx and maritime systems as well. So but go on Vincent
48.88s - 53.44s |  So the air traffic control is a key infrastructure
54.44s - 59.44s |  For safe air travel today with more than 30 millions
60.12s - 62.12s |  flights per year worldwide
62.24s - 66.96s |  The air traffic management is nowadays very complex a thing
67.20s - 72.36s |  So air traffic control helps organizing and optimizing the air traffic flow
72.48s - 77.34s |  It provides situation awareness to ground controllers and also support
77.70s - 85.30s |  To pilots and a very important feature of the air traffic control is to prevent media collisions
86.46s - 92.66s |  So if we look at air traffic control, there are mainly there are different procedures and technologies
93.26s - 96.50s |  for this and there are if mainly three
97.46s - 102.58s |  Technologies that I would like to introduce and are important for for their traffic control
102.58s - 109.50s |  They are all three based on modest. Well, this is a data frame a format similar to in the Internet's as IP
110.10s - 114.74s |  That allows for for wireless communication between aircraft and ground station
115.54s - 117.22s |  so the first
117.22s - 120.34s |  Technology is secondary surveillance radar called SSR
120.94s - 126.70s |  The second one is a DSP and then the third one that will be the main focus of this presentation in this a traffic
127.06s - 132.06s |  Collision collisions avoiding system. So let me start with secondary surveillance radar
132.06s - 133.86s |  This is the oldest
133.86s - 135.30s |  technology
135.30s - 140.38s |  It's it's based on ground stations on radar. So the radars their interrogate
141.42s - 143.42s |  aircraft using this modest
144.82s - 147.66s |  Format the protocol on an uplink on the
148.22s - 153.26s |  1030 megahertz uplink and then the aircraft they respond on a downlink on one
154.26s - 155.86s |  1090 megahertz
155.86s - 157.86s |  the modest downlink
158.14s - 163.70s |  So these messages are very small in contrast to IP package packets which can be like
164.70s - 168.86s |  1,500 bytes this message is very small 56 or 112 bits
169.58s - 172.54s |  but they can entail a lot of information such as the
173.06s - 178.94s |  Velocity altitude and heading and so on of the aircraft. So this is how this is working
178.94s - 183.74s |  This is a kind of an old technology. It's also mandatory and used in all
184.98s - 187.10s |  In all our spaces around the world
187.86s - 194.70s |  Now we have the automatic dependent surveillance broadcast. It's more recent. It has been mandated by the last years
195.22s - 200.18s |  in various airspaces and this is also based on modest but
200.78s - 208.46s |  Instead of having the radars interrogating the aircraft. We have the aircraft determining their own position using GNSS
208.98s - 210.98s |  using for example GPS and
211.18s - 218.10s |  When they know they are on location they broadcast this information of a modest to surrounding aircraft and also to
218.34s - 219.82s |  ground stations
219.82s - 227.54s |  So this is a more precise than secondary radar a much more precise GPS gives you a few meters accuracy
227.82s - 230.90s |  Compared to a few hundred meters for secondary radar
230.90s - 236.94s |  So it's it's welcome to also decrease the separation between the aircraft because of the higher precision
237.94s - 244.06s |  Now we come to the the focus of this talk, which is the traffic alert and collision avoiding system
244.38s - 246.38s |  It's a protocol
246.42s - 248.42s |  between the aircraft
249.26s - 254.66s |  so basically, it's a ranging distance ranging protocol based on request replies also on the
256.50s - 259.32s |  1,030 megahertz uplink and on the
260.78s - 262.78s |  1,090 megahertz downlink
263.30s - 265.02s |  There are the responses
265.02s - 269.94s |  so it's there are a lot a lot a few interrogations replies that happen to basically
270.50s - 276.50s |  Determine how if a collision is going on and how to avoid this collision. This is a very important
277.78s - 279.78s |  system because it's the last line of
280.10s - 286.42s |  defense against media conditions collisions if the other systems are failed like
287.10s - 290.66s |  Secondary radar or ADS-B and it was not possible to keep the separation
290.66s - 296.10s |  This one's kicks in and will make sure that there are no collisions
296.68s - 302.70s |  So why is this important? Well, it's kind of obvious. It goes it's all about human life if there is a
303.22s - 305.02s |  aircraft collision
305.02s - 307.02s |  that this will lead to a
307.54s - 311.10s |  Catastrophic event we had in the 70s, for example
311.94s - 313.94s |  crashes going on also in the 80s
314.38s - 317.02s |  With many deaths and this is why
319.10s - 325.82s |  1987 there was an introduction of the TCAS system and it's now mandatory in many airspaces
325.82s - 330.74s |  It depends on the size of the aircraft and also the number of passengers you have
330.94s - 336.70s |  but then if you are an aircraft that has a certain size and a certain number of passengers you will
336.94s - 341.90s |  Be required to have a TCAS system in the aircraft to avoid collisions
342.90s - 346.34s |  Now TCAS has three main core functions
346.98s - 351.10s |  One is surveillance. The other one is traffic advisory and in the most
351.70s - 354.46s |  Recent version of the traffic collision avoiding system. You have also
355.26s - 359.74s |  Resolution advisories. I will go into the detail of these three functions
359.98s - 362.98s |  So if you're on the picture on the right, we have a typical
363.82s - 367.74s |  TCAS display showing the surrounding aircraft
367.74s - 375.70s |  So this is the surveillance information that you have the aircraft periodically announced themselves and you will see this on this display
376.38s - 378.70s |  Now and there is an aircraft is found
378.82s - 386.74s |  There will be interrogations to get the range for example to get the altitude and the capabilities of the surrounding aircraft
386.74s - 389.54s |  this is all information that will then appear on this display and
390.42s - 394.50s |  If the system realized there may be a collision going on
395.14s - 399.58s |  That that might happen and then there will be some traffic advisory some TA
400.30s - 403.62s |  That is sent to the cockpit as an alarm
404.18s - 410.02s |  Alarming the the pilot that there may be a collision and if this persists after some point
410.46s - 415.82s |  Then there will be a resolution advisory and this is basically to indicate
416.46s - 422.38s |  And command to give a command to the pilot to basically do something and in TCAS too
422.58s - 426.10s |  There are two options basically to resolve the conflict
426.94s - 428.10s |  TCAS too
428.10s - 434.94s |  Foresees that one aircraft should climb and the other one should descend and this should hopefully then prevent the collision
435.02s - 439.38s |  So this is the the key function of of TCAS too
440.34s - 443.90s |  now let's talk about this talk is about the security of TCAS and
444.86s - 448.20s |  obviously, we're not the first to think about this problem, but the
448.88s - 452.32s |  The situation is somehow worrying and yet for
452.92s - 457.48s |  To our perspective also a little bit on unconvincing so far. So there has been some
458.68s - 461.68s |  Warnings, there has been some risk assessments many of them
462.36s - 463.52s |  people
463.52s - 465.08s |  publications
465.08s - 470.04s |  Analyzing the risks the cyber security risks and the risks of attacks against TCAS here
470.04s - 475.24s |  I'm mentioning a couple of those papers one the one we are we have written
476.00s - 478.76s |  Ourselves in the past. So these are warning signs
478.76s - 485.12s |  There are also people and including ourself that have done some simulations to basically to better understand
485.84s - 492.00s |  How pilots would react to TCAS attacks and also what are the conditions under which?
492.40s - 496.08s |  TCAS attacks may work and what are the limitation of these attacks?
496.80s - 497.72s |  for example
497.72s - 501.48s |  we did some work also inviting pilots in a simulator and
501.68s - 505.80s |  Exposed them to attacks and showed how they reacted to those attacks and
506.28s - 509.36s |  Then we had also some some work to better
510.04s - 512.72s |  understand in simulations the theoretical
513.60s - 519.24s |  Limitations of these attacks and what what are the better conditions that are favorable to an attacker?
519.36s - 521.60s |  So this but these are all simulations
522.36s - 527.04s |  Then most recent more recently there has been at an attempt to analyze
528.04s - 530.04s |  experimentally the impact of
530.68s - 538.04s |  Attacks on TCAS and these are the these two papers from research and one is a PhD student working on it building a testbed
538.76s - 544.16s |  And with a TCAS equipment to analyze how the systems with will react
545.00s - 546.32s |  but
546.32s - 552.12s |  Our motivation for this work that will be that Jacomo will be presenting is that despite this prior art?
552.28s - 558.64s |  There are still no convincing experimental and scientific evidence that this TCAS attacks may work
559.16s - 562.68s |  Actually, they may trigger for example resolution advisories
563.80s - 564.88s |  using
564.88s - 566.88s |  commercial and certified hardware
566.96s - 573.04s |  So there was also no so far no established methodology how to test attacks and to see how?
573.60s - 578.64s |  Systems will react in a scientific way and if these attacks are feasible
578.64s - 582.90s |  We would like to also better understand. What are the capabilities needed for an actor?
583.44s - 586.80s |  So we would like to understand. What are the requirements?
587.36s - 591.00s |  To actually need it to to be able to launch those attacks
591.16s - 596.76s |  So this was the basic motivation of a work that now Jacomo will be presenting next
597.36s - 608.30s |  So I needed to descend because you know, I needed to climb under Vincent. So
609.10s - 616.38s |  Yeah, okay. So now the fun stuff begins. So I'll start by addressing your point. So it's a protocol from 1987
616.38s - 621.70s |  So there is it's collaborative. It's in clear. There is no encryption. No PKI. No, whatever
621.70s - 624.62s |  So it's insecure. We already know that let's keep over that
625.14s - 628.94s |  So the first attack that you are going to see it's inducing a TA
628.94s - 630.06s |  It's a very simple thing
630.06s - 636.18s |  You just need to implement the 1.8 thousand pages of standards required to do so and you can find it all of these
636.26s - 642.10s |  Standards in these three key bullet points, which means in order to get a TA you need to be an aircraft
642.10s - 643.86s |  So you need to broadcast your presence
643.86s - 649.02s |  you need to reply to interrogation properly to say that you are at the correct altitude and in a correct position and
649.22s - 655.74s |  Which is our third point being in the correct position so correct range, correct altitude with a consistent identity
656.10s - 659.14s |  the second attack that you will see is about
660.02s - 664.38s |  triggering a resolution advisory. So a resolution advisory happens after a
664.98s - 670.98s |  Traffic advisory. So you first need the first one and then you start a negotiation. So you tell the other aircraft
670.98s - 675.34s |  I perceive you as dangerous. Please do something and how you can choose
675.46s - 682.26s |  Well, there is one conflict resolution algorithms that is used which is the aircraft with the lowest address always wins
682.38s - 689.14s |  so you as an attacker can find out the address of the other aircraft and always pick whenever the other aircraft is going to
689.14s - 690.98s |  climb or descend
690.98s - 696.22s |  Then the first attack is instead not involving an aircraft, but instead a ground station
696.22s - 699.86s |  So how TICAS works is basically it picks up a
700.62s - 704.42s |  Size that it will protect so how much time in the future it will look
704.86s - 710.38s |  Depending on the altitude on the currently selected altitude. This is called sensitivity and it goes in levels
710.50s - 713.22s |  So the higher you are the bigger this area is
713.62s - 718.36s |  Well, if you land in Las Vegas where you have two runways close together, you might
719.06s - 723.10s |  Actually end up in a situation when you point towards another aircraft
723.10s - 729.82s |  So what they did was they allowed ground station to tell the aircrafts to reduce their sensitivity
730.06s - 737.34s |  Well, guess what? You can send this command to any aircraft in the air to disable their TICAS with no authentication
737.34s - 743.50s |  So this is fun. You can disable the anti-collision of whatever you want fun in my understanding of the word, by the way
743.66s - 745.82s |  So why did everyone fail?
746.98s - 749.12s |  So an interrogation cycle
749.12s - 754.40s |  So one interaction of the protocols goes like so you send something and then the other aircraft replies
754.40s - 758.72s |  So this is very standard, but the range that is estimated
758.72s - 765.60s |  So the relative position is done by taking this time of flight. So the time it took to respond and subtracting
766.28s - 767.40s |  128
767.40s - 770.84s |  Microseconds, that's 10 to the power of minus 6
771.20s - 778.24s |  It's a comically short time your scheduler of your operating system is running 1,000 times slower than this
778.36s - 782.64s |  so this has acted for a long time as a security feature because
783.28s - 790.44s |  Let's say low skilled attackers could not manage to have this kind of latency to perform all of the steps of the protocol
790.88s - 796.20s |  Actually, I'm lying to you, but I'm telling you so it doesn't count. It actually is not 128
796.20s - 800.56s |  It's a little bit less because it's not with respect to the start of the packet. It's a little bit later on
800.60s - 806.76s |  So you need to receive, understand what has been said, send the correct thing out at the current time and reply
806.92s - 810.64s |  Not only that, this happens over two different frequency channels
810.64s - 812.44s |  So you need to handle coherency
812.44s - 818.08s |  And you need to be always in the same spot because if you need to do six interactions in a row to get acquired
818.08s - 822.16s |  You always need to reply consistently and at the same time
822.56s - 829.24s |  So it's a difficult thing. So the first problem that we had is that a ticket system is not exactly a docker container
829.24s - 833.48s |  We can you can just put an environment variable telling him where the database is and it runs
833.68s - 838.24s |  So we had to build a testbed before and so this one is our architecture
838.76s - 843.20s |  so the first ingredient is of course a ticket unit, which is what you're testing and
843.48s - 848.00s |  You also need to connect it to a control panel and a traffic display unit
848.00s - 851.40s |  which what we sent was showing to you some antennas and
852.12s - 856.80s |  Not only that an headset because the traffic alerts are going to come out of it
857.32s - 859.04s |  then
859.04s - 865.32s |  You put an attacker into there. So two antennas, an SDR, a computer driving it and because we are scientists
865.32s - 868.56s |  You also need to put something to measure what is going on
868.60s - 871.84s |  So we have a camera that takes a look at the traffic display
871.88s - 878.76s |  you have an a bionic bus simulator that makes the tickets believe that is flying because otherwise it will not transmit and then since
879.56s - 883.36s |  Tampering with the anti-collision system of aircraft. It's let's say unpolite
883.76s - 888.48s |  You need to put everything inside of a cage so that you don't get into jail while doing so
888.48s - 892.64s |  Well, I was helped because they are from the Ministry of Defense, but they wouldn't risk anything
893.36s - 896.12s |  So this is as you can see our testbed
896.12s - 902.16s |  I'm not very good at cable management as you can see, but it was this clusterfuck of cables basically
902.68s - 907.96s |  This is what you can get out of this and also our data gathering process was this very sophisticated
908.28s - 911.84s |  Setup with a webcam placed on a monitor that acted as a stand
912.40s - 914.40s |  So
914.44s - 916.92s |  We got this so as you can see this is OpenCV
916.92s - 922.36s |  So this can be turned as a dual use talk about machine learning and pattern recognition very easily
922.72s - 929.76s |  So we were recognizing where the aircraft was tracked and what distance was commanded and everything else. So technicalities and
930.60s - 936.52s |  Speaking about technicalities, so it's trivial to send some radio protocol. At least people have said to us
937.04s - 940.40s |  Many times so let's talk about what you need to do actually
940.88s - 943.48s |  So you have two TCAS that interact
943.48s - 951.00s |  So they send something on one frequency at two megabit per second and they respond on another frequency at one megabit per second
951.44s - 957.76s |  So when we started this basically three of these interactions were not available in real time
957.76s - 962.00s |  So two megabits is a lot for a software-defined radio implementation
962.32s - 969.12s |  And there were no implementation doing any of these protocols. So the first thing we needed to do was well
969.52s - 974.92s |  First we tested that our testbed worked because if you need to attack something you need to understand if you
975.68s - 977.68s |  Mounted it correctly. Yeah, it works
977.88s - 985.88s |  Then we started by building a decoder that with respect for instance of your dump 1090 or whatever. It could run very very fast
986.72s - 988.76s |  then we brought a
989.28s - 994.16s |  Transmit chain and we got it certified by a RAM tester. So that we got our stamp and
994.84s - 1000.92s |  Now you might be wondering so you have a RAM tester a device that does everything and you are building that yourself
1001.20s - 1005.20s |  Well, yes, you need four hundred thousand dollars to buy one and also
1005.76s - 1010.60s |  The more difficult part of the protocol are not just not implemented into there because you don't need it
1010.60s - 1015.00s |  So you can just send dead beef to an aircraft, but you will not attack it. I guarantee to you
1016.32s - 1022.68s |  There was also this other thing. So can't you just act time and reply random shit all over the airspace?
1022.68s - 1028.32s |  Well, you can't because aircraft transmit things at random in order to not pollute the airspace
1028.32s - 1033.92s |  And also you need to have silence around our response to get the other receiver to pick it up
1033.92s - 1035.92s |  So you cannot just float the air
1036.32s - 1039.76s |  So we explored two ideas. The first one was doing this in hardware
1039.76s - 1044.76s |  It's a lot less expensive otherwise, but you need smart people to do it and I'm not so
1045.04s - 1051.36s |  We started with software-defined radio because you can just buy something you can put some random PhD guy
1051.68s - 1059.00s |  And it's going also to get cheaper over time. And so the idea was can we do this with like less than $10,000?
1060.08s - 1064.48s |  Of course, you need a place to do this and do all of the weird stuff like
1065.24s - 1070.88s |  Tracking putting down. I don't know tell us with jet or something. So the first thing we tried
1071.48s - 1078.52s |  Was trying with Linux real-time and we got 190 microseconds just to reply to a single pulse. So not enough
1078.92s - 1081.20s |  So we needed to do a bunch of stuff
1081.20s - 1085.40s |  So you take a workstation you remove power saving because who cares about it
1085.60s - 1090.24s |  You remove hyperthreading you disable bunch many of the course you remove the GPU
1090.56s - 1093.08s |  Sorry for all the machine learners in the audience
1093.08s - 1099.24s |  and then since we are at a security conference you disable all of the security protections because those are slow all of the
1099.28s - 1101.28s |  Mitigations and whatever we don't care
1102.20s - 1107.32s |  Then you build basically your own Linux you pin the OS on one core
1107.56s - 1112.28s |  You pin the application on some other course and you remove all of the power saving features
1112.28s - 1118.52s |  So you run busy polling and then you compile everything as if it was your Gen 2 custom Linux distribution
1118.52s - 1123.12s |  so extreme flags optimized for architecture profile guided all the jets and
1123.76s - 1130.20s |  Then since you're a software engineer you over complicate things. So how where do you start to over complicate things?
1130.24s - 1133.28s |  so you start from the reception because you need to find out if
1133.80s - 1140.80s |  The victim aircraft has interrogated you the way is you need to build some kind of intelligent preamble detector
1140.80s - 1146.52s |  So going back and forth through your transforms and then you bring up and you understand why you studied mathematics
1146.52s - 1148.80s |  so you bring up all of these random shit about
1149.76s - 1153.16s |  symmetries in the furrier domain and back and forth transforms
1153.64s - 1160.76s |  Then you actually do not need to receive all of the bits that are being sent to you at one point
1160.76s - 1163.80s |  You just decode enough bits and you understand what is being asked to you
1163.80s - 1169.96s |  So you build a finite state machine and you start replying earlier. So you reduce latency. I need those nanoseconds
1170.60s - 1176.12s |  Then of course everything stays into a cache because you don't have the time to modulate anything
1176.12s - 1179.24s |  So you just need a lookup table and save everything into RAM
1179.40s - 1185.64s |  Then you need to get good at programming you need to read all of that Intel manual of 1.3 thousand pages
1185.64s - 1193.04s |  Also that one with full of vmulpd or other single instruction multiple data instruction you remove any mutex because those take
1193.52s - 1195.92s |  100 nanoseconds to run and it's unacceptable
1196.24s - 1201.36s |  You remove all memory allocations and you rewrite the allocator of your program in Rust
1202.04s - 1207.52s |  Because why not and then you add some threads into the mix to over complicate things even more
1207.60s - 1213.68s |  So now after two months you ended up with 40 microseconds more than you started with Wow
1213.96s - 1217.72s |  And so what kind of results you can get from that
1218.72s - 1221.76s |  You can trigger RTA. Oh, wow, it works
1221.88s - 1226.16s |  So as you can see, you can put an aircraft directly on the nose at the same altitude
1226.16s - 1231.60s |  So this will be pretty spooky if I were a pilot and you can also get an array
1231.60s - 1235.16s |  So you can distinguish it because it's red instead of yellow
1235.32s - 1242.60s |  I'd like to point out that even though it's written no GPS position. This is in no way related to GPS spoofing attacks or whatever
1243.60s - 1245.92s |  Also TCAS doesn't need GPS so and
1246.72s - 1252.24s |  Then for the TCAS the activation what you will see on the aircraft is that it starts in
1252.68s - 1260.84s |  Resolution advisory mode then something happens and it turns back to traffic advisory only mode and this happens
1261.48s - 1265.68s |  You cannot reset it back to where it started unless you plug
1266.24s - 1270.96s |  You unplug and replug the TCAS unit, which is very uncomfortable to do
1271.00s - 1275.64s |  You can't get into an avionics bay while you're flying and we wanted to verify it
1275.64s - 1279.28s |  So how can you do that? You fake being a tower and you ask aircraft
1279.28s - 1284.40s |  Can you please tell me the sensitivity level you're operating at and it's going to tell you that it decreased so it works
1285.48s - 1288.80s |  Then we tried to induce a collision avoidance
1289.64s - 1292.08s |  Maneuver for 30 minutes and it worked
1292.32s - 1299.00s |  Then the TCAS unit shut off because it didn't expect flying information with someone directly in the front of your nose for 30 minutes
1299.52s - 1301.44s |  So it's reliable and
1301.44s - 1306.88s |  The thing that we got is that the amount of money that you require is actually quite close to our target
1306.88s - 1312.08s |  You also need the one Italian PhD student that eats canned vegetables for a while, but you can manage
1313.44s - 1315.56s |  It's important vegetables are important
1316.24s - 1320.68s |  So about the sensitivity level attack, I can just tell you that it works always
1320.68s - 1324.56s |  I don't have any graph to show you. It's just going to be a line to works and
1325.44s - 1332.24s |  Instead our system managed to reply within 0.2 microseconds, which for something built in software is
1333.20s - 1334.68s |  smart and
1334.68s - 1339.24s |  Also the jitter so the delay in between two different interrogation stayed within
1339.76s - 1344.96s |  This limit set by the standard. Of course, it's a lot worse than real hardware, but it's very good
1344.96s - 1350.92s |  and so this is the most important slide, which is the success rate so
1351.52s - 1355.80s |  The level of success at one point goes to around 98%
1355.80s - 1361.20s |  So, you know that we are not bullshitting you if you see our nerve talk where they get 100% they are lying
1361.40s - 1365.96s |  So, you know that we aren't and so we get this advantage of around 30 plus
1366.76s - 1372.08s |  Microseconds and why would you care to reply before the 128 microseconds?
1372.08s - 1377.00s |  Well, if you are an attacker and you are on the ground and you want to place an aircraft at distance zero
1377.00s - 1379.92s |  so directly on the nose of another aircraft you need to
1380.52s - 1384.28s |  Reply a little bit earlier and let the speed of light do its work
1384.72s - 1386.96s |  So why do you want to do that?
1386.96s - 1394.76s |  Because some distances automatically trigger a TA on an array and with the canned vegetables from before you can manage to do this
1394.76s - 1399.20s |  Right now with hardware that you can buy at a distance of 4.2 kilometers
1399.20s - 1401.60s |  So if you are within that distance, you can do that
1402.12s - 1406.20s |  If you buy your own quantum computer that magical
1406.64s - 1413.72s |  Unicorn word thingy that does it in zero nanoseconds. You can put this up to this theoretical limit and
1414.84s - 1421.64s |  so we wanted also to find out if we you can do that to an airliner because that's what everyone wants to perform chaos and
1422.76s - 1429.84s |  So you can do that for an airline and find that 950 kilometers per hour with a probability of 80% which is
1430.48s - 1432.12s |  worrying
1432.12s - 1435.52s |  So let's talk about limitations. Let's be straightforward. So
1436.84s - 1443.48s |  You just need to be heard power wise, but you need to buy a power amplifier, which we didn't have but it's RF
1443.48s - 1449.00s |  So I guess it works and also you need to a way to find out if you want to appear in a very precise position
1449.00s - 1455.24s |  The attitude of the victim you're attacking but as you may know you can listen for ADS-B and understand this position
1455.76s - 1460.24s |  Then I conclude so we now know what kind of hardware we need
1460.24s - 1462.72s |  We know what kind of things you need to buy
1462.80s - 1467.40s |  We built a testbed for this and we succeeded basically because
1467.92s - 1473.68s |  We recognize that general SDRs framework are not enough latency wise to perform this kind of stuff
1473.68s - 1478.52s |  Also, like dump 1090 is focused on decoding very very well everything that is coming up
1478.52s - 1486.32s |  But not very very fast and also we focused on trivial technicalities like building your our own memory allocator and whatnot
1487.16s - 1492.20s |  So actually the TRA is very difficult to pull off instead the RA-DOS is
1492.80s - 1499.56s |  Extremely dangerous and also we have a problem because workstation will get faster over time. So this capability will increase
1501.00s - 1503.00s |  so
1503.28s - 1511.08s |  Systemic it's a systemic problem about a set a very delicate topic. So we had to disclose this in a very
1512.04s - 1514.64s |  Complex environment we have disclosed it basically to
1515.04s - 1520.40s |  whoops manufacturers and a bunch of authorities both national and
1521.08s - 1522.60s |  international that have
1522.60s - 1528.24s |  Acknowledged so manufacturer basically said yeah, it's a problem in the standard. Yeah, we're going to do something about it
1528.24s - 1536.00s |  And as it stands at the moment, there is no way to fix any of these attacks
1536.84s - 1538.84s |  but
1538.92s - 1542.56s |  After some kind of work now we know
1543.04s - 1548.52s |  That something has to be done and something will happen because they are already working on new
1548.84s - 1555.68s |  Iterations of collision avoidance standards. Also, it's a field what it's very important the safety of everything
1555.68s - 1561.92s |  So it's going to happen somehow. So if you want to know more we have a scientific paper coming up
1561.92s - 1563.52s |  It's using security
1564.44s - 1570.40s |  If you can't wait you can just ask me and I will hand over to you a PDF if you are not smart on
1570.40s - 1572.40s |  a USB key otherwise via email
1572.68s - 1574.68s |  So that was it
1575.20s - 1577.20s |  Hope you liked it