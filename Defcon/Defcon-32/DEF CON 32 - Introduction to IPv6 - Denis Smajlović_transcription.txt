{
  "webpage_url": "https://www.youtube.com/watch?v=kGvU_MuxZ2c",
  "title": "DEF CON 32 - Introduction to IPv6 - Denis Smajlovic\u0301",
  "description": "Most of the Internet today is running on a legacy version of the Internet Protocol: IPv4. Despite of this, the number of engineers, especially in security, who know how to use IPv6 is relatively low. In this talk we take you through why today\u2019s Internet does not live up to its original vision, take you back to the past to show you what the IPv4 Internet used to look like, and, through this, reveal the secrets that will allow you finally understand IPv6.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1518,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 5.00s | This text was transcribed using whisper model: large-v2

 It is now the top of the hour. Good morning. And now we have, um, our second talk of the day,
9.54s - 14.54s |  our second of four, uh, sponsored by the packet hacking, the packet hacking village. And
17.38s - 22.38s |  we are honored to have Dennis Smilovich, uh, on IPv6. Dennis, take it away.
23.38s - 28.38s |  Thank you. Hi. Yeah, as Ming said, my name is, uh, Dennis Smilovich. I'm a
32.78s - 36.18s |  principal security consultant at Nova Information Security based in San Francisco,
36.18s - 40.66s |  California. And so IPv6 was something that I used to struggle with a lot. I've seen
40.66s - 43.52s |  when working with different clients that it's a general thing in the security
43.52s - 47.62s |  community that it's kind of this thing that's hard to understand and we prefer
47.64s - 52.14s |  keeping our infrastructure on the, like, legacy IP version, which it actually is,
52.14s - 56.22s |  uh, when you're working with IPv4. And so when going through this process of
56.22s - 61.36s |  wanting to understand IPv6, what really happened was that, um, I, I, I realized
61.36s - 64.90s |  after going through everything that, uh, the reason that it was so hard is that
64.90s - 70.56s |  because over the years, IPv4 has gotten so many like extensions and natting and
70.56s - 74.16s |  other technologies that you're putting in place that is, they're making the
74.18s - 78.98s |  internet work, but really they're abstracting from what was actually intended. And
78.98s - 83.12s |  so when, when understanding IPv6, what we really need to do is to dial back,
83.12s - 87.62s |  understand IPv4 and from that it's really easy to jump the next step because then
87.62s - 92.80s |  IPv6 is just a couple of more bits and a different way to write things. Um, so
92.80s - 97.80s |  yeah, I hope, uh, this is gonna be useful to you. So, um, with IPv4 all of my
98.36s - 104.52s |  knowledge had come from practical use and that boiled down to something like the
104.52s - 109.46s |  following. And so this might also be the case for some of you. My understanding was
109.46s - 114.80s |  that this was an IP address, which it also is, and that the subnet mask is probably
114.80s - 119.80s |  255.255.255.0, but you know, only DHCP really knows. And the last one was that the
122.20s - 127.78s |  default gateway was the same IP as my IP, but just with a one at the end. So,
128.26s - 132.72s |  these are not like set in stone. They're, that, that's not actually how things work,
132.72s - 136.96s |  but it's so close to like the configuration that you see most of the times that you can
136.96s - 142.24s |  probably wing it by doing something like that. And so that continued on to being that an
142.24s - 147.24s |  IP address is something, a private IP address is one that starts with 192.168.something,
149.64s - 154.38s |  that's something, or 10.something, that's something, that's something. And I didn't
154.38s - 158.96s |  really understand why, I just knew that like, that was probably a private IP address and
158.96s - 163.96s |  the rest was the internet. And so the, this configuration that I'm showing up here, it's a
166.56s - 172.10s |  fine way to do it. Now, this, this is not gonna work if we're working with a network
172.10s - 177.88s |  that's not like very standard or what we see in like all our home routers. And that's
177.88s - 182.44s |  where, you know, it becomes a problem and we try to set this up and then the network
182.44s - 187.38s |  doesn't actually work. Um, so specifically this configuration is limited to exactly
187.38s - 193.56s |  250 free client devices. And so you'll pretty quickly outgrow that for a private network. But
193.56s - 199.62s |  let's take a look at what these, at what these numbers actually mean. Um, so again, this
199.62s - 204.64s |  is an IP address. It consists of 4, we'll call them fields for now. 1, 2, 3, 4. And they
204.88s - 209.88s |  each can have a value between 0 and 255, giving us 256 possibilities for each field. And
212.98s - 216.92s |  now each of those numbers, they actually represent a binary value. We know that that's how
216.92s - 221.92s |  computers work. And so to represent 256 bits, uh, 256 possibilities in binary, you need 8
224.36s - 229.36s |  bits. And so every one of the fields, um, is 8 bits. And that's what's called an octet.
229.66s - 234.66s |  Like we have 1 octet, 2 octets, 3 octets, 4 octets. And that gives us 32 bits. Every IPv4
238.56s - 243.56s |  address is 32 bits and that's full stop. So next up is the subnet mask. Here we have
244.74s - 250.14s |  255.255.255.0 which is a very common configuration as I mentioned in like most of our
250.14s - 255.78s |  home routers. Um, and so what the subnet mask actually does is that it makes your computer
255.80s - 260.14s |  understand where to send a packet. If I need to send a packet to another machine that's on the
260.14s - 267.08s |  same network as me, on the same WiFi or behind the same router, it's in the same LAN, um, I
267.08s - 272.26s |  need to send it out on that. But if I want to send a packet somewhere else, a server on the
272.26s - 276.56s |  internet for instance, I can't reach that. And so I have to send it to my router. But there
276.56s - 280.52s |  needs to be some kind of mechanism where the computer can distinguish whether the packet
280.54s - 286.38s |  goes one way or the other way. And that's what the subnet mask does. Um, so if we convert this
286.38s - 291.38s |  to binary, what we see, I didn't have to use a calculator for this by the way. Um, we see
294.22s - 299.56s |  that this is what the subnet mask becomes and so part of the reason why subnet masks can be a
299.56s - 305.34s |  bit like intimidating to understand is because 255.255.255.0 doesn't really mean
305.34s - 309.44s |  anything. It's only when we look at the binary representation that we can understand what the
309.46s - 314.70s |  computer is actually doing. So let's take a look at that. On top is the IP address of my
314.70s - 320.40s |  machine and on the bottom is the IP address that I want to speak to. And so in between those, we
320.40s - 325.68s |  put the subnet mask. And so basically what the computer does is that it takes the, the
325.68s - 331.52s |  subnet mask, it looks at it, if there's a one, the top one and the bottom one have, have to
331.52s - 336.96s |  match. So if we look at the first ductet of the subnet mask, all of the first eight bits in
336.98s - 342.92s |  both IP addresses have to match. If they do match, the packet is destined for our local network.
342.92s - 347.52s |  If they don't match, we have to send it off to someone else who can figure out how to get the
347.52s - 353.50s |  packet where it needs to be. Um, so we take a look at the first, they have to match. All first
353.50s - 359.14s |  eight bits match. The second ductet, okay, they're all ones, so they all have to match. We look
359.14s - 364.38s |  at the two addresses, they all match. The third ductet of the subnet mask are, are all ones, so
364.40s - 368.34s |  they all have to match. And we look at the source address, my IP address and the
368.34s - 373.34s |  destination address. Um, and they also match. And so for the last ductet of the subnet mask,
376.62s - 381.68s |  after checking all of them, we see that they don't actually have to match, which is very
381.68s - 387.26s |  convenient because they, they don't match. So, uh, that's fine. This packet is destined for my
387.26s - 393.90s |  local network, so I can just send it out on the network. Um, but if we change that, I've
393.92s - 398.66s |  changed the destination address to the address that Google.com was resolving to at one point
398.66s - 404.26s |  when I made this presentation. Um, and so when we look at this, already from the beginning, we
404.26s - 411.04s |  see that the, our subnet mask says that if a packet is destined for the local network, all of
411.04s - 416.04s |  the bits in the first ductet have to match. And we see that that's not the case. So we already
416.04s - 422.22s |  know by just checking the first one, um, that this packet is not destined for the local
422.24s - 427.48s |  network. And so because of that, we send it to the default gateway, which is the last
427.48s - 434.48s |  parameter that we, we configure. And so I'm going to do something that's a little bad. Um, I'm
434.48s - 439.92s |  going, gonna go back to the previous slide and I'm gonna remove these so that we only have the
439.92s - 445.72s |  subnet mask left. And I know that I just told you how all of this works, but we don't really
445.80s - 450.80s |  need it anymore. So because subnet masks are confusing, uh, when there's a much, much shorter
453.60s - 458.58s |  way to actually write this. If you look at the, the binary representation here, it's very
458.58s - 464.08s |  simple. It's a bunch of ones and then it's a bunch of zeros. And so in modern network, um, the,
464.08s - 468.92s |  the ones and the zeros in the subnet mask, they have to be contiguous and they always have to
468.92s - 475.52s |  start with the ones and then they have the zeros. So the easier way to represent this would be
475.52s - 480.80s |  to just write it in something called CIDR notation. And so the only thing that you do is
480.80s - 486.76s |  that you count how many ones do we have before the zero. In this case, we have eight, we have
486.76s - 494.08s |  16 and we have 24. And so that because of that, instead of writing both our IP address and our
494.08s - 500.08s |  subnet mask, we can just write our IP address in CIDR notation. And by that we're actually
500.12s - 505.12s |  representing both values. So we end up with 192.168.1.27 slash 24. Um, and this is going to
508.76s - 516.33s |  be really important for when we take a look at IPv6. So we get away with that and we still
516.33s - 521.61s |  can't avoid, uh, having to specify a default gateway, but at least this is much, uh, more
521.61s - 528.18s |  condensed and easier to understand and not as redundant as what we were looking at before.
528.22s - 533.64s |  So before we use all this knowledge to learn about IPv6, I just want to quickly go over the
533.64s - 538.72s |  layout of the current allocations of the IPv4 internet. And so that essentially means how
538.72s - 544.96s |  many addresses do we have and what are they used for. So this one is from January 2023. Not
544.96s - 548.60s |  much has changed in the meantime. Um, and what's very interesting is that you can see it's
548.60s - 555.44s |  very, very, very full except for the two boxes up in the corner. Um, it's, it's, it's, it's
555.46s - 562.24s |  taken, um, like they're small, uh, minor allocations within like other networks that you
562.24s - 567.24s |  might still be able to get, uh, from like the regional, uh, internet registries. Um, but it's
569.12s - 574.12s |  full, like this is very, very full. Um, and so, um, then someone might say and have also said
577.46s - 581.96s |  that, oh, but why don't we just repurpose the multicast space or the future use space? Like
581.98s - 587.72s |  they made a very nice convenient block up in the top, right? So why don't we just like use
587.72s - 592.56s |  that? Like it's for future use. So we'll just start like using it. Um, and so the problem is
592.56s - 597.96s |  that a lot of devices have actually have hard coded that, uh, these addresses cannot be used
597.96s - 602.64s |  or some engineers decided that they could use them to do like some internal stuff. And so
602.64s - 606.68s |  using them for actual IP addresses is not, uh, something that can actually be done. Like I
606.70s - 614.04s |  would obviously never name anyone who would do this. Um, but, um, oh, I, I, I might be some
614.04s - 620.72s |  technical glitches or something. Um, that was completely unrelated to what I just said. Um,
620.72s - 626.98s |  so a challenge for all of you, by the way, how many, can someone count how many times USDOD
626.98s - 632.06s |  appears in like the internet routing table? It's a lot of times and it's like, okay, I mean, do
632.08s - 638.12s |  they need that many IP addresses? Uh, what do you say? Fort motor company has a slash eight.
638.12s - 644.82s |  And so from what we talked about before, we know that that means that the first octet is set
644.82s - 650.30s |  like the number before the first dot of the IPV4 address. In this case it would be 19. The
650.30s - 656.90s |  rest is theirs. So every public IPV4 address that starts with 19 belongs to Fort motor
656.92s - 663.52s |  company. Now we have less than 256 of those to share between all the people on the planet. So
663.52s - 668.52s |  Fort, the car company, they own one 223rd of the internet. And that takes me to my point, it's,
672.60s - 677.60s |  it's unsustainable. Um, so after knowing all of this, we know it's 32 bits, like this is an IPV4
680.64s - 686.78s |  address. And you look at it and you're thinking, oh, this would all be solved if we just had
686.78s - 693.02s |  more bits, like double the bits. That's a lot of bits. That's 64 bits. And that would give us
693.02s - 697.86s |  more addresses. Sure. But if we go back and look at the allocations of the IPV4 internet, we
697.86s - 703.94s |  see that not only is it very full, we also see that the same entities appear multiple times,
703.94s - 710.48s |  essentially meaning that people run out and then they grab like another block. And so it would
710.48s - 716.22s |  be really cool if we could make a system that had so many addresses that as soon as we make an
716.22s - 721.76s |  allocation, the person that we've given it to will never outgrow it. Like we'll just give them
721.76s - 728.00s |  so ridiculously many IP addresses that you'll only ever need one block that's gonna show up in
728.00s - 733.00s |  like the internet routing table. And so 128 bits, like it's not double, it's double the double and
735.88s - 742.08s |  it's a lot of bits. And so just to be sure that we're all on the same page, um, when we add a
742.08s - 748.02s |  bit, it's not double the IP address. When we add, when we say, when we go from 32 bits to 64
748.02s - 753.62s |  bits, it's not double the addresses. When we go from 32 bits to 33 bits, it's double the
753.62s - 759.40s |  addresses. So every time we add a bit, uh, 33 bits is double the IPV4 internet, 34 bits is four
759.40s - 765.94s |  times the IPV4 internet, 35, eight times that. And you get the drill, but 128 is like a lot of IP
765.94s - 771.98s |  addresses. I think someone told me that the IPV6 internet is so huge that, uh, there's
771.98s - 778.28s |  addresses enough to represent every grain of sand on, on the globe or every star in the visible
778.28s - 785.62s |  universe or something crazy like that. Um, yeah. So that brings me to our next section. So to
785.62s - 790.72s |  represent 128 bits, we can't use the same system with octets as we used in IPV4 and just
790.72s - 795.72s |  separate them with a dot. It would look horrible. So IPV6 addresses work a bit differently. And
800.28s - 805.40s |  so this is the IPV6 address that again, Google.com resolved to at some point when I was
805.40s - 810.20s |  doing this presentation. And it looks way more confusing than an IPV4 address. And that's
810.20s - 814.80s |  like the big thing that I hear with people in IPV6, like, oh, I look at the addresses and like
814.82s - 821.12s |  my head starts hurting and it's so confusing, which is true. But, um, what is really cool is
821.12s - 825.84s |  that we can start breaking this up and understand how it works. And suddenly it goes from
825.84s - 830.84s |  being like a random string of like colons and letters and stuff to actually making, uh, to
833.28s - 838.32s |  actually making sense. So let's try to take a look at that. Um, first of all, the numbers
838.32s - 843.42s |  there in hex, uh, and we'll get there in a second. Um, but before we go that, I'm just gonna
843.44s - 848.84s |  tell you that we have eight fields and each of them are 16 bits. So you have 16 bits, then a
848.84s - 855.32s |  colon, 16 bits, then a colon, 16 bits, you get the drill. Um, and now, so to make this easier,
855.32s - 860.32s |  we're just gonna have a look at the last field. Um, and so the thing is that we have 16
862.76s - 868.36s |  bits here and we know that the whole IPV4 internet is 32 bits. So actually with only two
868.38s - 873.38s |  fields from an IPV6 address, we can already represent all addresses in the IPV4 internet.
875.66s - 880.66s |  Um, yeah. So, uh, in hex, just to understand hex, we count from zero and then we count up to F.
884.36s - 889.36s |  And so that's done by 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, 0, 1, 2, 3, 4, 5, 6, 7, 8.
899.14s - 904.14s |  9, A, B, C, D, E, F, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. And it just keeps
911.44s - 916.02s |  counting like that. Um, very important to understand to get like how these addresses are
916.02s - 921.02s |  actually, um, why they look so weird. Okay. Does that make sense? Okay. So, now that we
923.66s - 927.32s |  understand the basics of how hex numbers work, let's try to understand what information we
927.32s - 933.76s |  can extrapolate from the different parts of an address. Um, it's not a rule, but like most
933.76s - 940.70s |  IPV6 addresses consists of a host, that's the first orange part, and then an, uh, sorry, a
940.70s - 945.70s |  host, the blue last part, and the network, the first orange part. Um, and, um, they're often
947.84s - 954.04s |  separated in the middle by 64 bits for the network, here in orange, and, uh, 64 bits for the
954.04s - 959.04s |  host, here in blue. Um, so what we learned about in the IPV4 section, this would be a slash 64,
961.60s - 966.62s |  uh, because the blue part is our network, when we, uh, have an address that has the same first
968.94s - 974.26s |  half as ours, we can send it to our local network, if it's an address outside of that, we have to
974.26s - 979.26s |  send it to someone who knows how to pass it on, uh, usually our default gateway. So, um, the
980.02s - 985.02s |  reason that having 64 bits in the host, uh, in the, yeah, in the host part, um, is actually
990.26s - 995.26s |  that it allows for some pretty cool features. Um, and so, one of them is stateless, address
997.00s - 1002.14s |  auto-configuration, and the other one is privacy extensions. And so I'm just gonna go over
1002.14s - 1007.08s |  what they are, because then we'll actually see how, like, we go from having a network, and
1007.10s - 1012.48s |  then actually setting the last part. Because when you look at an IPV6 address, unless you've
1012.48s - 1017.48s |  set it statically, you're not gonna see 0, 0, 0, 0, 0, 0, 1, A, 0, 0, 0, 0, uh, and, um,
1019.82s - 1025.76s |  counting up like that. Um, so what stateless address, uh, configuration is actually really
1025.76s - 1031.42s |  cool, um, it uses the 64 bits that we have available as the subnet of the network, um, and
1031.44s - 1037.82s |  then it generates an IP address by itself, just from knowing the first network part. And the
1037.82s - 1043.86s |  process is called EUI64, and what it does is that it takes the, uh, 48-bit MAC address of the
1043.86s - 1049.20s |  network interface, and then it expands it to 64 bits. So by that, we have, like, our network,
1049.20s - 1055.00s |  which is the orange part, and then the last part is decided, uh, by calculating it based on
1055.02s - 1060.02s |  the MAC address that the interface has. Um, and so, without doing any DHCP or anything, by
1063.26s - 1068.80s |  just knowing the network that we're working on, our computer can pick an address for itself,
1068.80s - 1073.70s |  because MAC addresses are pretty unique, it's unlikely that it's gonna clash with anything,
1073.70s - 1079.24s |  it's supposed to be unique, and, um, by that, we can just pick an address by ourselves, we
1079.26s - 1085.66s |  don't need to be told what IP address is available on the network. Um, and the second cool
1085.66s - 1090.30s |  feature is privacy extensions, so with pretty much every device on the versions of, on version
1090.30s - 1096.34s |  6 of the internet, um, you're suddenly vulnerable to tracking. If someone, maybe someone
1096.34s - 1101.38s |  realized before that if you have the same MAC address between every network that you move
1101.38s - 1107.82s |  across, you'll be easy, pretty easy to track. And so, uh, that would be pretty, pretty, pretty
1107.86s - 1112.54s |  problematic that, like, you can be correlated across, like, many different networks. Um, so
1112.54s - 1117.54s |  what privacy extensions does is that it works by changing your IP address regularly, um, so we
1119.40s - 1124.42s |  have the 64 bits in our host part, and they just change, like, over time. You visit a website, it
1128.06s - 1132.66s |  uses one address, you visit another website, it uses another address, after some time it
1132.66s - 1138.94s |  changes to a third address, and it, it cycles through them, which is pretty cool. Like, it, it
1138.94s - 1143.94s |  gives, uh, an increased level of privacy. Um, so the reason, um, yeah. And then I just
1152.66s - 1157.36s |  wanted to mention, uh, the last really cool feature about IPv6 is that when, when you have
1157.36s - 1163.00s |  this huge space, when you have 64 bits to work with, um, you do get the thing that, like,
1163.00s - 1168.48s |  suddenly your, the subnets that you're making, the smallest meaningful subnet that you're
1168.48s - 1173.92s |  making, 64 bits, which is very standard, um, you can make them smaller, but, like, you make a
1173.92s - 1179.96s |  64-bit subnet, and suddenly it can contain pretty much an endless amount of addresses. Like, if
1179.96s - 1185.62s |  you're working with IPv4, you have to decide, okay, do we want this network to be a slash 64?
1185.62s - 1191.36s |  Then we have 250 free addresses that can join that network. With IPv6, you just always do a
1191.36s - 1196.36s |  slash 64. Did I say 64 the other time? Yeah. With IPv4, uh, you'll usually make a slash 24
1199.60s - 1205.68s |  network for your home network that limits it to 250 free addresses. Um, and then, like, if
1205.68s - 1209.68s |  you're an enterprise setting or something, you need to start making address plans to make sure
1209.68s - 1214.02s |  that there will be enough addresses, uh, considering what it is that you want to do, and
1214.02s - 1217.66s |  then maybe you get an office in the future, and then suddenly, ah, it doesn't fit into the
1217.68s - 1222.26s |  address plan, and then you're kind of screwed because you're, you're out of addresses. With
1222.26s - 1228.44s |  IPv6, you always, you, you can always make a slash 64 subnet, and you basically are able to
1228.44s - 1233.34s |  put in, there, there's not a limit of 250 free or however many you've specified when you
1233.34s - 1238.78s |  designed a network. Um, you can just have pretty much an endless amount of machines be on
1238.78s - 1247.92s |  that network, which is a pretty cool feature. So, um, now that you know how to read an IPv6
1247.92s - 1252.76s |  address, looking at just, like, the same plain thing as we did before should hopefully be
1252.76s - 1258.80s |  easier, um, and, and hopefully, also, you know, not just easier to understand, but also easier
1258.80s - 1264.36s |  to remember, uh, because if you work in the same environment, uh, it's very likely that the
1264.36s - 1271.64s |  first 64 bits are going to be the same. Uh, we know that, like, uh, depending on where you are
1271.64s - 1277.40s |  geographically, or where you got your IP addresses from, the first part of the, the, the
1277.40s - 1283.40s |  range that you got is usually going to be the same. So, as you work with this, things are going
1283.40s - 1289.44s |  to be pretty, uh, pretty familiar. Um, and then you know the first part, and then the last part
1289.44s - 1293.80s |  is just up to you when you design the network. It's either going to be decided by the host
1293.80s - 1298.80s |  itself, or maybe you set it statically, and it actually becomes something like 0, 0, 0, 0, 0, 0,
1298.80s - 1307.12s |  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1. Um, so, uh, let's just see how you should handle these
1307.12s - 1312.92s |  addresses when using them. Um, you heard me say, you heard me mention, like, a lot of zeros
1312.92s - 1317.92s |  there. And so what's really cool is that we're actually allowed to do this, where instead of
1317.92s - 1324.44s |  putting four zeros in each field, we just put one, like a zero is a zero. And then, like,
1324.44s - 1328.44s |  moving on from that, like, we're also allowed to do something else. We have three fields of
1328.44s - 1333.80s |  zeros here right next to each other. Um, and we're allowed to shorten that by doing a double
1333.80s - 1342.04s |  colon. Uh, we know that an IPv6 address is 128 bits. So, if we see an address and we have a
1342.04s - 1347.64s |  double colon, it means that everything between, you just expand it up to 128 bits in that
1347.64s - 1354.20s |  section with zeros. And then you have, like, the full IPv6 address. Uh, you can only have one
1354.20s - 1359.00s |  double colon, though. So, that's very important to, uh, to know. Because if you had multiple
1359.00s - 1364.28s |  double colons, it wouldn't know, like, where the section in between them, uh, would go with all
1364.28s - 1370.44s |  the zeros. Um, so, and I think this is maybe what trips up a lot of people. Like, you both have,
1370.44s - 1376.12s |  like, hex numbers and you have colons in your IP address and you have double colons and then you
1376.12s - 1383.24s |  have, like, slashes. And then it just becomes, like, way too abstract from what you're familiar
1383.24s - 1393.00s |  with. Um, yeah. So, the next thing that would probably be really good to just mention is how
1393.00s - 1399.56s |  do you browse the web with this? We know that protocol handlers, HTTP, HTTPS, use colons. So,
1399.56s - 1405.24s |  if you suddenly have a protocol handler, HTTPS colon slash slash. And then you have this address,
1405.24s - 1413.96s |  like, that seems to, like, mess something up. Um, so, the problem with pasting it, yeah,
1413.96s - 1418.04s |  in the address bar is what I just mentioned. Like, colons are used to indicate protocol handlers and
1418.04s - 1422.68s |  used to indicate port numbers. So, putting in an address with a bunch of colons is just gonna make
1422.68s - 1427.72s |  everything more confusing. Um, so, that's not going to work. And so, what we instead do is that
1427.72s - 1434.12s |  we put this address in square brackets. And then we press enter. And then we browse the web. Um,
1434.12s - 1438.84s |  so, that's just, like, a good thing that's good to be aware of because you understand IPv6. You
1438.84s - 1443.00s |  know how the addresses work. You see this. You're, like, oh, I want to try to browse to an IPv6
1443.00s - 1447.40s |  address. And then it doesn't work because your browser's, like, what are all these colons doing?
1447.40s - 1455.40s |  Um, but this is the way to do it. So, lastly, in this section, I'm just gonna, uh, end it the
1455.40s - 1461.48s |  same way that I did with the other one by showing you a map of the internet. And so, in this case,
1461.48s - 1467.32s |  it's IPv6. And as you can see here, our idea of using double double the amount of bits,
1467.32s - 1471.72s |  as in an IPv4 address, it achieved what we wanted. Like, everyone seems to have pretty much
1472.28s - 1480.60s |  one large IP block. And it's not a scattered mess that we saw with IPv4. Um, and so,
1480.68s - 1490.36s |  essentially, uh, this is not even the whole IPv6 internet. This is just a part of the IPv6
1490.36s - 1497.40s |  internet that we have allocated today. So, uh, people say, will we run out of addresses?
1499.24s - 1504.20s |  And it seems like we're only having a couple of seconds left. Will we run out of addresses? No,
1504.20s - 1510.52s |  because this is one eighth of the IPv6 internet. And we can fuck up seven more times until we're
1510.52s - 1512.52s |  out. Thank you very much.