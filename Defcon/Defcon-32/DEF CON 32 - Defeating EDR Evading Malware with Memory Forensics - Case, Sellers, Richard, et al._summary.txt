**Presentation Overview**
- Topic: Defeating EDR Evading Malware with Memory Forensics
- Speaker: Andrew Case, core developer on the Volatility Memory Analysis Project
- Duration: Approximately 43 minutes

**EDR Software and Malware Evasion**
- **Endpoint Detection and Response (EDR)**: Monitors system state for malware and attacker activity
- **Malware Evasion Techniques**: Code injection, lateral movement, credential theft
- **EDR Limitations**: Operate at lowest levels of hardware and software

**Memory Forensics Techniques**
- **Research Goal**: Detect EDR bypasses used by malware
- **Memory Forensics**: Critical for detecting malware that does not touch the file system
- **Volatility Framework**: New plugins developed for memory analysis

**EDR Monitoring Techniques**
- **Kernel Callbacks**: Notified on process/thread start or DLL load
- **Event Tracing for Windows (ETW) and AMSI**: Monitor system activities
- **System Call Monitoring**: Focus of the talk, as it's a critical EDR technique

**Malware Bypass Techniques**
- **Module Unhooking**: Malware unhooks system call handlers to evade detection
- **Direct System Calls**: Malware sets up registers and makes system calls directly
- **Indirect System Calls**: Uses legitimate syscall instruction but bypasses EDR hooks

**EDR Bypass Detection**
- **Volatility Plugins**: Developed to automatically detect bypass techniques
- **Detection Methods**: Compare system call handler implementations, identify anomalies
- **Additional Techniques**: Identify suspended processes, debug register abuse

**Conclusion**
- **Research Impact**: Comprehensive analysis of EDR bypass methods
- **White Paper**: 19-page document available detailing the research effort
- **Further Reading**: Encouraged to read references and the white paper for detailed understanding