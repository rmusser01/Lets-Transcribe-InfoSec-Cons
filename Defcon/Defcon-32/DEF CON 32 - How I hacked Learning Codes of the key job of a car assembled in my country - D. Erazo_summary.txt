**Introduction to Learning Codes and Vulnerabilities**
- **Learning codes** are used in car key systems instead of rolling codes.
- The use of learning codes is vulnerable, similar to fixed codes.
- **Hardware hacking** was used to detect learning codes in key jobs.
- **HS2240 integrated circuit** was identified in the key system.
- The learning code can be duplicated using **HackRF SDR**, allowing car access without the original key.

**Speaker Background**
- The speaker is a **penetration tester** from Ecuador.
- Conducts **hardware security research** in free time.
- Manages a YouTube channel called **Reverse Everything** to share research.

**Introduction to Hacking Methods**
- Demonstrated unlocking cars using **learning code vulnerabilities**.
- **Reverse engineering** was used to understand how learning codes work.
- The **Auto RAF Killer** tool was developed to exploit these vulnerabilities.

**Technical Details of Learning and Fixed Codes**
- **Fixed codes** are soldered to the board; learning codes are programmed.
- **Learning codes** can be saved in the microcontroller's memory.
- Each car and key has a unique learning code.
- The system uses **ASK modulation** at 370 MHz.

**Demonstration of Signal Analysis**
- Signals are recorded and demodulated to understand their structure.
- **Logic analyzers** are used to capture transmitted signals.
- The structure of a signal includes **preambles and learning codes**.

**Hacking Tools and Techniques**
- Developed a **brute force attack** using a custom-built radio block.
- The attack is customizable, allowing setting of parameters like signal delay.
- **AutoRefKiller** tool unlocks cars using learning, fixed, or rolling codes.

**Backdoor Installation in Keyless Entry Systems**
- **Microcontrollers** save signals in memory when in programming mode.
- Custom signals can be sent to create a backdoor.

**Collision Problems and Exploits**
- High probability of code collision due to limited code space.
- Multiple cars might share the same learning code due to this collision issue.

**Final Exploit Tool**
- A Python-based tool with 1,300 lines of code was developed.
- Capabilities include **brute forcing**, backdoor code discovery, and replay attacks.
- Tool allows **custom parameter settings** and roll jam attacks.

**Conclusion**
- The speaker highlighted the vulnerabilities of learning codes in car security systems.
- Emphasized the ease of exploiting these vulnerabilities with the right tools.