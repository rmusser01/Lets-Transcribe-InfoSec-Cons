**Presentation Overview**
- Presentation title: "DEF CON 32 - Bug Hunting In VMware Device Virtualization"
- Authors: JiaQing Huang, Hao Zheng, Yue Liu
- Focus: Unveiling a new attack surface in **Device Virtualization** within **VMKernel**
- Discovery: 8 vulnerabilities, 3 with **CVE numbers**, 5 confirmed by **VMware**

**VMware Virtualization Architecture**
- **VMM loading process** and **data sharing** between **VMM** and **VMX**
- **UserRPC**: Facilitates communication between **Hypervisor** and **Host**
- Virtual device emulation in **USB system**: Host controller, **VUsb middleware**, **VUsb backend devices**

**Security Issues and Vulnerabilities**
- **USB System Vulnerabilities**:
  - **Host Controller**: Uninitialized memory issue
  - **VUsb Middleware**: Use-after-free vulnerability
  - **Backend Devices**: Out-of-bound access in system API
- **SCSI Device Emulation**:
  - Differences between **VMware Workstation** and **ESXi**
  - Design flaws in disk device emulation

**Reverse Engineering VMware Hypervisor**
- Importance of **VMX binary** in virtualization
- Debugging tips for **VMware Workstation** on Windows
- **Shared Area Memory**: Mechanism for data sharing between **VMX** and **VMM**
- **Cross Page**: Memory region for storing context between **VMM** and host

**Bug Hunting Techniques**
- Approach to finding bugs in **USB** and **SCSI virtualization**
- Importance of understanding **VMware's architecture** and **reverse engineering**
- Techniques for analyzing **physical memory access** and **device emulation**

**New Attack Surfaces**
- **VMkernel** vs **VMX**: Different attack surfaces
- **Out-of-bounds vulnerabilities** in **VMX** and **VMkernel**
- **SCSI command** vulnerabilities: **Write16** and **Unmap** commands

**Conclusion**
- Complexity of defending against attacks in virtualization systems
- Potential for future attack scenarios
- Encouragement to explore further vulnerabilities through reverse engineering