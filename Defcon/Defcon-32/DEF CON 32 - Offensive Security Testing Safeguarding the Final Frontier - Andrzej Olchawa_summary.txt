**Introduction to Offensive Security Testing in Space Missions**
- Presentation by Andy on offensive security testing
- Focus on the **Mission Control System** as a key software component
- Shift from exclusive mission control rooms to remote management increases security vulnerabilities

**Mission Control System Vulnerabilities**
- Components are interconnected; mission control system is the main interface
- Vulnerable due to being the most exposed component in the ground segment
- Remote operations due to **COVID** introduce new attack surfaces
- Existing software is often outdated, carrying common vulnerabilities

**Community Response to Security Threats**
- Strategies expanded to include **security policies** and requirements
- Despite efforts, inadequacies remain without **offensive security testing**

**Research Findings on Mission Control Systems**
- Vulnerabilities found in open-source systems like **NASA OpenMCT** and **YaMCS**
- NASA OpenMCT: Prototype pollution, **XSS**, and **CSRF**
- YaMCS: Directory traversal, arbitrary file deletion, session hijacking, and more
- NASA AIT core: **SQL injection**, local code executions, and missing encryption

**Exploitation Demonstrations**
- Demonstrations of **vulnerability chaining** leading to severe impacts
- Example of combining directory traversal, session hijacking, and XSS for data retrieval

**Importance of Offensive Security Testing**
- Offensive security testing is crucial throughout the development lifecycle
- Combining vulnerabilities can lead to significant breaches
- Organizations should integrate offensive testing to preempt adversaries

**Conclusion**
- Emphasis on the need for proper offensive security testing in space applications
- Encouragement to hire services or develop in-house capabilities for thorough testing
- Research and findings have been published and are available for further review