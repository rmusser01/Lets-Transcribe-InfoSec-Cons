{
  "webpage_url": "https://www.youtube.com/watch?v=jALLbBisg_8",
  "title": "DEF CON 32 - Troll Trapping Through TAS Tools  Exposing Speedrunning Cheaters - Allan Cecil",
  "description": "Trolls cheating in video games by passing Tool-Assisted Speedruns off as human effort break leaderboards and stifle speedrunners. Why do they do it when they could make a cool game hack or TAS to show off their work, and how do you trap these trolls? The answer is to use their own tools against them, often with popcorn bucket worthy results like taking down Guinness World Records. From a TASVideos member taking on 1980's Dragster cheat Todd Rogers, a passing mention of Billy Mitchell, and the TASBot team investigating Super Mario Maker shenanigans, this talk covers several notable cheating incidents and concludes with a systematic takedown of a troll that chilled the Diablo speedrunning community for more than a decade.\n\nThis talk includes several investigations I have been a part of in some capacity and will ultimately include additional references in the coming months; I've broken the references out by game, presented in Markdown format like the rest of this document:",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 2629,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

2.86s - 15.10s | This text was transcribed using whisper model: large-v2

 Hello, DEF CON! I am DuangoAC, Keeper of TASBOT, this cute guy right over here, I am so thankful
15.10s - 18.42s |  to not be able to see you because the lights are really bright, but I'm assuming you're
18.42s - 23.26s |  in the audience. Uh, thank you very much for showing up. First of all, this is a dynamic
23.26s - 28.70s |  talk that is changing by the minute. Uh, things have been developing rapidly over the course
28.70s - 33.18s |  of the last week, which I didn't anticipate. So, uh, we're gonna have a lot of fun walking
33.18s - 38.74s |  through this. Uh, first of all, on my screen, I have a paper that I, we just released in
38.74s - 47.10s |  the last seven minutes. Uh, it is at diablo.tas.bot, and you are welcome to follow along from your
47.10s - 51.66s |  own personal device if you so choose to do so. Uh, what we have done is put together
51.66s - 57.82s |  a document that we'll be talking about later on in the talk. Uh, there is a lot to cover
57.82s - 62.46s |  of, of some background of what I'll be doing here. Uh, first of all, if you don't know
62.46s - 69.02s |  me, I am known for a variety of weird things. I am a senior ambassador on-site staff for
69.02s - 75.90s |  TASvideos.org. I am also the founder of the TASbot organization that does tool-assisted
75.90s - 81.66s |  speedrun content on real hardware at places like Games Done Quick events. Uh, there's
81.66s - 86.22s |  some interesting stuff that I've managed to get into over the course of the last few years,
86.22s - 92.02s |  and I'm gonna quickly go over some highlights from some past things that have happened.
92.02s - 96.82s |  Some of them are rather bizarre. Uh, there are things that I didn't expect would happen
96.82s - 104.22s |  that did. Um, for instance, in 2017, there was someone named Todd Rogers who cheated
104.22s - 111.10s |  at a video game. He cheated all the way back in the 80s, but we found out about it in 2017.
111.10s - 118.62s |  And getting involved in that little bit of, of intrigue started a process of, uh, aligning
118.62s - 124.82s |  me in weird ways of trying to help take down cheaters in speedruns, which is not something
124.82s - 128.86s |  I expected to do. I'm used to making them and playing them on a real console for charity.
128.86s - 134.10s |  Uh, so, so this talk is actually very different than most of the other talks I've given because
134.10s - 139.98s |  it's really a lot more about finding something interesting, going, hmm, that's not right.
139.98s - 144.30s |  And then somehow getting attached to these investigations and getting sidelined off in
144.30s - 151.30s |  some weird project. So, I want to talk to you about what happened in 2017. In the 1980s,
151.30s - 157.82s |  a game for the Atari 2600 came out named Dragster. And a runner at the time, someone who was
157.82s - 163.20s |  playing video games competitively named Todd Rogers, set a record of being able to complete
163.20s - 170.22s |  the game, allegedly, in 5.51 seconds. In other words, the fastest amount of in-game time
170.54s - 176.90s |  to, to beat the game effectively. Now, this ended up ultimately becoming a Guinness Book
176.90s - 182.18s |  of World Records because this record that was on Twin Galaxies went unbeaten for over
182.18s - 189.18s |  three decades. And there was an effort in about 2016-2017 by tool-assisted speedrun
190.54s - 195.70s |  author and TASOvideos member OmniGamer to make a tool-assisted speedrun of the game.
196.06s - 200.82s |  It's a little bit of context. You might have played a game like Metroid or Super Metroid
200.82s - 205.02s |  in the past where you get to the end of the game and it will show you how long it took
205.02s - 209.74s |  you to complete the game. It shows a timer and sometimes even different graphics depending
209.74s - 213.50s |  on how quickly you've managed to finish the game. So, speedrunning started to become a
213.50s - 220.06s |  thing based on games that encouraged you to try to beat them quickly. And a normal speedrun
220.06s - 224.94s |  with human effort involves the process of grinding through trying to play a game as
224.94s - 231.40s |  quickly as possible. And from that came an off, kind of a rather interesting branch of
234.96s - 239.96s |  doing this, but without any human limitations of skill, reflexes, memory, luck, things like
239.96s - 244.74s |  that. And that's called a tool-assisted speedrun. One of the most famous examples of those is
244.74s - 250.14s |  from 2003, someone named Morimoto released what was called a Super Mario Brothers time
250.14s - 255.78s |  attack, Super Mario Brothers 3 time attack run. Uh, it was not labeled. Uh, it was ridiculous
255.78s - 261.02s |  because it had Mario jumping all over the place, randomly getting 99 lives, never dying,
261.02s - 265.56s |  getting really close to enemies. And there was no labeling to say that it was a tool-assisted
265.56s - 270.90s |  speedrun. And it caused a lot of, you know, pre-YouTube days controversy. Just a WMV file
270.90s - 275.40s |  floating around the internet didn't have enough context to explain it. It was a tool-assisted
275.40s - 279.98s |  speedrun and ultimately something that someone named Bizkwit developed NES videos, which
279.98s - 285.42s |  became TAS videos, to host tool-assisted speedruns like that. In other words, you can play a
285.42s - 290.62s |  game as a human or you can use tools to play the game inside of an emulator. Tools like
290.62s - 296.44s |  save states, being able to stop at any point and back up and try a section again. Tools
296.44s - 302.44s |  like frame advance or slow motion, being able to go forward one video frame at a time. Uh,
302.44s - 308.24s |  being able to, uh, record a movie while you're going and record all of the button presses.
308.24s - 313.44s |  So that's, that's kind of the difference between a speedrun and a tool-assisted speedrun. And
313.44s - 319.08s |  you see, when OmniGamer, back to our Dragster story, attempted to make a tool-assisted speedrun
319.08s - 325.28s |  of Dragster, he ran into a minor problem. Even with superhuman precision, he was unable to
325.28s - 331.86s |  match Todd Rogers' time. Which raised some questions. So, how exactly did Todd Rogers
331.86s - 338.30s |  manage to beat Dragster in 5.57 seconds? Uh, in the process of this investigation, OmniGamer
338.30s - 342.94s |  looked at the source code, the ROM, from the cartridge. So we took the actual physical
342.94s - 348.74s |  cartridge, put it in a reader, pulled the contents of the ROM off, examined the way the code
348.74s - 353.88s |  worked, and determined that the fastest time that all versions of Dragster that we've ever
353.88s - 358.34s |  found, prototypes through released versions, all versions had the same algorithm that would
358.34s - 364.36s |  not allow for a time, a time of 5.51. In fact, the fastest speedrun time that was achievable
364.36s - 369.46s |  through the code was 5.57. And in that time frame, I had already started doing something
369.46s - 376.86s |  interesting with TaskBot. By 2013, I had formed a community of people taking tool-assisted
376.86s - 380.96s |  speedruns and playing them back on real hardware with our cute little mascot here. He looked a
380.96s - 385.74s |  little different at the time. He was based on a robot at the time. But at that time, I had
385.74s - 391.78s |  worked with a bunch of folks like True and Micro 500 and a bunch of other tools designers
391.80s - 397.24s |  that created what's called a replay device that pretends to be an Atari 2600 controller. And we
397.24s - 402.24s |  used TaskBot to play Dragster and beat the game on a real console with superhuman input. And
404.82s - 411.22s |  the fastest time we could achieve was 5.57. In other words, we used a real console, a real
411.22s - 417.90s |  cartridge, and superhuman input, and couldn't reproduce the time that Todd Rogers claimed. As
417.92s - 423.10s |  a result of that investigation, Todd Rogers' records were stripped from Twin Galaxies and also
423.10s - 429.54s |  from Guinness Book of World Records. It was a huge effort on OmniGamer's part to do all of the
429.54s - 433.74s |  research and to assemble all of that information. And I was really thankful to be able to play a
433.74s - 439.84s |  small part in being able to do the tool-assisted speedrun on real hardware. I didn't expect to
439.84s - 444.18s |  ever return to that world. That was back in 2017. And somehow this year, I've now had two
444.20s - 450.54s |  separate instances of getting embroiled in, hey, wait a minute, we're trying to do something, and
450.54s - 455.54s |  we think that something is cheated. The other time was in January, February, well, I guess March
455.54s - 461.42s |  timeframe of this year. The Super Mario Maker community was trying to complete every single
461.42s - 467.62s |  Super Mario Maker level before Nintendo shut the servers down. They had cleared all of the levels
467.62s - 475.42s |  that they knew about, except one named Trimming the Herbs by a level author named Ahoyo. And there
475.42s - 481.78s |  was a massive group of people trying to grind out beating this one 10-second long speedrun-oriented
482.14s - 486.02s |  Super Mario Maker level. And they couldn't do it. It was really challenging. And the question
486.02s - 493.46s |  became, how did they do it? Ultimately, Ahoyo came forward and said, hey, I admit it, I used tools to
493.46s - 498.66s |  do this. And through that investigation, there's a series of Ars Technica articles. I worked with a
498.66s - 504.82s |  team of folks in my Taskbot community and a bunch of amazing subject matter experts to recreate that
504.82s - 510.66s |  tool-assisted speedrun based on what Ahoyo had said. We were able to get it to work. And amazingly, not
510.66s - 515.66s |  only were we able to get a tool-assisted speedrun to work that was first cleared by someone who just
515.66s - 522.62s |  joined the Taskbot community, but amazingly, a human somehow after many, many attempts, a human
522.62s - 526.74s |  actually managed to clear this level that we thought was completely impossible. But yet again, I got
526.74s - 533.62s |  caught up in a situation where a run was seemingly legit, a video game record seemed to be legit, but
533.62s - 541.42s |  was not. So imagine my surprise when earlier this year, I worked with a speedrunner named FunkmasterMP
541.54s - 545.46s |  who runs the video game Diablo. And he came up to me and said, I would like to make a tool-assisted
545.46s - 551.82s |  speedrun of Diablo. Let's figure out how to do this. The tools were just starting to become developed to
551.82s - 557.90s |  do this. It was just starting to, to come together. And I said, yeah, sure. Let's, let's do that.
557.94s - 566.54s |  Let's uh, let's try, let's try to make a task of this. We used the fastest speedrun we could find, which
566.54s - 572.66s |  was on Speed Demos Archive, a website that records the fastest speedruns of games. And the run had
572.66s - 580.34s |  been released, or had been created in 2009 by a runner named Grubo. It was a segmented run, meaning
580.34s - 587.54s |  that the runner was allowed to do individual levels, and grind out one level, and then do the next
587.54s - 592.94s |  level and stitch them together. But it did represent a very fast time that we wanted to use as the
592.94s - 598.34s |  basis for a tool-assisted speedrun. With the assumption that if a human could do it, that we
598.34s - 604.06s |  could do it. The only problem was we couldn't reproduce several of the things that we saw in
604.06s - 610.06s |  Grubo's run, even with superhuman precision. And it started a long conversation with the team of
610.06s - 615.42s |  developers behind the Devolution and DevolutionX projects that decompiled the game Diablo.
616.06s - 621.70s |  Ultimately, it raised enough questions that we developed a team to start to analyze this video.
622.06s - 630.06s |  And the bulk of my talk today is going to be about what we found. Now, I want to play that video. And
630.06s - 638.06s |  what I want you to do is I want you to, as you watch this, see if you can spot where things might be a
638.06s - 642.26s |  little bit funny. Now, the downside, of course, is you're going to see this in real time, but that's
642.30s - 648.62s |  okay. So this is the run should be on screen, and hopefully the volume is not blastingly loud. I'm
648.62s - 653.06s |  going to play this, you can see that it says speed demos archive verified no cheating. And I'm going
653.06s - 663.31s |  to play this run now. So there's our title screen, you can see this was a game made by Diablo. It was
663.31s - 669.23s |  originally released back in 1996. Here is our screen to start the game and our character screen.
670.23s - 673.23s |  Yeah, that's that's a little loud, but should be okay. Yeah, let's turn that volume down just a
673.23s - 685.23s |  hair there. So this run was done by Grubo on a on on a believe the time he was running a Windows. I
685.23s - 689.23s |  don't I don't want to speculate what operating system is on. We never actually isolated that one.
689.23s - 695.23s |  But this was done back in 2009 with the releases of Diablo that were available at that time. Diablo
695.23s - 699.23s |  Diablo is by the way, a show of hands now that I can kind of sort of see you who here has played
699.23s - 705.23s |  Diablo before. Wow, almost half the audience sanctity of this book. That wasn't me talking.
705.23s - 710.23s |  Don't worry. There's going to be some random stuff. So for observe here that he walks from the
710.23s - 719.23s |  upstairs to the downstairs, grabs an item here walks back down the stairs. grabs another actually
719.23s - 723.23s |  I guess that's where he's grabbing the item. A couple of quick notes. This particular category
723.23s - 730.23s |  allows removing those load screens from the calculated time. So again, we're going he's going
730.23s - 734.23s |  directly from the upstairs to the downstairs very rapidly. This is incredible luck that you would
734.23s - 741.23s |  never find anyone who's played Diablo before knows that you just don't get that that doesn't happen.
741.23s - 750.23s |  Okay, so here he's killing an enemy and grabbed a staff allows him to basically warp which you saw
750.23s - 756.23s |  there. He's he's phasing and hopping around the level really fast. He grabbed that item from the
756.23s - 761.23s |  very first enemy in the game that happened to be dungeon level nine. That'll be important later.
761.23s - 768.23s |  And again, he's just phasing and portaling trans moving all over the place as fast as possible.
768.23s - 779.23s |  Right here. You can see he walks back to town to go buy some more items. He did. He did a couple
779.23s - 785.23s |  of things that were way too fast there. Right here he is duping a stave. He's got he's picked up an
785.23s - 794.94s |  additional staff. He's gonna head over to the shop and make a couple of purchases. This part is a
794.94s - 800.94s |  little bit easier to to catch in real time. Some of these things are really hard to notice unless
800.94s - 810.94s |  you're you're watching in slow motion. For instance right there. Can we turn that volume down just a
810.94s - 817.94s |  little more? It's still pretty loud. All right, so the shop there, there was some inventory on screen.
817.94s - 832.62s |  I'll be coming back to that in a second. There's a ring there. Okay, now we're back into the action.
832.62s - 838.62s |  Again, a nice fast portal. There was something interesting on that screen I'll point out later.
838.62s - 846.62s |  Okay, another set of phases. Okay, this is a battle. For anyone who's played Diablo, there's some
846.62s - 852.62s |  improbably lucky things happening here. Legitimate though.
856.62s - 860.62s |  All right, finished that fight. And now the final section.
879.13s - 886.13s |  And that's it. That was the entire run. So, now you've been a little spoiled because I accidentally
886.13s - 892.13s |  left this on my screen, but that's okay. Based on what you saw, did you guys happen to notice
892.13s - 897.13s |  anything that seemed a little bit off in any of those? Especially anyone who's played Diablo before.
897.13s - 903.13s |  So, if you kind of had some suspicions that something wasn't right, what approach would you take
903.13s - 908.13s |  to prove it? What techniques might you use? Now, I'm going to have these slides on screen,
908.13s - 913.13s |  but you can also head over to diablo.tasks.bot to see a version that's a little bit less squished.
913.13s - 917.13s |  So, I'm just going to run through a little bit. We have a whole bunch of background that I've kind of
917.13s - 923.13s |  already talked about here. What I'm going to do is just start at the very first thing here,
923.13s - 932.13s |  which is this title screen. So, if you look here, right here, the copyright date says 1996 through 2001.
932.13s - 940.13s |  What the team did is made a full table of every single release of Diablo and every single bit of metadata
940.65s - 948.65s |  about it. And we can see that if the copyright date shown on the screen is 2001, then it must be version
948.65s - 954.65s |  1.09 of the game. Okay. Alright. So, now we know what version of the game he's running, except there's
954.65s - 965.57s |  one minor problem. Um, it says Diablo version 1.00 on the next screen. Hmm. Okay, so which is it?
965.57s - 973.57s |  Is it Diablo 1.09 or is it Diablo 1.00? Alright. So, this was something we saw early on that gave us
973.57s - 979.57s |  some suspicion about how exactly was this run made anyway? So, then we get to this character screen.
979.57s - 985.57s |  Now, this is not all that interesting. It's just a screenshot, but when we played the video, I was kind
985.57s - 989.57s |  of talking over it a little bit, but I was quiet long enough for you to perhaps notice that there was no
989.57s - 993.57s |  music playing during this character select screen. So, if you go back and watch his submission, you'll
993.57s - 1001.57s |  note that there is no music at that point. That was only something that happened in Diablo 1.05 and later.
1001.57s - 1009.57s |  So, that means we started with 1.09, went back to 1.0, and then somehow ended up with 1.05 or later,
1009.57s - 1021.57s |  which is kind of an interesting conundrum. Like, how is it that this happened? Okay. Well, let's get
1021.57s - 1027.57s |  into it a little bit more. Remember how you saw the stairs constantly going? You'd have an upstairs and a downstairs.
1027.57s - 1033.57s |  They'd be right next to each other. Once or twice is one thing, but he got it on nearly every level.
1033.57s - 1037.57s |  We're like, okay, well, we want to make a tool-assisted speedrun. We want that. Well, we didn't know
1037.57s - 1045.57s |  exactly what Grubo had done, which game seed he had started with, so we made an entire open-source
1045.57s - 1053.57s |  code set to entirely disassemble every little last bit of the Diablo map generation and use those tools
1053.57s - 1059.57s |  to identify what exact game he used. And there's some information in here that I'll leave for an exercise
1059.57s - 1067.57s |  to the reader for later. But the key thing that comes out of this is we managed to find the game seed
1067.57s - 1073.57s |  that he used for the first level. Now, quick note. Diablo is a game where every single dungeon level,
1073.57s - 1079.57s |  Dungeon Levels 1 through 16, are all generated at the moment that you start the character. In other words,
1079.57s - 1085.57s |  you have a game seed and all of your dungeon seeds are generated from that. There was only one minor problem.
1085.57s - 1093.57s |  The next level, Dungeon Level 2, didn't match. The first level matched, but not the second or any of them
1093.57s - 1099.57s |  after that. So we had a puzzle that we had to solve. We basically repeated the same search that we were doing
1099.57s - 1107.57s |  16 times for each of the dungeon levels and found that Grubo hadn't played one game of Diablo.
1107.57s - 1115.57s |  He'd taken save files from 15 different games and stitched them together. And because our tools are very accurate,
1115.57s - 1121.57s |  we were able to identify the exact game time of each one of these. And you know all of these are in 2008
1121.57s - 1127.57s |  all the way till this one, which is in 2009. Grubo submitted his run in 2009, in January 2009.
1127.57s - 1137.14s |  So these are very likely the exact levels that Grubo found. Just to put some context around that,
1137.14s - 1145.14s |  we have high confidence that we exactly matched what's shown on the screen to the levels and we have an appendix
1145.14s - 1153.14s |  in this document that describes how we identified those levels in detail. But we missed two levels.
1153.14s - 1160.14s |  Dungeon Levels 3 and 4 were entirely missing and Dungeon Level 9, the one where you saw him pick up a staff
1160.14s - 1169.14s |  from the first enemy, was there, but the items were wrong. So this definitely caused us to ask a few more questions.
1169.14s - 1176.14s |  Like, okay, what's going on here? How did this happen? There were some other things that were very interesting.
1176.14s - 1182.14s |  One of them was an inconsistent inventory issue. So if you're playing legitimately, you're generally going to
1182.14s - 1193.14s |  not have any discrepancies in your run. We found a couple. For instance, in Dungeon Level 4, we pick up a ring
1193.14s - 1202.14s |  from that sarcophagus. Then when we're... I'm sorry, not we, Grubo. Grubo then went to Dungeon Level 9
1202.14s - 1207.14s |  and opened his inventory, which you can note here that there's no ring in his inventory.
1207.14s - 1212.14s |  But later on in town, he opens his inventory again and there's the ring again. So wait a minute.
1212.14s - 1216.14s |  We had a ring, we lost a ring, we got the ring again. How did this happen?
1216.14s - 1222.14s |  Okay, that seems to be proof that there is an irregularity in the speedrun.
1222.14s - 1228.14s |  Another thing we noticed, and I'm not going to get into too many details on this, but there are some impossible
1228.14s - 1234.14s |  quest combinations. There's groups of quests. For instance, Poisoned Water Supply and the Curse of King Leoric
1234.14s - 1239.14s |  is the first group. You're going to have one of these and not the other. The other group down here, say
1239.14s - 1245.14s |  The Butcher, Garibald the Weak, and Ogden's Sign, you're going to have two out of three of those.
1245.14s - 1252.14s |  But not all three at once. And what we found is extensive evidence of those not necessarily always aligning.
1252.14s - 1266.14s |  Like right here we have the Poisoned Water Supply in evidence, but then later on we see that the Butcher's Red Room
1266.14s - 1280.67s |  was present. Well, let's see. Getting my own notes mixed up. Basically, we expected that the quest Ogden's Sign
1283.37s - 1291.37s |  would not be active. If it were, these stairs here would be behind walls. But most of the levels that we found
1291.37s - 1297.37s |  in those seeds had those walls in place. Basically meaning that the speedrun wouldn't have been
1297.37s - 1302.37s |  completable. So, wait a minute, what's going on here? We found a couple of other inconsistencies there.
1302.37s - 1313.37s |  A quest was available on dungeon level 13 that was used. I'm sorry, let me rephrase this. A quest was available
1313.37s - 1320.37s |  in four of the games. So we found it in four of them. And if that had really been the case, Gruber wouldn't have
1320.37s - 1328.37s |  been able to continue forward if that had actually been active. So basically we ran into all these weird
1329.37s - 1336.37s |  inconsistencies. Effectively there were just the wrong numbers of wrong combinations of quests that the game
1336.37s - 1342.37s |  logic would never allow. We have some additional information on that in here for later. Now this is the one
1342.37s - 1348.37s |  that was probably the most curious to us. We described this as inaccessible dungeon level. So when we got to
1348.37s - 1357.37s |  dungeon level nine, we found the right room layout, but the problem is that even with conducting a search
1357.37s - 1367.37s |  across all ranges, we couldn't quite identify any levels that exactly matched what was there. Basically some
1367.37s - 1376.37s |  context. The game Diablo uses the current epochs and the 32-bit signed integer of number of seconds since 1970
1376.37s - 1383.37s |  to determine what the game seed is. And in Windows, you can't really go beyond certain years. In other words,
1383.37s - 1388.37s |  if you go beyond the year 2038, Diablo will just keep repeating the same level over and over again. There's no
1388.37s - 1396.37s |  natural way to get to levels after that. But the only levels we found that exactly matched what we saw in Gruber's
1396.37s - 1405.37s |  dungeon level nine were in the years 2056 and the years 2074, which again, something just seemed really wrong
1405.37s - 1410.37s |  about that. He played this game in 2008, 2009. So there was just something really weird. And more than that,
1410.37s - 1417.37s |  the fact that the first enemy dropped an item in a way that just would not be possible, despite searching the
1417.37s - 1427.37s |  entire 32-bit signed space, every possible level, not one instance of finding that combination anywhere, just
1427.37s - 1433.37s |  seemed very, very strange to the team. There was also some aspects that were a little bit tricky to figure out.
1433.37s - 1438.37s |  For instance, there's some missing gameplay, and we went so specific as to go down to a single frame. For instance,
1438.37s - 1446.37s |  there's an animation of him walking and turning. We have a first frame in Gruber's video where, well, we did a
1446.37s - 1456.37s |  demo video here. So this is a demo video. We're facing down, then we're facing away, and then we are facing away,
1456.37s - 1461.37s |  and the right leg is in front of the left. You won't be able to see this on screen. It's way too tiny. But in Gruber's
1461.37s - 1467.37s |  initial video, it's walking forward and then immediately goes backward with a frame missing. So there's just, for
1467.37s - 1475.37s |  whatever reason, a single frame of video that we can, without a shadow of a doubt, say is just not there. Now, that
1475.37s - 1482.37s |  means that the encoder might have had a problem. It doesn't necessarily mean that he cheated there. It's just odd.
1482.37s - 1488.37s |  It did make it harder to identify where things might have been spliced incorrectly. However, there were sections
1488.37s - 1495.37s |  that were missing gameplay entirely. For instance, when we entered dungeon level 15, this red portal is already
1495.37s - 1503.37s |  open at the moment it appears, which means that that section of that portal initially opening is entirely
1503.37s - 1509.37s |  missing. In other words, that portion of gameplay was cut off, which indicates a potential video splice problem.
1509.37s - 1517.37s |  And there's a couple of other instances of that as well. I talked about this earlier, the inconsistent item drop
1517.37s - 1526.37s |  here, where we just cannot manage to find any way that that could have possibly happened. So that's kind of a rehash.
1526.37s - 1535.37s |  But then there's another thing. There's what we describe as improbable item duplication. We see that as Gruber is
1535.37s - 1543.37s |  walking, there are staffs that are like a nauseous puzzler. It's being duplicated in movement. The only problem is,
1543.37s - 1548.37s |  and you can see that there are two of them here in inventory in the screenshot. The only problem with that is we saw on the
1548.37s - 1556.37s |  version screen that it was using version 1.0. But in version 1.0, that duping glitch is very, very difficult to do
1556.37s - 1564.37s |  because of a very tight timing loop. This likely wouldn't have been possible for a human to do until Diablo version 1.02
1564.37s - 1571.37s |  or later. So we again had that weird, what's going on with these version mismatches? Then we ended up with this next
1571.37s - 1580.37s |  one, which was what we described as inconsistent music playback. We went so far as to bust out everyone's favorite tool, a
1580.37s - 1587.37s |  spectrograph. So this is a spectrogram view. And what we did is we looked at the section of video where we had some
1587.37s - 1593.37s |  questions about how they did something. We can see footsteps, footsteps, footsteps, footsteps, and then there's this really
1593.37s - 1601.37s |  sharp line right here. And this sharp line is where a video splice clearly happened. You can hear the music abruptly
1601.37s - 1609.37s |  changing, and then the shop character starts speaking right here at this edge. Um, that basically gave us a pretty clear
1609.37s - 1619.37s |  indication, based on that, on that audible signal, that there was something funny going on with, with, with this, uh, with this
1619.37s - 1627.37s |  section. There was, there's something weird here. Then we ended up with this shop inventory, which was pretty puzzling. Uh, so
1627.37s - 1638.37s |  there's this level, there's these items in inventory. And then on the next, uh, page, there's these items. And I'll go back
1638.37s - 1645.37s |  here. Okay. Let me see if I can get both of them on the screen. Basically, the issue is, they have one set of items, and then
1645.37s - 1654.37s |  suddenly they get a totally different set of items. The challenge with this is, you'd either have to, in version 1.00 to 1.02,
1654.37s - 1662.37s |  you'd have to walk all the way to the dungeon and walk back. Or, if using version 1.03 or later, you would have to, at this
1662.37s - 1671.37s |  point, save and then reload to force the shop to, to ro- to, uh, to change. Um, that theoretically should have been
1671.37s - 1678.37s |  included in here one way or another, or at least a note about it in the description, but that wasn't included here. So, we saw this
1678.37s - 1686.37s |  and went, hmm, there's, there's something missing in this location. Uh, then there's this fun one. Um, if you look really
1686.37s - 1694.37s |  carefully, we have a little red section right here. It's probably not visible on the display. Uh, but this says, this says
1694.37s - 1706.37s |  hit points negative 22. In, um, in this game, it is possible, through certain glitches, to overflow the health, and it not only
1706.37s - 1714.37s |  gives you negative health, it even goes so far as to draw the health in the orb backward. It's drawing it from the bottom- from the
1714.37s - 1725.37s |  top instead of the bottom. Uh, the only challenge here, though, is that the glitch was fixed in version 1.07. Meaning, going back to
1725.37s - 1734.37s |  our initial screen that said 1.09, he couldn't have used 1.09. So, we come into this, okay, well, what version did he use anyway?
1734.37s - 1741.37s |  There's no one version where all of these factors can all be in play at the same time. So, out of that, we, we came up with our own
1741.37s - 1750.37s |  conclusions. Now, I'm gonna pause here. Based on this evidence, and, and show of hands, based on the evidence that I've shown you so far,
1750.37s - 1759.37s |  does it seem like this run is completely legitimate? Or, raise your hand if you think this is perhaps not legitimate. Okay, not legitimate?
1759.37s - 1764.37s |  Most, okay, most folks are like, okay, most folks in the audience are like, eh, this is probably not legitimate. Well, that was our
1764.37s - 1772.37s |  conclusion as well. Like, there's just so many factors here, especially given that these dungeon layouts aren't correct. And we, we spent so much
1772.37s - 1780.37s |  time, so many members of the team spent so much time disassembling the code and diving in to understand what had happened here. Uh, but we just
1780.37s - 1788.37s |  couldn't come up with, with any, any way to, to handle this. Like, we, we, we knew that there was something funny. So, our conclusion were,
1789.37s - 1796.37s |  when we finished this analysis, our conclusion was that this run should be removed from record sites. Not just SDA, Speed Demos Archive, where the
1796.37s - 1804.37s |  record is held now, but also Guinness Book of World Records, because there are two separate records on that site. We had attempted to contact
1804.37s - 1813.37s |  Rubo in February through LinkedIn, didn't receive a reply, didn't have any other contact information. So, the analysis you just saw was based on no
1813.37s - 1821.37s |  information from the runner. Remember how I said I was kind of scrambling a bit? Well, that's because in the last week, we got in touch with Rubo
1821.37s - 1829.37s |  thanks to a journalist who was interested in this story and reached out to Rubo directly using the premium LinkedIn, actually. This is not an ad. Um, but
1829.37s - 1841.37s |  managed to get in touch with Rubo. And suddenly, all of our carefully constructed theories got really interesting. So, our talk is going to take a bit of a
1841.37s - 1852.37s |  turn. And also, you can kind of gather that I'm kind of presenting this in a very different way than I intended to. Rubo responded just this month,
1852.37s - 1862.37s |  just in the last week, that because it was a segmented run, everything that we saw was completely explainable and totally allowed.
1863.37s - 1875.87s |  Specifically, that the version number seen on the initial title screen versus the credit screen of the splash screen, and the discrepancies with
1875.87s - 1884.87s |  versions, that was just because he'd used old encodes and just stitched all that together for flavor. It didn't matter to the timing of the run and wasn't a
1884.87s - 1895.87s |  problem. Okay. He further said that there was an exception in place that allowed him to start runs from multiple different saves, and then use tools
1895.87s - 1904.87s |  to modify the memory, and ultimately, what gets saved in the save file, in order to basically catch up levels to match what previous levels had
1904.87s - 1913.87s |  done. Now, obviously, we show that that wasn't always right. There's multiple cases where, for instance, that ring that appears and then disappears
1913.87s - 1922.87s |  and then reappears again. That's a, that's a little bit funny. He obviously, if he did use those tools in the way he said, there were some mistakes
1922.87s - 1931.87s |  made. Okay, not, not the end of the world. His exact quote, just so that it's here on the record, my run is a segmented spliced run, it always has been, and it was
1931.87s - 1938.87s |  never passed off as anything else, nor was it part of any competition or leaderboards. The speed demos archive page states that outright. Now, I would
1938.87s - 1946.87s |  slightly disagree with Grubo on this point. I would say that speeds demos archives is a leaderboard. It is a records holding site. And furthermore,
1946.87s - 1954.87s |  it's not entirely clear how the Guinness Book of World Records ended up there. But I would say Guinness Book of World Records is a records leaderboard
1954.87s - 1965.87s |  site in every sense of the word. So that little bit of nitpick aside, Grubo's statement was basically, well, this was segmented, it was, it was possible to
1965.87s - 1972.87s |  split wherever I wanted to. Sure, you showed that there was a video split right before the shot, but that's completely allowed. I can do that. And SDA timing
1972.87s - 1988.27s |  says that I can remove the loading screens and just take a half second penalty. So, alright, where does this leave us? What do we do? We put a lot of effort
1988.75s - 1999.75s |  into taking apart all of these elements, only to discover that the runner didn't do this with malice, at least according to his statement. And in all
1999.75s - 2009.75s |  honesty, as, as a presenter, I have to agree with that. I don't think that Grubo maliciously tried to hurt anyone. But I need to pause there for a second,
2010.75s - 2020.75s |  because in 2009, when Grubo released this run, that was only three minutes and 12 seconds long using SDA timing that removed those load screens. It
2020.75s - 2033.27s |  completely stopped speedrunning in that category. No one else could get times anywhere near what Grubo had. Why? Because none of us read what Grubo submitted in
2033.27s - 2042.35s |  his notes and interpreted it as, oh, yeah, I just took multiple different games and hacked together to save files using external tools that wrote to
2042.35s - 2052.99s |  memory. No one made that assumption. The exception that Grubo claims to have had is nowhere to be found. Now that doesn't mean it didn't exist at the
2052.99s - 2061.95s |  time. SDA staff has rotated since then. But nevertheless, there is is doubt maybe Grubo did have an exception. We don't have any of the save
2061.95s - 2072.27s |  files. The SDA folks didn't keep them. Grubo didn't keep them. Well, all right, here we are. We're in a situation where we can't prove
2072.27s - 2085.23s |  anything necessarily outside of one aspect. It's still a little bit interesting that despite all of the disassembly we did, we never found any
2085.23s - 2094.67s |  possible route for Grubo to produce dungeon level nine with that drop of the item right away. It's simply it can't happen. There's no possible way
2094.67s - 2106.31s |  that we were able to analyze in any version of Diablo that could produce that. So where does that leave us? Well, speedrunning on that category
2106.31s - 2115.21s |  effectively stopped in 2009. No one could beat it. But in the last couple of weeks, as we've had folks streaming on Twitch, and talking about
2115.23s - 2128.39s |  about, hey, well, maybe maybe now we can use new new methods to complete this faster. We've now come to a place where we can get very close to
2128.39s - 2139.39s |  Grubo's time, we won't necessarily be able to beat it with human skill just yet. But we in the last week, scrounged and scraped and a whole bunch of
2139.39s - 2147.71s |  folks on the team work together, Stephan and a Jenbo and FunkmasterMP and Nightcat and a bunch of other folks. There's a huge credits list, by the
2147.71s - 2160.23s |  way, all got together and made a tool assisted speedrun to demonstrate what could be done on a real, legitimate playthrough, where we have one
2160.23s - 2168.07s |  game seed and all of the dungeon levels that we encounter are legitimate dungeon seeds, and there's no issues whatsoever with with
2168.07s - 2178.43s |  splicing. And I would like to just quickly show you that video. I'm going to be talking over it. So we'll keep the volume a little bit quieter. But
2178.95s - 2197.57s |  you know, it'd really help if I had the video up. Okay, let me just load that right quick. Go. Well, I'm looking that up. Oh, yeah, of course, it's
2197.57s - 2210.98s |  not in my history. Why would it be? Okay. You know, it's always fun when you're doing a talk, and things are changing right beforehand. There it is.
2210.98s - 2221.10s |  There's the test. All right, there we go. So I want you guys to watch this really quick. I'll be talking over it as we go. Right. Just make sure the
2221.10s - 2236.54s |  right task came up. Nope, it ain't there. All right, let's hope they don't splash my whole desktop. All right. Yep, I definitely tried to
2236.54s - 2244.90s |  splash something I didn't mean to but that's all right. There we go. Here we go. Let me make that in big and and I will also restart it for the sake
2244.90s - 2255.26s |  of of there we go. Okay, so this is a tool assisted speedrun, which isn't necessarily quite as fair. You might consider this a super segmented
2255.26s - 2263.62s |  run. Um, Grubo did did his run in 27 segments, this tool assisted speedrun is doing it in a lot more than that. But right here, we're duplicating
2263.62s - 2270.58s |  gold by dropping it on the ground and immediately picking it back up in a way that allows us to double our gold pile every time that you can see we
2270.58s - 2278.98s |  played this entirely on Diablo version 1.04. Here in the second is going to be the flashiest thing that happens in this run. We're going to go to the
2278.98s - 2293.34s |  shop and we're going to buy a few items. Okay, there it is. Yeah, that's that's not fair. Now, as as this is playing, what's interesting about
2293.34s - 2303.30s |  this is that we could not possibly create a number of dungeon levels that were that had stairs as close as Grubo did. But what we were able to get
2303.30s - 2312.14s |  were a fair number of them that were reasonably short. And the first level though here is Diablo dungeon level one here, there's a bunch of walls
2312.14s - 2319.42s |  in the way between us and the stairs that go down. So we use a new new glitch recently discovered that allows us to repeatedly phase without
2319.42s - 2328.78s |  consuming any resources and just you know, go right through the walls. So while the level itself is physically longer distance between the stairs that
2328.78s - 2335.62s |  go up and the stairs that go down, we were still able to clear that section relatively quickly. And as you'll see, several of these are still
2335.70s - 2349.42s |  remarkably fast. Like there's the stairs literally right there. So while this is playing, a couple of things I want to say was Grubo a cheater? Was
2349.42s - 2357.74s |  was he actually intending to troll like Todd Rogers did? Because we can pretty much say that Todd Rogers was a troll. I think that's pretty fair to
2357.74s - 2366.18s |  say every single one of his records was eliminated from Twin Galaxies and Guinness Book of World Records. I think his case is very clearly a
2366.18s - 2377.78s |  troll. The Super Mario Maker situation with Ahoyo. Was he a troll? Not? Well, sort of he deliberately said he did this to troll people. But is he
2377.78s - 2385.42s |  really a troll? Well, not really. He came forward and he admitted, okay, well, here's the tools and he gave us the tools that he used. And he came
2385.42s - 2395.18s |  clean. Yes, it caused a lot of consternation. And it was a little bit of a bittersweet ending to the original Super Mario Maker for the Wii U. But was he
2395.18s - 2405.90s |  really a troll? Was he really a cheater? And Grubo? Is Grubo really a cheater? And you know what, I thought so. Like when I went through this
2405.90s - 2414.02s |  analysis and all of these tools that we put together, yeah, I thought so. And then I talked to him. And then we kind of looked at things through a
2414.02s - 2422.82s |  different lens of, hey, it was 2009. And things were a little bit looser at Speed Demos Archive back then and records are not really intact. And was he
2422.82s - 2433.34s |  really a cheater? You know? No, I don't think so. Personally, there are other members on the team with more strong opinions about that. But at the end
2433.34s - 2443.02s |  of the day, I'm only calling for Grubo's run to be retracted because it doesn't meet current standards. And it shouldn't have met the standards
2443.02s - 2453.74s |  even in 2009 because of the impossibility of what was there. In a tool-assisted speedrun and a real speedrun, you can't just go in and modify how the
2453.74s - 2463.82s |  game works. If you want to do that, watch some of my GDQ stuff that the Taskbot team has done. Maybe Triforce Percent is a great one if you have not
2463.82s - 2470.42s |  seen it before. Look up Legend of Zelda Ocarina of Time Beta Showcase or Legend of Zelda Ocarina of Time Triforce Percent. It's the same run.
2470.70s - 2477.86s |  Highly recommend watching that. You can see what happens when you play by the game's rules on an original cartridge and well, in that case, cartridge and on an
2477.86s - 2486.66s |  original console. And you just use arbitrary code execution to then get the game to change how it works itself. That's totally legitimate. But modifying it
2486.66s - 2495.42s |  externally and doing a ROM hack, that's not the same game anymore. And that's basically what happened here. The modifications that were made, even
2495.42s - 2505.82s |  though they weren't intended to be malicious, had the impact that, you know, it changed things and it made it so that people didn't have a fair shot at
2505.82s - 2519.22s |  reproducing it. Now we can make a run that does all this crazy phasing. Oh, by the way, that is an alt tab to stop some dialogue from happening. If we'd
2519.22s - 2526.94s |  used a different resolution, it wouldn't have stayed there. A couple other quick notes here. This is not fully optimized as a tool assisted speed run. This was
2526.94s - 2539.22s |  made rather rapidly in the last few days. It could be improved even further from where it's at. We're almost there, almost there to the end. This task is a
2539.22s - 2550.43s |  demonstration of what the game playthrough could be legitimate. We already have as of today, and I'll be updating the document after this talk, the
2550.43s - 2561.55s |  Diablo.tas.bot website. I'll be updating it with links. Just in the last hour and a half, someone managed to get a time less than five minutes with a
2561.55s - 2570.95s |  single segment attempt. Not even segmented, just a single segment attempt. We feel that even a human can manage to beat Rubo's time with legitimate
2570.95s - 2588.32s |  stances. And here's the final boss. And, uh, that's it. That's it. That's, that's the whole run. This task is one second faster than Rubo without
2588.32s - 2599.20s |  cheating. It's a completely legitimate playthrough. Okay. I have talked about a lot of crazy things. We are coming to the end of our time. There is so much more I
2599.20s - 2605.08s |  would love to tell you if I had more time, but I don't. If you would like to know more about tool-assisted speedruns in general, come to
2605.08s - 2614.56s |  TASvideos.org. If you would like to know more about playing tool-assisted speedruns on real consoles, go to TAS.bot. And if you happen to be
2614.56s - 2622.60s |  interested in having me research projects like this, let me know. I could use the work. Um, thank you. Sorry. Thank you. Thank you so much,
2622.60s - 2626.48s |  DEFCON, for having me again, and I look forward to the next opportunity. Thanks all.