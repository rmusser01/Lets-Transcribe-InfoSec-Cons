{
  "webpage_url": "local:1732042005:9d939442:DEF CON 32 - Embedded Village - Reverse engineering and hacking Ecovacs robots - Dennis Giese  Braelynn Hacker.mp4",
  "title": "DEF CON 32 - Embedded Village - Reverse engineering and hacking Ecovacs robots - Dennis Giese  Braelynn Hacker.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 1.04s | This text was transcribed using whisper model: large-v2

 Hello everyone.
1.04s - 3.44s |  Welcome to our talk about the reverse engineering
3.44s - 6.20s |  of and tacking of Ecovacs robots.
6.20s - 8.24s |  Thank you for being here at this time.
8.24s - 11.12s |  I know it's kind of loud, but I hope we figured it out.
11.12s - 14.72s |  So before we start, I would like to introduce ourselves.
14.72s - 16.60s |  So first, I'm Dennis.
16.60s - 21.60s |  I'm a security researcher or also a hardware hacker.
21.60s - 23.56s |  And I'm primarily looking into wireless
23.56s - 25.44s |  and embedded security and privacy.
25.44s - 27.12s |  So I try to look at any device
27.12s - 28.44s |  which kind of is interesting for me.
28.44s - 29.80s |  So I try to reverse engineer everything
29.80s - 32.44s |  which is kind of basically around us.
32.44s - 36.52s |  You might know me as a Vacuum and IoT collector.
36.52s - 39.64s |  So I have like probably over 600, 700 IoT devices
39.64s - 43.56s |  and 60 or 70 Vacuum robots to start counting.
43.56s - 46.48s |  And my general goal is to get root access
46.48s - 48.80s |  and root Vacuum robots.
48.80s - 51.04s |  I have also a website, which is called robotinfo.dev
51.04s - 52.60s |  where I try to kind of document
52.60s - 54.28s |  what kind of hardware is in the robots,
54.28s - 55.16s |  what kind of software is running
55.16s - 61.02s |  and what kind of methods exist for routing.
61.02s - 61.86s |  Cool.
61.86s - 62.70s |  Hi, I'm Braylin.
63.90s - 65.70s |  I hack things for the Leviathan Security Group
65.70s - 66.86s |  during the day.
66.86s - 68.98s |  But this talk is entirely personal research
68.98s - 70.70s |  and does not reflect their views.
71.74s - 73.70s |  My general focus has been application security
73.70s - 75.66s |  and APIs for quite a few years now.
75.66s - 78.58s |  But I started robot hacking during COVID.
78.58s - 81.06s |  Just for fun, I took apart a broken robot Vacuum
81.06s - 83.22s |  and tried to hack it.
83.22s - 86.18s |  So now I am hardware hacking for fun,
86.18s - 91.22s |  mostly looking at robots, cameras and smart locks.
91.22s - 92.06s |  All right.
92.06s - 93.98s |  So let's talk about the goals of this talk.
93.98s - 95.78s |  So generally what we try to do is
95.78s - 97.70s |  that we want to give you some understanding
97.70s - 100.62s |  about the security and privacy risks of IoT devices.
100.62s - 101.70s |  We want to give you some overview
101.70s - 104.06s |  on how we did Vacuum robot hacking.
104.94s - 106.78s |  We want to show you the vulnerabilities
106.78s - 108.22s |  and how to find them.
108.22s - 110.50s |  And typically our general goal is to get
110.50s - 113.22s |  somehow root access without to disassemble the device.
114.10s - 116.58s |  So there have been some past research on that.
116.58s - 119.38s |  So if you hack this kind of niche products,
119.38s - 121.42s |  the good thing is you can probably get like every year
121.42s - 122.86s |  or every two years, like a nice DEF CON talk.
122.86s - 125.70s |  So we basically over the last five, six years,
125.70s - 128.90s |  we kind of like, you know, use the topic
128.90s - 130.74s |  and it keeps giving.
130.74s - 133.10s |  So if you find your niche product,
133.10s - 136.18s |  just go ahead with that, this will be very rewarding.
136.18s - 138.06s |  Some disclaimers.
138.06s - 140.02s |  So we don't want to claim that vendors
140.02s - 141.58s |  are using the sensors to spy on you,
141.58s - 143.98s |  but you know, we could technically do that.
144.86s - 145.70s |  The other thing which we do
145.70s - 147.46s |  is like we primarily cover physical attacks
147.46s - 149.50s |  or proximity attacks.
149.50s - 152.50s |  So we don't necessarily like attack devices through the cloud
153.74s - 155.30s |  One thing which we want to stress always
155.30s - 157.14s |  is like many vendors have problems
157.14s - 160.22s |  and it's basically independent of origin, size, market share.
160.22s - 163.34s |  But in this talk, we especially like focus on Ecovacs.
164.62s - 167.54s |  And all this research is basically part of private projects.
167.54s - 169.34s |  So there's no sponsorships by companies.
169.34s - 171.58s |  There's no organizations behind that.
171.58s - 173.34s |  Any statements are our own opinion
173.34s - 175.78s |  and we are not representing anyone.
175.78s - 178.54s |  So what kind of devices are we covering in this talk?
178.54s - 180.94s |  So basically, we're covering Ecovacs robots,
180.94s - 183.98s |  which you see on the left side, up to the X2.
183.98s - 186.34s |  And we're also covering lawn mowing robots
186.34s - 189.58s |  and the air purifiers, so the AirBot series.
189.58s - 192.94s |  Technically, all the stuff which we do also applies to Yidi
192.94s - 197.50s |  because Yidi is basically a sub-brand of Ecovacs.
197.50s - 199.58s |  And we only focus on devices which run Linux,
199.58s - 203.06s |  so no dumb robots, only cool stuff.
203.06s - 204.30s |  So about the Stark.
204.34s - 205.94s |  Well, this is basically the result
205.94s - 207.74s |  of five years of research and experiments.
207.74s - 209.94s |  And technically, we're not the first ones
209.94s - 212.78s |  or the only ones who do research on Ecovacs.
212.78s - 215.54s |  The vendor knows about most of our findings.
215.54s - 217.86s |  They tried to fix some of them, but failed.
217.86s - 220.86s |  So they failed very sadly.
220.86s - 222.18s |  And for other vulnerabilities,
222.18s - 223.34s |  which are really, really, really bad,
223.34s - 226.74s |  they, for whatever reason, have chosen to ignore them.
226.74s - 228.78s |  Also here, I wanna give a shout out to Chris Anderson,
228.78s - 231.62s |  who also found independently all this stuff
231.62s - 233.02s |  and we, at some point, connected to each other.
233.02s - 235.06s |  We're like, oh, wait, yeah, we know about this vulnerability,
235.06s - 236.42s |  we know about this vulnerability.
236.42s - 238.18s |  So there's probably way more people out there
238.18s - 239.94s |  who know about that stuff.
240.98s - 242.02s |  Typically, that kind of things
242.02s - 243.26s |  are like a collaborative effort.
243.26s - 244.86s |  So on the right, you see a picture
244.86s - 246.70s |  where we were at a CCC camp in Germany
246.70s - 249.66s |  and we're just messing with the lawnmowing robots
249.66s - 253.38s |  or we were hacking the cameras of the robots in India.
254.50s - 256.30s |  So let's start with the motivation.
256.30s - 258.86s |  Why do we want to root devices at all?
258.86s - 260.74s |  Well, one of the things for us as hackers
260.74s - 262.14s |  is, well, we wanna play with cool hardware
262.14s - 264.06s |  because that stuff is kind of cheap.
264.06s - 266.26s |  The other thing is we wanna, obviously,
266.26s - 269.02s |  stop the devices from constantly phoning home.
270.02s - 272.02s |  A lot of people have a very good
272.02s - 274.58s |  smart home automation system, like Home Assistant,
274.58s - 277.42s |  and they wanna use that instead of the cloud.
277.42s - 279.46s |  Also, one thing which becomes more and more important
279.46s - 280.70s |  is the rate to repair.
280.70s - 282.82s |  So basically, if the device is broken,
282.82s - 284.42s |  we wanna figure out what the reason is
284.42s - 287.86s |  and it's easier to figure it out if you have root access.
288.82s - 290.94s |  Also, we wanna verify the privacy claims of vendors
290.94s - 293.42s |  because vendors, they say a lot of things,
293.42s - 294.94s |  but it's not necessarily true.
296.14s - 298.74s |  So why don't we trust the companies?
298.74s - 300.58s |  So one of the things with IoT devices
300.58s - 302.34s |  is they are connected to your home network
302.34s - 304.90s |  and they have internet all the time.
304.90s - 306.78s |  The communication to the cloud is typically encrypted
306.78s - 309.78s |  and you have no idea what they're actually sending out.
309.78s - 311.98s |  From our own experience, we know that developing
311.98s - 315.22s |  secure hardware and software is extremely difficult.
315.22s - 316.74s |  And in the past, we caught vendors
316.74s - 318.50s |  basically with some shady behavior.
319.34s - 320.82s |  The other thing is these devices,
320.82s - 322.46s |  I mean, they not only have cameras,
322.46s - 324.90s |  but nowadays, they more and more have microphones.
324.90s - 327.82s |  So, and the question is like, why do we need that?
327.82s - 329.30s |  Generally, if you have cameras,
329.30s - 331.02s |  well, there's some risk with that.
331.02s - 334.50s |  And devices might store pictures indefinitely.
334.50s - 337.54s |  And from our own research, we know that some of them do
337.54s - 340.38s |  and both in the cloud and locally.
340.38s - 342.10s |  And the other thing which we run into is like,
342.10s - 345.22s |  if you buy used devices from eBay or Amazon,
345.22s - 346.70s |  you don't know if the previous owner
346.70s - 347.94s |  installed like a rootkit onto that.
348.34s - 350.78s |  So as a new owner, you have no way to verify the software.
350.78s - 352.42s |  And as a result, you might have a malicious device
352.42s - 354.98s |  in your home, like which device are new.
354.98s - 356.98s |  So basically, root access is more or less
356.98s - 360.02s |  the only way to kind of figure out that the device is clean.
361.06s - 363.94s |  Speaking of vendors, we have been like this story around,
363.94s - 365.30s |  I think one and a half years ago,
365.30s - 366.74s |  where basically iRobot got caught
366.74s - 368.94s |  that they were like, you know, making pictures of people
368.94s - 371.70s |  and selling them to Venezuela from, you know,
371.70s - 374.02s |  labeling them by gig workers.
374.02s - 375.22s |  And the other thing is, well,
375.22s - 376.62s |  this device contain a lot of data.
376.62s - 379.22s |  So companies are very interested in like, you know,
379.22s - 380.90s |  collecting data about your homes.
380.90s - 382.34s |  And one of the rumors was that Amazon
382.34s - 384.02s |  was trying to buy iRobot,
384.02s - 387.66s |  not because of the great robots, but because of the data.
387.66s - 389.66s |  One question which we will answer later,
389.66s - 392.62s |  if you can rely on certifications,
392.62s - 394.42s |  because all the devices which we analyze
394.42s - 396.02s |  like in the last two, three years,
396.02s - 398.14s |  have certifications, including Equivax.
399.42s - 402.46s |  So I want to give you like a very brief overview
402.46s - 404.46s |  of our hacking journey so far.
404.46s - 408.14s |  And for me personally, everything started back in 2017.
408.14s - 410.86s |  I was giving a talk at the CCC and at DEF CON.
411.78s - 413.78s |  And this was a work together back then with Danny Vigema.
413.78s - 415.42s |  And we targeted the Xiaomi Vacuum robots,
415.42s - 417.22s |  the first generation and the Roborock.
417.22s - 419.94s |  And the over the air update system was completely broken.
419.94s - 423.34s |  So we were able to just push like local firm updates.
423.34s - 425.14s |  Then it became a little bit more complicated.
425.14s - 427.22s |  So the vendors kind of locked on things.
427.22s - 428.78s |  For the newer Roborock devices,
428.78s - 431.58s |  we had to basically figure out a custom bootloader tool,
431.58s - 433.10s |  which required teardown.
433.10s - 435.86s |  And we were kind of like slightly annoyed about that.
435.86s - 438.86s |  So back then, we took a first look at Equivax.
438.86s - 441.06s |  And after my CCC talk back then,
441.06s - 443.58s |  some influencer gave me like a Equivax D-Bot 900,
443.58s - 444.90s |  which she got from Equivax.
444.90s - 446.82s |  And this had the very, very early firmware
446.82s - 448.10s |  with the bug symbols in there,
448.10s - 450.18s |  which was very, very helpful.
450.18s - 451.42s |  One thing which I figured out back then
451.42s - 452.62s |  is that the firmware is unprotected.
452.62s - 453.82s |  TLS is completely broken.
453.82s - 455.38s |  There's no integrity protections.
455.38s - 457.66s |  You can root a device by a man in the middle
457.66s - 460.22s |  and you can just push like malicious OT updates.
460.22s - 461.74s |  But one of the problems was the hardware
461.78s - 462.62s |  was extremely weak.
462.62s - 464.74s |  So it wasn't really interested for us.
464.74s - 467.06s |  And as a result, we never published the results on that
467.06s - 469.06s |  because I mean, why would we?
469.06s - 471.30s |  So over time, we had to develop new methods
471.30s - 472.86s |  because it became more and more difficult
472.86s - 476.58s |  to root Roborock and Xiaomi devices.
476.58s - 479.70s |  So in 2021, I released a method
479.70s - 483.78s |  for newer like Roborock devices and also Dreamy.
483.78s - 486.18s |  By the way, the CyberDog is a Dreamy device technically,
486.18s - 488.18s |  where we were able to bypass secure boot
488.18s - 491.02s |  and some security features to be able to root it again.
491.02s - 493.86s |  And it became again complicated in 2023.
494.74s - 497.70s |  We were looking again at Dreamy, Roborock, Navel, and Shark
497.70s - 499.06s |  and figured out a secure would bypass
499.06s - 501.82s |  for like some bootloader magic.
501.82s - 503.02s |  The issue with all of these
503.02s - 506.90s |  is finding new routing methods become very annoying
506.90s - 507.82s |  and it takes a long time.
507.82s - 510.18s |  For the last one, we need like basically multiple months.
510.18s - 511.70s |  So we tried to find like a new vendor
511.70s - 514.26s |  which we would attack again.
514.26s - 516.74s |  So we went back to Ecovacs.
516.74s - 518.94s |  And by that time, Ecovacs started to release
518.94s - 520.58s |  more and more powerful devices.
521.26s - 523.86s |  And they were very similar to other devices,
523.86s - 524.74s |  but they were lower price.
524.74s - 526.06s |  So this is like perfect.
526.06s - 528.02s |  So one of the first device which I analyzed back then
528.02s - 530.54s |  was then the D-Bot X1.
530.54s - 532.66s |  And basically, as soon as I unpacked it from the box,
532.66s - 533.90s |  it took me like exactly 30 minutes
533.90s - 535.14s |  to basically get root access
535.14s - 537.22s |  and have a modified file system on it.
537.22s - 539.02s |  So this was like a perfect target
539.02s - 542.58s |  for future endeavors with that company.
542.58s - 544.54s |  In the penalty of that, as mentioned before,
544.54s - 548.30s |  Braylin was messing with Ecovacs and Yeti robots.
548.30s - 550.30s |  And so it found very similar things.
551.22s - 552.34s |  One thing which I need to address
552.34s - 554.70s |  is like a lot of vendors, they saw my talks
554.70s - 556.34s |  and they started to obfuscate
556.34s - 559.18s |  or introducing countermeasures against our routing attempts.
559.18s - 561.86s |  For example, Shark Robot or like their contractor,
561.86s - 564.82s |  they kind of just like were hiding Vias and everything.
564.82s - 566.74s |  So they upgraded, we upgraded too.
566.74s - 568.18s |  Basically, we got an X-ray machine
568.18s - 570.22s |  and now we started to just X-ray things
570.22s - 573.66s |  because it's faster than just measuring through like traces.
573.66s - 578.46s |  All right, so let's talk about the Ecovacs ecosystem.
578.46s - 580.98s |  So why are we looking at Ecovacs generally?
581.82s - 584.02s |  It turns out that this company is fairly old.
584.02s - 587.06s |  They were founded back then in 1998 in China
587.06s - 590.70s |  and they produced initially like OEM vacuum cleaners.
591.70s - 593.70s |  Introduced their own brand of vacuum robot
593.70s - 596.18s |  in 2007 with a D-Bot.
596.18s - 598.86s |  And in 2020, we had the market share of 17%.
598.86s - 600.66s |  So this was like basically the latest number
600.66s - 602.06s |  which we were able to find.
602.06s - 604.06s |  We couldn't find a newer number.
604.06s - 606.22s |  And so back when we were second to iRobot.
606.22s - 608.50s |  But the global market share is way higher nowadays.
608.54s - 610.14s |  We assume that they're probably like
610.14s - 613.86s |  probably the top two or top three manufacturers.
613.86s - 617.54s |  So their market cap is like five times higher as iRobot.
618.70s - 620.78s |  They produce a bunch of different products.
620.78s - 621.94s |  So for example, vacuum robots,
621.94s - 623.78s |  which is kind of what you would expect,
623.78s - 624.98s |  but they have also window cleaners,
624.98s - 626.38s |  which clean your window.
626.38s - 628.58s |  They have mobile air purifiers.
628.58s - 629.50s |  They have lawn mowing robots
629.50s - 631.26s |  and they have some other products.
632.30s - 633.90s |  So let's take a look at the hardware.
633.90s - 635.54s |  Well, so typically if you look at the hardware,
635.54s - 636.58s |  we kind of try to figure out, okay,
636.58s - 638.26s |  what's going on on the device.
639.02s - 640.98s |  And so what we have on one side is the SoC,
640.98s - 643.02s |  which is basically a running Linux.
643.02s - 646.02s |  It's responsible for navigation, mapping, and connectivity.
646.02s - 647.38s |  So it's connected to the storage.
647.38s - 649.26s |  It has like access to sensors like LiDAR,
649.26s - 650.94s |  camera, microphones.
650.94s - 652.06s |  It has like the connectivity,
652.06s - 655.42s |  so Wi-Fi, Bluetooth, and Ultra Wideband in some devices.
655.42s - 658.38s |  On the other side, we have the MCU, the microcontroller,
658.38s - 660.78s |  which is responsible for all the retail operation stuff.
660.78s - 663.50s |  So controlling the wheels, infrared sensors,
663.50s - 665.34s |  fans, and drop sensors.
665.34s - 667.42s |  Typically you want to have your drop centers
667.46s - 668.46s |  real-time operated,
668.46s - 670.62s |  because you don't want to wait one second
670.62s - 672.82s |  until the robot is already flying down the stairs.
672.82s - 674.46s |  So you want to do that real-time.
675.58s - 677.34s |  All right, so one of the first devices,
677.34s - 679.98s |  which I saw, I mentioned back in 2018,
679.98s - 681.30s |  was the D-Bot 900 series.
681.30s - 683.06s |  This was like basically like a rocket ship
683.06s - 685.66s |  with one core, 128 megabyte of RAM,
685.66s - 687.46s |  and 256 megabyte of NAND flash.
687.46s - 689.70s |  So not great.
689.70s - 691.34s |  Sensor-wise, we had back then LiDAR already,
691.34s - 693.38s |  infrared sensors, but it was just too weak.
693.38s - 695.02s |  So even if you have root access,
695.02s - 696.46s |  there's literally nothing we can run on that
696.46s - 697.94s |  because it runs out of memory.
699.06s - 700.94s |  Thankfully, later on, they started to kind of put
700.94s - 702.30s |  like more performance chips into it.
702.30s - 707.30s |  So the X1 in this case was interesting and cheap,
707.90s - 710.70s |  and they recycled from there on the hardware
710.70s - 711.66s |  for multiple generations.
711.66s - 714.10s |  So for us, it makes sense to kind of look into that
714.10s - 715.90s |  because we basically could repeat our knowledge
715.90s - 717.02s |  like on newer models.
718.14s - 722.42s |  In our example, the X1 was also interesting
722.42s - 724.06s |  because it had a station.
724.06s - 726.06s |  So just both station and robot
726.06s - 727.46s |  were creating their own Wi-Fi network.
727.46s - 729.02s |  We had a voice assistant, so microphones,
729.02s - 730.26s |  which is always good.
730.26s - 731.86s |  And we had the remote view feature,
731.86s - 733.62s |  so you could access the camera remotely,
733.62s - 736.02s |  which is always great for hacking.
736.02s - 738.22s |  If you take a look at the hardware,
738.22s - 739.58s |  it's more or less the same hardware as the X2,
739.58s - 742.06s |  so the newer generations like which we have here.
742.06s - 745.02s |  And it's based on the Horizon X3 SoC.
745.02s - 748.74s |  So this is a quad-core ARM Cortex-A
748.74s - 750.30s |  with like a Cortex-R in it,
750.30s - 753.06s |  and it has also AI acceleration on the same chip.
753.90s - 755.62s |  They use two gigabyte of RAM,
755.62s - 757.30s |  512 megabyte of SPI flash,
757.30s - 762.14s |  and a GD32 MCU, which is basically like a copycat STM32.
762.14s - 763.86s |  The X2, by the way, they use EMMC flash
763.86s - 765.58s |  because they figured out they don't have enough flash,
765.58s - 767.42s |  so we kind of needed more stuff.
767.42s - 769.50s |  One chip which was especially interesting for us
769.50s - 772.86s |  is they have a special chip for voice processing,
772.86s - 774.82s |  which is the Baidu AI chip,
774.82s - 776.14s |  and it has its own firmware,
776.14s - 779.30s |  and they supposedly use it for regular detection,
779.30s - 780.78s |  but who knows?
781.78s - 784.10s |  So let's talk about the sensors.
784.10s - 786.62s |  Well, the X1 has a LiDAR sensor, which is kind of cool.
786.62s - 788.82s |  It has a microphone array for whatever reason,
788.82s - 792.18s |  or for the voice assistant, but I mean, why would you use it?
792.18s - 793.70s |  And it has camera and line lasers,
793.70s - 796.86s |  so basically to detect objects in front of it.
796.86s - 798.50s |  And it has obviously a lot of infrared sensors
798.50s - 800.18s |  to kind of detect if it runs into something,
800.18s - 801.42s |  if it like drops from somewhere,
801.42s - 803.38s |  or if it, you know, runs over your cat.
804.66s - 807.78s |  A device which is very, very similar is the AirBot Z1,
807.94s - 810.82s |  which we call the SpyBot out of reasons.
811.54s - 813.46s |  It was released last year.
813.46s - 816.10s |  It's based on the same design like as the X1,
816.10s - 819.10s |  but it has one additional camera and six microphones,
819.10s - 820.34s |  and the features of that is,
820.34s - 822.74s |  well, you can use it as a Bluetooth speaker,
822.74s - 824.34s |  which follows you.
824.34s - 827.06s |  It's an air filter and a humidifier,
827.06s - 829.54s |  and it has a home patrol mode,
829.54s - 831.58s |  so it will drive around in your home,
831.58s - 834.62s |  and if an intruder gets in, it will kind of alarm you.
834.62s - 837.30s |  The thing is, you can also use it to talk to someone
837.30s - 838.90s |  at home, and basically if you walk away,
838.90s - 839.90s |  the robot will kind of follow you
839.90s - 841.50s |  and kind of focus on your face.
842.22s - 845.14s |  The cool thing here is you basically get two robots
845.14s - 846.34s |  for the price of one.
846.34s - 849.22s |  What they did is they basically recycled their old robots,
849.22s - 851.82s |  so the top part of the air purifier
851.82s - 854.38s |  is basically an X1, a vacuum robot.
854.38s - 858.10s |  The bottom part is an old 900 series device,
858.10s - 859.30s |  and there's an ethernet cable
859.30s - 861.78s |  which runs through the whole big thing,
861.78s - 864.18s |  which connects both of them via ethernet,
864.18s - 865.70s |  so very efficient.
866.70s - 870.78s |  So, let's talk about the lawn mowing robots.
870.78s - 873.54s |  They have been released in 2023 in Europe,
873.54s - 875.86s |  and this year, I think recently post-CES,
875.86s - 877.14s |  this year in US.
878.26s - 879.94s |  It's kind of cool because they are for navigation,
879.94s - 883.26s |  GPS, but also they use visual and time-of-flight cameras,
883.26s - 885.30s |  so they can kind of create a point cloud,
885.30s - 889.78s |  and they use ultra-wide-band beacons to kind of navigate,
889.78s - 890.78s |  and feature-wise, you know,
890.78s - 892.54s |  you can put an LTE module into them,
892.54s - 894.18s |  so you can connect them from, you know,
894.46s - 897.58s |  even if the Wi-Fi doesn't have, you know, connectivity,
897.58s - 900.02s |  and again, they have a remote view and patrol function,
900.02s - 901.62s |  so they will patrol your garden.
902.62s - 904.02s |  Now, you might be paranoid and say, like,
904.02s - 906.26s |  wait, I don't wanna, you know,
906.26s - 907.86s |  accompany, like, watch my garden.
907.86s - 909.70s |  Of course, don't worry, they're certified.
909.70s - 911.94s |  They say, like, yeah, you can watch your garden,
911.94s - 914.58s |  patrol your garden, but your data stays safe,
914.58s - 917.58s |  and we are certified because we use encryption and stuff.
918.78s - 919.86s |  If you ever run into the issue
919.86s - 922.78s |  to reverse-engineer devices like that,
922.78s - 925.06s |  be prepared that you need a lot of space.
925.06s - 927.74s |  So, this has been a lot of screws,
928.70s - 931.02s |  and it took, like, hours and hours and hours
931.02s - 933.42s |  to disassemble it, and even more hours to reassemble it,
933.42s - 934.38s |  and two screws were missing,
934.38s - 936.38s |  and I still don't know where they are.
936.38s - 939.98s |  So, always keep track of your screws.
939.98s - 943.02s |  So, if you take a look at the Lawnmower,
943.02s - 946.34s |  it has an octa-core Rockchip SoC
946.34s - 949.06s |  with an AI accelerator, like a GPU, basically,
949.06s - 952.46s |  four gigabyte of RAM, 16 gigabyte of eMMC flash,
953.14s - 953.98s |  and it has multiple MCUs.
953.98s - 956.22s |  So, it has a display, which you can control.
956.22s - 958.42s |  It has its own, like, STM32, like, display.
958.42s - 961.38s |  I tried to run Doom, but it doesn't have enough flash, so.
962.54s - 963.86s |  And also, even the knife assembly,
963.86s - 966.02s |  which kind of controls, like, the cutting,
966.02s - 967.38s |  it has also its own MCU.
968.46s - 971.38s |  Sensor-wise, it has a 360-degree camera on top.
971.38s - 974.22s |  It has a front camera, it has a time-of-flight sensor,
974.22s - 975.98s |  it has rain detectors, it has bump switches,
975.98s - 978.14s |  so they kind of, like, put every sensor in there,
978.14s - 979.78s |  which you can have.
979.82s - 982.78s |  Thankfully, they gave us a lot of debug ports.
982.78s - 984.82s |  So, all the models since 2019
984.82s - 986.66s |  have very similar debug ports,
986.66s - 990.70s |  which gives you UART, 3.3 volt, SWG, and USB.
990.70s - 993.94s |  And it's easy to debug, and you can root a device,
993.94s - 995.94s |  or get a root shell, basically,
995.94s - 1001.79s |  without breaking any of the warranty seals.
1001.79s - 1003.71s |  Cool, now let's talk about some of the software
1003.71s - 1005.23s |  that Ecovacs employs.
1005.23s - 1007.91s |  So, these things run on Linux OS.
1007.91s - 1010.67s |  They're basically just a mobile Linux server.
1011.67s - 1013.55s |  They are using ROS, Melodic Merenia,
1013.55s - 1016.39s |  for the robotics portion, or handling.
1016.39s - 1020.03s |  They also have a custom, like, software suite called Medusa.
1020.03s - 1022.27s |  And there's a couple of interesting software packages
1022.27s - 1026.75s |  that are on the robot, including Python 2.7,
1026.75s - 1029.03s |  which is very handy for hackers.
1029.03s - 1032.23s |  They also use the AWS Kinesis SDK
1032.23s - 1034.75s |  for remote camera access outside of China,
1034.75s - 1037.11s |  and the Alibaba Alien SDK
1037.11s - 1039.75s |  for remote camera access inside of China.
1039.83s - 1041.91s |  So, the good thing is that there are little
1041.91s - 1043.63s |  to no protections against rooting,
1043.63s - 1045.19s |  which is what hackers like.
1046.15s - 1048.39s |  So, let's briefly touch on some AI models
1048.39s - 1049.23s |  that they're using.
1049.23s - 1052.55s |  They use TensorFlow and OpenCV for detection.
1052.55s - 1055.67s |  Some of the typical objects include furniture,
1055.67s - 1059.83s |  cables, pets, and pet remains.
1059.83s - 1062.63s |  The lawnmower also can detect small animals in face recon,
1062.63s - 1065.23s |  but on the right is a screenshot
1065.23s - 1069.11s |  of our favorite object that it can detect.
1071.71s - 1074.75s |  So, just wanted to touch on firmware updates.
1074.75s - 1076.71s |  We've been keeping track of their firmware updates
1076.71s - 1078.51s |  since we've obtained the robot.
1080.23s - 1083.03s |  The US version was released in 2023,
1084.03s - 1088.03s |  and they, why did that go so quick?
1089.47s - 1091.99s |  They had been putting out, like,
1091.99s - 1095.23s |  monthly firmware updates since then,
1095.23s - 1098.35s |  and they stopped in March 2024.
1098.35s - 1101.23s |  So, we're kind of questioning if this is the end of life
1101.23s - 1104.23s |  for this, like, pretty new product.
1104.23s - 1106.55s |  Their changelogs are also not very informative.
1106.55s - 1109.35s |  So, we have a theory that they are dropping
1109.35s - 1111.95s |  device support very quickly, which is unfortunate.
1113.75s - 1116.87s |  So, the mobile app structure, there's a,
1116.87s - 1120.67s |  there's, like, a core app, the EchoVox Home app,
1120.67s - 1123.67s |  and then when you add robots,
1123.67s - 1126.03s |  their plugins are downloaded dynamically
1126.03s - 1128.23s |  every time you add one to your account.
1128.23s - 1131.83s |  So, now we'll talk about security and privacy.
1131.83s - 1135.39s |  So, when we first started researching EchoVox robots,
1135.39s - 1137.71s |  we wanted to see if they had, like, a bug bounty program,
1137.71s - 1140.75s |  and this is the only page that we found
1140.75s - 1142.63s |  for their security program.
1142.63s - 1144.75s |  They claim that they have, like, a public bulletin board
1144.75s - 1148.19s |  if you report bugs to their, just, kind of, email address.
1148.19s - 1149.87s |  They want you to email bugs to them,
1149.87s - 1152.95s |  which is not, like, a secure method to do that, generally.
1152.95s - 1156.79s |  So, yeah, there's no real collaborative bug bounty program,
1156.79s - 1159.19s |  and they don't respond to our reports or emails.
1159.19s - 1161.71s |  They just, kind of, ignore us.
1161.71s - 1165.83s |  Some bugs are silently patched, we've noted.
1165.83s - 1168.27s |  But their privacy policy, it doesn't,
1168.27s - 1170.79s |  there's no guarantees that the data stays in your locale,
1170.79s - 1172.07s |  which is kind of scary.
1173.63s - 1177.03s |  Regional AWS services are used for the EU and US,
1177.03s - 1178.83s |  and China, of course.
1178.83s - 1181.59s |  Some photos and videos are sent to Ali Cloud Video
1181.59s - 1184.31s |  for AI analysis in certain models.
1184.31s - 1185.95s |  They claim that you have to opt in.
1185.95s - 1189.43s |  I'm not sure if they honor that, but more research is needed.
1189.43s - 1192.47s |  But, of course, lots of telemetry data is collected,
1192.47s - 1195.35s |  as with most IoT devices these days.
1195.35s - 1197.67s |  So, what are we concerned about?
1197.67s - 1200.39s |  These vacuums have microphones and cameras,
1200.39s - 1202.99s |  so can they be enabled remotely without user notice,
1202.99s - 1205.67s |  and where's the data sent to?
1206.67s - 1208.31s |  And, of course, we need to be concerned
1208.79s - 1211.03s |  with AI and privacy, so why do these robots
1211.03s - 1215.11s |  need face-recon AI models, and is this telemetry data
1215.11s - 1219.00s |  being used to train their AI?
1219.00s - 1224.00s |  So, after Dennis's DEF CON talk last year
1224.16s - 1226.84s |  about Roborock vacuums,
1226.84s - 1229.12s |  they posted this really interesting blog post
1229.12s - 1232.40s |  titled, Can Robot Vacuum Cameras Be Hacked?
1232.40s - 1235.40s |  And they claim that their cameras are, like,
1235.40s - 1237.56s |  encrypting all data gathered by the device,
1237.56s - 1241.44s |  but, who knows?
1243.40s - 1246.16s |  So, they post a bunch of certifications
1246.16s - 1248.04s |  from Tube Rhineland, which is,
1248.04s - 1249.32s |  that costs quite a bit of money,
1249.32s - 1252.88s |  and they claim to be meeting and exceeding all standards.
1252.88s - 1254.64s |  They even have, like, a splash screen
1254.64s - 1256.24s |  when you load their mobile app,
1256.24s - 1258.56s |  claiming that they meet ISO standards.
1258.56s - 1261.76s |  Again, not in line with our findings,
1261.76s - 1263.88s |  which we will talk about now.
1263.88s - 1265.80s |  So, data harvesting.
1266.68s - 1270.20s |  The mobile apps and the robot are pretty chatty.
1270.20s - 1273.00s |  Just a lot of communication with the EchoVac servers.
1273.00s - 1274.84s |  Their key data collection API endpoints
1274.84s - 1277.12s |  are called Big Data and Data Upload,
1277.12s - 1280.08s |  so it's not like they're hiding what they're doing.
1280.08s - 1282.36s |  They're pretty upfront about it.
1282.36s - 1284.84s |  So, some example of telemetry data that's collected
1284.84s - 1288.24s |  are live coordinates of the robot location in your home,
1288.24s - 1290.68s |  Wi-Fi access points, network data,
1290.68s - 1293.00s |  and additional debug information is sent
1293.00s - 1295.72s |  to EchoVac servers if the robot gets stuck somewhere,
1297.04s - 1300.24s |  and possibly AI pictures, even if not opted in.
1300.24s - 1302.60s |  So, what are they retaining in their cloud?
1302.60s - 1305.36s |  Maps and pictures are stored in a NoSQL database,
1305.36s - 1308.96s |  so anyone who knows the object ID of the map
1308.96s - 1310.08s |  can access that data.
1310.08s - 1314.16s |  There's no access controls on these points of information,
1314.16s - 1316.32s |  which is, I don't know, I don't want random people
1316.32s - 1320.04s |  with an EchoVac account to be able to see a map of my house.
1320.04s - 1322.52s |  The maps associated with the robots,
1322.52s - 1324.48s |  they seem to remain on servers,
1324.48s - 1326.60s |  even if you do a factory reset
1326.60s - 1328.92s |  or repair the device to a different account.
1328.92s - 1331.76s |  Also, deleting your actual EchoVac's account has no effect.
1331.76s - 1334.20s |  The map remains indefinitely on their servers,
1334.20s - 1338.44s |  even if you supposedly remove all of your information
1338.44s - 1340.04s |  from your account.
1341.20s - 1343.64s |  So, oh, what's wrong?
1345.12s - 1346.92s |  Oh, sorry, skipped over one point.
1348.16s - 1352.16s |  Oh, the JWTs that are used for authentication are also,
1352.16s - 1354.48s |  they also remain valid after you delete your account,
1354.48s - 1356.24s |  so you can continue using your account,
1356.24s - 1357.72s |  even though you deleted it.
1359.68s - 1361.96s |  And access to the robot is still possible.
1361.96s - 1363.92s |  So, not ideal security.
1365.28s - 1367.52s |  So, what are they storing on the device?
1367.52s - 1369.08s |  There's a user data partition,
1369.08s - 1370.96s |  and it's not encrypted, of course.
1370.96s - 1372.96s |  Why would they encrypt that?
1372.96s - 1375.64s |  There's lots of logs, configs, maps, and pictures
1375.64s - 1377.52s |  that are stored on this partition,
1377.52s - 1379.16s |  including the live video pin,
1379.16s - 1381.32s |  which is stored in an MD5 hash,
1381.32s - 1384.64s |  and the robot lawnmower, the lawnmower robot pin,
1384.64s - 1386.48s |  which is stored in plain text.
1386.48s - 1388.00s |  There's also Wi-Fi credentials
1388.00s - 1390.84s |  and your neighbor's Wi-Fi access points,
1390.84s - 1392.68s |  so they're kind of just mapping the whole world
1392.68s - 1394.80s |  with their robot vacuums.
1394.80s - 1398.60s |  There's also the HelloYiku traffic logs,
1398.60s - 1401.44s |  which are, that's their voice assistant,
1401.44s - 1404.92s |  so keeping track of what you say to your robot.
1404.92s - 1407.84s |  So, always keep in mind that if you're selling a used device
1407.84s - 1409.76s |  that even if you factory reset it,
1409.76s - 1411.28s |  there's a risk to your privacy.
1412.32s - 1413.64s |  All right.
1413.64s - 1417.40s |  And additionally, Flashware leveling will always be a problem,
1417.40s - 1419.96s |  but that's for a different talk.
1419.96s - 1422.16s |  So, one of our big findings
1422.16s - 1427.16s |  was that they did not configure their TLS properly.
1427.16s - 1429.88s |  So, the EchoVax home app mobile application
1429.88s - 1432.12s |  correctly checks certificates,
1432.12s - 1435.72s |  but the robot-specific plugins don't always do that.
1435.72s - 1439.72s |  So, the plugins sometimes accept self-signed certificates,
1439.72s - 1443.24s |  which is very risky to use on an insecure Wi-Fi network,
1443.24s - 1446.60s |  like at an airport, hotel, or the DEF CON open Wi-Fi.
1446.60s - 1448.84s |  Please don't do that.
1448.84s - 1451.84s |  There's no warning or error shown in the app,
1451.84s - 1456.92s |  and this traffic will leak your authentication tokens
1456.92s - 1459.08s |  and will allow the attacker to have access to your account
1459.08s - 1461.12s |  for up to seven days
1461.12s - 1464.76s |  and access to video feeds, like everything.
1464.76s - 1465.92s |  Here's an example of the traffic
1465.92s - 1467.32s |  that we were able to intercept.
1467.32s - 1471.92s |  We've redacted the authentication token
1471.92s - 1475.60s |  just for good measure.
1475.60s - 1477.72s |  And additionally, they misconfigured TLS
1477.72s - 1480.12s |  in their robots themselves as well.
1480.12s - 1481.88s |  The MQTT and TLS connections,
1481.88s - 1485.80s |  they accept self-signed certificates on some devices,
1485.80s - 1489.96s |  which allows for man-in-the-middle attacks
1489.96s - 1496.20s |  and over the OTA updates can be injected.
1496.24s - 1498.84s |  The tool that we use for this is CertMidim by Apple Oxman.
1498.84s - 1500.32s |  I highly recommend it.
1500.32s - 1503.56s |  It's pretty fun.
1503.56s - 1505.96s |  And this is partially one of the reasons
1505.96s - 1506.92s |  why this is happening.
1506.92s - 1509.96s |  They are running bash scripts from the robot
1509.96s - 1514.52s |  with no check certificate on WGIT.
1514.52s - 1516.88s |  Not ideal.
1516.88s - 1520.92s |  So, another thing that we found was that the robots
1520.92s - 1522.88s |  have audio warnings when the camera is accessed
1522.88s - 1524.88s |  from the mobile app at the start of access
1524.88s - 1527.40s |  and every five minutes afterwards.
1527.40s - 1529.64s |  A sound file is played.
1529.64s - 1532.40s |  So, the problem is that local sound files
1532.40s - 1534.20s |  are stored on the data partition,
1534.20s - 1537.40s |  which isn't encrypted and can just generally be accessed.
1537.40s - 1541.68s |  So, the sound files can be deleted and replaced.
1541.68s - 1546.04s |  So, we can replace the warning audio with an empty file.
1546.04s - 1549.04s |  So, nothing will happen when you access live video feed,
1549.04s - 1552.80s |  which we'll tell you why that's a huge problem in a second.
1552.80s - 1560.57s |  So, this finding was reported at CCC last year,
1560.57s - 1562.93s |  but they fixed it and then we broke it again.
1562.93s - 1565.17s |  So, we're going to tell you about it again.
1565.17s - 1567.13s |  So, the app allows for live video
1567.13s - 1569.25s |  and audio access on the robot.
1569.25s - 1572.45s |  And this functionality is provided by AWS Kinesis.
1572.45s - 1574.97s |  The owner and shared users of the EchoVax account
1574.97s - 1577.05s |  can access this feature.
1577.05s - 1578.81s |  It is protected by a pin
1578.81s - 1581.89s |  and the pin will be asked for before connecting.
1581.89s - 1584.81s |  And it can only be changed and reset by the account owner.
1584.81s - 1587.61s |  And the reset requires account credentials.
1587.61s - 1589.89s |  So, here's how the pin works.
1589.89s - 1593.93s |  Mobile app will ask the user for the pin.
1593.93s - 1596.93s |  The EchoVax cloud will act as a kind of broker.
1596.93s - 1598.85s |  So, now we ask the robot,
1598.85s - 1601.85s |  hey, does this pin hash match with your local hash
1601.85s - 1603.21s |  that's stored on the robot?
1603.21s - 1607.09s |  If yes, the robot decides that it is correct,
1607.09s - 1610.09s |  sends that response to the mobile app.
1610.09s - 1614.53s |  And then the WebRTC session over AWS Kinesis
1614.53s - 1616.09s |  will be started.
1616.09s - 1621.26s |  And both will join the AWS Kinesis session.
1621.26s - 1623.82s |  So, what happens if the pin is incorrect?
1623.82s - 1625.10s |  We go through that same process,
1625.10s - 1626.46s |  but with an incorrect pin.
1627.94s - 1631.49s |  Why?
1631.49s - 1636.35s |  Sorry, I don't know how to use PowerPoint.
1636.35s - 1637.19s |  Okay.
1637.19s - 1641.16s |  So, what is it doing?
1644.16s - 1645.00s |  Nothing.
1645.00s - 1645.84s |  Display's stuck.
1651.15s - 1652.51s |  Okay.
1652.51s - 1653.83s |  Sorry about that.
1653.83s - 1654.67s |  Okay.
1654.67s - 1656.87s |  So, we asked ourselves,
1656.87s - 1660.11s |  are the pin verification and WebRTC session tied together?
1660.11s - 1664.89s |  So, why is it?
1664.89s - 1666.17s |  This is truly annoying.
1667.29s - 1668.49s |  Why is it doing this?
1673.50s - 1674.34s |  Okay, sorry.
1674.34s - 1680.50s |  Animations have a mind of their own right now.
1680.50s - 1681.82s |  Oh.
1681.82s - 1684.10s |  That's fine, just go to animation.
1684.10s - 1685.98s |  It's slides by themselves.
1685.98s - 1689.02s |  I can't stop it.
1689.02s - 1690.66s |  This is entirely automated.
1690.66s - 1691.50s |  There's like a button
1691.50s - 1694.22s |  that's pressed down right now automatically.
1695.06s - 1706.11s |  Sorry for that.
1706.11s - 1707.47s |  You need to turn animations on.
1707.47s - 1715.34s |  I don't know how to.
1715.34s - 1716.26s |  Okay, it's just.
1716.26s - 1717.46s |  No, it's not.
1726.17s - 1728.17s |  Anyway, the takeaway message here is,
1728.17s - 1729.49s |  we don't know why the animations are broken,
1729.49s - 1732.13s |  but basically it doesn't matter
1732.13s - 1733.61s |  if the pin is correct or not correct.
1733.61s - 1735.69s |  You can convince the app that the pin is still correct
1735.69s - 1738.01s |  and we'll just establish a session.
1738.01s - 1739.37s |  And we have a demo here.
1743.82s - 1745.54s |  Do you know how to disable?
1745.54s - 1760.58s |  Sorry.
1760.58s - 1761.66s |  Dennis, disable the track.
1761.66s - 1779.05s |  Sorry, that's where it worked before.
1779.05s - 1780.01s |  Where do you see that?
1780.01s - 1786.30s |  It might be on it's way.
1786.30s - 1788.30s |  Just try the slideshow again.
1790.34s - 1791.18s |  I mean, they're fine.
1791.18s - 1792.02s |  I think there's some pictures.
1792.02s - 1794.06s |  Yeah, just try the slideshow.
1794.06s - 1797.35s |  See something?
1797.35s - 1798.79s |  That starts from the beginning.
1798.79s - 1800.03s |  No, no, just wait.
1800.03s - 1800.87s |  This one?
1800.87s - 1801.71s |  Yeah.
1801.71s - 1806.87s |  Okay.
1806.87s - 1808.71s |  Okay, we have automated slides for some reason,
1808.71s - 1810.31s |  so we're just gonna work with it.
1810.31s - 1812.47s |  Okay, we can't work with this.
1812.47s - 1814.03s |  Fuck me.
1814.03s - 1815.75s |  Why is this happening?
1815.75s - 1825.36s |  This is really awful.
1832.79s - 1833.95s |  Is it working?
1833.95s - 1834.79s |  Okay, now it's working.
1834.79s - 1835.79s |  Okay.
1835.79s - 1836.79s |  Trust Microsoft.
1838.55s - 1839.51s |  Sorry about that.
1839.51s - 1840.71s |  Okay, so.
1842.11s - 1845.55s |  Right, so as we were trying to go through.
1849.23s - 1861.78s |  Oh my God.
1861.78s - 1863.50s |  Okay, so we're trying to verify the pin,
1863.50s - 1865.06s |  but the pin is incorrect.
1865.06s - 1867.82s |  So are these tied together?
1867.82s - 1868.98s |  The WebRTC session.
1868.98s - 1872.18s |  So can we intercept this request
1872.22s - 1875.02s |  or the response that pin is incorrect
1875.02s - 1878.50s |  and tell the app that the pin is actually correct?
1878.50s - 1880.70s |  And the answer was, yes, we were able to do that.
1880.70s - 1883.02s |  So now we have a malicious session
1883.02s - 1885.50s |  and we have an AWS Kinesis stream.
1886.54s - 1888.94s |  So can we bypass that altogether
1888.94s - 1890.94s |  and just patch the pin query out of the app?
1890.94s - 1893.22s |  And again, yes, we were able to do that,
1893.22s - 1895.06s |  but we just wanna make it abundantly clear
1895.06s - 1898.42s |  that this is an issue with Echovax's implementation.
1898.42s - 1900.18s |  This is not an issue with AWS.
1900.18s - 1903.18s |  So don't sue us AWS, please.
1903.18s - 1905.58s |  So in short, the pin protection,
1905.58s - 1907.46s |  pin protection is implemented in the app,
1907.46s - 1910.70s |  but it's client-based authentication and ACL enforcement.
1910.70s - 1911.94s |  So the robot doesn't keep track
1911.94s - 1913.74s |  of successful authentications.
1913.74s - 1915.26s |  The log of the video stream access
1915.26s - 1917.30s |  relies on the honesty of the app.
1917.30s - 1920.46s |  And this is really bad in combination with the TLS issues
1920.46s - 1922.62s |  that we just touched upon.
1922.62s - 1924.18s |  And it's even worse if the sound files
1924.18s - 1925.62s |  have been tampered with.
1925.62s - 1927.42s |  So here's just a video demo.
1927.42s - 1929.54s |  This was reported in 2023
1929.58s - 1931.86s |  and unsuccessful fix was pushed.
1931.86s - 1935.18s |  Some plugins were updated and no firmware fixes,
1935.18s - 1937.66s |  which is where the real problem was.
1937.66s - 1942.30s |  So we can downgrade the app with a bad plugin
1942.30s - 1943.70s |  and it still works.
1943.70s - 1945.22s |  So here's just a quick video demo.
1945.22s - 1946.62s |  This is just Burp Suite.
1946.62s - 1949.26s |  We have some find and replace queries to simplify it.
1950.30s - 1953.22s |  We enter a wrong pin, 111, a couple of times.
1954.78s - 1957.74s |  Not the right pin, so we continue.
1957.74s - 1960.70s |  Then we enable our find and replace queries in Burp Suite,
1961.54s - 1963.70s |  enter again the wrong pin,
1963.70s - 1967.14s |  and we are dropped into a video streaming session
1967.14s - 1971.74s |  and successfully bypass the pin mechanism.
1971.74s - 1975.68s |  And here we are.
1975.68s - 1976.52s |  Cool.
1978.84s - 1979.68s |  All right.
1979.68s - 1981.24s |  So let's talk about free lawnmowers.
1981.24s - 1983.20s |  Who wants a free lawnmower?
1983.20s - 1984.40s |  Okay, now you learn how.
1984.40s - 1985.92s |  Actually, please don't.
1985.92s - 1987.20s |  We're not free.
1987.20s - 1990.64s |  So the ECHO OS G1 has an anti-theft mechanism
1991.52s - 1992.68s |  where basically if you pick up the robot
1992.68s - 1997.24s |  and you don't trigger the alarm, basically,
1997.24s - 1999.44s |  you need to enter a pin to unlock it.
1999.44s - 2001.08s |  As an owner, you can also enable an alarm.
2001.08s - 2003.04s |  So basically if you pick it up or if someone picks it up,
2003.04s - 2004.52s |  some alarm will go off.
2004.52s - 2006.64s |  The problem here is, well, the pin is implemented
2006.64s - 2008.64s |  basically as you'll see in the Linux operation system
2008.64s - 2010.96s |  and the pin is stored just on a plain text file
2010.96s - 2011.92s |  on the robot.
2012.84s - 2014.96s |  The thing generally with lawnmowers
2014.96s - 2018.24s |  is that other lawnmowers have the same issue.
2018.24s - 2020.00s |  So as a general recommendation,
2020.00s - 2022.72s |  do not keep your mowers outside unprotected.
2022.72s - 2026.80s |  And we kind of hope that ECHOVACS and other vendors
2026.80s - 2030.12s |  would somehow find a more secure location for the pin,
2030.12s - 2031.72s |  for example, like in one of the MCUs
2031.72s - 2034.48s |  so to kind of have a better locking mechanism.
2035.32s - 2037.88s |  So let's talk about our main point today
2037.88s - 2040.40s |  and this is the Bluetooth remote code execution,
2040.40s - 2042.84s |  which we found at some point last year,
2042.84s - 2044.84s |  which we were hoping that we would patch until today,
2044.84s - 2046.84s |  but we didn't.
2046.84s - 2048.60s |  So what's it about?
2048.60s - 2052.00s |  So newer vacuum robots and all lawnmowing robots so far
2052.00s - 2054.92s |  use BLE, Bluetooth LE, basically for their provisioning.
2054.92s - 2056.40s |  So if you initially like kind of
2056.40s - 2057.80s |  pushed your Wi-Fi credentials onto it,
2057.80s - 2059.36s |  they have a mechanism for that.
2060.84s - 2062.04s |  For lawnmowers in particular,
2062.04s - 2063.32s |  the Bluetooth is always active
2063.32s - 2066.32s |  because we use it as a fallback way to control them.
2066.32s - 2068.32s |  And for vacuums, it's typically active
2068.32s - 2070.20s |  for the first 20 minutes after booting
2070.20s - 2073.20s |  and every time they reboot in the middle of the night
2073.20s - 2076.20s |  for like memory cleaning purposes.
2076.20s - 2077.04s |  There's also different ways
2077.04s - 2078.72s |  to kind of force a robot to reboot remotely,
2078.72s - 2081.12s |  but we don't want to talk about that yet.
2081.12s - 2083.36s |  So the communication between the app
2083.36s - 2085.20s |  and the robots over Bluetooth
2085.20s - 2088.92s |  is done by the GAT protocol basically.
2088.92s - 2091.16s |  And the payload is encrypted with a static AS key,
2091.16s - 2092.20s |  which is something similar.
2092.20s - 2093.36s |  It's not exactly that one,
2093.36s - 2095.32s |  but it's like one, two, three, four, five, six, seven,
2095.32s - 2098.12s |  eight EchoVacs, like something of that nature.
2099.20s - 2101.72s |  And the input validation of whatever happens
2101.72s - 2105.20s |  with the data afterwards is let's say not great.
2105.20s - 2107.08s |  And that's kind of bad if you think about
2107.08s - 2108.08s |  that they kind of say like,
2108.08s - 2109.48s |  oh, hey, our robots have cameras,
2109.48s - 2113.04s |  but trust us because we have been certified by the truth.
2114.40s - 2115.84s |  So, and as a quick reminder,
2115.84s - 2118.36s |  these devices have cameras and microphones.
2118.36s - 2120.44s |  So let's create a payload.
2120.44s - 2122.60s |  First, what do we want to execute is basically,
2122.60s - 2124.72s |  we want to play the boot music,
2124.72s - 2126.76s |  which you heard before on the robot.
2126.76s - 2128.96s |  So we take the command, which causes that
2128.96s - 2130.96s |  be embedded in some JSON payload
2130.96s - 2134.08s |  and we generate an encrypted payload.
2134.08s - 2135.80s |  And the payload looks something like this.
2135.80s - 2138.72s |  Basically, there's some, a bunch of tech stuff.
2138.72s - 2141.76s |  What happens if you send it to one of the robots,
2141.76s - 2144.04s |  basically, it will receive the payload.
2144.04s - 2145.72s |  It will decrypt it.
2145.72s - 2150.40s |  It will basically extract one particular argument from there
2150.40s - 2151.72s |  and will generate a command line
2151.72s - 2153.36s |  and put the argument, which we,
2153.36s - 2154.96s |  which is extracted into the environment,
2154.96s - 2156.56s |  into environment variable there.
2156.56s - 2158.32s |  So the command line, which we get at the end of the day
2158.32s - 2159.20s |  is something like this.
2159.20s - 2161.80s |  As you see, we basically use command injection there.
2161.80s - 2164.36s |  And then it will happily execute a thing as root.
2165.44s - 2166.40s |  And we tested this attack,
2166.40s - 2168.60s |  basically over a 50 meters distance
2168.60s - 2171.56s |  and even longer, like 100 meters for lawnmowers,
2171.56s - 2174.28s |  because we have a more powerful Bluetooth antenna.
2174.28s - 2177.88s |  So, and we have a demo here for like the G1,
2177.88s - 2179.88s |  which is like the lawnmowing robot.
2179.88s - 2184.56s |  What we do here is we sent the payload from an Android phone
2184.56s - 2187.24s |  and you will see that we will get a succession back
2187.24s - 2188.08s |  in a second.
2188.08s - 2189.32s |  So we're sending a payload now.
2189.32s - 2191.68s |  You saw it connected back to us, a reverse shell.
2192.52s - 2193.84s |  And now we can type on the robot
2193.84s - 2196.44s |  and, you know, we see that we are root.
2196.44s - 2198.16s |  We see what kind of version we're running.
2198.16s - 2200.56s |  And so the robot basically connected back to us.
2201.44s - 2206.04s |  We have also another demo, you know, more of the robot,
2206.04s - 2208.16s |  but I will skip that out of timing issues.
2209.08s - 2211.48s |  And we have also live demo potentially.
2212.60s - 2213.44s |  It takes one.
2213.44s - 2214.28s |  Okay, I skipped that too.
2214.28s - 2215.32s |  I will do it.
2215.32s - 2216.76s |  Okay, we have three minutes left.
2216.76s - 2218.72s |  So what can you do with that
2218.72s - 2222.48s |  if you have a BLE code execution thing?
2222.48s - 2223.92s |  So what we thought about is like,
2223.92s - 2225.32s |  hey, how can we chain that?
2225.32s - 2227.96s |  So generally, if you live in a very close populated area,
2227.96s - 2229.24s |  there might be more Ecovacs users
2229.24s - 2230.44s |  because especially like Ecovacs
2230.44s - 2232.00s |  is like one of the market leaders.
2232.00s - 2234.44s |  So what we can do is like we just attack an initial object
2234.44s - 2237.24s |  like a vacuum robot, sorry, lawnmowing robot,
2237.24s - 2238.28s |  put a payload onto that.
2238.28s - 2240.08s |  And then the robot has all the tools
2240.08s - 2241.72s |  which it needs to talk to other devices.
2241.72s - 2244.20s |  So it can infect the next robot, which has some distance.
2244.20s - 2246.52s |  And that one can infect again the next one.
2246.52s - 2247.48s |  And then it becomes a problem
2247.48s - 2249.36s |  because the third one might start to infect
2249.36s - 2251.44s |  back to the lawnmower.
2251.44s - 2253.64s |  So we just had it as a proof of concept.
2253.64s - 2255.56s |  We didn't want to have a whole routing protocol
2255.56s - 2256.40s |  to figure it out.
2256.40s - 2258.32s |  So, you know, sorry about that.
2259.52s - 2261.72s |  Let's talk about routing very, very quickly.
2261.72s - 2264.00s |  So there is a lot of countermeasures
2264.00s - 2265.08s |  in there in the software.
2265.08s - 2268.16s |  They use a lot of XOR and byte shifting to hide strings.
2268.16s - 2269.52s |  They have a lot of anti-debugging features.
2269.52s - 2272.08s |  For example, they detect LD preload in the buggers
2272.08s - 2274.72s |  and they use for some of the device, not all of them,
2274.72s - 2277.44s |  secure boot and Android verified boot.
2278.24s - 2279.08s |  So to get a root shell,
2279.08s - 2280.44s |  well, you can connect to a UART,
2280.44s - 2282.76s |  but the problem is every device has a different password
2282.76s - 2284.64s |  and it's hard-coded and it's, sorry,
2284.64s - 2287.04s |  it's not hard-coded, it's set at boot time.
2287.04s - 2289.12s |  And the function is very obfuscated,
2290.04s - 2291.72s |  but there's one particular tool which generates that.
2291.72s - 2293.16s |  And this is how it's basically generated.
2293.16s - 2295.40s |  So they take a bunch of like random MAC addresses
2295.40s - 2297.48s |  probably from the developer's computer at some point,
2297.48s - 2299.36s |  put the serial number in there, the model number,
2299.36s - 2301.84s |  create a SHA-256 and then make it base64
2301.84s - 2303.88s |  and that's the root password.
2303.88s - 2305.80s |  If you want to generate it for your own robot,
2305.80s - 2307.08s |  there's a tool you can just go there,
2307.72s - 2308.56s |  just enter your serial number
2308.56s - 2310.08s |  and it will kind of give you a password.
2310.08s - 2313.08s |  For firmware updates, they're encrypted, but not signed.
2313.08s - 2315.52s |  The key is kind of dynamically generated
2315.52s - 2316.96s |  and it's like, was kind of very difficult
2316.96s - 2320.32s |  to reverse engineer it, but it's basically AS128.
2320.32s - 2321.52s |  And this is the format string,
2321.52s - 2323.64s |  which we use to kind of generate a key,
2323.64s - 2325.84s |  which is like someone's random email address.
2325.84s - 2327.44s |  So we use like a bunch of random stuff,
2327.44s - 2329.36s |  mix it together and that's the AS key.
2330.36s - 2334.32s |  So as mentioned, some root file systems are not protected.
2334.32s - 2337.72s |  So we can just modify them, especially on X1 and Z1.
2337.72s - 2340.12s |  We can just repack it and have like our own system.
2340.12s - 2341.72s |  One thing which was kind of interesting for us
2341.72s - 2344.84s |  is we can get persistence in autostart.
2344.84s - 2347.00s |  We left the debugging feature on some of the devices
2347.00s - 2349.92s |  where if there's autostart folder exists on data,
2349.92s - 2352.32s |  which is not protected, we can put a shell file into it
2352.32s - 2354.44s |  and it will just happily execute it next time.
2354.44s - 2355.84s |  So it's not protected in any way,
2355.84s - 2357.84s |  so it's persistent forever.
2358.96s - 2360.36s |  Problem is for whatever reason,
2360.36s - 2361.84s |  on some of the devices we disabled it
2361.84s - 2364.30s |  and some of them not, I mean, it's kind of random.
2364.96s - 2367.40s |  If you wanna be persistent over factory sets,
2367.40s - 2370.00s |  well, they only delete the files.
2370.00s - 2372.48s |  So what do you think you can do is like basically,
2372.48s - 2374.40s |  because we don't recreate a file system,
2374.40s - 2377.04s |  just make files immutable with chatter
2377.04s - 2380.04s |  and that way, we will stay there forever.
2380.04s - 2382.58s |  Okay, I will talk really quick about the takeaway lessons.
2382.58s - 2384.84s |  First, can you rely on certifications?
2384.84s - 2387.26s |  No, you can't, bad news.
2387.26s - 2390.60s |  If you have vulnerable devices, like the lawnmower,
2390.60s - 2393.96s |  make sure that you turn it off until we push a fix.
2394.64s - 2396.60s |  Turn them off if you don't use them.
2396.60s - 2398.84s |  For devices which don't have BLE,
2398.84s - 2401.28s |  just don't update them if you wanna keep root access.
2401.28s - 2404.76s |  For vulnerable apps, don't connect to DEF CON Open, bad idea.
2405.68s - 2407.92s |  Use devices, be very careful with used devices.
2407.92s - 2409.96s |  They might come with a compromised firmware,
2409.96s - 2412.04s |  it's very difficult to verify.
2412.04s - 2415.42s |  If you do factory set before selling, do that definitely,
2415.42s - 2418.16s |  but be aware that it might not help against everything.
2419.32s - 2420.92s |  One thing, choose your partners wisely.
2420.92s - 2422.90s |  You can use these things as stalker tools.
2422.90s - 2425.78s |  I will skip that real quick and just finish with a summary.
2425.78s - 2428.84s |  So we have a root access on most of the released,
2428.84s - 2431.30s |  or I think actually all of the released Ecovacs robots,
2431.30s - 2433.70s |  so we can use the UART interface and authentication
2433.70s - 2435.06s |  to get into the device.
2435.06s - 2437.50s |  We can use the BLE remote code execution right now
2437.50s - 2440.22s |  to get initial access on devices remotely,
2440.22s - 2441.50s |  hopefully your own.
2441.50s - 2444.86s |  You can get persistence and run some custom firmware
2444.86s - 2447.26s |  on some of the devices which don't have protections.
2447.26s - 2450.76s |  We were able to verify the claims of the vendors
2450.76s - 2454.56s |  and we found a lot of security and privacy issues,
2454.56s - 2457.20s |  and this both applies to the app, robots, clouds,
2457.20s - 2459.12s |  and the certification, for whatever reason,
2459.12s - 2460.36s |  even didn't prevent that.
2460.36s - 2463.80s |  So I am not a firm believer in certifications nowadays.
2464.80s - 2468.04s |  But this allows you to look further into IoT devices
2468.04s - 2472.48s |  and into AI, and so hopefully this will be for our security,
2472.48s - 2474.04s |  for everyone's security.
2474.04s - 2476.44s |  Some quick announcements, I would like to thank Daniel,
2476.44s - 2478.64s |  Chris, Suen, Timster, and Apple.
2478.64s - 2479.76s |  And if you have any questions,
2479.76s - 2482.24s |  I think we have time, maybe we have time.
2482.24s - 2483.68s |  Actually, okay, you can ask those questions
2483.68s - 2485.36s |  whenever you're basically done.
2485.36s - 2486.80s |  Sorry for the problems.
2486.80s - 2488.76s |  Thank you for being here.
2488.76s - 2491.68s |  If you have any other questions, like a remote,
2491.68s - 2494.84s |  this is our email address, so feel free to reach out.
2494.84s - 2496.16s |  Yeah, thank you very much.