{
  "webpage_url": "local:1731818750:86981726:DEF CON 32 - Car Hacking Village - V2GEvil - Ghost in the wires - Pavel Khunt  Thomas Sermpinis a.k.a. Cr0wTom.mp4",
  "title": "DEF CON 32 - Car Hacking Village - V2GEvil - Ghost in the wires - Pavel Khunt  Thomas Sermpinis a.k.a. Cr0wTom.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 5.00s | This text was transcribed using whisper model: large-v2

 Hello. Hello, everyone. First of all, thank you for joining us today.
5.00s - 9.00s |  And our topic is V2G will ghost in the wires.
9.00s - 16.00s |  Where will we talk about the V2G and the cybersecurity issues that come with it.
16.00s - 22.89s |  First of all, let me introduce us. I am Pavel Kuhn, Cybersecurity Researcher.
22.89s - 29.89s |  And I'm currently working at Auxilium Pentest Lab with Tom.
29.89s - 35.89s |  Hello from myself too. I'm Tomas Rampinis. I'm the Technical Director of Auxilium Pentest Labs.
35.89s - 38.89s |  And yeah, let's start.
38.89s - 43.89s |  Our main goal today is to analyze the state of cybersecurity in the automotive industry.
43.89s - 49.89s |  And get an in-depth look on the EV architecture and this undeniably emerging attack vector.
49.89s - 55.89s |  We want to explore and understand the communication protocols used in EV charging today.
55.89s - 63.89s |  And introduce you to our security tool V2G that we built with Pavel during his university thesis.
63.89s - 68.89s |  And finally create a reference point for EV security research and evaluation.
68.89s - 72.89s |  Something that we feel our industry is lacking basically.
72.89s - 76.89s |  Alongside other vectors in the automotive security landscape.
76.89s - 81.89s |  So let's start with the introduction to vehicle cybersecurity.
81.89s - 86.89s |  And basically it goes without question that the automotive industry cannot be considered something new.
86.89s - 90.89s |  We are basically talking about 100 plus year old mechanical engineering industries.
90.89s - 92.89s |  And nothing is new about this.
92.89s - 96.89s |  The constant need for connectivity and technological aspects of it.
96.89s - 104.89s |  Push those companies to make restructuring and start implementing technologies.
104.89s - 108.89s |  That didn't have the know-how or the capacity to do so before.
108.89s - 110.89s |  Which is good for us.
110.89s - 112.89s |  That's why we are here in the end.
112.89s - 116.89s |  But really bad for the security and safety of the affected vehicles that we are testing.
116.89s - 122.89s |  On the other hand you have all these startups that started as technology companies first.
122.89s - 127.89s |  Which have a way better security posture and culture.
127.89s - 131.89s |  But the industry as a whole struggles for the last decade.
131.89s - 134.89s |  And to be honest I cannot see a clear light in this path.
137.87s - 141.87s |  Isolating the part we will focus in this talk.
141.87s - 145.87s |  We have the emerging industry of electric and hybrid vehicles.
145.87s - 148.87s |  Mainly developed to decentralize pollution.
148.87s - 150.87s |  And make better use of clean energy solutions.
150.87s - 157.87s |  And additionally you have several advantages in comparison to internal combustion engine vehicles.
157.87s - 160.87s |  For example heavy gains in speed and efficiency.
160.87s - 163.87s |  And while early models used basic charging.
163.87s - 169.87s |  The last decade charging standards are applied and enforced in many ways.
169.87s - 175.87s |  Which led to the standardization of the ports, protocols and underlying data.
175.87s - 179.87s |  In a wide range of applicability for different continents and standards.
179.87s - 184.87s |  And this is of course in addition to the digital communication needed during charging.
184.87s - 190.87s |  Which expanded the attack surface of the vehicles as we knew from them before.
190.87s - 196.87s |  And created new attack vectors that we can start playing with.
196.87s - 203.87s |  What I'm saying here is that it's not something new or groundbreaking by any means.
203.87s - 207.87s |  But the state of charging security is a barely touched topic by researchers.
214.30s - 218.30s |  And here we have a really simple representation of modern vehicle.
218.30s - 221.30s |  Which normally includes a bunch of interconnected ECUs.
221.30s - 224.30s |  Responsible for different functionality in the vehicle.
224.30s - 230.30s |  This can be from single headlight ECUs to huge DC-DC converters.
230.30s - 237.30s |  And what we see though is that while this vehicle till now was reasonably isolated by the outside world.
237.30s - 243.30s |  Now we have a new externally accessible port which connects to a charging station.
243.30s - 245.30s |  And this leaves a big room for error.
245.30s - 250.30s |  And if not properly implemented and designed several unexpected instances can occur.
250.30s - 256.30s |  And while architecture and vehicle design of interconnected vehicles might not seem as important.
256.30s - 263.30s |  There are numerous instances that they played a big part of how severe our findings are during a pen test.
263.30s - 269.30s |  And how in the end can or cannot affect the safety of the driver, passengers or even pedestrians.
270.30s - 277.30s |  And as we keep digging deeper, let's discuss a bit about charging in terms of vehicles and the automotive industry.
277.30s - 284.30s |  And first of all, there are several charging methods including conductive, wireless and some exotic ones.
284.30s - 289.30s |  That we only see in some manufacturers like battery swaps and bidirectional charging.
289.30s - 294.30s |  And on top of that there are different types depending on the needs of the user.
294.30s - 300.30s |  And the capabilities of the vehicle including AC and DC charging.
300.30s - 304.30s |  Supplying different advantages and disadvantages as we will see later.
304.30s - 308.30s |  And finally during charging there are also different modes of charging.
308.30s - 314.30s |  Where basically the first three modes are focused to AC and the fourth one in DC charging.
315.30s - 320.30s |  Talking about some boring stuff here, there are a lot of different available standards.
320.30s - 326.30s |  And as our main focus is the combined charging standard or CCS.
327.30s - 336.30s |  Basically for Europe and we just have this undeniably big list of standards for different levels of this full implementation.
336.30s - 342.30s |  Ranging from the connector itself to the high level communication needed between the EV and the charger.
342.30s - 349.30s |  And this CCS standard is basically an effort towards a single unified for electric vehicle charging.
350.30s - 353.30s |  Which considering where we are today you might disagree.
354.30s - 361.30s |  And the reason I said this is because there are a number of different standards out there in the wild.
361.30s - 365.30s |  Mostly divided to the different continents.
365.30s - 370.30s |  But lately several manufacturers decided to move into the Tesla standard.
370.30s - 372.30s |  The supercharger standard.
372.30s - 378.30s |  Mainly in the USA and mainly because of the heavily invested charging network in the US roads.
378.30s - 381.30s |  And of course that does not affect Europe at least for now.
381.30s - 387.30s |  But the opportunity for a unified standard in my opinion is kind of lost at this point.
388.30s - 395.30s |  And as we look at this circle of this CCSAC type 2 connector we can distinguish several pins.
395.30s - 398.30s |  Some of them is the CP pin.
398.30s - 402.30s |  Which is crucial for communication between the car and the charging station.
402.30s - 407.30s |  And the pin with the highest interest for us as cyber security researchers.
407.30s - 412.30s |  It basically allows the station to check the vehicle status and ensure it's safe to charge.
412.30s - 417.30s |  And then the PP pin ensures that the correct connector is used.
417.30s - 423.30s |  And provides information on the current carrying capacity of the cable that we're using.
423.30s - 428.30s |  The AC type 2 connector supports charging at various power levels.
428.30s - 432.30s |  From household outlets to high power public chargers.
433.30s - 437.30s |  And here we have the DC CCS type 2 connector.
437.30s - 443.30s |  An extension of the AC type 2 connector designed to support direct current fast charging.
443.30s - 450.30s |  And this connector also known as combo 2 basically incorporates the same pins as the AC type 2 connector.
450.30s - 455.30s |  For AC charging but adds two additional pins specifically for DC charging.
455.30s - 461.30s |  And the combination of these pins in a single connector is what gives this combined charging name.
461.30s - 469.30s |  And it provides the flexibility of using either AC or DC depending on the charging station and the vehicle capabilities.
469.30s - 474.30s |  Here we can basically get an understanding of how this works internally.
474.30s - 478.30s |  In the different implementations of DC or AC charging.
478.30s - 486.30s |  And on the other hand we have the DC charging where the power electronics for the conversion of the current exists in the EVSC side.
486.30s - 491.30s |  So the charger while when you want to use the slower solution of AC charging.
491.30s - 496.30s |  The conversion is still happening inside the vehicle itself by the onboard charger.
496.30s - 502.30s |  Additionally we can get an understanding of the communication channel that exists in those scenarios.
502.30s - 504.30s |  Really important as we will see later.
504.30s - 510.30s |  Especially in safety critical cases where the current needs to be negotiated.
511.30s - 516.30s |  From this we clearly understand that charging is not only simple power transfer.
516.30s - 519.30s |  And data exchange is also happening under the hood.
519.30s - 527.30s |  Many times with important information like payment details, voltage, current requirements, time of charging and others.
527.30s - 531.30s |  And to get a better understanding of how this communication is structured.
531.30s - 536.56s |  I will pass it to Pavel.
536.56s - 539.56s |  So let's have a look at the charging flow.
539.56s - 541.56s |  It's high level overview.
541.56s - 545.56s |  So first the user plugs the CCS connector to his car.
545.56s - 549.56s |  And then the low level communication starts.
549.56s - 555.56s |  If the EV is in the state B and the signal has the 5% duty cycle.
555.56s - 558.56s |  It can change to the high level communication.
558.56s - 564.56s |  And during the high level communication they are exchanged to digital information about the charging.
564.56s - 571.90s |  And that's how my journey and master thesis started.
571.90s - 576.90s |  So it's just a meme.
576.90s - 583.43s |  So let's have a look at the low level communication at first.
583.43s - 588.43s |  Low level communication in the charging process is also called basic signaling.
588.43s - 605.32s |  And it offers basic control of the charging process between the EV and EVSE.
605.32s - 612.32s |  The EV control the voltage value by adding or removing the resistors in the pilot signal.
612.32s - 619.32s |  And based on the measured voltage the EVSE can recognize the EV state.
619.32s - 628.37s |  The most important is the state B and state C as you can see in the table.
628.37s - 633.37s |  Depending on the given state resulting from the measured voltage value.
633.37s - 639.37s |  The EVSE generates a pulsed modulation signal with a specific duty cycle.
639.37s - 651.38s |  And this value of the duty cycle value is controlled by the charging station and measured in the vehicle.
651.38s - 661.38s |  And the simplified outcome from the low level communication is that the state B means that EV is connected but not charging.
661.38s - 666.38s |  And the state C is EV is connected and ready for charge.
666.38s - 671.38s |  And as I said 5% duty cycle for the high level communication.
671.38s - 680.38s |  So as you could see the low level communication is not so interesting from the cyber security perspective.
680.38s - 684.38s |  Because it only involves physical signaling.
684.38s - 694.38s |  However low level communication is important in the sense that it enforces high level communication for the specific state and the duty cycle.
694.38s - 698.38s |  So let's explore the high level communication.
698.38s - 702.38s |  First of all why do we need the high level communication?
702.38s - 705.38s |  Why the low level communication is not sufficient enough?
705.38s - 711.38s |  In the beginning EV charging relied on the basic signaling methods only.
711.38s - 715.38s |  Which are sufficient for simple on off commands to start or stop.
715.38s - 724.38s |  But after some time with the growing number of the electric vehicles and the complexity of our energy ecosystem.
724.38s - 730.38s |  This basic form of the communication is no longer sufficient.
731.38s - 735.38s |  High level communication provides the optimized charging process.
735.38s - 747.06s |  As we already described before the precondition for high level communication is the low level communication with specific state and the duty cycle.
747.06s - 753.06s |  And the high level communication is only applicable for charging modes 3 and 4.
753.06s - 759.06s |  And the high level communication is mandatory for the mode 4 which is the DC charging.
759.06s - 766.06s |  Because there is need to exchange some additional information to avoid the damage to the battery.
766.06s - 779.88s |  The ISO 15118 defined all the high level communication and the full name is vehicle to grid communication interface.
779.88s - 783.88s |  And the part vehicle to grid has an acronym V2G.
784.88s - 791.88s |  That's the reason why we named our tool V2G EVIL because it stands for the evaluation of the V2G communication.
791.88s - 800.83s |  There is the comparison of the ISO and the IEC.
800.83s - 805.83s |  As you can see the ISO implements all of the OSI layers.
805.83s - 810.83s |  And the new protocol is V2G transfer protocol.
810.83s - 814.83s |  Which I will explain in the following slides.
815.83s - 824.83s |  We are aiming from the third network layer and above up to the application layer.
828.83s - 835.83s |  The high level communication is more complex so there is bigger space for mistakes and we are aiming for this.
836.83s - 840.83s |  Here you can see the V2G communication flow.
840.83s - 848.83s |  Which is basically changing from one state to another and there is also exchange of the V2G messages.
848.83s - 856.30s |  And after this is done the charging is completed.
856.30s - 860.30s |  Here you can see the V2G message, the header.
860.30s - 863.30s |  The structure of the V2G message.
863.30s - 868.30s |  I have to be now really fast because we have only a few minutes.
869.30s - 873.30s |  This is the structure of the header.
873.30s - 877.30s |  We have a different payload type as you can see on the slide.
877.30s - 882.30s |  Then the first of the V2G messages is the SDP request.
882.30s - 887.30s |  There is some exchange for the security and transfer protocol for this.
887.30s - 890.30s |  Here is also the structure of the SDP request.
890.30s - 895.30s |  Then the station will respond with the SDP response.
895.30s - 902.30s |  With the information of IP address and the port for the communication over TCP protocol.
902.30s - 906.30s |  And then the V2G communication can start.
906.30s - 911.94s |  Here you can see the V2G message structure.
911.94s - 917.76s |  It is divided into two different types.
918.76s - 925.76s |  The concept that we are aiming is to cause some issues in this part.
925.76s - 928.76s |  Which is the decoding from EXI to XML.
928.76s - 936.76s |  And also to this part which is from this content and structure to the data structures.
936.76s - 946.61s |  Here you can see just a simple representation of the message in XML format.
946.61s - 950.61s |  Which is later encoded to EXI.
953.61s - 960.04s |  I think we have to skip this.
960.04s - 964.04s |  Some words about the testing environment.
964.04s - 967.04s |  Because we need some specified testing environment.
967.04s - 970.04s |  Where we use the DLAN Green PHY eval board.
970.04s - 972.04s |  And the DLAN Green PHY module.
972.04s - 976.04s |  Basically it has PLC support and PLC to Ethernet bridging support.
976.04s - 980.04s |  Which helps us with everything that was described in theory before.
980.04s - 984.04s |  And we use this QCA 7000 Green PHY firmware.
984.04s - 990.04s |  Which allows us to configure module as an EMOB charger or EMOB vehicle.
990.04s - 995.04s |  So we potentially have the ability to act both as a charger and a vehicle.
995.04s - 1001.04s |  And it has implicit support for the SLAC, EVSC and the ACCC side.
1001.04s - 1003.04s |  So the charger and the vehicle in this case.
1003.04s - 1006.04s |  Here we have a sort of our complete development setup.
1006.04s - 1012.04s |  Where one board acts as the vehicle and one as the charger or the EVSC.
1012.04s - 1017.04s |  And there are several ways that we can perform the PLC communication as you see.
1017.04s - 1019.04s |  But we chose to use a coax cable.
1019.04s - 1023.04s |  As it will also be more appropriate for using the real world scenario.
1023.04s - 1026.04s |  To avoid interferences from other cables.
1026.04s - 1029.04s |  And to conclude you will be surprised if I tell you.
1029.04s - 1033.04s |  That many of the cheap Chinese controllers for Ethernet over power line.
1033.04s - 1036.04s |  Use the same exact Qualcomm chip that we are also using.
1036.04s - 1039.04s |  And if you are in one tight budget.
1039.04s - 1044.04s |  Let's say in most cases you can reflash this chip with the appropriate firmware.
1044.04s - 1047.04s |  And run our tool with a budget of around 20 euros.
1047.04s - 1051.04s |  Comparing to a couple of hundred euros on the boards that I showed you before.
1051.04s - 1055.04s |  And as always we are referring to the first two layers.
1055.04s - 1058.04s |  For the rest of the layers we used as a reference.
1058.04s - 1061.04s |  The joint operating system for EV chargers.
1061.04s - 1067.04s |  Which in the start we used both for the EVSC and the SECC parts.
1067.04s - 1070.04s |  In order to properly implement all the parts of the communication.
1070.04s - 1074.04s |  But later on we developed our own malicious SECC part.
1074.04s - 1079.04s |  To test against the Joseph EVSC reference implementation.
1080.04s - 1083.04s |  And yeah now let's go to our tool.
1083.04s - 1088.04s |  So here you can see the architecture of our tool.
1088.04s - 1092.04s |  And it's modular so you have different modules.
1092.04s - 1096.04s |  And we will explain the most important modules in the next slides.
1096.04s - 1102.04s |  So first of all we have the implementation of V2G transfer protocol.
1102.04s - 1107.04s |  Which is basically the module V2GTP.
1107.04s - 1110.04s |  Is basically the implementation of that transfer protocol.
1111.04s - 1119.04s |  So this module is responsible for the V2G packet parsing, decoding and creating V2GTP packets.
1119.04s - 1123.04s |  And the next module is the sniffer.
1123.04s - 1131.04s |  The initial reason for developing the sniffer was to capture the V2G communication.
1131.04s - 1134.04s |  Between the EV and EVSC.
1134.04s - 1140.04s |  And verify the correctness of our implementation of the V2G transfer protocol.
1141.04s - 1145.04s |  So let's take a look at the demo.
1150.09s - 1155.09s |  So first of all we start the station reference implementation.
1155.09s - 1159.55s |  Which is waiting for connection.
1159.55s - 1164.55s |  Then we start our sniffer module with option V2GTP.
1165.55s - 1172.55s |  Which decodes the TCP raw data to V2G transfer protocol packet.
1174.55s - 1176.55s |  Then we start the EVCC module.
1176.55s - 1180.55s |  Which is connecting, like the car is connecting to the station.
1180.55s - 1183.55s |  And then you can see the message exchange.
1185.55s - 1189.55s |  And this is the output of the sniffer module.
1189.55s - 1193.55s |  That you can see that there is the V2GTP header and V2GTP payload.
1193.55s - 1196.55s |  These are the SDP requests and the response.
1197.55s - 1206.55s |  The next slide you can also see that our sniffer module can also decode the EXI data.
1206.55s - 1213.55s |  Which are this payload that it's decoded to the XML document.
1214.55s - 1218.55s |  The next two modules are the messages and the station.
1218.55s - 1224.55s |  Messages are responsible to creating the messages and the conversion between the EXI and XML.
1224.55s - 1230.55s |  And the station module is our implementation of the SECC.
1230.55s - 1235.55s |  Which is the Supply Equipment Communication Controller.
1235.55s - 1239.55s |  And the station module is the core for the security modules.
1240.55s - 1246.50s |  Let's start with the modules that are dedicated to the security testing.
1246.50s - 1249.50s |  First of all, we have the enumerator module.
1249.50s - 1252.50s |  Which can help to enumerate the EV.
1253.50s - 1256.50s |  For example, if the TLS is required or not.
1256.50s - 1258.50s |  What is the TLS version?
1258.50s - 1260.50s |  What are the supported cipher suites?
1260.50s - 1266.50s |  And what is the application protocol required by the EV?
1267.50s - 1274.50s |  Here you can see the demo that we start our station in enumerate mode.
1274.50s - 1277.50s |  We enumerate all of the possible information.
1277.50s - 1280.50s |  Then we start the EVCC to connect to our station.
1280.50s - 1286.50s |  And then you can see the outcome of the enumerator.
1287.50s - 1288.50s |  Here you can see the result.
1288.50s - 1295.50s |  As I said, you can see the supported protocols, the TLS version and ciphers.
1296.50s - 1299.94s |  And the last module is the FASA module.
1299.94s - 1303.94s |  Which is the most important module for the security testing.
1303.94s - 1308.94s |  And using the FASA module we can test the resilience of the EV.
1308.94s - 1315.94s |  To the invalid or malformed parameter values in the V2G response messages.
1316.94s - 1321.94s |  So basically the FASA sends malicious and invalid values for the parameters.
1321.94s - 1328.94s |  And it aims to the process of decoding the EXI to XML.
1328.94s - 1330.94s |  So let's have a look at the demo.
1330.94s - 1340.72s |  We start the FASA and waiting again for the EVCC to connect.
1343.72s - 1347.72s |  And after the EVCC connects there is some message exchange.
1347.72s - 1351.72s |  And in some of the messages we supply the invalid data.
1351.72s - 1355.72s |  And here you can see the invalid data of some parameters.
1355.72s - 1360.72s |  And the result is that we can cause some errors on the EVCC side.
1361.72s - 1364.72s |  The FASA module also can FAS only one message.
1364.72s - 1373.72s |  And the result is that we can cause some decoding error in the unmarshal binary.
1374.72s - 1379.72s |  Which has some handful unmarshal method that reads a source of the XML data.
1379.72s - 1384.72s |  And binds its values to a new instance of Java object.
1384.72s - 1392.72s |  And as we know from some articles the unmarshal can be vulnerable to XML external entity injection attacks.
1392.72s - 1402.72s |  So there is the space to implement the exploitation modules and exploit this further.
1402.72s - 1412.63s |  So let's finish. Basically there are a lot of enhancements that we can do on the tool.
1412.63s - 1414.63s |  We will not go through them. We don't have time.
1414.63s - 1420.63s |  But to conclude, communication in electric vehicles has some potential from our point of view.
1420.63s - 1425.63s |  With bigger needs in the future, more sensitive data will start to flow.
1425.63s - 1428.63s |  And subsequently passed by EVs and EVSCs.
1428.63s - 1433.63s |  And there are no open source tools available to cover this emerging attack vectors.
1433.63s - 1436.63s |  That's why we build this and we hope that you will start using it.
1436.63s - 1441.63s |  And you will start getting to research vehicles in this way that it's uncovered till now.
1441.63s - 1445.63s |  We want our tool to act as an easy way for people to get introduced.
1445.63s - 1450.63s |  And start researching both EVs and chargers in an efficient and modular way.
1450.63s - 1454.63s |  Thank you and our tool will be released after DEF CON 32.