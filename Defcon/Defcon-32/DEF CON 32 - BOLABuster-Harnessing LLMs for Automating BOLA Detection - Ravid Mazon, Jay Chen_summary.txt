**DEF CON 32 Presentation Overview**

- Presented by **Ravid Mazon** and **Jay Chen**
- Focus on **BOLABuster**: automating **BOLA detection** using **LLMs**
- Presentation held at the **Absec Village**

**Introduction to BOLA**

- **BOLA (Broken Object Level Authorization):** 
  - A prevalent vulnerability in modern APIs
  - Ranked top in **OWASP API risk chart** and fourth in **HackerOne Global Top 10**
  - Impact includes data exposure and total system control loss

**Challenges in Automating BOLA Detection**

- **Complex Authorization Mechanisms**: Multiple users, roles, and resources
- **Stateful Applications**: Each API call affects application state
- **Lack of Vulnerability Indicators**: Unlike XSS or SQL injection, BOLA is a logical error
- **Contextual Understanding**: Identifying sensitive data and understanding action impacts

**Methodology for Automating BOLA Detection**

- **Input Requirement:** Open API spec or swagger spec
- **Stage 1:** Identify potentially vulnerable endpoints (**PVE**)
- **Stage 2:** Uncover endpoint dependency relationships
- **Stage 3:** Calculate execution paths and create test plans
- **Stage 4:** Transform test plans into executable bash scripts
- **Testing:** Set up target API server and analyze test responses

**Tools and Results**

- Compared with **Wrestler**, a Microsoft-developed API fuzzer
- Tested on open-source applications like **Vampy**, **Capital**, and **Crappy**
- **BOLABuster** found all known BOLAs with fewer API calls

**Real-World BOLA Testing Example**

- Scenario: Alice creates an article and comment, Bob attempts to delete Alice's comment
- Steps: Token generation, article creation, comment creation, and unauthorized deletion attempt

**Vulnerability Discovery in Real Applications**

- Discovered vulnerabilities in **Harbor**, **Grafana**, and **Easy Appointments**
- **Harbor:** Unauthorized user can modify project configurations via API
- **Grafana:** Found a new BOLA
- **Easy Appointments:** 15 new vulnerabilities, 7 critical

**Lessons Learned from AI Integration**

- **AI is not always the best solution**: Use heuristic solutions when possible
- **Always validate AI outputs**: Blind trust can lead to errors
- **Simplify AI tasks**: Use divide and conquer strategy

**Conclusion**

- **BOLABuster** proves effective in detecting BOLA vulnerabilities
- Potential for AI to assist in complex security challenges