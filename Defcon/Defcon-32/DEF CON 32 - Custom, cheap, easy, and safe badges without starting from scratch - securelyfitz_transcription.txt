{
  "webpage_url": "https://www.youtube.com/watch?v=Z6Wq1iqTyWg",
  "title": "DEF CON 32  - Custom, cheap, easy, and safe badges without starting from scratch  - securelyfitz",
  "description": "Electronic conference badges are cool and everything, but they're A LOT of time, money, and effort including but not limited to hardware, software and art design, testing, manufacturing, testing, provisioning, and repairing.\n\nI'll share OpenTaxus, a relatively simple, cheap, mass-producible, and open-source badge design. We'll start out by looking at and understanding the design and implementation, highlighting the areas worth customizing (and which to leave as-s). I'll do a walkthrough of a few changes to customize the design - in KiCAD for hardware changes, and in CircuitPython for software changes.\n\nWe'll wrap up with some discussion of how to handle cost reduction to fit in a certain budget, manage badge logistics for events of different sizes, and warn about some of the many pitfalls that electronic badges suffer. You should walk away with the ability to customize a badge to be mass produced for your own event.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 2605,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 3.76s | This text was transcribed using whisper model: large-v2

 I haven't spoken at DEF CON in quite a while, so I'm kind of excited to be here.
3.76s - 8.50s |  I'm glad that we're in this room and not one of those other big ones.
8.50s - 11.24s |  How many of you have made badges before?
11.24s - 13.96s |  How many of you have used badges before?
13.96s - 15.68s |  How many of you like badges?
15.68s - 17.72s |  How many of you like badges that work?
17.72s - 19.72s |  How many of you have badges that work?
19.72s - 22.16s |  How many of you have badges that don't work?
22.16s - 23.96s |  Not necessarily this conference, but have you ever been at a conference and you get
23.96s - 25.44s |  a badge and it doesn't work?
25.44s - 27.70s |  Yeah, me too.
27.70s - 29.68s |  How many of you didn't even bother turning it on because you weren't sure it was going
29.68s - 31.22s |  to work anyway?
31.22s - 38.22s |  So the point of this talk is because I have made a few badges and I have a habit of reusing
38.22s - 43.42s |  as much as absolutely possible because the chief virtue of an engineer is laziness, right?
43.42s - 47.22s |  So if I'm going to put the effort into making a badge that I can reuse, I want to make sure
47.22s - 49.70s |  other people know that it's available and they can do that too.
49.70s - 54.66s |  I know there's tons of badges, but like, and many of them are open hardware, open source.
54.66s - 57.88s |  And rather than, of course, you know, just taking an existing open source one, I figured
58.06s - 60.06s |  why not do another open source one?
60.06s - 62.54s |  Because you know, so that's how it goes.
62.54s - 66.94s |  So I'm going to tell you about an open hardware badge design that I've worked on and that
66.94s - 71.42s |  I think will be useful because it's been tested, been through two conferences already.
71.42s - 73.94s |  It's going to be on track for a third one.
73.94s - 77.34s |  And I want it to be open hardware so that anybody who wants to make a badge doesn't
77.34s - 78.34s |  have to start from scratch.
78.34s - 82.74s |  You can just take this open hardware, change it how you want, however you want to do.
82.74s - 83.74s |  Just change the artwork.
83.74s - 84.74s |  You can change software.
84.74s - 86.30s |  You could keep it exactly the same.
86.30s - 90.28s |  Just like change the conference name and you've got a badge.
90.28s - 92.60s |  So a little bit about badges, or me.
92.60s - 93.60s |  I'm Joe.
93.60s - 94.60s |  Hi.
94.60s - 96.72s |  I teach classes on hardware hacking and reverse engineering.
96.72s - 100.56s |  I've been in Las Vegas for a week already because I was doing training at Black Hat.
100.56s - 101.94s |  So I'm a little bit exhausted.
101.94s - 104.84s |  But after this, I'm going to go hang around the pool, which is what I've been looking
104.84s - 106.88s |  forward to for the past week.
106.88s - 111.92s |  Yeah, I do hardware stuff.
111.92s - 114.52s |  So let's talk about, this is what I'm going to talk about today.
114.52s - 118.74s |  Why we have badges, what this thing is that I'm talking about, what my vision for it is,
118.74s - 123.50s |  what we can do today, and some logistics and pitfalls.
123.50s - 127.78s |  And it started out as kind of like a workshop-y thing, but the space and the venue worked
127.78s - 131.48s |  better for us to do kind of more of a talk slash demo.
131.48s - 135.22s |  So I'm going to talk a bit, and then I'm going to show you some software and hardware.
135.22s - 137.14s |  And then we'll have some time for questions.
137.14s - 138.14s |  Sound good?
138.14s - 139.14s |  Any questions?
139.14s - 140.14s |  Everybody ready?
140.14s - 141.14s |  Okay.
141.14s - 142.14s |  Listen carefully.
143.04s - 144.60s |  What are badges?
144.60s - 145.60s |  Why do we have badges?
145.60s - 146.60s |  Pretty much access.
146.60s - 149.62s |  Like, whether it's a wristband or a badge or something that hangs around your neck or
149.62s - 152.64s |  something you tattoo on your forehead, we need a way to know who's supposed to be here
152.64s - 156.40s |  or who's not, who paid, who didn't, who gets free drinks, and who doesn't.
156.40s - 157.96s |  So we're going to have them anyway.
157.96s - 159.82s |  We might as well make use of them.
159.82s - 161.44s |  So we want the cool factor.
161.44s - 163.84s |  This is a handful of badges that I designed.
163.84s - 167.34s |  My first one over here was for B-Sides Portland 10 years ago.
167.34s - 171.08s |  It was a bus pirate, but the PCB shape was changed.
171.08s - 172.80s |  So it was the shape of a Nyan cat.
172.80s - 177.74s |  So the rainbow ribbon cables that come out of the bus pirate were like the trail of rainbow
177.74s - 178.74s |  behind it.
178.74s - 186.38s |  And a couple of these were B-Sides Portland, some 503 Party badges, 44Con in London, TRCon,
186.38s - 191.66s |  which has kind of evolved into the Dan Initiative now.
191.66s - 192.66s |  So yeah.
192.66s - 193.66s |  They look cool.
193.66s - 194.66s |  And you want them to look cool.
194.66s - 198.06s |  And as a conference organizer, you want people to say, oh, this is a cool badge.
198.06s - 199.06s |  Take pictures of it.
199.06s - 200.06s |  Post it on social media.
200.06s - 201.88s |  And say, I can't wait until I come back next year.
201.88s - 207.04s |  And then conference organizers get more people coming, and yada, yada, yada.
207.04s - 208.64s |  Why else do we want badges?
208.64s - 211.86s |  Electronic badges hopefully have some sort of interaction.
211.86s - 220.15s |  And you can do interaction with a paper badge, but electronic badges are a little bit cooler.
220.15s - 226.19s |  So this is a few years ago, Joe Grand's previous DEF CON badge was a little like magic tokens.
226.19s - 228.89s |  They had a piece of stone on the front.
228.89s - 234.25s |  And he used a type of NFC, not like standard NFC, but like a near field communication,
234.25s - 237.09s |  inductive communication method, which is pretty cool.
237.09s - 240.75s |  But what happens, people go around, they go up to people they don't know, they interact
240.75s - 243.05s |  with the badge, they meet people.
243.05s - 247.63s |  That's kind of like the best part about an electronic badge.
247.63s - 249.25s |  And also, like hopefully, there's a lot.
249.25s - 252.35s |  How many of you have ever designed a PCB before?
252.35s - 257.15s |  How many of you have ever written embedded microcontroller code before, right?
257.15s - 260.17s |  How many of you have hacked on a badge, an electronic badge?
260.17s - 263.45s |  So hopefully, the badge is an opportunity for you to get your hands on some hardware
263.45s - 265.11s |  that you might not have otherwise done.
265.11s - 271.07s |  So this one required a somewhat pricey programmer, but like once you had that, you could do whatever
271.07s - 272.07s |  you want.
272.07s - 273.73s |  There was also a serial port that you could interact with it.
273.73s - 279.95s |  But like getting people to interact with tools and learn something is kind of a great goal.
279.95s - 281.85s |  So why open taxes?
281.85s - 284.81s |  So anybody know what a badger is?
284.83s - 287.93s |  American badger, taxidea taxes.
287.93s - 291.91s |  So this is the open badge, open badger, open taxes.
291.91s - 298.63s |  Not tax is, like things you pay, not tax as the big state, but like taxes.
298.63s - 302.07s |  And at some point, I'm going to have a cool logo, and it's going to be like a badger with
302.07s - 305.15s |  a badge on that says open taxes.
305.15s - 307.91s |  But you can just visualize that right now.
307.91s - 311.63s |  Or go ask Dolly to make that during the talk, and we can post it up there.
311.63s - 313.63s |  You can do a pull request.
313.65s - 315.49s |  So it's open, right?
315.49s - 318.31s |  This is the URL right now, open taxes.
318.31s - 322.73s |  And that is kind of like the sanitized, cleaned up version that has like all the strings for
322.73s - 326.01s |  specific events and all the logos and stuff removed.
326.01s - 330.05s |  So you can go and like copy this and make it and not have to worry about like infringing
330.05s - 335.21s |  on anyone's artwork, copyright, or all these detailed crappy things.
335.21s - 338.29s |  So yeah, I'll put this URL up later.
338.29s - 342.93s |  But I think it's the only thing on GitHub called open taxes right now.
342.93s - 345.43s |  So it's custom, right?
345.43s - 349.11s |  Off-the-shelf is kind of cool, like if you have something interesting, but there's really
349.11s - 351.59s |  not a lot of off-the-shelf options.
351.59s - 358.35s |  One cool one we did a few years ago for 503, DC503's badge, was we had these little devices.
358.35s - 360.75s |  They were like this big.
360.75s - 365.67s |  They were smart response things, so they're made for classrooms where you answer questions.
365.67s - 367.39s |  The teacher pops up on the screen.
367.39s - 371.19s |  But we took them, we reflashed the firmware with a couple games and used that as our badge.
371.19s - 372.63s |  So we didn't design hardware.
373.33s - 376.85s |  We just took pre-made hardware and programmed it, which is kind of cool.
376.85s - 377.85s |  But this is the process.
377.85s - 382.73s |  I mean, we go through prototyping phases, we have an actual badge, and then we have
382.73s - 383.73s |  a second iteration.
383.73s - 387.69s |  This is B-side San Francisco's badge, which is essentially the same hardware.
387.69s - 392.89s |  But two conferences, two badges, somewhat similar, but it's okay because there's a lot
392.89s - 396.53s |  of conferences and there's a lot of badges.
396.53s - 400.13s |  So open, custom, and we also want it to be cheap.
400.13s - 404.81s |  My objective is that there's a lot of change in the microcontroller world lately.
404.81s - 410.63s |  This uses the RP2040, which is the predecessor to the fancy chip that's on a DEF CON badge.
410.63s - 412.11s |  It's amazing because it's dirt cheap.
412.11s - 417.43s |  In quantity, it's like 60 cents, and that includes USB interface.
417.43s - 422.87s |  So there's a lot of extra chips you need sometimes to interface with a badge easily, and this
422.87s - 423.87s |  doesn't need them.
423.87s - 426.31s |  So it is extra cheap.
426.31s - 430.11s |  Something else I've learned is when you get stuff assembled overseas, if you go to a manufacturer
430.11s - 435.33s |  that does a lot of it, if you wanted to assemble 100 badges, you need 100 chips.
435.33s - 438.13s |  You buy those chips, you get the 100-chip price.
438.13s - 442.03s |  If you go and get them assembled, and you get 100 badges assembled, they get the chips
442.03s - 450.09s |  at the $1,000 or $10,000 or real price, R-E-E-L, which is also the R-E-A-L price that manufacturers
450.09s - 451.09s |  get to pay.
451.09s - 456.29s |  So I've actually found that for prototyping, it's cheaper for me to get a prototype assembled
456.29s - 461.61s |  than it is for me to get the PCBs and buy the parts and assemble it myself, which is
461.61s - 464.87s |  kind of a weird world we're in.
464.87s - 467.11s |  So yeah, right now, this is the last iteration.
467.11s - 475.63s |  These were $5.70 each, plus some engineering costs, which I think is pretty cool.
475.63s - 479.31s |  $6 for a hardware badge that interacts is kind of a nice target.
479.31s - 480.31s |  I was aiming for $5.
480.31s - 484.25s |  Actually, I started aiming for $10, and then I went and did some cost reduction and managed
484.25s - 487.49s |  to swap out some cheaper components and got it down to almost $5.
487.49s - 489.81s |  So long run, $5 is the goal.
489.81s - 490.81s |  Oops.
490.81s - 491.81s |  Cancel.
491.81s - 492.81s |  Cancel.
492.81s - 496.71s |  Apologies for the AV situation.
496.71s - 498.77s |  It's a little bit interesting.
498.77s - 501.01s |  So I want to encourage interaction.
501.01s - 503.65s |  So a badge has to have a way to communicate.
503.65s - 505.33s |  However, we're hackers.
505.33s - 506.69s |  We're privacy-minded people.
506.69s - 509.21s |  We don't want these things broadcasting all the time, right?
509.21s - 512.01s |  So what I opted for was infrared communication.
512.01s - 516.73s |  What I like about infrared is that you can make it pretty short-range, right?
516.73s - 520.97s |  You can have it only work when you need it to work, and you can, like, you know, not
520.97s - 522.55s |  use it if you don't want to.
522.55s - 529.85s |  So this device has a little IR LED, right, right here, and an IR receiver right here.
529.85s - 535.49s |  So when you line badges up, they, like, kind of flash lights at each other.
535.49s - 541.25s |  And yeah, bill of material costs for the communication on this badge, $0.08.
541.25s - 546.29s |  So compare that to, like, an antenna, which is going to be more than $0.08, or, yeah,
546.29s - 547.29s |  anything else.
547.29s - 552.09s |  So I thought that was kind of awesome that I was able to get it that cheap.
552.09s - 554.21s |  Braden Lane, he's done, like, e-challenge coins.
554.21s - 559.45s |  He actually designed this IR circuit, and I asked him for a schematic and parts, and
559.45s - 560.45s |  he shared it with me.
560.45s - 564.45s |  So, you know, I appreciate his contribution to this, because, like, yeah, he was in the
564.45s - 565.45s |  same boat.
565.45s - 567.89s |  He wanted IR communications, but he wanted it to be cheap.
567.89s - 572.85s |  I literally just got my DEF CON badge, like, an hour ago, so I haven't poked at this infrared
572.85s - 576.65s |  communication, so I don't know what it is, whether it's modulated, but what this does
576.65s - 579.53s |  is it basically speaks, it's a UART connection, you know what UART is?
579.53s - 583.41s |  Serial connection, and, like, nothing fancy, just spit that UART over an LED, and it goes
583.41s - 587.13s |  up and down, none of the modulation, no extra transceivers, and in the other end, you just
587.13s - 588.13s |  have to do a little bit of clean-up.
588.13s - 590.65s |  Downside, it's wicked slow.
590.65s - 592.65s |  Upside, it's dirt cheap.
592.65s - 593.65s |  Trade-offs.
594.37s - 604.05s |  So, I want to encourage learning, and the original idea for this badge came from B-Love,
604.05s - 608.13s |  Brandon Levine, and he wanted to do something in CircuitPython, because he was not an embedded
608.13s - 609.65s |  programmer, but he knew Python.
609.65s - 613.73s |  I had never used CircuitPython before, and so I was introduced, at first, I was like,
613.73s - 617.21s |  yeah, that's a little high overhead for an embedded system, we're gonna do, like, C,
617.21s - 621.05s |  and we're gonna maybe do some hand-coded assembly, but that's because I started doing microcontrollers
621.17s - 626.65s |  20 years ago, when that's the way to do it, 25, 30 years ago, when, you know, you had
626.65s - 632.29s |  to pay for a compiler, and then, you know, I kind of did work for a while, and then when
632.29s - 636.05s |  I left work, it's like, oh, I can play electronics for fun, and Arduino happens, right?
636.05s - 639.25s |  So now we could plug things in with a USB cable, download one thing, get our compiler
639.25s - 644.05s |  and all our tools, and that was great, but now CircuitPython, you don't need a compiler,
644.05s - 647.95s |  you don't need anything, you just plug in a USB cable, you have a USB flash drive that
647.95s - 653.99s |  shows up, and there's a code.py file, and you edit it, and it runs, right?
653.99s - 659.23s |  So your IDE is whatever text editor you want, and, um, yeah, you don't have to download
659.23s - 661.87s |  or install anything, I think it's amazing and wonderful.
661.87s - 665.83s |  It does have trade-offs, but, like, objective here is something accessible, something that
665.83s - 667.19s |  gets people playing with stuff.
667.19s - 669.23s |  How many of you know Python?
669.23s - 672.47s |  How many of you can hack your way through and, like, edit something in Python, even
672.47s - 674.59s |  if you don't call yourself someone who knows Python?
674.91s - 678.51s |  Well, how many of you have used CircuitPython or MicroPython on an embedded device?
678.51s - 679.51s |  Okay.
679.51s - 680.51s |  Give it a try.
680.51s - 684.83s |  I actually, so, I've only got, like, 80 of these with me, but I'll give them out afterwards,
684.83s - 688.35s |  and so if you feel like you want to either tinker with this, or think you might have
688.35s - 691.67s |  interest in contributing anything to this project, I've got them for you.
691.67s - 695.43s |  If you just want something to, like, hang on your neck, then, like, let people who want
695.43s - 698.51s |  to work on them first, get them first, and then we'll have the rest available.
698.51s - 699.51s |  Sound good?
699.51s - 700.51s |  Um, so, easy.
700.51s - 701.51s |  Badges are not easy.
701.51s - 702.51s |  Hardware is not easy.
702.51s - 703.51s |  It's not called easy-ware.
703.51s - 704.51s |  Okay?
704.51s - 705.51s |  So, it's hard.
705.51s - 706.51s |  It's going to be difficult.
706.51s - 707.51s |  You need to go through multiple revisions.
707.51s - 708.51s |  And, yeah, so you should do that.
708.51s - 709.51s |  So, here is, so, actually, the background story for this one.
709.51s - 710.51s |  This is the LabsCon 2023.
710.51s - 711.51s |  LabsCon is a threat intelligence conference down in Phoenix.
711.51s - 712.51s |  It's pretty cool.
712.51s - 713.51s |  It's very unique and niche.
713.51s - 714.51s |  Um, but, uh, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's,
714.51s - 715.51s |  it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's, it's,
746.51s - 747.51s |  uh, all right?
747.51s - 748.51s |  So, um, we've got the cardboard mockup to kind of, like, figure out what we're going
748.51s - 749.51s |  to do.
749.51s - 750.51s |  We've got the little PCB mockup.
750.51s - 753.13s |  Uh, this is the IR communication circuit that I prototyped.
753.13s - 756.15s |  I'm like, okay, I know I can get a Raspberry PI 2040 working.
756.15s - 757.89s |  I can get an IR communication working.
757.89s - 759.71s |  Um, I did a PCB layout.
759.71s - 761.33s |  And I milled a, a sample one.
761.33s - 763.69s |  I didn't actually mill a one that, a functional prototype.
763.69s - 766.83s |  I just kind of used it to make sure I got the sizes and placement right.
766.83s - 772.51s |  Um, and then, uh, QuickTurn, uh, prototyping from, I believe, this one was JLCPCB.
772.51s - 778.71s |  So for, I think these are like under 10 bucks each. I ordered them on Monday, no
778.71s - 782.59s |  Sunday night, so Monday in China. I received them Friday. I was kind of like
782.59s - 786.39s |  amazed. Of course during that time I did like, you know, like little updating
786.39s - 791.55s |  tweaks here and there, added some artwork. But yeah, and of course you see, you, you,
791.55s - 795.31s |  you will make mistakes. So like you see here I've got that little blue, blue wire
795.31s - 802.19s |  that happens to be black, because oops. And DRC is your friend, unless you're
802.19s - 805.83s |  lazy, then you skip it, but whatever. And actually you can see up here I had a pin
805.83s - 810.23s |  out wrong for what I was using at the time, which was an IR transceiver. And
810.23s - 816.35s |  yeah. So I had to add that, change it a little bit. Screen goes on top. I like it
816.35s - 820.67s |  because it hides all the components. And that was, that was the prototype. And it
820.67s - 823.75s |  worked, which was kind of amazing. Just one blue wire and one component. So we
823.75s - 828.95s |  cleaned up that component, got the PCBs made. So what I did at the same time is I
828.95s - 834.95s |  did the bulk order from JLCPCB, as well as like a small batch order. So what
834.95s - 838.63s |  happened is I got the small batch prototypes a week later. You know, I
838.63s - 843.43s |  ordered, so I received Friday, spent all weekend working on it. Monday ordered the
843.43s - 847.91s |  second batch of prototypes, I guess. Thinking they're gonna be perfect and
847.91s - 853.59s |  just work. And those came the following Friday, which is again, is amazing. And in
853.59s - 857.35s |  the meantime, finalized all the artwork and everything for the actual like
857.35s - 861.63s |  production run. I did make a couple other tiny tweaks. Turned out we got the
861.63s - 866.51s |  production run in. Took them two weeks. Was kind of incredible for a few hundred
866.51s - 872.59s |  badges. And they shipped. And actually we had room for a week of customs holdup on
872.59s - 876.99s |  these badges. Because I was renovating my house, so we were living somewhere else.
876.99s - 882.03s |  So apparently it was a unique address that I may, I don't know, maybe customs
882.03s - 885.11s |  just let stuff go to my home address and thought that this was a different
885.11s - 889.27s |  address, so it's not Joe. I don't know. That or they put too high a price on the
889.27s - 894.63s |  invoice. So, but that's the badge we got. I did have to manually solder on the
894.63s - 898.59s |  battery holders and the screens. That was a time constraint issue. I really am
898.59s - 902.35s |  frustrated by screens. It's very difficult to get screens that are
902.35s - 907.35s |  quality and reliable and consistent. So I use modules, right? You can get the modules
907.35s - 911.15s |  cheaper than you can get the bare LCD OLED displays. So I might as well just
911.47s - 918.67s |  use those, right? And the second iteration, so we went from this prototype for what
918.67s - 922.79s |  was LabsCon. And then B-Side San Francisco was looking for a badge and I
922.79s - 928.03s |  had a conversation which roped me into another project. And so basically the
928.03s - 932.03s |  only change in the circuit had to do with the IR circuit. I took off that
932.03s - 937.99s |  transceiver that was up here. That was a IRDA transceiver. It was a three dollar
938.03s - 942.27s |  part. It was there because I had it and tested it and it worked. And that's when
942.27s - 947.39s |  I changed it to these eight cents of components, which were great. So yeah, the
947.39s - 951.71s |  prototype was pretty quick. The production badges took a little longer
951.71s - 955.07s |  than expected. I used a contract manufacturer that I use regularly for
955.07s - 959.19s |  Tigard. Shameless plug, Tigard is a little orange PCB that does JTAG, UART, and
959.19s - 963.35s |  SPI. And I make it and use it for my classes. But apparently other people like
963.35s - 968.67s |  it too. So you can get it on crowd supply. So I had that manufacturer do it
968.67s - 971.91s |  because I've worked with them in the past and they will do stuff like custom
971.91s - 977.15s |  solder mask color. And what they did for this badge, oops, do I not have a
977.15s - 983.39s |  picture of it? No. So what they did for us for the B-Side San Francisco badge is
983.39s - 989.15s |  we had two different colors of silkscreen. So they lined up perfectly.
989.51s - 994.79s |  Actually, I want to do something silly. I'm going to modify my presentation on
994.79s - 1002.94s |  the fly. I'm going to take a picture. You don't see it on the screen yet, but
1002.94s - 1014.80s |  there we go. Can you see it? How come you can't see it? It's right there on
1014.80s - 1020.64s |  the screen. Maybe I have to go back and forth. No? I see it right here on my
1020.64s - 1033.72s |  slides. Oh, I'm very confused right now. I hope that you've been seeing the same
1033.72s - 1037.00s |  thing as me all along because I'm literally looking at my slides right now
1037.00s - 1050.19s |  and it's different from, sorry. Oh well. This badge is cool because it's got two
1050.19s - 1054.15s |  different colors of silkscreen. So it's like a cream kind of off-white grayish
1054.15s - 1059.11s |  solder mask and then a red and a black silkscreen. And, you know, I will talk
1059.11s - 1061.75s |  about it in a second. The reason you pay for a contract manufacturer instead of a
1061.75s - 1065.39s |  quick turn place is they'll do things like make sure those colors line up
1065.39s - 1069.55s |  perfectly and they did an amazing job. It was better than I expected. What you have to
1069.55s - 1073.07s |  realize is PCBs are like precision things. So like there is some effort to
1073.07s - 1077.43s |  make things precise. Silkscreen is kind of like the last thing and it's usually
1077.43s - 1081.43s |  only documentation. It's not like functional. So there's some more slop in
1081.43s - 1086.35s |  the silkscreen than there is in the solder mask and metal layers. Anyway,
1086.43s - 1089.75s |  afterwards you can come up and see some of these badges because, yeah,
1089.75s - 1095.87s |  there's a bunch here. You can ogle the artwork. So what's my vision? I mentioned
1095.87s - 1099.95s |  before like I don't like doing this over again and people are frequently asking
1099.95s - 1104.67s |  me for badges and others. And rather than like have to be involved like in the
1104.67s - 1107.87s |  loop, it'd be really cool if I had a website. You go to the website and you
1107.87s - 1111.59s |  type in your conference name, right? You upload the logo for the concert,
1112.31s - 1117.51s |  concert, conference and you click go. You get your board files, you get your bill
1117.51s - 1122.71s |  of materials, get your code, everything ready to go. Does that sound cool? So what
1122.71s - 1126.35s |  you can do then is instead of having to start from scratch and go through three
1126.35s - 1129.03s |  iterations of prototypes and test everything and find the right components,
1129.03s - 1133.47s |  you start with something that works and change what you want to. If you want to
1133.47s - 1138.15s |  do like board changes and layout changes or add components, you do that. But you
1138.15s - 1141.79s |  start with a board file that's functional and works, right? You want to
1141.79s - 1144.55s |  make just artwork changes, you can do that, but you've already got a board that
1144.55s - 1147.67s |  works. If you want to keep the hardware exactly the same and change the game
1147.67s - 1151.27s |  that it plays or whatever, how it interacts, you can do that. And that's
1151.27s - 1153.99s |  actually what besides Portland's going to likely use the same hardware, but
1153.99s - 1157.75s |  they're going to have a completely different game that it plays. So like
1157.75s - 1161.95s |  customize what you want to do and keep what you want to keep. Make sense? Again,
1161.95s - 1167.27s |  chief virtue of an engineer is laziness. So be as lazy as you think is
1167.27s - 1170.83s |  appropriate and you'll be able to spend your time doing the things you want to
1170.83s - 1177.03s |  do. So how many of you like PCB design? How many of you like embedded software?
1177.03s - 1181.51s |  So you can go like meet up with each other and like work together or like do
1181.51s - 1186.75s |  one or the other. Make sense? Cool. So what can we do today? Because of the AV
1186.75s - 1190.27s |  stuff, I'm going to like finish my slides first and then I'll flip over to my
1190.27s - 1193.79s |  laptop and do some like walkthrough demo-y stuff. I'm not going to build a
1193.79s - 1197.15s |  batch from scratch because it's not there yet, but maybe someone will submit
1197.15s - 1201.71s |  a pull request and we can do that. So what can we do today? If you are a
1201.71s - 1205.35s |  hardware person, right, you can just change the logo. That's easy. You can
1205.35s - 1209.35s |  adjust the board footprint. I find like the cutout shape of the board is really
1209.35s - 1214.75s |  a neat thing to customize a badge because it looks neat. You can rearrange
1214.75s - 1218.47s |  the layout. As it is right now, it's kind of ergonomically designed, right? I
1218.47s - 1222.71s |  happen to be left-handed, right? But I wanted righties to be okay with it too,
1222.71s - 1227.47s |  so I put the button in the middle so you all you people can use it. And it
1227.47s - 1233.75s |  also it hangs down so you see the logo and if you want to use it, okay, I still
1233.75s - 1238.55s |  have power. I'm going to keep talking. You just like you grab it and you point it
1238.55s - 1243.55s |  at someone else and you like you trade, right? Ergonomically, like they hold each
1243.55s - 1246.99s |  other edge to edge. Screen still, yeah, just to make sure the screen is still on. You hold
1246.99s - 1250.67s |  them edge to edge and like they communicate. One of the flaws of the
1250.67s - 1254.55s |  current design is I need to tune the IR transmission a little more because you
1254.55s - 1257.67s |  literally have to hold them together like that for them to communicate. Maybe
1257.67s - 1261.03s |  like a half an inch, but if they're more like an inch or more, they don't work.
1261.03s - 1264.35s |  Which is kind of good because then you're not transmitting and receiving
1264.35s - 1267.91s |  noise and other people's stuff and whatever. Also by using a module, the
1267.91s - 1271.83s |  module kind of shades the IR stuff so like you know even if there's if there
1271.83s - 1275.51s |  happen to be lights, something crazy like that, you don't have it some
1275.51s - 1280.31s |  interference from that. Cool. If anybody's got any questions as I ramble on, please
1280.31s - 1286.43s |  yeah, what's up? Yeah, this is, hmm, maybe we'll do that later. Sorry, unless there's
1286.43s - 1291.51s |  another mic. Nah, okay, sorry. I'll repeat your question if I could hear it, but I
1291.51s - 1295.15s |  hear that more and I don't think he's asking any questions about boards. So
1295.15s - 1298.27s |  what we do, we change the logo, adjust the footprint, we can
1298.27s - 1302.43s |  rearrange the layout. So if we wanted to, you know, have it wider or different
1302.43s - 1305.51s |  layout or if you really wanted to change the infrared to something else, you
1305.51s - 1309.07s |  totally could do that. And you can hack it to pieces. The way I did the layout,
1309.07s - 1311.63s |  I'll show you when I look through a keycad, is I have a bundle that's the
1311.63s - 1315.03s |  microcontroller, I have a bundle that's the power circuit, I have a bundle that's
1315.03s - 1319.39s |  the, what's it called? Infrared circuits. So you can drag those blocks around and
1319.39s - 1322.91s |  route those blocks together or you can drag drag every single little resistor
1322.91s - 1327.75s |  and component together. So if you're a software person, right? You could change
1327.75s - 1331.15s |  strings, right? Like you take the badge instead of being open to access, you call
1331.15s - 1337.55s |  it like b-sides, you know, Gallifrey or something like that. And you know, you can
1337.55s - 1341.07s |  change the game text. Right now the game it plays is kind of, ever played Clue?
1341.07s - 1348.11s |  Yeah? So in Clue you have like a deck of suspects, weapons, and locations, right?
1348.11s - 1351.27s |  And you draw, you shuffle them, you draw one of each and you put them in an envelope to
1351.27s - 1354.79s |  the side and then you deal the rest out to everyone. In the process of the game
1354.79s - 1357.15s |  you're kind of like trying to figure out what everybody else has so you know
1357.15s - 1361.31s |  what's missing, right? Same thing, what it does right now is it deals one clue to
1361.31s - 1365.83s |  each person and, you know, you can trade those around, you meet people, it trades
1365.83s - 1369.43s |  the handle that you put into the badge as well as your clue and when you get
1369.43s - 1373.23s |  them all but one, you know the solution, right? And there's, it's set up for eight
1373.23s - 1377.19s |  games but we won't go into the details of that. B-sides Portland's gonna do a
1377.19s - 1382.87s |  slightly different game as well. You can change all the game text. Right now for
1382.87s - 1388.05s |  B-sides San Francisco, the AI theme they used, so it was a bunch of like AI, it was
1388.05s - 1393.83s |  a bunch of like, like doomsday scenarios and it was a bunch of fixes and so like
1393.83s - 1399.11s |  you'd randomly put those together like, you know, T-800 saved, you know, something
1399.11s - 1405.39s |  from Whopper or some weird thing like that. So badge logistics, this can be very
1405.39s - 1414.21s |  interesting, right? Did I miss a slide there? No, I think I got it. Sorry. So who
1414.21s - 1421.33s |  likes hand soldering? Who likes hand soldering a hundred badges? Who likes
1421.33s - 1429.37s |  hand soldering a thousand badges? So when I solder, I design around 0603
1429.37s - 1432.77s |  surface mount components because I used to be able to see them and do it by hand.
1432.77s - 1439.41s |  I can't anymore because I'm old. And so I use a microscope and I can still do them
1439.41s - 1444.37s |  by hand. But if you're gonna do some, this is designed for mass manufacturing, this
1444.37s - 1447.97s |  is not designed for hand soldering, so I use 0402 components, the really tiny
1448.01s - 1454.01s |  ones, which makes, I can fit them all on there easily and they're small and 0402
1454.01s - 1457.17s |  is a pretty reliable size. Gets smaller than that and sometimes you get a higher
1457.17s - 1462.65s |  failure rate. So if you're gonna hand solder, what I often do is I actually
1462.65s - 1467.77s |  will get the prototypes with all the small components assembled, right? And
1467.77s - 1471.77s |  then I get those prototypes and I solder on the big stuff. For example, if I'm like
1471.77s - 1475.65s |  trying to, you know, fine-tune which microcontroller, I get parts locally that
1475.65s - 1482.01s |  I want to use. Next is small batch. This is like JLCPCB, PCBWay and others,
1482.01s - 1486.13s |  Macrofab in the United States. You just give them your design and tell them a
1486.13s - 1489.85s |  little bit about the parts and they'll make the PCBs, assemble them for you and
1489.85s - 1494.69s |  ship them to you, which is pretty cool. And like I said before, sometimes it's
1494.69s - 1498.49s |  cheaper for me to do that than it is for me to just buy boards and buy parts and
1498.49s - 1503.61s |  waste my time assembling them. And then last is contract
1503.65s - 1507.53s |  manufacturing. This is, you know, basically there's a weakening line
1507.53s - 1510.61s |  between the small batch stuff and the contract manufacturing because a lot of
1510.61s - 1513.89s |  the same companies do the same thing or outsources to each other. Again, I have a
1513.89s - 1517.41s |  contract manufacturer I've used for Tigard and also BitMagic's the logic
1517.41s - 1522.97s |  analyzer. If you've heard of like NETV or the FOMU, like mini FPGA, those were
1522.97s - 1526.13s |  all done by the same folks. The reason why I chose them is because they'll
1526.13s - 1532.57s |  do custom solder mask colors for me. So, yay! But yeah, once you're hitting a
1532.57s - 1536.29s |  threshold of more than a hundred, you probably want to consider this. It will
1536.29s - 1540.05s |  take you longer, it will cost more, but it's more likely to get it right the
1540.05s - 1544.53s |  first time, which is really what you want to do. You know, 100 badges in a
1544.53s - 1550.29s |  contract manufacturer with one mistake is 100 badges you need to rework. And
1550.29s - 1553.57s |  finally, flashing. Like once we've got these badges, even if like we didn't
1553.57s - 1556.57s |  change anything, we still have to provision them. And so I've got like a
1556.57s - 1561.45s |  flashing rig here, which basically you slot the badges in, it pops into a USB
1561.45s - 1566.65s |  port, and they're all connected to like a 7-port USB hub, and I've got a couple
1566.65s - 1569.77s |  scripts in there that will go through, wait for a device to be attached, and
1569.77s - 1574.09s |  flash it. There was a small bug in that though, because what it does is it's a
1574.09s - 1577.49s |  Linux script, and it goes, it says, okay, you've attached a device, let's mount it.
1577.49s - 1584.25s |  What's the mount point? Okay, and now we want to wipe it first. So, RM, like, what's
1584.25s - 1590.53s |  it called? RM mount point slash star, and then dash RF, right? Like, so you want to
1590.53s - 1595.33s |  remove everything on that drive, and force it, right? Which is great, until mount
1595.33s - 1598.17s |  point, uh, for some reason doesn't exist, like you pulled it out before, like you
1598.17s - 1602.77s |  got the mount point, and so that string is blank, so it's RM dash RF, uh, RM
1602.77s - 1606.85s |  star, uh, slash star dash RF, uh, which, or whatever the order of the, yeah, you
1606.85s - 1610.61s |  know what I'm saying. It was bad. Um, luckily, I was using a utility called
1610.61s - 1614.37s |  PMount, which runs as a user, as opposed to having escalated privileges and
1614.37s - 1617.65s |  running it as root and mounting, because that would have been a much worse RM
1617.65s - 1621.85s |  dash RF, slash star. For those of you who are, like, more in the Windows world,
1621.85s - 1625.21s |  that basically, slash star is your root directory, and everything on your system.
1625.21s - 1629.13s |  So, like, it basically would hose your system if you did that. Um, yeah, that
1629.13s - 1631.53s |  was, that would, that could have been a lot worse. Luckily, it was discovered,
1631.53s - 1635.53s |  and found, and fixed, um, before we flashed all of our laptops, instead of the
1635.53s - 1642.97s |  badges. Um, flashing, we just talked about flashing. So, common pitfalls, uh,
1642.97s - 1646.13s |  cool, we got about halfway in, um, which means I want about half the time to go
1646.29s - 1651.21s |  and, and, uh, either look at questions, or, um, walk through the designs. Um,
1651.21s - 1655.73s |  common pitfalls, I'm really gonna emphasize one, uh, schedule. Give
1655.73s - 1658.73s |  yourself more time than you need. Once you've done that, give yourself even more
1658.73s - 1662.77s |  time. Add some buffer for, you know, manufacturing issues. Add buffer for an
1662.77s - 1667.41s |  extra prototype run. Add buffer for, um, you know, testing, and software, and
1667.41s - 1671.09s |  flashing, and whatever. Um, you'll use them. Um, you'll make good use of them,
1671.09s - 1675.29s |  but you'll use them. Uh, and part of the idea here is, like, if you're starting
1675.31s - 1679.89s |  with a known good badge, right, you can go get those started, and get the badges
1679.89s - 1683.15s |  manufactured, and work on the software in parallel. And, uh, then you don't have
1683.15s - 1686.03s |  to worry about getting your hardware, testing it, making sure it works. You
1686.03s - 1692.29s |  know, just remove the steps you don't want to have to deal with. Cool. So, I'm
1692.29s - 1697.21s |  gonna go back, and for those of you who wanted, where did I put it? The URL.
1697.21s - 1702.85s |  Uh, somewhere, I put a URL. It's GitHub. Forget it. I'm gonna switch over to my
1702.87s - 1707.41s |  laptop now. Um, I'll get that set up. I have some, some hardware design and code
1707.41s - 1711.75s |  I can walk through. Um, if any of you have questions, just come on up here, and,
1711.75s - 1714.99s |  like, you can ask a question, and I'll repeat it, and then answer it, um, as I do
1714.99s - 1716.99s |  the walkthrough. So, let, give me a moment. I'll swap up.
1716.99s - 1783.35s |  So, I'm connected to this wire, which goes straight to the TV. It was just when I was on a second ago.
1783.35s - 1805.66s |  First device. Ah, checking that. Looks good. 1080p. What? Input one, I'm outputting to it right now.
1811.91s - 1837.37s |  It's on, uh, that internal Google TV right now. It's showing a Google TV.
1837.37s - 1844.37s |  Well, that's not what I want to show you. But, we know the TV works. So, fingers crossed, one more time.
1844.37s - 1888.02s |  One more. Thank you for your patience. Anything? No?
1888.02s - 1908.87s |  Well, that's what I get for using Linux. So, I'm going to try something, if we can get this back up on the screen.
1908.87s - 1924.27s |  So, let's see. Nope. No, we're good, we're good. Okay. We're doing it live.
1924.27s - 1937.62s |  Can I get a volunteer? Do you want to just hold it and show my screen?
1937.62s - 1940.62s |  Just hold it? Just hold it so we see the screen. Thanks.
1940.62s - 1951.13s |  Everybody see that? I'll make it bigger. So, there's the slides. First, let's look at, can you hear me good?
1951.13s - 1956.13s |  First, let's look at the B-Side San Francisco badge so you can kind of see what's going on.
1956.13s - 1962.13s |  We've got a schematic. I'm not going to go into the details of the schematic. We've got, uh, can you see anything at all?
1962.13s - 1971.13s |  We've got the RP2040, right? We've got some flash. We've got some IO pins. We've got our IR circuit that, you know, just kind of works.
1971.13s - 1978.13s |  And we've got a USB interface that works. USB-C, which is great because everything should be USB-C.
1978.13s - 1985.13s |  But, let's look also, so this is what the finished badge looked like.
1985.13s - 1991.13s |  So, this is just in black because that's what I usually do, but you see it, uh, silkscreen on the front.
1991.13s - 1997.13s |  No components makes it really easy to see, you know, a little closer. Yeah, there we go.
1997.13s - 2001.13s |  Um, makes it, uh, easy to customize it because we don't have to worry about stuff.
2001.13s - 2005.13s |  There are a few holes, like through holes. That's where the battery connector is. That's where the USB connector is.
2005.13s - 2009.13s |  And that's where the string goes on. But I try to keep them near the edge to make it a little better.
2009.13s - 2014.13s |  Um, one thing B-Side San Francisco does is they use stickers to differentiate their badge types, which is kind of cool.
2014.13s - 2020.13s |  So, if you really just wanted to fab this badge as is and just make stickers for your conference, like, you can totally do that.
2020.13s - 2023.13s |  Like, you literally don't even need a logo when you go and order the boards.
2023.13s - 2030.13s |  But, what we've got here is the controller in the middle. Up here, we've got the Raspberry Pi 2040, some flash,
2030.13s - 2034.13s |  an I2C, uh, I2C connector so you can, like, attach things to it.
2034.13s - 2036.13s |  And then, yeah, IR circuits.
2036.13s - 2040.13s |  So, let's look at the layout.
2040.13s - 2042.13s |  How many of you have used KiCad before?
2042.13s - 2046.13s |  How many of you have used any circuit board design software, CAD software?
2046.13s - 2049.13s |  Um, so, basically, it's a whole bunch of layers, right?
2049.13s - 2054.13s |  And, uh, you make a, a schematic and then you make it into the layers of the, the board.
2054.13s - 2056.13s |  And you actually physically place stuff around.
2056.13s - 2059.13s |  I had mentioned before we have, oh, I de, I de-grouped it.
2059.13s - 2062.13s |  Uh, I have most of the things in groups.
2062.13s - 2066.13s |  So, like, we can go and we can grab the, here, we got the IR-TX and RX.
2066.13s - 2072.13s |  So, if you wanted to move that around, you can move this whole bundle at once instead of having to go and move every single component and lay it out.
2072.13s - 2076.13s |  And we'll flip the board over, view, flip board view.
2076.13s - 2081.13s |  Uh, oops, and then we'll, oh boy, the resolution is just kind of making this wild.
2081.13s - 2090.08s |  Um, anyway, uh, what we see here, uh, footprint back, there we go.
2090.08s - 2091.08s |  So, that's the silkscreen.
2091.08s - 2095.08s |  That's the layer that we would want to, you know, we'll, we'll remove and replace.
2095.08s - 2097.08s |  Um, if you wanted to see one example of what it looks like.
2097.08s - 2100.08s |  Of course, you know, your boards are kind of, like, looking top down.
2100.08s - 2102.08s |  So, it gets, uh, flipped and rotated a lot.
2102.08s - 2105.08s |  Um, but, yeah, that's what you do.
2106.08s - 2108.08s |  Uh, next.
2108.08s - 2115.08s |  Um, let's go over to, this is OpenTaxus straight out of the, uh, repository.
2115.08s - 2117.08s |  The question before was what the URL is.
2117.08s - 2121.08s |  Um, securely, uh, github slash securely fits slash OpenTaxus.
2121.08s - 2124.08s |  But if you just search github for OpenTaxus, you should get it.
2124.08s - 2126.08s |  T-A-X-U-S.
2126.08s - 2127.08s |  Um, what's the difference here?
2127.08s - 2129.08s |  Right, there's none of the logos.
2129.08s - 2130.08s |  My logo's not on there.
2130.08s - 2132.08s |  The open hardware's on there.
2132.08s - 2134.08s |  Um, the conference logo isn't on there.
2134.08s - 2136.08s |  There is the URL.
2136.08s - 2139.65s |  So, we can see it.
2139.65s - 2140.65s |  If, take a picture if you want.
2140.65s - 2142.65s |  I'll wait a second.
2142.65s - 2144.65s |  Take a, take a picture of the screen.
2144.65s - 2145.65s |  Showing the tablet.
2145.65s - 2147.65s |  Taking a picture of my laptop.
2147.65s - 2152.65s |  Showing a device that happens to have the URL text rendered as an image.
2152.65s - 2154.65s |  I mean, I think we need to do this anyway.
2154.65s - 2156.65s |  I would take a picture with my phone right now, but I cracked the screen yesterday.
2156.65s - 2157.65s |  So, oops.
2157.65s - 2159.65s |  Um, but, yeah.
2159.65s - 2161.65s |  You can see it's the same layout, same design.
2161.65s - 2163.65s |  And besides, Portland is literally gonna use this exactly the same.
2163.65s - 2165.65s |  Actually, that's not true.
2165.65s - 2169.65s |  We're gonna change R11 to a slightly different resistor value.
2169.65s - 2173.65s |  Um, but we don't need to worry about that right now.
2173.65s - 2174.65s |  So, yeah.
2174.65s - 2177.65s |  And then, again, this is, looks, should look very similar.
2177.65s - 2181.65s |  This is the, get it nice and close so we get the, the screen as the whole screen.
2181.65s - 2182.65s |  There we go.
2182.65s - 2183.65s |  Perfect.
2183.65s - 2184.65s |  So, yeah.
2184.65s - 2185.65s |  Here is the board.
2185.65s - 2187.65s |  Um, black, black, blank on the back.
2187.65s - 2189.65s |  And stuff on the front.
2189.65s - 2195.65s |  Um, one thing I'll mention, uh, some people kind of, uh, like to shortcut and sometimes, oh, you can see me in there too.
2195.65s - 2201.65s |  Um, you try and shortcut and say, oh, well, you know, it's cheaper if we just get the, the plain boards.
2201.65s - 2207.65s |  Um, and the default selection is, uh, uh, HASL, uh, it's a leaded, uh, kind of metal cover.
2207.65s - 2209.65s |  So, it makes it easier to solder on the copper.
2209.65s - 2211.65s |  Um, but that's leaded.
2211.65s - 2215.65s |  And if you're doing these badges and you're handing them out to people, don't use lead.
2215.65s - 2216.65s |  Okay?
2216.65s - 2218.65s |  There are a lot of people who will be like, oh, yeah, I'm old school.
2218.65s - 2220.65s |  I'm just going to use leaded solder because, you know, whatever.
2220.65s - 2222.65s |  It tastes salty when you eat it, but too bad.
2222.65s - 2225.65s |  Um, use unleaded, like, it's, it exists for a reason.
2225.65s - 2229.65s |  And especially if you're going to be handing this to people and kids and they're going to hang it around their neck.
2229.65s - 2230.65s |  And they'll show it to their kids when they get home.
2230.65s - 2231.65s |  And they'll put it in their mouth.
2231.65s - 2235.65s |  Like, you may want to put a bit on there just, you know, to make it like game cartridges.
2235.65s - 2237.65s |  But like, yeah, don't, don't use lead.
2237.65s - 2238.65s |  Uh, figure it out.
2238.65s - 2240.65s |  Uh, get the equipment and learn how.
2241.65s - 2248.65s |  I use, uh, SAC 305, uh, solder, which is 3% silver and 0.5% some lead, tin.
2248.65s - 2249.65s |  Uh, no, not lead.
2249.65s - 2250.65s |  Tin.
2250.65s - 2251.65s |  I don't know.
2251.65s - 2252.65s |  But just do it.
2252.65s - 2254.65s |  Get practice doing it if you're a soldering person.
2254.65s - 2261.65s |  Because, uh, it's the right thing to do for, um, people who would otherwise get injured by lead.
2261.65s - 2262.65s |  Anyway.
2262.65s - 2267.65s |  Uh, so let's look next, uh, and actually I'll skip over because it's a little more visual.
2267.65s - 2269.65s |  This is the, uh, the dock.
2269.65s - 2270.65s |  Right?
2270.65s - 2273.65s |  And so let me try and change it so you can see the dock better.
2273.65s - 2277.65s |  Has anybody ever used OpenSCAD before?
2277.65s - 2280.65s |  I love OpenSCAD because I'm like a console person.
2280.65s - 2284.65s |  And, uh, OpenSCAD is like CAD for console people.
2284.65s - 2285.65s |  There we go.
2285.65s - 2294.94s |  So here, uh, what do I do now?
2294.94s - 2295.94s |  Oh, there's a button down here.
2295.94s - 2297.94s |  Do-do-do-do-do-do.
2297.94s - 2299.94s |  No, that was the wrong button.
2299.94s - 2301.94s |  Uh, there we go.
2301.94s - 2307.94s |  So, uh, OpenSCAD lets you just basically draw boxes and spheres and all that stuff.
2307.94s - 2310.94s |  And what you can see here is I've got, oh, why is it doing this?
2310.94s - 2313.94s |  Um, I must have a sticky key or something.
2313.94s - 2314.94s |  So we'll look at it sideways.
2314.94s - 2315.94s |  Right?
2315.94s - 2317.94s |  I've got a groove for each of the badges to slot in there.
2317.94s - 2320.94s |  Um, what I also have is it's parametric.
2320.94s - 2323.94s |  So we can change the badge size right here without having to worry.
2323.94s - 2325.94s |  So if we change the PCB, it's pretty straightforward.
2325.94s - 2327.94s |  I like to put the USB spot-port in the middle.
2327.94s - 2328.94s |  It just makes it easy.
2328.94s - 2334.94s |  Um, and if we wanted to do, like, a two-column version of it, not 23, uh, we can go do that.
2334.94s - 2336.94s |  And bam, you've got two columns.
2336.94s - 2337.94s |  Right?
2337.94s - 2343.94s |  If we only wanted to do a double one, like, uh, we can do, uh, two columns and one row.
2343.94s - 2344.94s |  Yeah.
2344.94s - 2345.94s |  Bam.
2345.94s - 2346.94s |  Like, just a skinny one.
2346.94s - 2347.94s |  Make sense?
2347.94s - 2350.94s |  So, um, I've got that up here.
2350.94s - 2353.94s |  Um, so when I'm done talking, y'all can come up and take a peek at it.
2353.94s - 2355.94s |  And, uh, yeah, again, I got badges.
2355.94s - 2361.94s |  So if you stick out all the way to the end and you're interested in, like, contributing something or even just want to try these things out, uh, come on up.
2361.94s - 2362.94s |  I didn't bring batteries.
2362.94s - 2363.94s |  I'm sorry.
2363.94s - 2368.94s |  Um, and actually now I'm realizing that there's something in my slides I forgot to mention.
2368.94s - 2370.94s |  But I'll get back to that in a minute.
2370.94s - 2372.94s |  The last thing I want to talk about is code.
2372.94s - 2374.94s |  Um, it's all Python.
2374.94s - 2377.94s |  Does anybody, anybody who's used Python, you look at this, like, okay, we import stuff.
2377.94s - 2381.94s |  We, uh, I have a bunch of libraries that I use specifically for this game.
2381.94s - 2383.94s |  And then it's, it's, it's Python.
2383.94s - 2384.94s |  Right?
2384.94s - 2385.94s |  Python code.
2385.94s - 2387.94s |  And it actually works on hardware.
2387.94s - 2389.94s |  And it's pretty awesome.
2389.94s - 2393.94s |  The downsides of Python on embedded hardware is it sucks power.
2393.94s - 2395.94s |  It uses a lot of battery.
2395.94s - 2399.94s |  Um, which is why I used AA batteries.
2399.94s - 2403.94s |  Um, yeah, no, I'll go back to that later.
2403.94s - 2407.94s |  Um, I use AA batteries, um, because they're cheap.
2407.94s - 2411.94s |  Um, and because they have a battery holder that's inexpensive.
2411.94s - 2413.94s |  You can ship them.
2413.94s - 2414.94s |  You can transport them.
2414.94s - 2416.94s |  You can take them through TSA.
2416.94s - 2420.94s |  You don't have to worry about accidentally puncturing them and starting a fire.
2420.94s - 2425.94s |  Um, so unless you really know what you're doing, stay away from lithium batteries on badges.
2425.94s - 2428.94s |  Um, it's, it's, I mean, it's not as bad as lead on PCBs.
2428.94s - 2433.94s |  But I, I feel like, you know, we've got a badge here that was well done.
2433.94s - 2436.94s |  Where they actually made an enclosure and protected the battery.
2436.94s - 2441.94s |  Um, if you aren't enclosing your, your lipos, then be extra super careful.
2441.94s - 2443.94s |  Anyway, AA, uh, battery.
2443.94s - 2445.94s |  Actually, I started out with a double, uh, triple A.
2445.94s - 2449.94s |  I used a double A because it didn't, uh, last very long the first time I did it.
2449.94s - 2452.94s |  But then I've, uh, added some power save features.
2452.94s - 2455.94s |  Uh, somehow I should be able to look down here.
2455.94s - 2460.94s |  Um, right there, tiny, maybe you can see it, is, uh, some circuitry.
2460.94s - 2463.94s |  And what this does is it takes the 5 volts in over USB and boosts,
2463.94s - 2466.94s |  or sorry, uh, the 1.5 volts from the battery.
2466.94s - 2468.94s |  And boosts it up to 3.3.
2468.94s - 2472.94s |  Which means you can use that battery all the way down to, like, 0.8 volts before the thing cuts out.
2472.94s - 2474.94s |  So, use your whole battery.
2474.94s - 2476.94s |  Like, I used a lot of coin cells in the past.
2476.94s - 2479.94s |  Um, which is great if you have a very small thing.
2479.94s - 2481.94s |  If you're not running CircuitPython, 10 minutes, cool.
2481.94s - 2483.94s |  Uh, let me, like, wrap this up.
2483.94s - 2485.94s |  And we'll chat.
2485.94s - 2487.94s |  So, yeah, uh, it's Python code.
2487.94s - 2490.94s |  If you know Python, you can, you know, learn it pretty quickly.
2490.94s - 2493.94s |  Um, CircuitPython is made by Adafruit.
2493.94s - 2496.94s |  They're a hobbyist electronics company based out of, uh, New York.
2496.94s - 2500.94s |  Um, and they make reference boards, development boards, uh, all sorts of stuff.
2500.94s - 2503.94s |  So, if you want to prototype something, actually that's where we started.
2503.94s - 2505.94s |  We started with a bunch of Adafruit components.
2505.94s - 2507.94s |  Prototyped on, like, breadboards.
2507.94s - 2510.94s |  And ended up here with, uh, custom PCB.
2510.94s - 2515.94s |  So, and the last thing I'm gonna show you is, uh, uh, yeah.
2515.94s - 2517.94s |  So, let's skim through this.
2517.94s - 2519.94s |  This is basically the provisioning.
2519.94s - 2525.66s |  It's, uh, not LSD.
2525.66s - 2526.66s |  There we go.
2526.66s - 2527.66s |  So, this is the configuration.
2527.66s - 2531.66s |  We've got a check.sh, which actually checks when you've got a solution.
2531.66s - 2538.66s |  But the genfiles.py is what, uh, basically generates all the files for the game.
2538.66s - 2542.66s |  So, down below you can see we have, like, our, our strings.
2542.66s - 2543.66s |  Right, so our company options.
2543.66s - 2546.66s |  Terrell Corporation, Neodym Pulsion, Weyland-Yutani.
2546.66s - 2549.66s |  Our, um, the startup is Algify, iTech, whatever.
2549.66s - 2551.66s |  And the tool is, uh, something else.
2551.66s - 2557.66s |  And the string is, blank company has just announced an intent to acquire a startup to build the entry's most advanced AI-powered tool.
2557.66s - 2560.66s |  Right, and that's the, those, the solution is randomly chosen.
2560.66s - 2562.66s |  And, uh, comes out here.
2562.66s - 2566.66s |  The way it does that is, basically, it goes through the options, randomly chooses one.
2566.66s - 2569.66s |  Generates a bunch of files that go on the badges.
2569.66s - 2571.66s |  And then it signs the clues.
2571.66s - 2573.66s |  Right, and gives the public key out.
2573.66s - 2576.66s |  With RSA-512, because just enough to last you a day.
2576.66s - 2578.66s |  Right, without someone wasting a few grand.
2578.66s - 2584.66s |  Um, and, uh, that'll let you make sure that people don't mess with your game by giving out fake clues, which could screw everything up.
2584.66s - 2586.66s |  So, I'm gonna stop here.
2586.66s - 2589.66s |  Uh, I've said all the things I think I wanted to say.
2589.66s - 2591.66s |  If you got some questions, come on up here.
2591.66s - 2594.66s |  Um, and I can, like, continue to talk to those out loud.
2594.66s - 2596.66s |  But you can also come on up and grab some badges if you want.
2596.66s - 2598.66s |  So, yeah, go for it.
2598.66s - 2599.66s |  Thank you.
2599.66s - 2601.66s |  Thank you.