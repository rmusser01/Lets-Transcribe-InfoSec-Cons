{
  "webpage_url": "https://www.youtube.com/watch?v=Ui2etjRyrUE",
  "title": "DEF CON 32 - V2GEvil: Ghost in the Wires - Pavel Khunt & Thomas Sermpinis aka  Cr0wTom",
  "description": "This research aims to enhance electric vehicle cybersecurity by uncovering vulnerabilities in the Electric Vehicle Communication Controller (EVCC), crucial for charging communication. We've developed a specialized security tool after examining electric vehicle charging ports and On-Board Charging (OBC) protocols, with a focus on ISO 15118 standards.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 1459,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 5.00s | This text was transcribed using whisper model: large-v2

 Hello. Hello, everyone. First of all, thank you for joining us today.
5.00s - 9.00s |  And our topic is V2G will ghost in the wires.
9.00s - 16.00s |  Where will we talk about the V2G and the cybersecurity issues that come with it?
16.00s - 22.89s |  First of all, let me introduce us. I am Pavel Kuhn, cybersecurity researcher,
22.89s - 29.89s |  and I'm currently working at Auxilium Pentest Lab with Tom.
29.89s - 32.89s |  Hello from myself, too. I'm Thomas Rampinis.
32.89s - 35.89s |  I'm the technical director of Auxilium Pentest Labs.
35.89s - 38.89s |  And yeah, let's start.
38.89s - 43.89s |  Our main goal today is to analyze the state of cybersecurity in the automotive industry
43.89s - 49.89s |  and get an in-depth look on the EV architecture and this undeniably emerging attack vector.
49.89s - 55.89s |  We want to explore and understand the communication protocols used in EV charging today
55.89s - 63.89s |  and introduce you to our security tool, V2G Evil, that we built with Pavel during his university thesis
63.89s - 68.89s |  and finally create a reference point for EV security research and evaluation,
68.89s - 72.89s |  something that we feel our industry is lacking, basically,
72.89s - 77.89s |  alongside other vectors in the automotive security landscape.
77.89s - 81.89s |  So let's start with the introduction to vehicle cybersecurity.
82.89s - 86.89s |  Basically, it goes without question that the automotive industry cannot be considered something new.
86.89s - 91.89s |  We are basically talking about 100-plus-year-old mechanical engineering industries,
91.89s - 93.89s |  and nothing is new about this.
93.89s - 97.89s |  The constant need for connectivity and technological aspects of it
97.89s - 104.89s |  push those companies to make restructuring and start implementing technologies
104.89s - 110.89s |  that didn't have the know-how or the capacity to do so before, which is good for us.
110.89s - 112.89s |  That's why we are here in the end,
112.89s - 116.89s |  but really bad for the security and safety of the affected vehicles that we're testing.
116.89s - 122.89s |  On the other hand, you have all these startups that started as technology companies first,
122.89s - 127.89s |  which have a way better security posture and culture,
127.89s - 131.89s |  but the industry as a whole struggles for the last decade.
131.89s - 137.87s |  And to be honest, I cannot see a clear light in this path.
137.87s - 141.87s |  Isolating the part we will focus on in this talk,
141.87s - 145.87s |  we have the emerging industry of electric and hybrid vehicles,
145.87s - 150.87s |  mainly developed to decentralize pollution and make better use of clean energy solutions.
150.87s - 157.87s |  And additionally, you have several advantages in comparison to internal combustion engine vehicles,
157.87s - 161.87s |  for example, heavy gains in speed and efficiency.
161.87s - 164.87s |  And while early models used basic charging,
164.87s - 170.87s |  the last decade charging standards are applied and enforced in many ways,
170.87s - 175.87s |  which led to the standardization of the ports, protocols and underlying data
175.87s - 180.87s |  in a wide range of applicability for different continents and standards.
180.87s - 185.87s |  And this is, of course, in addition to the digital communication needed during charging,
185.87s - 190.87s |  which expanded the attack surface of the vehicles as we knew from them before
190.87s - 196.87s |  and created new attack vectors that we can start playing with.
196.87s - 203.87s |  What I'm saying here is that it's not something new or groundbreaking by any means,
203.87s - 207.87s |  but the state of EV charging security is a barely touched topic by researchers.
214.30s - 218.30s |  And here we have a really simple representation of a modern vehicle,
218.30s - 221.30s |  which normally includes a bunch of interconnected ECUs
221.30s - 224.30s |  responsible for different functionality in the vehicle.
224.30s - 230.30s |  This can be from single headlight ECUs to huge DC-DC converters.
230.30s - 237.30s |  And what we see, though, is that while this vehicle till now was reasonably isolated by the outside world,
237.30s - 243.30s |  now we have a new externally accessible port which connects to a charging station.
243.30s - 245.30s |  And this leaves a big room for error.
245.30s - 250.30s |  And if not properly implemented and designed, several unexpected instances can occur.
251.30s - 257.30s |  And while architecture and vehicle design of interconnected vehicles might not seem as important,
257.30s - 264.30s |  there are numerous instances that they played a big part of how severe our findings are during a pen test
264.30s - 270.30s |  and how, in the end, can or cannot affect the safety of the driver, passengers, or even pedestrians.
271.30s - 278.30s |  And as we keep digging deeper, let's discuss a bit about charging in terms of vehicles and the automotive industry.
278.30s - 285.30s |  So first of all, there are several charging methods, including conductive, wireless, and some exotic ones
285.30s - 290.30s |  that we only see in some manufacturers, like battery swaps and bidirectional charging.
290.30s - 295.30s |  And on top of that, there are different types depending on the needs of the user
295.30s - 301.30s |  and the capabilities of the vehicle, including AC and DC charging,
301.30s - 305.30s |  supplying different advantages and disadvantages, as we will see later.
305.30s - 309.30s |  And finally, during charging, there are also different modes of charging,
309.30s - 315.30s |  where basically the first three modes are focused to AC and the fourth one in DC charging.
316.30s - 321.30s |  Talking about some boring stuff here, there are a lot of different available standards,
321.30s - 329.30s |  and as our main focus is the Combined Charging Standard, or CCS, basically for Europe.
329.30s - 336.30s |  And we just have this undeniably big list of standards for different levels of this full implementation,
336.30s - 343.30s |  ranging from the connector itself to the high-level communication needed between the EV and the charger.
343.30s - 350.30s |  And this CCS standard is basically an effort towards a single unified for electric vehicle charging,
350.30s - 354.30s |  which, considering where we are today, you might disagree.
355.30s - 362.30s |  And the reason I said this is because there are a number of different standards out there in the wild,
362.30s - 366.30s |  mostly divided to the different continents,
366.30s - 371.30s |  but lately several manufacturers have decided to move into the Tesla standard,
371.30s - 374.30s |  the supercharger standard, mainly in the USA,
374.30s - 378.30s |  and mainly because of the heavily invested charging network in the US roads.
378.30s - 382.30s |  And of course that does not affect Europe, at least for now,
382.30s - 387.30s |  but the opportunity for a unified standard, in my opinion, is kind of lost at this point.
388.30s - 394.30s |  And, yeah, as we look at this circle of this CCS AC type 2 connector,
394.30s - 396.30s |  we can distinguish several pins.
396.30s - 402.30s |  Some of them is the CP pin, which is crucial for communication between the car and the charging station,
402.30s - 407.30s |  and the pin with the highest interest for us as cybersecurity researchers.
408.30s - 413.30s |  It basically allows the station to check the vehicle status and ensure it's safe to charge.
413.30s - 418.30s |  And then the PP pin ensures that the correct connector is used
418.30s - 424.30s |  and provides information on the current carrying capacity of the cable that we're using.
424.30s - 429.30s |  The AC type 2 connector supports charging at various power levels,
429.30s - 433.30s |  from household outlets to high power public chargers.
434.30s - 437.30s |  And here we have the DC CCS type 2 connector,
437.30s - 443.30s |  an extension of the AC type 2 connector designed to support direct current fast charging.
443.30s - 448.30s |  And this connector, also known as combo 2, basically incorporates the same pins
448.30s - 451.30s |  as the AC type 2 connector for AC charging,
451.30s - 455.30s |  but adds two additional pins specifically for DC charging.
455.30s - 461.30s |  And the combination of these pins in a single connector is what gives this combined charging name.
462.30s - 466.30s |  And it provides the flexibility of using either AC or DC,
466.30s - 469.30s |  depending on the charging station and the vehicle capabilities.
470.30s - 474.30s |  Here we can basically get an understanding of how this works internally
474.30s - 478.30s |  in the different implementations of DC or AC charging.
478.30s - 482.30s |  And on the other hand, we have the DC charging where the power electronics
482.30s - 486.30s |  for the conversion of the current exists in the EVSC side.
486.30s - 491.30s |  So the charger, while when you want to use the slower solution of AC charging,
491.30s - 496.30s |  the conversion is still happening inside the vehicle itself by the onboard charger.
496.30s - 500.30s |  Additionally, we can get an understanding of the communication channel
500.30s - 504.30s |  that exists in those scenarios, really important as we will see later,
504.30s - 510.30s |  especially in safety critical cases where the current needs to be negotiated.
511.30s - 516.30s |  From this, we clearly understand that charging is not only simple power transfer
516.30s - 519.30s |  and data exchange is also happening under the hood,
519.30s - 523.30s |  many times with important information like payment details, voltage,
523.30s - 527.30s |  current requirements, time of charging and others.
527.30s - 531.30s |  And to get a better understanding of how this communication is structured,
531.30s - 532.30s |  I will pass it to Pavel.
533.30s - 541.50s |  So let's have a look at the charging flow, its high-level overview.
541.50s - 549.50s |  So first, the user plugs the CCS connector to his car and then the low-level communication starts.
550.50s - 555.50s |  If the EV is in the state B and the signal has the 5% duty cycle,
555.50s - 561.50s |  it can change to the high-level communication and during the high-level communication,
561.50s - 564.50s |  they are exchanged to digital information about the charging.
565.50s - 571.77s |  And that's how my journey and master thesis started.
571.77s - 573.77s |  So it's just a meme.
576.77s - 579.77s |  So let's have a look at the low-level communication at first.
583.30s - 588.30s |  Low-level communication in the charging process is also called basic signaling
588.30s - 604.16s |  and it offers basic control of the charging process between the EV and EVSE.
605.16s - 612.16s |  The EV controls the voltage value by adding or removing the resistors in the pilot signal
612.16s - 618.16s |  and based on the measured voltage, the EVSE can recognize the EV's state.
620.16s - 625.16s |  The most important is the state B and state C, as you can see in the table.
628.21s - 633.21s |  Depending on the given state resulting from the measured voltage value,
633.21s - 639.21s |  the EVSE generates a pulsed modulation signal with a specific duty cycle.
647.09s - 651.09s |  The duty cycle value is controlled by the charging station and measured in the vehicle.
652.09s - 656.09s |  And the simplified outcome from the low-level communication is that
656.09s - 662.09s |  the state B means that EV is connected but not charging
662.09s - 666.09s |  and the state C is EV is connected and ready for charge.
666.09s - 671.09s |  And as I said, 5% duty cycle affords the high-level communication.
674.09s - 678.09s |  So as you could see, the low-level communication is not so interesting
678.09s - 684.09s |  from the cybersecurity perspective because it only involves physical signaling.
685.09s - 689.09s |  However, low-level communication is important in the sense that
689.09s - 694.09s |  it enforces high-level communication for the specific state and the duty cycle.
695.09s - 698.09s |  So let's explore the high-level communication.
699.09s - 702.09s |  First of all, why do we need the high-level communication?
702.09s - 705.09s |  Why the low-level communication is not sufficient enough?
706.09s - 711.09s |  In the beginning, EV charging relied on the basic signaling methods only,
711.09s - 715.09s |  which are sufficient for simple on-off commands to start or stop.
716.09s - 721.09s |  But after some time, with the growing number of the electric vehicles
721.09s - 725.09s |  and the complexity of our energy ecosystem,
725.09s - 730.09s |  this basic form of the communication is no longer sufficient.
731.09s - 735.09s |  High-level communication provides the optimized charging process.
735.09s - 742.77s |  As we already described before, the precondition for high-level communication
742.77s - 746.77s |  is the low-level communication with specific state and the duty cycle
746.77s - 752.77s |  and the high-level communication is only applicable for charging modes 3 and 4.
753.77s - 758.77s |  And the high-level communication is mandatory for the mode 4, which is the DC charging,
759.77s - 763.77s |  because there is a need to exchange some additional information
763.77s - 765.77s |  to avoid the damage to the battery.
766.77s - 775.62s |  The ISO 15118 defines all the high-level communication
776.62s - 779.62s |  and the full name is Vehicle-to-Grid Communication Interface.
780.62s - 783.62s |  And the part Vehicle-to-Grid has an acronym V2G.
784.62s - 787.62s |  That's the reason why we named our tool V2GEvil,
787.62s - 791.62s |  because it stands for the evaluation of the V2G communication.
792.62s - 800.57s |  There is the comparison of the ISO and the IEC.
801.57s - 805.57s |  As you can see, the ISO implements all of the OSI layers
806.57s - 810.57s |  and the new protocol is V2G Transfer Protocol,
811.57s - 814.57s |  which I will explain in the following slides.
816.57s - 824.57s |  We are aiming from the third network layer and above up to the application layer.
828.57s - 833.57s |  The high-level communication is more complex, so there is bigger space for mistakes
833.57s - 835.57s |  and we are aiming for this.
837.57s - 840.57s |  Here you can see the V2G communication flow,
840.57s - 844.57s |  which is basically changing from one state to another
844.57s - 848.57s |  and there is also exchange of the V2G messages.
851.26s - 856.26s |  And after this is done, the charging is completed.
857.26s - 860.26s |  Here you can see the V2G message, the header,
861.26s - 863.26s |  the structure of the V2G message.
864.26s - 868.26s |  I have to be really fast, because we have only a few minutes.
870.26s - 872.26s |  This is the structure of the header.
873.26s - 876.26s |  We have a different payload type, as you can see on the slide.
877.26s - 881.26s |  The first of the V2G messages is the SDP request.
882.26s - 886.26s |  There is some exchange for the Security and Transfer Protocol for this.
887.26s - 889.26s |  We have also the structure of the SDP request.
890.26s - 894.26s |  Then the station will respond with the SDP response
895.26s - 901.26s |  with the information of IP address and the port for the communication over TCP protocol.
903.26s - 905.26s |  And then the V2G communication can start.
906.26s - 910.86s |  Here you can see the V2G message structure.
911.86s - 915.69s |  It is divided into two different types.
916.69s - 924.69s |  And the concept that we are aiming is to cause some issues in this part,
925.69s - 927.69s |  which is the decoding from EXI to XML
928.69s - 935.69s |  and also to this part, which is from this content and structure to the data structures.
937.69s - 946.50s |  Here you can see just a simple representation of the message in XML format,
946.50s - 949.50s |  which is later encoded to EXI.
953.50s - 956.50s |  I think we have to skip this.
959.94s - 962.94s |  Some words about the testing environment,
963.94s - 966.94s |  because we need some specified testing environment
967.94s - 971.94s |  where we use the DLAN Green PHY eval board and the DLAN Green PHY module.
972.94s - 975.94s |  Basically, it has PLC support and PLC to Ethernet bridging support,
975.94s - 978.94s |  which helps us with everything that was described in theory before.
979.94s - 983.94s |  And we use this QCA 7000 Green PHY firmware,
984.94s - 989.94s |  which allows us to configure a module as an EMOB charger or EMOB vehicle.
990.94s - 994.94s |  So we potentially have the ability to act both as a charger and a vehicle.
995.94s - 999.94s |  And it has implicit support for the Slack, EVSC and the ACCC side,
1000.94s - 1002.94s |  so the charger and the vehicle in this case.
1002.94s - 1005.94s |  Here we have a sort of our complete development setup,
1006.94s - 1011.94s |  where one board acts as the vehicle and one as the charger or the EVSC.
1012.94s - 1015.94s |  And there are several ways that we can perform the PLC communication as you see,
1016.94s - 1020.94s |  but we chose to use a coax cable as it will also be more appropriate
1021.94s - 1025.94s |  for using the real world scenario to avoid interferences from other cables.
1026.94s - 1028.94s |  And to conclude, you will be surprised if I tell you that
1028.94s - 1032.94s |  many of the cheap Chinese controllers for Ethernet over power line
1033.94s - 1035.94s |  use the same exact Qualcomm chip that we are also using.
1036.94s - 1039.94s |  And if you are in one tight budget, let's say in most cases,
1040.94s - 1043.94s |  you can reflash this chip with the appropriate firmware
1044.94s - 1046.94s |  and run our tool with a budget of around 20 euros
1047.94s - 1050.94s |  comparing to a couple of hundred euros on the boards that I showed you before.
1051.94s - 1054.94s |  And as always, we're referring to the first two layers.
1055.94s - 1057.94s |  For the rest of the layers, we used as a reference
1058.94s - 1061.94s |  the joint operating system for EV chargers.
1062.94s - 1066.94s |  In the start, we used both for the EVSC and the SECC parts
1067.94s - 1069.94s |  in order to properly implement all the parts of the communication.
1070.94s - 1073.94s |  But later on, we developed our own malicious SECC part
1074.94s - 1078.94s |  to test against the Joseph EVSC reference implementation.
1080.94s - 1083.94s |  And yeah, now let's go to our tool.
1084.94s - 1088.94s |  So here you can see the architecture of our tool,
1089.94s - 1091.94s |  and it's modular, so you have different modules.
1092.94s - 1096.94s |  And we will explain the most important modules in the next slides.
1097.94s - 1101.94s |  So first of all, we have the implementation of V2G transfer protocol,
1102.94s - 1106.94s |  which is basically the module V2GTP
1107.94s - 1110.94s |  is basically the implementation of that transfer protocol.
1110.94s - 1115.94s |  So this module is responsible for the V2G packet parsing,
1116.94s - 1118.94s |  decoding, and creating V2GTP packets.
1119.94s - 1122.94s |  And the next module is the sniffer.
1123.94s - 1125.94s |  The initial reason for developing the sniffer was
1126.94s - 1132.94s |  to capture the V2G communication between the EV and EVSC
1133.94s - 1136.94s |  and verify the correctness of our implementation
1137.94s - 1139.94s |  of the V2G transfer protocol.
1141.94s - 1144.94s |  So let's take a look at the demo.
1149.98s - 1154.98s |  So first of all, we start the station reference implementation,
1155.98s - 1159.45s |  which is waiting for connection.
1160.45s - 1164.45s |  Then we start our sniffer module with option V2GTP,
1165.45s - 1172.45s |  which decodes the TCP raw data to V2G transfer protocol packet.
1173.45s - 1176.45s |  Then we start the EVCC module,
1177.45s - 1179.45s |  which is connecting, like the car is connecting to the station,
1180.45s - 1183.45s |  and then you can see the message exchange.
1184.45s - 1188.45s |  And this is the output of the sniffer module
1189.45s - 1193.45s |  that you can see that there's the V2GTP header and V2GTP payload.
1194.45s - 1196.45s |  These are the SDP requests and the response.
1197.45s - 1203.89s |  The next slide, you can also see that our sniffer module
1204.89s - 1207.89s |  can also decode the EXI data, which are this payload
1208.89s - 1213.89s |  that it's decoded to the XML document.
1214.89s - 1217.89s |  The next two modules are the messages and the station.
1218.89s - 1220.89s |  Messages are responsible for creating the messages
1221.89s - 1224.89s |  and the conversion between the EXI and XML.
1224.89s - 1229.89s |  And the station module is our implementation of the SECC,
1230.89s - 1234.89s |  which is the Supply Equipment Communication Controller.
1235.89s - 1239.89s |  And the station module is the core for the security modules.
1242.84s - 1246.84s |  Let's start with the modules that are dedicated to the security testing.
1247.84s - 1249.84s |  First of all, we have the enumerator module,
1250.84s - 1252.84s |  which can help to enumerate the EV.
1253.84s - 1255.84s |  For example, if the TLS is required or not,
1256.84s - 1257.84s |  what is the TLS version?
1258.84s - 1260.84s |  What are the supported cipher suites?
1261.84s - 1266.84s |  And what is the application protocol required by the EV?
1267.84s - 1269.84s |  So here you can see the demo
1270.84s - 1273.84s |  that we start our station in enumerate mode.
1274.84s - 1276.84s |  We enumerate all of the possible information.
1277.84s - 1280.84s |  Then we start the EVCC to connect to our station.
1280.84s - 1286.84s |  And then you can see the outcome of the enumerator.
1287.84s - 1288.84s |  Here you can see the result.
1289.84s - 1291.84s |  As I said, you can see the supported protocols,
1292.84s - 1295.84s |  the TLS version and ciphers.
1298.28s - 1300.28s |  And the last module is the FASER module,
1301.28s - 1303.28s |  which is the most important module for the security testing.
1304.28s - 1305.28s |  And using the FASER module,
1306.28s - 1308.28s |  we can test the resilience of the EV
1308.28s - 1312.28s |  to the invalid or malformed parameter values
1313.28s - 1315.28s |  in the V2G response messages.
1316.28s - 1320.28s |  So basically the FASER is sending malicious and invalid values
1321.28s - 1324.28s |  for the parameters and it aims to
1325.28s - 1328.28s |  the process of decoding the EXI to XML.
1329.28s - 1330.28s |  So let's have a look at the demo.
1331.28s - 1340.06s |  We start the FASER and waiting again for the EVCC to connect.
1341.06s - 1347.06s |  And after the EVCC connects, there is some message exchange
1348.06s - 1351.06s |  and in some of the messages we supply the invalid data.
1352.06s - 1355.06s |  And here you can see the invalid data of some parameters.
1356.06s - 1360.06s |  And the result is that we can cause some errors on the EVCC side.
1361.06s - 1364.06s |  The FASER module also can FAS only one message
1364.06s - 1370.06s |  and the result is that we can cause some decoding error
1371.06s - 1374.06s |  in the unmarshal binary,
1375.06s - 1377.06s |  which has some handful unmarshal method
1378.06s - 1380.06s |  that reads a source of the XML data
1381.06s - 1384.06s |  and binds its values to a new instance of Java object.
1385.06s - 1386.06s |  And as we know from some articles,
1387.06s - 1392.06s |  the unmarshal can be vulnerable to XML external entity injection attacks.
1392.06s - 1398.06s |  So there is the space to implement the exploitation modules
1399.06s - 1402.06s |  and exploit this further.
1403.06s - 1407.94s |  So let's finish.
1408.94s - 1411.94s |  Basically, there are a lot of enhancements that we can do on the tool.
1412.94s - 1413.94s |  We will not go through them. We don't have time.
1414.94s - 1417.94s |  But to conclude, communication in electric vehicles
1418.94s - 1420.94s |  has assumed potential from our point of view
1421.94s - 1422.94s |  with bigger needs in the future, more sensitive data.
1423.94s - 1427.94s |  Will start to flow and subsequently passed by EVs and EVSCs.
1428.94s - 1430.94s |  And there are no open source tools available
1431.94s - 1432.94s |  to cover this emerging attack vectors.
1433.94s - 1435.94s |  That's why we build this and we hope that you will start using it
1436.94s - 1439.94s |  and you will start getting to research vehicles in this way
1440.94s - 1441.94s |  that it's uncovered till now.
1442.94s - 1444.94s |  We want our tool to act as an easy way for people to get introduced
1445.94s - 1447.94s |  and start researching both EVs and chargers
1448.94s - 1450.94s |  in an efficient and modular way.
1450.94s - 1454.94s |  Thank you and our tool will be released after DEF CON 32.