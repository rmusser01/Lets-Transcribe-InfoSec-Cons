**Presentation Overview**
- DEF CON 32 presentation by Octavio Gianatiempo and Gast√≥n Aznarez on **Detecting Persistent Threats on Draytek Devices**.
- Focus on understanding and securing closed-source firmware on edge devices like routers and firewalls.

**Motivation and Research Background**
- A client using **Draytek equipment** was compromised, leading to the investigation.
- **500k Draytek routers** are globally exposed, with no existing tools to extract firmware.
- Developed tools to reverse-engineer firmware and mitigate persistent threats.

**Reverse Engineering Draytek Firmware**
- **Draytek's firmware** format and RTOS kernel allows dynamic loading of code modules.
- **Persistent threats** can remain active post-firmware upgrades.
- Created **DRYTEXT Arsenal**, a collection of Python-based tools for firmware extraction.

**Firmware Format**
- **Binary section**: Includes boot loader and RTOS kernel.
- **Web section**: Contains compressed file systems for web UI.
- **DLM code**: Compressed and encrypted dynamic modules.

**Vulnerabilities and Attack Vectors**
- **Insecure password storage** and **non-constant time comparison** enable attacks.
- Predictable **second-step authentication** due to time-based seed.
- **Malicious modules** can be crafted and uploaded, exploiting weak security checks.

**Creating and Uploading Malicious Modules**
- Three methods: **post-authentication endpoints**, **DNS hijacking**, and **supply chain attacks**.
- Developed functionality to **compile and merge** modules, facilitating module injection.

**Mitigation Strategies**
- Considered removing dynamic module loading but explored a better solution.
- Developed a mechanism to **check in-memory integrity** of loaded modules.
- Implemented a defensive module to **compare module hashes** and detect discrepancies.

**Conclusions and Takeaways**
- Vulnerabilities found in **Vigor 2925** router potentially exist in other models.
- Emphasized need for **vendor-implemented security features** and open source tools for community research.
- Highlighted the importance of **observability** and **threat detection solutions** in firmware.