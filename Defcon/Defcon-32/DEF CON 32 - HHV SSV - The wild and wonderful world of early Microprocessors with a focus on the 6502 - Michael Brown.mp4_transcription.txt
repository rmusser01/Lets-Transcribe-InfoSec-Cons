{
  "webpage_url": "local:1732042149:1fdd4988:DEF CON 32 - HHV  SSV - The wild and wonderful world of early Microprocessors with a focus on the 6502 - Michael Brown.mp4",
  "title": "DEF CON 32 - HHV  SSV - The wild and wonderful world of early Microprocessors with a focus on the 6502 - Michael Brown.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 1.56s | This text was transcribed using whisper model: large-v2

 Thank you all for coming.
1.56s - 7.68s |  This is the 12 o'clock talk on the wild and wonderful world of 8-bit microprocessors,
8.04s - 11.92s |  and I'll be doing a focus on the MOS6502.
12.20s - 13.50s |  I do apologize.
13.50s - 17.12s |  There is not much of a demo in this talk.
17.12s - 20.22s |  I was hoping to have more of a demo, but I've had some technical problems.
20.22s - 23.72s |  So, this, we're going to go more into more of history and technology.
24.04s - 27.52s |  For some of you, this might be stuff you've never heard of before.
27.94s - 29.28s |  That's what it's all about.
29.28s - 33.56s |  And I have quite a few slides with a lot of resources and information.
33.90s - 37.60s |  So, you're certainly welcome, and I encourage you guys to take pictures of them.
38.00s - 42.94s |  I've been actually adding to these slides, so they might not have,
42.94s - 44.30s |  they're not going to have the latest version.
44.96s - 46.46s |  So, let me start.
46.46s - 47.48s |  My name is Michael Brown.
47.80s - 50.04s |  This is my normal bio I do with these talks,
50.04s - 51.82s |  which I typically talk about InfoSec stuff.
52.22s - 56.76s |  This isn't an InfoSec talk, so I'm not going to really go over this.
57.28s - 58.62s |  But why am I here?
58.86s - 62.34s |  I actually grew up in the era of 8-bit computers.
62.34s - 67.38s |  You know, when I was a kid, it was the Apple II and the Atari 8-bit, Commodore 8-bit.
67.78s - 71.00s |  My first game console was an Atari 2600.
71.66s - 75.32s |  My first computer was actually an Atari 800XL,
75.78s - 78.42s |  which I got around in 84 when I was going to college.
78.94s - 86.20s |  And I can tell you that it was a big change going from writing papers on a typewriter
86.76s - 91.24s |  to using a word processor to write up my papers.
91.72s - 97.04s |  And I actually remember an incident when I turned in one of my first papers
97.04s - 101.24s |  to my English teacher that I use on the word processor.
101.62s - 109.08s |  And she marked off the fact that I didn't put quotes around the book, all the titles.
109.62s - 112.32s |  And I had to go and take it back to her and say, like, no, no, no, no, no.
112.96s - 115.52s |  I italicized the titles.
115.94s - 117.48s |  They don't need to be quoted.
118.52s - 119.80s |  And she didn't realize that.
119.80s - 124.66s |  And then, of course, gave me back the points because that was just too new at that time.
125.98s - 129.32s |  My second computer was an Atari 1040ST-FM.
129.84s - 133.94s |  You will impress me if you come up afterwards and tell me what
133.94s - 136.68s |  that means without looking it up.
137.78s - 143.34s |  When I was in college, among other things, I actually did programming in the 6502 and the 68000.
143.96s - 146.54s |  You know, these are some of the computers I used.
146.54s - 150.12s |  And I used these wonderful programming languages that maybe some of you know of,
150.12s - 152.30s |  maybe you don't, later on you do see.
152.80s - 154.46s |  I still got my computers.
154.68s - 156.38s |  I've added to my collection.
156.38s - 157.72s |  I don't have a huge collection.
158.14s - 161.16s |  But I, you know, I enjoyed using these computers at the time.
161.50s - 163.96s |  I enjoy using modern computers.
164.50s - 170.94s |  What I find kind of disappointing with a lot of people who get into computer science is they,
171.28s - 173.08s |  because I'm a computer science major.
173.12s - 174.96s |  I was never a computer engineer.
175.24s - 177.94s |  I wasn't, you know, hardware wasn't what I was about.
177.94s - 179.28s |  I was about writing software.
179.60s - 184.66s |  But my view is always from the beginning was I'm writing software.
184.96s - 186.06s |  It runs on a computer.
186.06s - 187.56s |  I should know about the hardware.
188.14s - 191.58s |  And unfortunately, what I saw was a lot of computer science majors,
192.24s - 194.22s |  the computer was just a black box.
194.76s - 198.14s |  I remember talking to them and asking them, hey, what processor is in that computer?
198.14s - 200.68s |  And they're like, I don't know.
201.04s - 203.34s |  And of course, today, it's even worse.
203.64s - 208.54s |  I know that my computer here, my laptop is a Core i7.
208.54s - 216.38s |  But I'd have to look it up to find out which of the 20-some generations of the i7 it is
216.38s - 220.38s |  or what capabilities because, you know, nowadays we're just pretty much oblivious.
220.88s - 225.96s |  So kind of the outline, we'll talk about some of the timeline, computer types.
226.40s - 229.60s |  We'll get into like some of the semiconductor companies,
229.60s - 231.06s |  which I find kind of interesting.
231.40s - 234.06s |  We'll look at, you know, more about the microprocessor units.
234.06s - 235.76s |  We'll look more at the 6502.
235.76s - 239.72s |  We'll talk a little bit about assembly language, which it's either something
239.72s - 243.26s |  that is really interesting to you or freaking boring.
243.72s - 247.14s |  You know, it's or, you know, the worst thing possible.
247.14s - 249.88s |  And then I want to, I put together a lot of good resources,
249.88s - 252.12s |  at least a lot of things that I think are good resources.
252.48s - 255.52s |  So I encourage you guys to take pictures of that.
256.24s - 260.26s |  So the timeline, the 70s, which is what, as I said, this is when I was in high school.
261.64s - 267.82s |  You know, we had Intel came out with the 8080, which kicked off the microcomputer era.
267.82s - 272.90s |  We have the Altair, you know, followed up by other processors.
273.16s - 279.02s |  You know, you had the Apple II, the Commodore, you know, the TRS-80 Model 1,
279.02s - 285.40s |  the so-called Trash 80, as everyone called it, and so forth into the 70s.
285.40s - 288.34s |  The TIs, computer, and the rest.
288.34s - 290.40s |  And then in the 80s, we get more.
290.40s - 298.32s |  We get the VIC-20, the Commodore 64, the IBM PC, the Macintosh, and then, of course,
298.32s - 301.50s |  you know, the Macintosh, the ST, the Amiga.
301.98s - 306.26s |  I didn't want to go further, because now we're getting outside of 8-bit.
306.38s - 310.60s |  When I was doing this, I wondered, should I get into RISC processors?
310.88s - 314.46s |  Because that's another whole, you know, topic, and that's kind of interesting
314.46s - 318.72s |  and kind of sad, so I didn't want to kind of overwhelm things.
319.28s - 324.12s |  When we talk about computer types, there's a lot of different ways to categorize them.
324.42s - 327.58s |  These are the ones that I understood when I was into computer science.
327.58s - 332.52s |  We talked about the mainframes, you had minicomputers, and you had microcomputers.
333.02s - 339.42s |  And I'll be honest, this is the distinction I've always been told about.
339.42s - 341.16s |  Why is this a mainframe?
341.16s - 342.42s |  Why is this a minicomputer?
342.78s - 345.30s |  And usually the way they said it's like, well, it's about size.
345.66s - 350.32s |  Your mainframes were your huge room-based computers, the ones you see in the TVs
350.32s - 353.36s |  and movies with the tape drives going and whatnot.
353.94s - 356.82s |  And the minicomputers were smaller, the size of a refrigerator.
357.48s - 363.12s |  Earlier on, it was, you know, these companies, you know, IBM and these others,
363.12s - 365.08s |  they were called Snow White and the Seven Dwarves.
366.18s - 368.56s |  Through mergers, it became IBM and the Bunch.
369.08s - 375.66s |  And today, yes, mainframe computers are still being made, but now by these companies.
376.34s - 378.46s |  The minicomputers were kind of interesting.
378.46s - 382.36s |  You had, you know, digital and data, data general and all these others.
382.68s - 385.10s |  And they no longer exist.
385.58s - 388.60s |  You know, there are no minicomputers as a market.
388.98s - 393.86s |  And almost all those companies either don't exist or they've moved out.
394.72s - 398.88s |  Microcomputers started, of course, as the small, you know, more of a hobbyist,
399.24s - 402.30s |  getting into the business computers with MIT or the MITS,
402.80s - 406.44s |  MSCI sold, you know, then the Apple, Atari, Commodore.
406.96s - 409.80s |  But as microprocessors became more and more powerful,
410.08s - 413.30s |  you now had microprocessor-based servers.
413.52s - 416.92s |  And those kind of moved in and wiped out the minicomputers.
417.56s - 421.88s |  And then I debated putting a lower level,
421.90s - 423.94s |  which would have been your microcontrollers,
424.26s - 429.82s |  which in many cases are microprocessors, being used to control hardware, you know,
430.02s - 431.60s |  disk drives and this sort of stuff.
433.46s - 437.22s |  So, let's talk about semiconductor manufacturers is kind of interesting.
437.58s - 440.50s |  The first major one is called Shockley Semiconductor.
440.90s - 446.08s |  It was founded by the guy who created transistors, a guy named William Shockley.
446.52s - 451.20s |  Unfortunately, Shockley was one of these people who was like a brilliant,
452.06s - 454.94s |  you know, scientist, a lousy manager.
455.66s - 459.50s |  So, he established his company, he brought all these engineers on board,
459.74s - 463.90s |  he trained them, they didn't like working for him and they left.
464.34s - 468.42s |  And these people, there was eight of them, and they are known as,
468.42s - 472.74s |  and I'm not making this up, they are the traitorous eight
473.14s - 477.38s |  who left Shockley Semiconductor to go found a new company
477.38s - 479.38s |  called Fairchild Semiconductor.
479.92s - 483.36s |  And Fairchild was a subsidiary of Fairchild Camera.
483.76s - 490.72s |  And we have Fairchild Semiconductor for having Silicon Valley.
491.12s - 493.88s |  They literally created Silicon Valley.
494.28s - 496.44s |  They were established in California.
496.80s - 501.60s |  And then the funny thing was with Fairchild is many of the people that came
501.60s - 506.92s |  to Fairchild left to establish other companies and sometimes even left those
507.26s - 510.62s |  other companies, and these are referred to as the Fairchildren.
511.30s - 514.18s |  And there's even you can go online, you can see these charts of all these
514.18s - 519.34s |  companies that have been like second generation from Fairchild that spread
519.58s - 521.38s |  this knowledge of the semiconductors.
521.98s - 526.34s |  Fairchild's big claim to fame is they were one of two companies that created
526.34s - 530.86s |  the integrated circuit that gives us all the computer chips that we use today.
531.86s - 535.74s |  They did create their own microprocessor, which until recently didn't even know
535.76s - 542.32s |  existed, called the F8, and they created their own game console called the Channel
542.32s - 546.68s |  F, which I again have to admit, I don't remember that when I was a kid.
548.36s - 552.72s |  But the big thing that was made the Channel F important is it was the first
552.72s - 558.12s |  one to use ROM cartridges for the games, which became the standard of all
558.12s - 559.52s |  the game consoles that followed.
559.76s - 565.00s |  You know, all the Atari's used game consoles, the Nintendo and Super Nintendo
565.00s - 570.14s |  and the Sega Genesis and all those all use ROM cartridges until they came along
570.14s - 571.38s |  sort of using CDs.
573.02s - 577.94s |  One of the big Fairchildren is this little company called Intel, which was for it
577.94s - 581.26s |  stood for Integrated Electronics, very, very creative name.
582.66s - 585.78s |  And it was actually two of the guys that were the traders eight that went and
585.78s - 586.86s |  founded Intel.
587.46s - 590.94s |  Intel, when they were established, made memory chips.
591.18s - 592.42s |  That's really what they did.
592.42s - 599.68s |  But what made a difference is when was when a Japanese calculator company went to
599.68s - 605.56s |  them and said, hey, we need some chips made because we're going to make four sets
605.56s - 611.00s |  of calculators and we need chips in them to make them function.
611.32s - 614.52s |  And they were saying like, well, OK, we have four calculated with different
614.52s - 621.36s |  features. So why don't you make us four sets of chips for these four calculators?
622.02s - 625.58s |  But one of the engineers at Intel said, like, no, that's not a good idea.
625.86s - 632.82s |  Let's make one set of chips that we can program and use in all four of these.
633.10s - 638.90s |  And that what they created was the four zero zero four, which is a four bit
638.90s - 642.86s |  processor. That was actually the first microprocessor.
643.02s - 645.46s |  It was then replaced with a better 4040.
646.58s - 650.66s |  And then shortly thereafter, another calculator company came with the same thing.
650.96s - 656.60s |  And the same engineers then created the eight zero zero eight, now an eight bit
656.60s - 661.56s |  processor. And then they made it better and created the 8080.
662.54s - 666.28s |  And again, they created these to be used in calculators.
666.48s - 669.68s |  No one created these for being used in computers.
669.96s - 675.84s |  It took other people to look at this and go like, hey, I can take this 8080 chip and
675.84s - 677.44s |  make it into a computer.
678.02s - 683.86s |  And those were the guys at MIT or MIT, depending on what you believe is the name of
683.86s - 690.42s |  the company. And that was the Altair 8800, which was it's not the first personal
690.42s - 697.22s |  computer, but it was the first commercially available personal computer.
697.34s - 698.78s |  And that kicked it all off.
698.94s - 702.42s |  And of course, the people that wanted these were more people that were hobbyists and
702.42s - 707.26s |  engineers. They at that time, as I said, you had many computers and mainframes that
707.54s - 710.34s |  you didn't get to sit at and work on the computers.
710.62s - 717.16s |  People wanted their own computer that they could have and work on and do stuff with, as
717.16s - 721.26s |  well as now that can be used for for practical purposes and businesses.
722.90s - 728.66s |  Shortly thereafter, Intel created the 8086, which is now a 16 bit processor.
729.46s - 732.70s |  And that then, of course, was used for more powerful computers.
733.12s - 739.36s |  They then started a series of kind of iterations that gave us the 80186 and so
739.36s - 746.26s |  forth. The 286, the 386, the 386 is now a 32 bit processor.
746.28s - 750.60s |  So now we're moving up and becoming more and more powerful than the 486.
751.04s - 754.68s |  The next one was supposed to be the 8586.
755.04s - 761.20s |  But instead, Intel decided to call it a Pentium because you can't copyright a number,
761.46s - 763.06s |  but you can copyright a name.
764.14s - 767.46s |  And then with the Pentium, there was all the various different variations of the Pentium,
767.46s - 771.86s |  which I'm sorry, I can't I couldn't keep up with even at the time you had the Pentium
771.86s - 775.22s |  2 and the 3 and the 4 and the DX and so forth.
776.14s - 779.38s |  I think around the Pentium 4 is when they went to 64 bit.
781.42s - 787.94s |  Intel also tried to their hand at RISC processors, that's the i86, 860 and 960.
789.02s - 789.94s |  Those are dead.
790.84s - 795.76s |  Most of the other ones, they actually made them for several decades, but then stopped
795.76s - 798.72s |  doing so. And then there was also the Itanium.
798.72s - 804.80s |  That was another architecture they tried out that was useful for a while and it's also
804.80s - 810.12s |  dead. Nowadays, it's the one on the next line, the Atom and the Celeron, which are the
810.12s - 814.60s |  low power ones for meant for like tablets and embedded systems.
815.26s - 822.38s |  The Core 3, 5, 7, 9, which for laptops and desktops and then the Xeon for for servers.
823.74s - 827.70s |  One thing that I've noticed in the last few years with Intel and maybe others of you
827.70s - 833.54s |  have to have noticed the same thing is that Intel is still pretty big with desktops and
833.54s - 836.54s |  laptops and servers, but that's it.
838.50s - 843.86s |  They, you know, they tried getting into smartphones that didn't go.
844.36s - 848.56s |  They tried getting into like the Arduino space.
848.56s - 853.32s |  There was actually an Intel based Arduino called the 101 that didn't last.
853.72s - 858.64s |  They tried getting into these single board computer like the Raspberry Pi.
859.24s - 864.00s |  I'm not sure how many people here remember the Minnow board that they put together.
864.32s - 865.64s |  That didn't last.
865.88s - 872.44s |  They tried other little IOT devices like the Edison, which I got and several
872.44s - 880.62s |  others. And, you know, it's like outside of desktop servers and laptops, Intel doesn't
880.62s - 882.18s |  exist. Everything else is ARM.
883.10s - 887.90s |  You know, every one of you who has a smartphone with you, that's an ARM based
887.90s - 892.26s |  processor. You know, I seriously doubt you have anything that's not an ARM based
892.26s - 899.66s |  smartphone. ARM is now being used by Apple for their systems.
899.96s - 906.88s |  There is actually already we're seeing ARM based laptops that will run Windows.
907.28s - 912.20s |  I'm hearing of ARM based servers, so I don't know what that means.
912.72s - 913.96s |  So it's kind of interesting what's happening.
915.68s - 922.52s |  Subbing back, I mentioned that certain engineers at Intel had created the 4040 and 8080.
923.36s - 928.20s |  Those were a gentleman by the name of Federico Fagan, along with a Japanese engineer
928.22s - 930.50s |  named Masatoshi Shima.
931.02s - 938.90s |  They actually left Intel to form Zilog, which is, and I'm not joking, it was picked
938.90s - 942.70s |  because it's the last name in integrated electronics.
943.22s - 949.22s |  And they created the Z80, which was a much improved version of the 8080.
949.62s - 957.14s |  So improved that the Z80 in the market kind of displaced the 8080 from systems.
957.16s - 961.48s |  And so everyone who was using what would have been an 8080 based system was using a
961.48s - 970.60s |  Z80. And until April of this year, they were still manufacturing the original Z80 chip
970.88s - 971.84s |  and selling it.
973.40s - 974.84s |  That's not the end of the Z80.
974.84s - 979.32s |  They have replacement chips such as the EZ80 you can still get.
979.32s - 982.36s |  So you can still get Z80 chips and and use them.
982.80s - 984.52s |  They try their hand at others.
984.54s - 988.02s |  They did a Z800, which is a 16-bit processor.
988.90s - 992.74s |  And then they went with a 32-bit with a Z80,000.
992.94s - 997.34s |  And if you're like, I never heard of those, well, it wasn't that successful.
999.34s - 1005.14s |  These are what we refer to, and I don't know if I where I got the term from, is these are
1005.14s - 1009.98s |  the eights, that almost the processors use the letter eight, the number eight on it.
1010.96s - 1015.08s |  The other set that we talk about that's really major starts off with Motorola.
1016.28s - 1019.64s |  They start off with the Z, the 6800 processor.
1020.64s - 1022.20s |  It had some success.
1022.88s - 1029.00s |  A lot of the early computer companies, MITS and MSCI, did release 6800 based systems,
1029.00s - 1031.80s |  an 8-bit processor, but it wasn't that big.
1032.40s - 1037.72s |  They replaced it with a more powerful 6809, which is an 816 based system.
1038.22s - 1044.98s |  Probably its claim to fame is it was one used in the Tandy color computer, which was
1044.98s - 1046.02s |  used for many years.
1046.18s - 1052.14s |  And I was actually really surprised to learn how much involvement Motorola had in
1052.14s - 1055.58s |  actually the creation of the color computer, which I never knew.
1055.58s - 1057.82s |  I learned that, you know, like the last couple of years.
1059.82s - 1065.42s |  Then, of course, much more famously is a 6800, sorry, 68000, which was, of course,
1065.44s - 1072.96s |  used in the Macintosh, the ST, the Commodore, many Unix workstations, Sega Genesis
1072.96s - 1074.56s |  used it, and so forth.
1074.92s - 1077.04s |  So a very, very popular processor.
1077.36s - 1084.44s |  They then extended out, the 68000 is a 1632-bit bit system, and then the full 32-bit
1084.44s - 1087.96s |  was a 68020, or the 020, as we call it.
1088.36s - 1093.80s |  And there was a progression of those, the 020 to 060, which was used in subsequent
1093.80s - 1097.54s |  Macintoshes, Amigas, and Atari systems.
1099.34s - 1104.50s |  Motorola also got into trying their hand at RISC processors with the 88000.
1105.50s - 1116.26s |  However, in the mid-90s, they got involved with the AIM consortium, which was Apple,
1116.76s - 1128.64s |  IBM, and Motorola to compete against the Windows, sorry, the Microsoft Intel duopoly.
1129.56s - 1133.12s |  And they were going to make, you know, and part of that was the PowerPC.
1133.48s - 1140.00s |  Now, the PowerPC was a RISC-based architecture from IBM, but the idea was that Motorola
1140.00s - 1141.76s |  and IBM would create the chips.
1142.06s - 1147.50s |  Motorola, IBM, and Apple would all build PowerPC systems.
1149.14s - 1152.10s |  Apple would move Macintosh to PowerPC, and so forth.
1152.82s - 1157.66s |  The funny thing is, I was actually at IBM at that time, and then went to Motorola, so
1157.66s - 1162.42s |  I got to see a lot of PowerPC-based systems that never got to market.
1162.46s - 1165.66s |  There were some cool ones, but that's just how it is.
1166.64s - 1173.44s |  Going back to the 6800, as I said, that was Motorola's, you know, 8-bit processor initially,
1173.80s - 1176.00s |  and there were some problems with it.
1176.00s - 1182.24s |  One thing they discovered from feedback from their customers or potential customers was
1182.24s - 1186.92s |  that, one, they thought it was just a little bit too powerful for what they needed, but
1186.92s - 1192.24s |  more importantly, a lot of their potential customers thought it was too expensive as
1192.26s - 1198.78s |  a chip. Motorola was charging over $300 for a chip, and you need to understand that when
1198.78s - 1204.14s |  you're building a system, yes, you know, your CPU chip is important, but there's also
1204.14s - 1209.14s |  other chips you need, and if it's already $300 for that CPU chip, and then add the
1209.14s - 1212.74s |  others, then you have kind of an expensive system, and that was a problem.
1213.06s - 1217.78s |  One of the engineers at Motorola by the name of Chuck Peddle was involved with that,
1217.80s - 1225.00s |  and he was, like, trying to work out a low-cost alternative at Motorola for the 6800 until
1225.00s - 1230.56s |  basically Motorola told him to knock it off, you know, and so he wasn't happy by that,
1230.56s - 1234.60s |  and some of those people weren't happy, so they left Motorola, and this was a group of
1234.60s - 1240.00s |  people that included Chuck Peddle, an associate by the name of Bill Minch, and they
1240.00s - 1245.16s |  left Motorola, and they went to the next company on the slide there.
1245.82s - 1251.34s |  So, let me make a couple of things really clear about this company, because a lot of
1251.34s - 1256.54s |  people get this wrong, get these two things wrong. I've seen it in YouTube channels, on
1256.54s - 1263.86s |  videos on YouTube that are incorrect. So, first of all is how do you say its name? If
1263.86s - 1271.94s |  you think it's MOS Technology, you're wrong. It is MOS Technology because you don't
1271.94s - 1277.68s |  want to confuse it with another company that exists at the time called MosTech, which I
1277.68s - 1282.96s |  listed up there, and that's very true because I know as a kid, well, at that time, I was
1282.96s - 1290.00s |  even confused myself. The next thing that I've seen that several videos would claim is
1290.00s - 1296.44s |  that Chuck Peddle and the other guys from Motorola founded MOS Technology. No, they
1296.44s - 1304.54s |  did not. MOS had already been in existence for several years as a memory company. They
1304.54s - 1312.38s |  just joined the company. There, they created two chips, the 6501 and the 6502, and if
1312.38s - 1318.10s |  you're going, well, I've heard of the 6502. I never heard of the 6501. Well, there's a
1318.10s - 1324.42s |  reason. Let me explain it. These two chips are mostly the same in terms of
1324.42s - 1330.20s |  architecturally. It was meant to be a scaled down version of 6800. I'll show, I'll show,
1330.40s - 1335.56s |  explain that shortly. But there were some differences. The main difference is the
1335.56s - 1344.84s |  6501 was pin compatible with a 6800. That means if you're, if you have a board that
1344.84s - 1352.74s |  you designed to use the 6800, you can then go get a 6501, which would be way, way, way
1352.74s - 1359.08s |  cheaper, and plop it in and off you run. Yeah, the opcode would not be compatible. You
1359.08s - 1362.84s |  would still have to program it, but you would save your development time because you've
1362.84s - 1368.12s |  got, you know, you've already got a board that'll use it. Motorola didn't like that and
1368.12s - 1375.24s |  they sued them. So they never brought it to market. I don't understand how you can sue
1375.24s - 1378.60s |  over that. I mean, you, you know, you copyright your pinouts. I don't, I don't
1378.60s - 1383.98s |  understand that because Intel didn't, as far as I know, never, never, you know, sued
1383.98s - 1390.26s |  Zilog about the Z80. So I don't understand that. So anyway, so the 6502 is what came
1390.26s - 1393.96s |  out. They did make a lot of different derivatives, things that were like slightly
1393.96s - 1399.00s |  different, different of it and so forth. MOS technology existed in a separate company.
1399.24s - 1405.14s |  Commodore later soon bought them out. So they would have a ready source of chips. So
1405.14s - 1409.10s |  they also were the ones that manufactured the specialized chips for the Commodores and
1409.10s - 1416.02s |  the Amiga computers. And unfortunately, MOS went under when Commodore went under.
1416.22s - 1423.46s |  However, one of those other guys I mentioned, Bill Minch, he left Commodore and formed
1423.46s - 1428.26s |  his own company called Western Design Company. I had to be kind of careful. Some
1428.26s - 1435.78s |  of that they say Western Digital, which is wrong. And then he licensed the 6502 chip to
1435.78s - 1439.66s |  make it because that was the common thing there is you'd have multiple companies making
1439.66s - 1445.46s |  chips. Then what he did was he teamed up with with a couple other companies that were
1445.46s - 1452.98s |  making 6502 and they developed a new version of it called the 65CO2. The C means it's
1452.98s - 1459.54s |  made using CMOS. And it's an improved version of 6502. They fixed some bugs, they
1459.54s - 1467.58s |  added some opcodes. And they still make them today. You want a 6502 chip today, you can
1467.58s - 1473.02s |  still buy them. They're a few bucks. You can go to like DigiKey and Mouser and those
1473.02s - 1478.62s |  guys and you can still get it. Shortly thereafter, he made a new version. And that's
1478.62s - 1487.90s |  the 65816, which is an 816 bit version of the 6502. It can emulate fully the 6502 or
1487.90s - 1496.70s |  can go, you know, an 816 bit processor. It's best known and use has been in the Apple
1496.70s - 1504.06s |  2GS, which was not quite the last Apple 2, but probably one of the best ones. And it
1504.06s - 1510.14s |  was used in the Super Nintendo. So if you use a Super Nintendo, guess what you use that.
1510.14s - 1516.54s |  So that's and these as the other group is compute processor, that's the eights. So these
1516.54s - 1523.86s |  are the sixes. There are a few other companies, I just want to quickly mention Texas Instrument.
1523.86s - 1529.34s |  Huge in calculators, still big in calculators. But I was surprised to learn that that for
1529.34s - 1535.14s |  a period of time, they actually made many computers. They took that architecture and
1535.14s - 1542.34s |  made a processor called the TMS 9900, which they used in their computer called the TI
1542.34s - 1549.62s |  99 slash four, which I remember it, it was, it was an interesting computer, I'll say it
1549.62s - 1555.74s |  that say it that way, that the processor was an 816 processor. The problem was, was, you
1555.74s - 1562.10s |  know, I, there's debate whether it was kind of a crippled design because of infighting
1562.10s - 1568.70s |  within the company. So it wasn't very successful. Another company, which is I thought I should
1568.70s - 1575.06s |  list more as a could have been is National Semiconductor. They had a series of chips
1575.06s - 1582.38s |  called the 32,000. And I do know that Atari looked at them, maybe Amiga looked at them
1582.38s - 1588.86s |  as possibly the processor for the next generation. But they didn't go with them and said they
1588.86s - 1594.34s |  went to motor with Motorola 68,000. So who knows what might have happened if that didn't
1594.34s - 1600.14s |  that didn't go. The last one I'll mention is RCA. Yes, yes, that's Radio Communications
1600.14s - 1607.02s |  of America. They had an 8 bit processor called the 1802. All I would say for that is take
1607.02s - 1613.66s |  a look at that on Wikipedia. It's very, very interesting. They actually use that in space
1613.66s - 1619.18s |  probes. So kind of insane. Now, if you're like, well, you forgot this company, you forgot
1619.18s - 1622.38s |  that company, there are other companies out there. A lot of them, all they do is they
1622.38s - 1631.34s |  make chips, they don't design chips. Even today, Apple designs their own software, their
1631.34s - 1635.90s |  own silicon, they have the M123 and four, but they don't make it, they go to another
1635.90s - 1642.30s |  company and say, here, here's a design, make us these chips. ARM, you know, ARM is nothing
1642.30s - 1647.74s |  more than, you know, a licensing company. They don't make ARM chips, they design the
1647.74s - 1652.86s |  ARM architecture, they give it to other companies like Broadcom and all the others, and they
1652.86s - 1659.58s |  make it. You know, this has a, you know, an ARM processor in it, ARM didn't make it. They
1659.58s - 1664.86s |  went to Broadcom and, you know, which is part, you know, tied to the Raspberry Pi people,
1664.86s - 1670.38s |  and they made it, that's just how it is. I thought I should make, I should mention
1670.38s - 1673.18s |  this because a lot of people don't understand, again, about, you know, if you don't understand
1673.18s - 1677.42s |  the history of computers, when you think about the IBM PC, and they, some people think how,
1677.42s - 1682.70s |  oh, how radical it is, and, you know, standardized things, and that's just not quite the way
1682.70s - 1689.02s |  it was. In the early 70s, we did have a standard, which was, you know, many companies, and I
1689.02s - 1693.42s |  mentioned several, you know, Altair, MSCI, Fromenco, and a lot of these others who built
1693.50s - 1700.86s |  standard business computers, they used the Z80 chip, they had what was called the S100 bus,
1701.42s - 1708.54s |  which also known as the Altair bus, which was an IEEE standard bus up until the mid 90s.
1708.54s - 1716.86s |  People were still making S100 based systems, and they used CPM as the operating system.
1717.42s - 1721.98s |  But unfortunately, other than that, there was, there was little standards that, you know,
1721.98s - 1727.26s |  floppies, dries was all of those, you had eight, you know, eight inch, you had five and a quarter,
1727.26s - 1732.54s |  you had, you know, you might not know what the, what I mean by hard sector and soft sector,
1732.54s - 1737.66s |  double sided, double density, you know, is all about a complexity with these things.
1737.66s - 1745.34s |  It was pretty crazy. Look into the CPM operating system. Again, it's one of like what might have
1745.34s - 1753.90s |  been CP, we might have been using CPM instead of MS-DOS if certain things had not gone certain
1753.90s - 1760.86s |  ways. It's either a either a ridiculous story or a sad story or however you want to look at it.
1763.18s - 1766.86s |  So it goes a little beyond what I wanted to talk about here, but it is interesting.
1767.82s - 1775.98s |  So I don't know if people, I've been saying things like eight bit, 16 bit, I've even said
1775.98s - 1782.14s |  like eight, 16. Does anyone know understand what the hell I'm saying? When I say these things?
1782.14s - 1788.94s |  I see some hands raised. Okay, good. If that's the case, because a lot of people don't. It's
1788.94s - 1797.90s |  ridiculous. To give you an example, Atari came out with one of their game consoles toward the
1797.90s - 1808.30s |  end called the Jaguar, which they toted as being a 64 bit system. And their marketing tagline was,
1808.30s - 1815.02s |  you know, do the math. But if you look at the system, and I'm pretty positive that no,
1815.02s - 1821.66s |  it was not a 64 bit system. It was, I think, either 16 or 32. That's the problem with these
1821.66s - 1827.82s |  terminologies is that we as technology people, we understand that, oh, this is an eight bit system.
1827.82s - 1832.86s |  This is a 16 bit. Oh, yeah, we haven't, we can have an 816 that's in between that's more powerful.
1832.86s - 1838.46s |  But then you get to these marketing dweebs. And they just do ridiculous things. I came across an
1838.46s - 1843.50s |  article around this time where they talked about this system. And they were claiming it was a 64
1843.50s - 1848.94s |  bit system. And I'm like, wait, wait a minute, I know what the processor is in that system.
1848.94s - 1854.78s |  It isn't. It isn't a 64 bit. And I'm reading the article and realizing that the person who wrote
1854.78s - 1861.10s |  it was like adding things together. Like, oh, well, it's, you know, I'm taking the address bus
1861.10s - 1865.98s |  and the data bus and this and I'm adding them all together. And it's 64 bits. So it's a 64 bit
1865.98s - 1873.98s |  system. And I'm like, no, that's not how it works. I was also surprised to learn, because only
1873.98s - 1881.66s |  because I never use these computers that we also had 12 and 24 bit and 48 bit computers at one time,
1881.66s - 1886.86s |  which I was surprised, but I never ever use those. You know, when we talk about processors,
1886.86s - 1891.58s |  these the things we look at, you know, clock speed, I remember people think that clock speed
1891.58s - 1897.98s |  is real important. And it's not as important as people think. If you go and watch these YouTube
1897.98s - 1901.66s |  videos, where people are doing it, you know, they're looking at a new board and seeing how
1901.66s - 1905.34s |  powerful it is, they're not going and looking at the dang clock speed, they're going to run
1905.34s - 1912.38s |  benchmarks to see, oh, how fast can it do these things. So that's more important. But this is
1912.38s - 1921.10s |  kind of interesting is that the 6502 has a 0.43 versus a 68,000 of 0.75. If that's not clear,
1921.10s - 1927.98s |  that means that the 6502 is actually faster than the 68,000. But that's also gets into logic of,
1927.98s - 1932.86s |  you know, why, why we went with RISC processors, because, you know, they're more powerful,
1932.86s - 1937.50s |  because they're kind of stripped down. The address bus is entering that tells us how much
1937.50s - 1944.06s |  memory we can access. Almost all 8 bit systems have a 24 bit address bus, which is why they only
1944.06s - 1949.82s |  have 64k of memory. The size and number of registers are kind of interesting, because you
1949.82s - 1956.70s |  got some CPUs that have like, one or two registers, and others would like multiple. If you don't
1956.70s - 1961.66s |  understand what I mean by register, that's the storage space, if you will, within the processor,
1961.66s - 1965.50s |  if you're going to do anything, you have to pull it out of memory, pull it into the processor and
1965.50s - 1969.98s |  work with it. The data bus is what's important, because that's the, that's the, that's the
1969.98s - 1975.02s |  highway, the data highway within the computer, that data is moving around. If you got an 8 bit
1975.02s - 1980.30s |  processor, all the auxiliary chips need to be 8 bit, you can't be mixing and matching.
1982.62s - 1988.46s |  So I always like to throw this out, which is the IBM PC, which had all these capabilities.
1989.42s - 1995.02s |  How many people think this was a 16 bit system? How many people think this was an 8 bit system?
1995.90s - 2003.50s |  Okay, good. It's an 8 bit system, because the 8088 processor is really an 8 16 bit processor.
2003.50s - 2007.58s |  So the PC is an 8 bit system, even though most people think it's 16 bits.
2009.10s - 2015.82s |  A lot of the, I really can't call them a clone in the early days, more of the IBM compatible,
2015.82s - 2023.18s |  they were full 16 bit, because they either use the 8086, or the 8186, and so forth. So it's
2023.18s - 2028.94s |  actually kind of interesting. So let's get into, you know, these chips, I talked about the 6800.
2029.90s - 2034.38s |  These are the specs, I'm not going to read it. That's actually what they look like.
2036.38s - 2044.30s |  Please note, it had 72 instructions, what we call opcode. As I said, it was originally cost $360,
2044.30s - 2052.22s |  that was in 70s dollars. Then over time, they reduced it to $179, then to $69. I don't know
2052.22s - 2057.02s |  how long they were making this. But what I've been able to see is they were, they were still
2057.02s - 2065.18s |  making these for probably a couple of decades. Now, I was trying to find a similar chart to what
2065.18s - 2070.94s |  I show here for the 6502. But this I thought that was useful, because again, people need to
2070.94s - 2076.46s |  understand that when a company makes a processor, they're making other chips to work with it.
2076.46s - 2080.78s |  So in this case, you see that, you know, you have the 68000 processor. In this case, they have a
2080.78s - 2087.90s |  separate chip for the clock. Then they have, of course, chips for ROM and RAM. And then they have
2087.90s - 2092.78s |  a PIA, that's a peripheral interface adapter. That's and then of course, a communications
2092.78s - 2098.14s |  adapter. So the whole idea was that if Motorola is not just selling you the processor, that's
2098.14s - 2104.38s |  what true of all these companies, they're selling you the complete set of chips for your system.
2107.00s - 2112.20s |  Architecturally, this is what we look at. We look at the inside with the registers,
2112.20s - 2119.96s |  you see the 6800 versus the 6502. The 6800 had two registers, they got rid of one. But
2119.96s - 2124.04s |  otherwise, they're pretty similar. They have index registers and stack registers and so forth.
2124.04s - 2127.64s |  Those are all needed inside the chip to do the work that it does.
2128.28s - 2132.28s |  So then we have the 6502, which of course, you see it's a it looks just just the same. So it's a
2132.28s - 2141.08s |  four pin dip as it's called. It has only 55 instructions versus the 77 of the 6800.
2142.68s - 2147.16s |  So the funny thing is, I've actually read some stuff where people have complained,
2147.16s - 2154.20s |  have claimed, I don't know if that's true or not, is that the 6502 might be the first
2154.76s - 2164.36s |  risk chip, because they reduced the instruction set. I don't know who can make that determination.
2165.56s - 2174.20s |  But that's what they did. The original cost for this chip was $25. And one of the ways they were
2174.20s - 2181.40s |  able to do this was not just that it was a reduced design, was they were able to improve manufacturing.
2181.40s - 2185.64s |  Now, as I understand it, and those of you who have more knowledge, you can you can
2186.52s - 2192.44s |  give me the actor and tell me I'm got this wrong. But as I understand it, the chip yield
2192.44s - 2200.60s |  at that time was pretty lousy, as in you'd run a make a bunch of chips. And 70% of them were bad,
2200.60s - 2207.16s |  ie had to throw them away, which is why chips are so costly, because the yield was so poor.
2207.16s - 2211.40s |  But apparently someone that you know, one of the motor engineers that came to MOS
2211.40s - 2216.44s |  had worked out a way I don't know what it is, I'm sorry, I'm not an engineer in this area,
2217.16s - 2223.96s |  a way of fixing the chips after production, such that they had a good yield going and
2223.96s - 2232.04s |  something going being 70% bad to like 30% bad. And thus they were able to sell the chips a lot
2232.04s - 2238.84s |  cheaper. And it was because of this price, that a couple of guys by the name of Steve Jobs and
2238.84s - 2244.44s |  Steve Wozniak looked at this and go like, hey, this is the chip that we can use to put together
2244.44s - 2249.48s |  this little home computer we've been thinking about, which, if you don't know who those people
2249.48s - 2257.56s |  are, those are the guys that created the Apple one and the Apple two and so forth. So so what
2257.56s - 2264.84s |  have been the 6502 been used for a lot of stuff. Over and over in the UK, the the the acorn
2264.84s - 2273.00s |  computers, the BBC micro was used it, the Apple one, the two and the three, and all the variations
2273.00s - 2281.40s |  used it. The Atari home game systems, the Atari eight bit systems used it. Commodore used it for
2281.40s - 2290.60s |  their that all the pet models of Vic 2064 and so forth. The Nintendo used it. Others used it and
2291.88s - 2301.08s |  vendor from Futurama uses a 6502. So then of course, as I said, the 65816 chip was used in
2301.08s - 2307.24s |  the two GS and the super NES. And as I said, Western design is still making and selling these
2307.24s - 2313.40s |  chips. Yeah, that's all they do is as far as I know, that's pretty much what they manufacture.
2313.40s - 2317.16s |  So clearly people are using these for a lot of embedded systems. Sadly, I don't know.
2317.16s - 2321.96s |  They don't even say specifically what they're being used for. But it's got to be used heavily.
2322.92s - 2327.88s |  Another interesting computer is the Kim one, which was created by Chuck Peddle at MOS. It was a way
2327.88s - 2334.28s |  to it was a single board computer to kind of sell the 6502. It was so cheap that people bought that.
2334.76s - 2340.44s |  Those are very collectible. I've never never seen one. So I'm not even sure I think they
2340.44s - 2349.08s |  were probably about yay big. And if it's not clear, that keypad is basically hexadecimal
2349.08s - 2353.32s |  numbers and some other commands. So no, it's not a typewriter keyboard.
2356.04s - 2359.32s |  I know that Commodore was still making these even though after they bought
2359.32s - 2366.60s |  out MOS. And then of course, some of the secondary sources were 652 made their own the
2366.60s - 2371.32s |  the sim one and the aim 65. And then I found this kind of interesting slide,
2372.28s - 2376.04s |  I thought was interesting. It showed all the different systems that the clones of it that
2376.04s - 2381.16s |  popped up. I actually brought one that I've been building that I need to try to fix,
2381.88s - 2387.32s |  which is this is the power one. So you can see it's pretty small. It's got a keypad
2387.32s - 2392.04s |  and LED. There's something wrong with it. I got to try to figure out how to fix this.
2392.04s - 2396.36s |  But, you know, if you come to me, if you visit me at the hacker halt at the hardware
2396.36s - 2400.52s |  hacking village, you can take it you can have a chance to take a look at it and so forth.
2400.52s - 2406.20s |  That's why I brought it. So programming, which is always so much fun, which is
2407.72s - 2413.80s |  assembly language program, which is either miserable or whatever. I think most people
2413.80s - 2417.64s |  have you've done programming, probably done high level programming. I know I have you know,
2417.64s - 2423.32s |  C and basic and Pascal and so forth. The way I look at it is these programs are written
2423.96s - 2431.00s |  to make it easier for us to put in put down our ideas into how a program should work.
2432.12s - 2438.20s |  But the thing is, is they have to be then converted into the language of the machines,
2438.20s - 2441.96s |  which is machine code, which is, you know, binary coding and so forth.
2443.08s - 2448.44s |  How good that is, is unknown. That's why many people do still write do assembly language
2448.44s - 2453.64s |  programming because they can, you know, get down to the nitty gritty of the hardware and actually
2453.64s - 2459.88s |  write to it. Unfortunately, it's not really fun, but people do write it. I was actually surprised
2459.88s - 2466.44s |  that if you visit no starch press here, they actually have a book on arm assembly language
2466.44s - 2473.40s |  programming. And I think they also have one for x86 programming. So the thing is also with
2473.40s - 2476.52s |  program is when we do these higher level languages, there's things like, you know,
2476.52s - 2481.88s |  an if then statement, you know, if this condition has been met, then do this. If you got a for loop
2481.88s - 2487.16s |  or a while loop, and all that, they don't, that doesn't exist in assembly languages,
2487.16s - 2494.28s |  you do have things like a compare command, like, hey, do these two things compare which is higher,
2494.28s - 2499.88s |  which is lower. But from that, then you have to build that logic of that if statement or the
2499.88s - 2509.24s |  for loop and this sort of stuff. So it becomes a little bit more complex. So this is what 6502
2509.24s - 2514.36s |  looks like. And it's, I guess, three letter coding. And these are some of the ones in,
2514.36s - 2518.68s |  like, there's an add with carry, there's the compare, there's the load the accumulator,
2518.68s - 2524.60s |  that means you're grabbing a number out of memory and pulling in the accumulator,
2524.60s - 2534.44s |  so you can do math on it. The 6502 has only two math commands, it can add, and it can subtract.
2534.44s - 2540.76s |  And that's it. If you want to do multiply and divide, you're going to have to use add and
2540.76s - 2548.92s |  subtract. So, and of course, if you're have any sense, you're going to, you're going to comment
2548.92s - 2552.68s |  your code. Otherwise, we're going to look at your assembly language, your assembly code, like,
2552.68s - 2558.68s |  I don't know what the hell you're doing here. If you would like to try out 6502 assembly language,
2558.68s - 2563.96s |  I found this really cool website. It uses JavaScript. So you can actually do assembly
2563.96s - 2567.56s |  language programming there. And it's both not it's not just it's not just like, oh,
2567.56s - 2572.12s |  here's a window to do assembly language. It is done as a tutorial, where you can go on there,
2572.12s - 2575.80s |  and you can write, you know, put in the code, you can see what happens and so forth.
2575.80s - 2580.36s |  And also to serve with this other one, which is an online tutorial. Yeah, feel free to take
2580.36s - 2585.08s |  pictures of these. These are really good. So this is what assembly language looks like.
2587.56s - 2595.24s |  The left side is assembly language to do a bubble sort. And then on the right side is bubble sort
2595.24s - 2603.40s |  in thing C. So that looks like really, really fun things to write, which is probably why I
2603.40s - 2609.00s |  don't recall doing a whole lot of assembly language even in college, really simple stuff.
2609.80s - 2615.72s |  Okay. This is the point where I would recommend you might want to pull your phones out,
2615.72s - 2620.12s |  because I'm going to be giving a lot of resources. You are totally free to take pictures. That's why
2620.12s - 2627.72s |  I do this. I'm always the mind. I'm here to help educate you and show you where you can go next
2627.72s - 2637.88s |  after this. So websites, right at the top 6502.org is like the place for anything about the 6502.
2637.88s - 2644.68s |  There's Buku resources, emulators, software sources, hardware, tutorials, and everything
2644.68s - 2649.48s |  like that. The other one is a neat one that I discovered. They have a lot of pages on the
2649.48s - 2656.44s |  6502 and so forth, and a lot on the CHEM I, including PDF scans of a lot of the documentation,
2656.44s - 2661.48s |  which I thought was really, really cool. The last one is the Internet Archive.
2662.36s - 2666.68s |  If you are interested in looking for books, and you can't find them, or they're really,
2666.68s - 2673.24s |  really expensive, try going there and searching. You can probably find them as PDF scans. So
2673.80s - 2677.08s |  all the books I talk about, you can probably find them there if you don't want them.
2677.08s - 2686.92s |  Me, I want physical books. That's just me. So I'm not sure if you guys are familiar with Adam
2686.92s - 2692.20s |  Osborne, the Osborne Computer, but one of the things that I liked about him is he had his own
2692.20s - 2698.60s |  publishing company, which then became part of McGraw-Hill as Osborne McGraw-Hill, and it was
2698.60s - 2705.16s |  one of my favorite sources for books. So he did a series called An Introduction to Microcomputers.
2705.16s - 2712.92s |  I had four volumes numbered zero through three, but I only recommend you look at getting the
2712.92s - 2719.40s |  first two. You can get them really inexpensive off of like Amazon and eBay. Make sure you get
2719.40s - 2726.68s |  the last edition, but those are really, really good introduction to this. I don't have volume
2726.68s - 2732.76s |  two and three. People ask for stupid money for it, and I'm like, sorry, but if you really are
2733.16s - 2739.00s |  into the hardware of microprocessors, the last two books you might want to get, I actually got them.
2739.80s - 2744.20s |  They're literally about two inches thick. They're not going to tell you how to program these,
2744.20s - 2748.28s |  but they're going to tell you about all the electronics and the hardware of these processors.
2748.84s - 2755.32s |  To me, that was like really, really cool, but I'm a nerd. So what can you say?
2756.20s - 2761.72s |  When it comes to a semi-language program, one of my two authors is Lance Leventhal,
2761.72s - 2768.44s |  who did all these things through Osborne McGraw-Hill. He did the 65021, which had a
2768.44s - 2773.16s |  second edition. That's what it looks like. He also did a semi-language subroutine series,
2773.16s - 2781.40s |  which I was not aware of, but I got the 65021 recently. His 68000, I know I used that in college,
2782.36s - 2792.36s |  but he did others. He did a 6800, a 6809, the Z8000, the 8085, and so forth, as well as
2793.48s - 2799.56s |  a semi-language subroutine for some of these ones. Please be advised that people are asking
2799.56s - 2808.68s |  stupid money for these, but if you go on Lulu.com, someone has made available his Z80 and the first
2808.68s - 2815.96s |  edition of the 6502 book there on Lulu, and I think they cost about 20 bucks or 30. I think
2815.96s - 2822.04s |  about 20 bucks or 30 bucks. So if you don't want to buy a used copy, go there. The other guy is
2822.04s - 2828.36s |  Rodney Zaks, who founded Cybex Books, which is still around, but as an imprint of Wiley.
2828.36s - 2836.76s |  He did actually a four-book series on the 6502. I know I used his 6502 book in college. The last
2836.84s - 2842.20s |  one is the fourth edition with that really cool cover. I have most of the series. I'm trying to
2842.20s - 2846.84s |  get the, I'm trying to find the application book, but I want that cover, but his other, he's got a
2846.84s - 2851.16s |  really great Z80 book that I want to get. Again, I'm not going to pay the stupid money people are
2851.16s - 2864.20s |  asking for, but he's another good one. I found on Tindy that someone had reprinted these MOS
2864.20s - 2869.00s |  books on the Kim-1. I actually brought one of them with me that you guys can take a look at. I
2869.00s - 2876.04s |  got the user manual, but he had these on Tindy. He might be running out. So if you want them,
2876.04s - 2883.88s |  get them while the getting's good. Other books are these on the 65816. I've had the Osborne one,
2883.88s - 2889.48s |  but I've never done programming. The last one was actually from Brady, but now Western Design
2889.48s - 2896.44s |  has reprinted it so you can easily get it off of Amazon. But I've had people, I've read stuff
2896.44s - 2902.36s |  that people don't think it's that good of a book for a semi-language program, so just be aware.
2903.16s - 2908.92s |  I've not got it myself, so I cannot speak. So you want to actually play around and program with
2908.92s - 2914.36s |  these. Well, you have various options. It's kind of depending on what you want. Do you want hardware
2914.36s - 2920.52s |  or are you happy with software or something in between? That's up to you. There are many
2920.52s - 2924.76s |  communities of fans that still keep these things going, and they're actually creating new stuff.
2926.52s - 2934.44s |  I can actually have Wi-Fi on my Atari 8-bits. I can use compact flash and SD cards for storage
2934.44s - 2939.80s |  because of the work that these people have done. So if you want, you can go get the classic 8-bit.
2939.80s - 2945.40s |  You can go on the eBay and take a look. Just be aware that sometimes they work, sometimes they
2945.40s - 2948.84s |  don't. Most of the buyers are pretty honest. They'll say like, no, this doesn't work. You're
2948.84s - 2953.00s |  getting this for parts or whatever. You might need to do some retrobriting, which is to clean up the
2953.00s - 2964.68s |  coloring and so forth. But I've gotten an 800, a 1200XL, and a 130XE off of eBay for what I thought
2964.68s - 2976.76s |  was reasonable prices. So just be aware. If you want brand new, check out this. This is an effort
2976.76s - 2984.28s |  of a guy by the name of the 8-bit guy. It's a brand new 6502-based system. They are currently
2984.28s - 2990.04s |  making and selling developer systems. They cost about 300 bucks. They're still having people
2990.04s - 2996.76s |  developing software and so forth. But I think it's kind of a cool project. So take a look at it.
2998.20s - 3003.16s |  Like I said, you can do Chem-1 clones. Like I said, this is a Chem-1 clone. I got this off of
3003.16s - 3008.12s |  Tendy and I got the extra stuff. I'm trying to like get this thing to work and so forth.
3010.36s - 3014.68s |  If you want different, there's all other. If you go into Tendy and just search for 652,
3014.68s - 3019.48s |  you can find out there's the Pico computer. I actually brought mine with me. I still got to
3019.48s - 3025.16s |  get that working. The Roscoe is kind of interesting. It's real old school computer.
3025.16s - 3029.88s |  That's what it stands for or you can do the other one. But there's others that are there on Tendy.
3029.88s - 3034.04s |  It's like what you want. Do you want a computer where you're going to have to basically
3034.04s - 3038.28s |  hook it to your laptop and send it code and whatnot or do you want one that's more of a
3038.28s - 3042.52s |  standalone computer with a keyboard and screen? There's different options.
3043.40s - 3048.12s |  If you don't want that, you can go hardware alternatives. One is emulation through what's
3048.12s - 3056.20s |  called Field Programmable Gate Array. Look into the Mr. Project where people are emulating all
3056.20s - 3064.44s |  kind of retro computers in this Mr. System. You might have seen the various minis that have been
3064.44s - 3070.76s |  hit in the market. There has been the Atari 400 mini and the Atari 2600 and the Commodore mini
3070.76s - 3076.28s |  and the Amiga mini and the Nintendo mini and the Sega mini and I'm probably missing some
3076.92s - 3083.40s |  and they're all done with FPGA. Then there's this interesting one which is the Mega 65 from
3083.40s - 3089.00s |  Germany which they have basically recreated what would have been Commodore's last 8-bit
3089.00s - 3093.96s |  system using FPGA. I thought about getting it until I looked at the price and it's like
3094.68s - 3102.04s |  not yet. If you just want software emulation, again, check out the 6502 or for that.
3102.60s - 3108.20s |  Videos, there's a lot of cool videos out there. The 8-bit guy is a neat guy. He's the guy behind
3108.20s - 3114.12s |  the Commander X16. LowSpecGamer has some neat videos. The first one is on the 6502.
3114.12s - 3122.60s |  He did one of the Z80. Recommend you look up his one on the ARM. You will then learn why you have
3123.56s - 3134.12s |  the 6502 to thank for ARM processors. Also look for videos with Chuck Peddle, Bill Minch, Rodney
3134.12s - 3138.52s |  Zaks and all these other guys. They're really, really cool. You want events and groups, there's
3138.52s - 3143.80s |  the Vintage Computer Federation and I was really shocked that they have these all around the
3143.80s - 3150.76s |  country as well as overseas. Look for groups in your area that are into retro computing.
3152.60s - 3158.68s |  If you want to contact me, that's my Twitter handle. I am on the DEF CON discord as well as
3158.68s - 3163.56s |  one for the makers community. If you want to reach out to me, that's great. That's my LinkedIn.
3165.24s - 3171.40s |  I would recommend you, there's a retro tech community over there someplace that you can
3171.40s - 3175.88s |  drop by then. I was disappointed they had no Atari stuff. I'm sorry, I'm an Atarian.
3177.08s - 3180.04s |  There's also the Hardware Hacking Village. After this, I'm going to head over the Hardware
3180.04s - 3185.56s |  Hacking Village. I'll have a few of my things with me. You want to talk with me and tell me
3185.56s - 3188.36s |  I'm an idiot. I don't know what the hell I'm talking about. I shouldn't have been here
3189.40s - 3192.20s |  or what have you or you have questions and comments and whatnot.
3193.00s - 3197.56s |  I'm happy to hang out there. I'll even let you touch my stuff.
3197.56s - 3204.52s |  So, thank you very much and I will see you all later.