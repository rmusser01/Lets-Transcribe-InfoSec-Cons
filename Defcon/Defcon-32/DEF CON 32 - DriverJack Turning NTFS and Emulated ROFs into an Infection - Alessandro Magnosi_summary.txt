**Introduction to Cyberattack Tactics**

- Focus on existing security measures and emerging weaknesses
- Initial methods of deployment in contemporary attacks
- Simulated read-only filesystems and **NTFS vulnerabilities**

**Windows Security Architecture**

- Improvements since 2011: **Driver Signature Enforcement (DSE)** and **Hypervisor-protected Code Integrity (HVCI)**
- Changed nature of cyber threats

**DriverJack Technique**

- Unusual technique to load drivers on Windows 11
- Abuses **NTFS features** and **CDFS bug**

**Project Background**

- Started in 2022 with Jonas Lake from Secret Club
- Developed a **POC** to abuse ISOs
- Supported by an OT engagement in 2023

**ISO Backdooring**

- Tampering with ISO files distributed via an update catalog
- Aimed to backdoor an installer and weaponize ISOs

**NTFS and CDFS Vulnerabilities**

- **NTFS**: Complex file system with attributes and streams
- **CDFS**: Simpler file system for optical disks and ISO files
- **Reparse points**: For extensibility in NTFS

**Malware Deployment and Indicators**

- Methods to covertly install and maintain harmful programs
- **Indicators of Compromise (IOCs)** for detection

**Loading Kernel Drivers**

- Standard methods: **CreateService**, manual registry key placement
- Bypassing **Windows log events** for stealth

**Vulnerable Drivers**

- Exploiting vulnerable drivers to load unsigned code
- Patterns for vulnerability: **Buffer overflow**, **user after free**, **MSR access**

**Windows Security Mitigations**

- **KBDI** after Spectre/Meltdown
- **VBS, HVCI**, and **KDP** for enhanced protection

**Advanced Techniques**

- **Page remapping** to bypass HVCI
- **ROP** and **KernelForge** for executing arbitrary code
- Future challenges with **Intel VTRP** and **large pages**

**Detection and Prevention**

- Monitor for **privilege escalation** and **drive letter changes**
- Cross-check hashes during driver load events
- Keep hardware up to date to prevent exploitation