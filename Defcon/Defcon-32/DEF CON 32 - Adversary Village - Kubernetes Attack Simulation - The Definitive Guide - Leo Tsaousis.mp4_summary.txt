**Introduction to Kubernetes Attack Simulation**
- Focus on **Kubernetes** environments for attack simulations
- Importance of **threat modeling** and **collaborative security assessments**
- Discuss **Kubernetes attack surfaces** and **adversary simulation**

**Speaker Background**
- Presenter: **Leo Tsaousis**
- Role: **Senior Security Consultant** at WithSecure in Manchester, UK
- Expertise in **threat simulation** and **collaborative security assessments**

**Kubernetes Attack Simulation Approach**
- **Threefold assessment**: Threat modeling, tooling for attack simulation, and test execution
- Emphasis on improving **visibility and alerting** within the Kubernetes ecosystem

**Kubernetes Environment Overview**
- **Cluster components**: Nodes, control plane, container runtime, and kubelet
- **API Server**: Central communication hub in the Kubernetes cluster
- **Pods and Containers**: Basic units of deployment with associated resources like volumes
- **RBAC (Role-Based Access Control)**: Authorization model for managing permissions

**Threat Modeling and Attack Surfaces**
- **Threat modeling**: Identifying assets, potential attack sources, and motivations
- **Attack surfaces**: Container level, node level, external threats
- **Motivations**: Access to workloads, compute resources, cloud infrastructure

**Purple Team Methodology**
- Collaborative approach between **offensive and defensive** security teams
- Focus on understanding **attacker behaviors** rather than just vulnerabilities
- Two approaches: Cover multiple TDPs (Tactics, Techniques, and Procedures) or emulate specific threat campaigns

**Tools and Frameworks for Attack Simulation**
- **Leonidas**: Open-source tool extended for Kubernetes support
- **Atomic Red Team** and **Stratus Red Team**: Existing tools with limitations for Kubernetes
- **Pirates**: Another tool for running simulations from within the cluster

**Detection and Monitoring in Kubernetes**
- Importance of **logs** for security monitoring
- **Cluster-level logging**: Application logs, Kubernetes component logs, external logs
- **Audit logs**: Essential for detecting API server interactions
- **Detection engineering**: Writing alert queries and defining Sigma rules for suspicious activities

**Demo and Practical Application**
- **Leonidas for Kubernetes**: Demonstrated through a fictitious attack scenario
- Use of **Jupyter Notebooks** for executing attack simulations and documenting results
- **Elastic and Falco**: Tools used for monitoring and detecting attacks during the demo

**Key Takeaways**
- Building **Kubernetes detection capability** is a journey
- Importance of understanding threats and applying **collaborative attack simulation**
- Introduction of **Leonidas for Kubernetes** as a native attack simulation framework
- Provision of **test cases** and **Sigma rules** as resources for detection building

**Conclusion**
- Gratitude to **Adversary Village** and invitation to discuss further on **Twitter**