{
  "webpage_url": "local:1731859956:271b54ba:DEF CON 32 - DCGVR - How I Learned to Stop Worrying and Love the Ban by Manfred.mp4",
  "title": "DEF CON 32 - DCGVR - How I Learned to Stop Worrying and Love the Ban by Manfred.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

2.22s - 6.86s | This text was transcribed using whisper model: large-v2

 Okay, I'd like to introduce our next speaker, Manfred, who I've actually never actually met,
6.86s - 12.26s |  which is just so I'm really excited because I've heard quite a bit around him.
12.26s - 19.22s |  Manfred is presenting, by the way, he's from DEF CON 858 in San Diego, California.
19.76s - 23.72s |  Manfred is presenting How I Learned to Stop Worrying and Love the Band,
23.72s - 25.66s |  the Arms Race in Online Gaming.
26.78s - 29.32s |  This talk will go on over the evolution of cheats
29.32s - 31.98s |  and anti-cheat countermeasures in online gaming.
32.32s - 38.42s |  Real examples will be given from games like Ultima Online, World of Warcraft, Rift Online,
38.42s - 43.96s |  and present-day games that showcase from the point of view of a for-profit game hacker
43.96s - 48.46s |  and monetization strategies, obstacles, and the ongoing arms race
48.46s - 50.86s |  and cheaters versus anti-cheat technologies.
51.56s - 55.92s |  Present-day state-of-the-art cheat and anti-cheat tech will be discussed along
55.92s - 60.22s |  with examples of consequences to end users, security, privacy,
60.22s - 62.46s |  and what upcoming tech is on the horizon.
63.26s - 68.06s |  Manfred started out by taking apart posters and breaking things to find out how they work.
68.42s - 70.72s |  Wow, this sounds so familiar.
70.72s - 78.12s |  That curiosity moved him to client-server authorization online games and snowballed
78.12s - 84.82s |  into a 20-plus career, 20-plus year career operating in the dark alleys of shadow markets.
85.06s - 90.42s |  Manfred has been in the trenches of hacking online games while building out a tool belt
90.42s - 95.22s |  to keep an upper hand in the ever-changing cheat versus anti-cheat arms race.
95.22s - 98.72s |  So, everybody, I'd like you to welcome Manfred to the stage.
101.50s - 106.06s |  Well, that was a very nice and crazy intro.
106.92s - 110.90s |  I'm sorry to rug pull you guys, but I'm here to actually sell timeshares.
111.10s - 113.20s |  Is anybody interested in a timeshare?
114.16s - 117.26s |  I lived in Florida, so that's, I feel right at home.
117.94s - 119.70s |  Okay, let's see if this works.
119.70s - 123.24s |  I have this crazy two-laptop system set up because I like to see speaker notes
123.24s - 124.84s |  and I like to see which slide is next.
125.84s - 128.96s |  But, yeah, I'm a big fan of the movie Dr. Strangelove.
129.24s - 131.86s |  I am Manfred.
132.04s - 135.40s |  This is DEF CON 32, and it's 3 o'clock Pacific time.
137.61s - 140.07s |  How do I, there we go.
140.47s - 145.06s |  All right, cool.
145.82s - 146.56s |  It works.
146.80s - 150.56s |  So, today's agenda, we're going to talk about games,
151.02s - 153.22s |  all types of games, online games, single-player games,
153.22s - 155.10s |  multiplayer games, peer-to-peer games.
156.50s - 158.86s |  We're going to talk about what makes online games special,
159.16s - 164.06s |  why they are a big target for hackers and trolls and cheaters and everybody else.
165.12s - 168.36s |  We'll talk about the economy in games, the multiplayer economy,
169.40s - 173.00s |  what motivates exploits and hackers or hackers to find exploits.
173.70s - 177.94s |  And then there's a lot of cool stuff going on that cheat, anti-cheat,
177.94s - 179.94s |  anti-anti-cheat arms race.
180.50s - 182.64s |  It's things are accelerating very fast.
182.96s - 188.26s |  It used to be back in between, I'd say, 2000, 2010 was the Wild West.
188.26s - 191.40s |  You could tamper with the game plans any way you wanted,
191.40s - 193.20s |  and the game plan wouldn't care.
194.64s - 198.04s |  Anti-cheat game client obfuscation techniques
198.04s - 200.54s |  started coming into play around 2010,
200.98s - 202.90s |  and things just got crazier and crazier since then,
202.90s - 204.60s |  especially the past couple of years.
205.18s - 209.18s |  And then if we have time, I'll go over a couple of practical examples
209.18s - 212.34s |  of how you exploit the online economy for profit.
214.70s - 215.98s |  So, who's this guy up on stage?
217.60s - 219.10s |  My online nickname is Manfred.
219.38s - 223.80s |  I was named by a game master in a game called Ultima Online back in 1997.
224.74s - 226.44s |  They didn't like the name I picked for myself,
226.44s - 227.78s |  so they just gave me a random name.
227.84s - 231.38s |  It was some random NPC named Manfred that happened to be nearby.
231.38s - 233.28s |  He's like, hey, you're going to be called Manfred from now on.
235.84s - 239.42s |  Like most people in the cybersec space, I'm curiosity-driven,
240.14s - 241.62s |  and I typically break things.
242.02s - 243.48s |  I blue-screened a lot of laptops.
243.48s - 245.88s |  I broke a lot of laptops, broke a lot of devices.
247.64s - 248.78s |  Luckily, it's all been good.
248.78s - 250.42s |  Nothing has been irreversible.
251.14s - 256.18s |  And my specialty are things I like to do the most because I'm crazy.
256.18s - 259.08s |  I like to look at custom protocols and obfuscated code
259.74s - 264.24s |  and how games and process in general interact with the operating system
264.24s - 265.94s |  and what you can discern from that.
265.94s - 267.22s |  Like, what's this game doing?
267.22s - 270.34s |  Is it trying to be malicious?
270.34s - 273.88s |  Is it basically rootkits disguised as a game?
273.88s - 277.32s |  Is it sending back home a bunch of sensitive information
277.32s - 278.52s |  it shouldn't be sending?
278.52s - 280.82s |  That actually happens more so than not.
282.28s - 285.38s |  And I've learned all of this through my 20-year career
285.38s - 287.14s |  in exploiting online games.
287.14s - 288.48s |  They used to be my full-time job.
288.48s - 292.72s |  I'd wake up in the morning, install a new game if a new game was out,
292.72s - 293.98s |  find an exploit in it.
293.98s - 296.72s |  And then that evening, I'd be selling stuff online.
297.58s - 299.18s |  I'll kind of go into that later.
299.18s - 303.78s |  But through that entire span, I've always had my security researcher hat
303.78s - 304.92s |  and I've been a security analyst.
304.92s - 307.12s |  I've done other stuff outside of game hacking.
307.78s - 310.82s |  And coming back to the title of the talk,
311.38s - 315.38s |  I've been banned over 10,000 times from a lot of different games.
316.66s - 317.46s |  I'll chat about that.
319.38s - 321.86s |  But first, what's a curiosity-driven hacker?
321.86s - 323.78s |  An example of this was when I was eight,
324.42s - 329.06s |  I had a Nintendo Entertainment System and I had a lot of free time on my hands.
329.06s - 332.42s |  That's like the formula for when things go wrong with hackers,
332.42s - 336.82s |  is when you have electronic gadgets and a lot of free time, bad stuff happens.
337.62s - 342.66s |  So I discovered that if you take a Nintendo system and you take a fork
343.70s - 349.38s |  and you short out some pins in that Nintendo system, you get garbled graphics.
349.94s - 353.30s |  I got lucky and I was able to short out some data pins
353.30s - 355.38s |  on how the cartridge was talking to the CPU.
355.94s - 359.70s |  And I was able to do cool stuff like garbled the graphics,
359.70s - 361.38s |  get weird-ass characters to appear.
361.38s - 364.42s |  I was feeling like Hacker Jesus himself.
364.42s - 366.98s |  I was like, man, this is the tops.
367.86s - 369.30s |  I peaked at the age of eight.
370.42s - 372.74s |  But I continued on shorting out different pins.
373.38s - 378.90s |  And then I figured out what an electrical fire smells like.
379.54s - 382.42s |  It kind of smells cool, but also it breaks stuff.
382.42s - 386.58s |  So I was very sad because I didn't have a Nintendo for the rest of that summer
387.46s - 388.50s |  or for the rest of the year.
389.30s - 392.18s |  But anyway, then I discovered online gaming.
395.82s - 401.66s |  Before we go into online gaming, I want to share with you guys
402.22s - 406.78s |  a typical DEF CON talk prep that I think a lot of people do at DEF CON
406.78s - 408.14s |  is you Google something first.
409.26s - 412.38s |  You Google what the statute of limitations for computer crimes is.
413.42s - 414.38s |  Luckily, it's five years.
416.06s - 417.58s |  So back to gaming things.
419.50s - 423.58s |  My motivation mainly was for curiosity, like how does an online game work?
424.30s - 425.42s |  What protocol does it use?
425.42s - 426.62s |  Does it use HTTP?
426.62s - 427.42s |  Is it encrypted?
427.42s - 428.78s |  Is it using WebSockets?
429.34s - 433.74s |  If it's not using HTTP protocols, is it using UDP, TCP?
435.18s - 436.70s |  Are they using stuff off the shelf?
436.70s - 438.78s |  Are they handling their own custom protocols?
440.06s - 443.26s |  And then I made a discovery at the same time, and that is...
444.94s - 445.66s |  Can you guys hear me?
445.66s - 451.34s |  Yes, we hear you fine.
452.78s - 453.66s |  Yeah, OK.
453.66s - 454.54s |  It felt like I was lagging.
455.50s - 460.46s |  At around the same time, I discovered that players like buying gold from other players,
460.46s - 462.06s |  especially in MMORPGs.
463.50s - 467.66s |  Initially, game developers didn't sell gold or items directly to players.
468.30s - 472.62s |  So I came in, swooped in, and I filled that unmet demand.
474.54s - 477.66s |  So I created a business, a for-profit business of going into games,
478.70s - 481.98s |  farming items in gold or hacking items in gold,
481.98s - 483.66s |  creating them out of thin air,
483.66s - 485.90s |  and supplying them to other players in outside markets.
485.90s - 487.26s |  At first, it started on eBay,
488.70s - 491.50s |  and then moved to Chinese reseller sites like IGE,
492.06s - 495.18s |  eGPAL, player auctions, and things like that.
495.18s - 497.42s |  Activity, and this is what's known as the shadow market,
497.42s - 498.62s |  and the shadow market is pretty big.
498.62s - 499.50s |  I'll get into that later.
500.86s - 503.66s |  So what's an opportunity like for a game?
503.66s - 506.62s |  For an example game, what can you profit off of it?
508.22s - 511.02s |  So this is a recreation of an actual conversation I had
511.02s - 513.74s |  with one of my wholesalers that was looking for gold.
514.54s - 516.06s |  So I hit him up.
516.06s - 518.46s |  I was like, hello, what are some hot games in demand?
518.46s - 522.70s |  And this wholesaler said, Lord of the Rings Online is pretty good.
522.70s - 525.02s |  Dark Age of Camelot is still pretty hot.
525.82s - 531.26s |  And then the seller said they always need more Final Fantasy XIV gold.
532.46s - 534.62s |  And then they asked me, can you do FIFA online?
534.62s - 538.14s |  FIFA had this new system called FIFA Ultimate Team Points, I think.
539.34s - 540.78s |  And I was like, I never looked into it.
541.10s - 541.90s |  Demand pretty good.
542.46s - 546.30s |  And they told me they can buy around half a million dollars USD
546.30s - 547.74s |  per day worth of FIFA coins.
548.46s - 550.14s |  I was like, hmm, interesting.
550.14s - 553.74s |  So I did some back channeling, cross-checked their thinking.
553.74s - 556.06s |  And yeah, there was a huge demand for FIFA coins.
556.94s - 560.06s |  I found out Electronic Arts was also selling FIFA coins
560.06s - 561.66s |  to players directly for cash.
562.38s - 565.26s |  And I didn't want to cross that boundary of interfering
565.26s - 568.38s |  with Electronic Arts' business model.
569.10s - 570.46s |  There's some people that did.
570.46s - 572.14s |  And it's well-documented.
572.14s - 580.38s |  If you Google FIFA coin gold farmers, they made a lot of money very quickly.
580.38s - 582.86s |  I think a few million dollars in the span of a few months.
583.74s - 585.98s |  But FIFA has a very big legal team.
586.70s - 587.90s |  These guys got found out.
587.90s - 589.74s |  And it was a very happy story in the end.
590.30s - 593.90s |  So I'm glad I stayed away from competing with a game company
593.90s - 595.34s |  and how they monetize their games.
595.90s - 601.42s |  But a brief timeline of my 20-year career in hacking online games for profit.
602.30s - 603.82s |  I started off with Ultima Online.
603.82s - 607.50s |  It ended off with Guild Wars 2 around 2017.
608.94s - 612.70s |  And in red, here's the number of accounts that have been banned in each game.
612.70s - 614.22s |  UO was around 100.
615.34s - 617.66s |  Dark Age of Acamla was around 1,000 accounts that got banned.
619.26s - 623.02s |  Also, Dark Age of Acamla, I used the same exact exploit
623.98s - 627.02s |  for about 13 years before they discovered what was going on.
628.86s - 631.26s |  Final Fantasy, around 500 accounts.
632.14s - 633.66s |  Lineage, around 100.
633.66s - 636.06s |  Final Fantasy 11, 500.
637.26s - 639.90s |  Rift Online, they were very good at banning my accounts.
639.90s - 643.34s |  I went through about maybe 50 accounts per day.
643.34s - 645.18s |  Lost 4,000 accounts there.
646.06s - 648.38s |  Guild Wars 2, also very good at banning accounts.
648.38s - 651.34s |  Went through 20 to 80 accounts per day.
652.06s - 653.74s |  Lost about 4,000 accounts there.
655.66s - 659.82s |  And then games like Shadowbane and Wildstar, they never actually caught on.
660.78s - 664.06s |  Maybe they didn't have any monitoring tools on the back end
664.06s - 669.02s |  to see if you had level one players with like 3 billion gold running around
669.02s - 671.66s |  or insane amounts that a player shouldn't have.
672.94s - 676.54s |  And then this black dotted line happens to coincide
676.54s - 678.70s |  with the statutes of limitations for computer cranks.
679.26s - 680.06s |  So I'm just kidding.
680.30s - 685.66s |  I never continued hacking games after I left that field in 2017.
688.58s - 690.90s |  So let's set the stage a little bit.
690.90s - 693.06s |  This should be pretty obvious to everybody,
693.06s - 696.26s |  but we'll talk about what are the different types of games
696.26s - 697.86s |  and what are the pros and cons.
699.22s - 702.58s |  So old school, you had single player local games.
703.14s - 706.18s |  You play the game and the game state is saved
706.18s - 708.42s |  typically to the file system on your disk.
708.42s - 711.62s |  And it kind of keeps track of the world state
711.62s - 712.82s |  and then your character state.
713.78s - 716.34s |  So when you open up the game, it reads the game state
716.34s - 718.10s |  and you resume wherever you left off.
721.14s - 723.54s |  There's problems with this because if you uninstall the game,
723.54s - 727.30s |  you lose all your progress because the save file will probably get deleted.
727.30s - 729.22s |  If you install the game on a different device,
729.22s - 731.62s |  it's hard to transfer that progress,
731.62s - 736.34s |  especially if you don't have root on an Android or iOS device
736.34s - 738.98s |  or some other device that's locked down.
740.58s - 743.14s |  But more importantly, the state of your game save
743.14s - 744.50s |  can be easily modified.
744.50s - 747.38s |  You can just use a text editor and go in typically
747.38s - 750.82s |  and give yourself all the gold points and items you want.
754.58s - 758.10s |  So then came single player online games
758.10s - 761.38s |  where the game state is stored online
762.42s - 765.54s |  through some RPC call to a game server on the back end
765.54s - 768.82s |  and the game server keeps track and calculates your progress.
772.02s - 773.54s |  This has some benefits.
773.54s - 776.50s |  If you uninstall the game, your save data is typically preserved
776.50s - 779.22s |  because it's tied typically to some sort of account
779.22s - 781.94s |  or if you're using Apple ID or Google ID or Steam,
781.94s - 784.42s |  it's tied to your identity there.
785.30s - 787.14s |  If you install the game on a different device,
787.14s - 789.06s |  your save state is loaded.
789.62s - 793.54s |  Most importantly, it's difficult to directly edit the save state.
794.50s - 798.02s |  So when you're playing a game that has scarcity
798.02s - 799.06s |  built into the economy,
799.06s - 801.70s |  like let's say you fight a really epic monster
801.70s - 803.86s |  and it drops an epic sword,
806.02s - 808.18s |  you can be pretty assured that no other player
808.18s - 809.70s |  is going to have that sword.
809.70s - 812.90s |  Therefore, it becomes a status symbol
812.90s - 814.90s |  or what have you in that game.
814.98s - 817.14s |  An item of envy, I guess, to other players.
818.10s - 819.54s |  So when you get really cool stuff,
819.54s - 820.74s |  you're happy because you're like,
820.74s - 823.30s |  hey, this is something I earned
823.30s - 824.66s |  and I trust the game company
824.66s - 827.38s |  not to like give this item out to everybody.
827.38s - 829.94s |  So it makes it more special for me because it's more rare.
833.22s - 835.06s |  Single player online problems
835.06s - 836.42s |  as you need an internet connection,
836.42s - 838.90s |  but these days pretty much everybody has this
838.90s - 840.50s |  and you need to handle authentication,
840.50s - 841.94s |  but that's also provided.
842.18s - 844.58s |  Then you have multiplayer peer-to-peer.
845.14s - 847.06s |  Grim Dawn is an example.
847.86s - 850.26s |  There's a lot of different games that use this model.
850.90s - 853.14s |  It's basically each player is in charge
853.14s - 854.66s |  of saving your own game state
854.66s - 856.82s |  and they share this game state
856.82s - 858.42s |  with each other's game clients.
858.98s - 863.22s |  It's a lot like the single player model, local model,
863.22s - 866.10s |  but the game state is shared between game clients.
866.10s - 868.66s |  So it's a lot like the single player model
869.30s - 872.10s |  but the game state is shared between game clients.
872.10s - 873.94s |  There's no server involved.
876.66s - 878.58s |  So benefits with this is it's more fun
878.58s - 879.70s |  to play games with friends,
880.66s - 882.58s |  but you still have the problem of
882.58s - 885.14s |  if you uninstall the game, you lose the progress
885.14s - 886.90s |  and if you transfer the game to a different device,
886.90s - 888.10s |  you still lose the progress.
889.22s - 892.50s |  And the save state can easily be modified.
892.50s - 893.86s |  So your friend might be like,
893.86s - 898.90s |  hey, what if I give myself superpowers or tons of gold
898.90s - 900.34s |  and then you log in to play with your friend
900.34s - 901.70s |  and you'd be like, hey, you're boosting.
902.26s - 903.46s |  There's no way I'm gonna catch up to you
903.46s - 904.10s |  because you're cheating.
904.10s - 905.38s |  I don't wanna cheat, stuff like that.
905.38s - 907.38s |  So it creates conflicts and friction
907.38s - 908.50s |  in the gameplay experience.
910.82s - 914.34s |  Then my favorite is you have multiplayer online
914.34s - 918.02s |  where typically there's an authoritative server involved
918.02s - 919.70s |  and pretty much every single action,
919.70s - 925.14s |  every single player transmits to that server.
925.22s - 928.82s |  So here in the very famous Ultima 9 screenshot
928.82s - 930.58s |  where you have two friendly neighbors,
932.66s - 935.14s |  player one and player two each have their own game clients
935.14s - 936.42s |  and they're talking to the game server
936.42s - 939.38s |  and the game server is keeping track of player one's
939.38s - 940.98s |  and player two's game states.
944.58s - 947.22s |  Again, if you're gonna try and hack this,
947.22s - 948.74s |  you have to reverse engineer the client,
949.86s - 952.58s |  reverse engineer the RPC protocol
952.58s - 954.42s |  and how the game client is talking to the server.
955.14s - 959.94s |  In order to modify your gold or progression inside the game,
959.94s - 962.26s |  which is difficult to do typically.
963.06s - 967.86s |  So you had an increased illusion of scarcity
967.86s - 970.50s |  and value for the items you earn inside the game.
971.62s - 973.22s |  But again, if you uninstall the game
973.22s - 975.38s |  and install it on a different computer,
976.10s - 979.06s |  your save state will transfer over.
980.02s - 983.38s |  Again, you need an internet connection authentication,
983.38s - 985.46s |  but all that is typically handled by something else.
986.34s - 990.50s |  But for the game developer, it gets more challenging
990.50s - 992.58s |  because you need to build complicated systems
992.58s - 996.18s |  to track the game state of a massively multiplayer game.
996.18s - 999.70s |  Like some of these servers handle maybe 50,000 players
999.70s - 1002.66s |  and they need to handle like how items are spawned,
1002.66s - 1004.66s |  how items are transferred to each player,
1005.22s - 1008.66s |  how auction houses look like, in-game mail,
1008.66s - 1011.38s |  like some games allow you to mail items to other players,
1011.46s - 1014.34s |  there's different auction mechanics
1014.34s - 1017.06s |  and there's always a developer to play or a cash store.
1018.10s - 1020.90s |  Typically game companies have to like reinvent the wheel
1020.90s - 1022.90s |  on all of this for every single game.
1022.90s - 1026.74s |  And what that leads to is the same exploits
1026.74s - 1028.02s |  found over and over again.
1031.06s - 1033.38s |  So let's chat about game economies.
1033.38s - 1036.18s |  There's two at super high level, there's two types.
1036.18s - 1039.46s |  There's a game economy that's intended to be played
1039.46s - 1040.58s |  as by the developer,
1041.14s - 1043.38s |  like their vision of how the game should be played.
1043.38s - 1044.90s |  And then there's what really takes place.
1045.54s - 1048.82s |  And as we know, players are like a box of cats
1048.82s - 1050.34s |  and it's really hard to hurt any cats.
1052.50s - 1056.02s |  So in a MMORPG economy,
1056.02s - 1058.18s |  you typically have what's known as faucets,
1058.18s - 1059.62s |  things that generate items.
1059.62s - 1062.58s |  And then you have drains, things that consume items.
1062.58s - 1064.34s |  And in the mix, you have players.
1064.34s - 1067.94s |  They interact with each through gameplay and other mechanics.
1068.90s - 1072.66s |  So a way of getting items inside the game
1072.66s - 1075.46s |  is to play the game, you kill stuff,
1075.46s - 1078.98s |  you either farm resources and you get gear resources
1078.98s - 1081.94s |  like iron ore and stuff like that, or gold coins.
1083.70s - 1085.86s |  The other way is to do an in-app purchase flow
1085.86s - 1087.46s |  where you buy cosmetics typically,
1087.46s - 1089.94s |  like a new hat or quality of life things,
1089.94s - 1091.78s |  like things that let you teleport to friends
1091.78s - 1096.26s |  or maybe let you get more XP more quickly.
1098.26s - 1100.26s |  And these items can typically be traded
1100.26s - 1101.70s |  with your friends inside the game.
1101.70s - 1102.50s |  It's totally fine.
1103.06s - 1106.18s |  But as soon as you try to sell those items for cash
1106.18s - 1109.78s |  on like some forum, like player auctions or eBay,
1111.78s - 1114.34s |  that's known as RMT, real money trading.
1114.34s - 1116.18s |  And you get banned for that.
1119.44s - 1121.60s |  And that shallow market
1121.60s - 1124.08s |  or that real money transaction shallow market,
1124.96s - 1125.76s |  it's pretty big.
1125.76s - 1128.72s |  The players interact with black market sales all the time.
1129.28s - 1131.60s |  It's a multi-billion dollar industry.
1131.60s - 1133.12s |  For example, in Fortnite,
1135.33s - 1137.33s |  people were transacting a billion dollars
1137.33s - 1139.49s |  worth of game accounts annually.
1140.53s - 1143.73s |  And any game that allows player to player transfers
1143.73s - 1146.05s |  is always gonna have a black market.
1147.57s - 1150.29s |  And then this is, like I said,
1150.29s - 1151.41s |  against the terms of service,
1152.29s - 1154.69s |  typically sites, shallow market sites
1154.69s - 1157.01s |  that you interact with will have like in bold red
1157.01s - 1157.97s |  on top of the site saying,
1157.97s - 1160.53s |  hey, if you buy golden items through us,
1160.53s - 1161.57s |  you risk getting banned.
1162.29s - 1165.33s |  And even though that's widely known by players,
1165.33s - 1166.61s |  they still participate in it.
1166.61s - 1169.97s |  Cause it's one way to avoid the tedious tasks
1169.97s - 1172.45s |  inside of the game that are grind.
1172.45s - 1174.45s |  Like in some games, you might have to grind
1174.45s - 1177.33s |  for a couple of weeks to get an Epic sword.
1177.97s - 1179.81s |  Some players don't have the time to do that.
1179.81s - 1182.37s |  So they'd rather go to like some seller
1182.37s - 1185.97s |  on the shallow site and pay a couple of hundred bucks
1186.05s - 1188.13s |  to bypass all that work.
1188.85s - 1189.89s |  So it's in huge demand.
1191.57s - 1193.49s |  And popular items are being traded.
1193.49s - 1195.17s |  You have game currency gear
1195.17s - 1196.85s |  and sometimes entire accounts.
1197.89s - 1200.37s |  And the workflow for that,
1200.37s - 1202.77s |  for a farmer or anybody that wants to supply
1202.77s - 1205.57s |  the shadow market is you log into the game,
1205.57s - 1207.25s |  you gather items and gold
1207.25s - 1209.17s |  and you sell it to the players directly
1209.97s - 1211.41s |  or you sell it to resellers.
1214.35s - 1216.43s |  So why do people exploit in games?
1217.23s - 1219.31s |  Two obvious ones, for fun and profit.
1219.31s - 1220.35s |  I don't know what I'm saying.
1221.39s - 1223.15s |  For fun, typically you have things like
1223.15s - 1224.99s |  well hacking, radar views,
1224.99s - 1226.83s |  anything that lets you get an advantage
1226.83s - 1228.11s |  over another player,
1228.11s - 1229.87s |  teleporting around, aim bots.
1230.91s - 1232.75s |  If you're looking to earn some money,
1232.75s - 1235.47s |  you can have a farming bot just play the game for you
1235.47s - 1238.43s |  and amass tons and tons of items
1238.43s - 1239.39s |  that you can resell.
1241.79s - 1243.47s |  Trolling, I'm a big fan of trolling,
1243.47s - 1244.59s |  exploiting for trolling.
1244.83s - 1246.83s |  As long as it's done responsibly,
1246.83s - 1247.95s |  it can be pretty fun.
1250.59s - 1251.87s |  And also a big part of it is
1252.67s - 1253.95s |  exploiting online games
1253.95s - 1255.95s |  is a huge technical challenge.
1255.95s - 1257.87s |  You gotta figure out how all this stuff works
1258.51s - 1259.63s |  before you can break it.
1259.63s - 1262.75s |  And that in itself is a game by itself.
1264.83s - 1267.07s |  For profit, there is no shortage of sites
1267.07s - 1268.99s |  trying to sell in-game gold
1269.55s - 1271.31s |  in games like World of Warcraft,
1272.19s - 1274.19s |  pretty much any game that has trading,
1274.35s - 1276.27s |  you'll have a site popping up up there
1276.27s - 1278.43s |  to sell you gold and items from that game.
1279.71s - 1281.23s |  Again, it's against the terms of service,
1281.23s - 1282.59s |  you'll get banned for it,
1282.59s - 1285.55s |  but it's still a huge industry.
1287.55s - 1290.35s |  Then you have people selling services
1290.35s - 1292.51s |  and tools in games.
1293.95s - 1298.11s |  This will, this is a screenshot of the site
1298.11s - 1299.55s |  I won't call out,
1299.55s - 1302.35s |  but they basically have exploits
1302.35s - 1304.99s |  for pretty much every single major game out there.
1304.99s - 1307.71s |  They claim that their exploits are undetected
1307.71s - 1309.07s |  because they use very crazy
1309.79s - 1312.11s |  and advanced kernel level based exploits
1312.11s - 1313.71s |  that kind of like live inside
1313.71s - 1314.99s |  of the Windows operating system.
1316.11s - 1319.39s |  So it's harder to detect using anti-cheat methods.
1321.55s - 1322.67s |  Some of these sites,
1322.67s - 1324.67s |  they make millions of dollars per month
1324.67s - 1326.27s |  because they have thousands
1326.27s - 1327.63s |  or tens of thousands of players
1328.27s - 1330.83s |  spending 20 to a hundred dollars a month
1330.83s - 1332.91s |  to get undetected cheats in their favorite game.
1336.32s - 1338.24s |  So if you want to get into game hacking,
1339.28s - 1343.20s |  you will need to build out a tool set.
1344.80s - 1346.56s |  And this is a really big rabbit hole
1347.20s - 1349.60s |  because typically you want tools
1349.60s - 1351.60s |  that are not off the shelf.
1351.60s - 1353.52s |  If you use off the shelf tools,
1353.52s - 1354.48s |  you will get banned.
1355.12s - 1355.84s |  Today's games,
1356.72s - 1358.88s |  pretty much all of them use some sort of anti-cheat
1358.88s - 1361.52s |  and all the anti-cheat systems look for common tools
1361.52s - 1363.68s |  like, hey, are you running IDA in the background?
1364.32s - 1367.44s |  Are you running a hex editor that has memory access?
1368.32s - 1371.52s |  Are you running a debugger and things like that?
1371.52s - 1373.20s |  And typically you'll get flagged
1373.76s - 1375.36s |  and maybe kicked from the game
1375.36s - 1376.72s |  with a friendly error saying,
1376.72s - 1377.84s |  hey, you're running a program
1377.84s - 1380.56s |  that's not supposed to be run alongside this game.
1381.76s - 1384.40s |  Sometimes these anti-cheat things go a little wild.
1385.44s - 1387.52s |  Sometimes I play games on my development system
1387.52s - 1389.60s |  and I had MySQL running in the background
1390.32s - 1391.92s |  and I tried to log into,
1391.92s - 1394.48s |  I think the game was Star Wars The Republic
1394.48s - 1397.36s |  and I logged in and the game picked me out
1397.36s - 1399.28s |  and said, hey, you're running a banned program
1399.28s - 1401.20s |  and said the banned program was MySQL.
1401.20s - 1403.04s |  I was like, that doesn't sound right,
1403.04s - 1403.92s |  but okay, whatever.
1407.28s - 1409.28s |  So when you're building out your tool set,
1411.04s - 1411.76s |  you want to,
1414.69s - 1417.09s |  your main goal is to somehow be able
1417.09s - 1418.37s |  to modify the game client,
1419.01s - 1421.41s |  get read-write memory access to its memory space.
1423.41s - 1425.49s |  From there, you can build out
1427.17s - 1428.29s |  pretty much anything you want.
1428.29s - 1429.97s |  Like if you hook functions,
1429.97s - 1431.89s |  you can modify your run speed.
1431.89s - 1434.21s |  You can look at how the data is being sent
1434.21s - 1435.81s |  between the game client and the game server
1435.81s - 1436.77s |  to start fuzzing it.
1437.65s - 1439.41s |  You can modify the game in any way you want
1439.41s - 1440.93s |  as long as you have memory access.
1442.29s - 1443.09s |  That's the hard part.
1443.97s - 1446.29s |  To get there, you have to use tools
1446.29s - 1447.97s |  to reverse your game client
1448.53s - 1450.77s |  while trying to avoid getting banned.
1451.97s - 1456.29s |  Sometimes you'll have to sacrifice an account
1456.29s - 1458.13s |  or a machine or a PC
1458.93s - 1460.93s |  because sometimes these days when you're banned,
1461.57s - 1465.41s |  your hardware ID of your PC will also get blacklisted.
1466.69s - 1471.41s |  So like sometimes I have a throwaway PC
1471.41s - 1475.25s |  or a VM machine that I do my initial recon on
1475.25s - 1479.17s |  using tools like x64 debug, Wireshark maybe,
1479.17s - 1481.17s |  although that's not as useful in online games
1481.17s - 1482.77s |  because most of them are encrypted
1482.77s - 1484.37s |  and they use custom protocols.
1484.37s - 1487.73s |  But it's a good way to get a quick lay of the land
1487.73s - 1491.01s |  and see how the game client is talking to the server
1491.01s - 1492.93s |  and how it's interacting with the operating system.
1493.49s - 1497.65s |  See if there's any ways you can load a DLL
1497.65s - 1499.17s |  into the process space easily
1499.17s - 1500.93s |  through different vulnerabilities.
1501.65s - 1505.17s |  Maybe get an idea of how the game client
1505.17s - 1508.13s |  is trying to detect if you're using anti-cheat tools,
1508.13s - 1509.89s |  if it's querying the operating system,
1509.89s - 1511.81s |  to be like, hey, enumerate every single process
1512.45s - 1514.61s |  in this user's system
1514.61s - 1517.09s |  so I can flag the ones that are blacklisted
1517.97s - 1518.61s |  and things like that.
1519.41s - 1522.05s |  A good tool for this that's like a Swiss army knife
1522.05s - 1523.01s |  is called Cheat Engine.
1523.81s - 1526.21s |  Highly recommend playing around with that.
1526.21s - 1528.69s |  It's basically a debugger and a memory editor
1528.69s - 1531.81s |  specifically built for workflows
1531.81s - 1535.09s |  you'd do in developing cheats in games,
1535.09s - 1536.21s |  especially single-player games,
1536.21s - 1538.05s |  but it can also work on the online games.
1541.81s - 1543.41s |  So the goal is to get memory access
1543.41s - 1545.57s |  but also to be undetectable
1545.57s - 1547.97s |  and that's very hard to do these days.
1550.53s - 1551.65s |  I'll kind of go into that.
1552.61s - 1553.49s |  So back in the day,
1554.53s - 1556.37s |  you could run all of your cheat tools
1556.37s - 1559.09s |  inside of Userland or Ring3 in Windows
1559.09s - 1562.85s |  where you basically had your cheat tool
1562.85s - 1566.53s |  and, for example, you could call Windows APIs
1566.53s - 1569.25s |  to read and write process memory for the game client
1569.25s - 1571.73s |  and then that could get you a foothold
1571.73s - 1574.93s |  into starting to tamper with that game client,
1574.93s - 1576.69s |  you know, reading values from memory
1577.25s - 1579.33s |  and then maybe potentially injecting some code
1579.33s - 1580.77s |  to modify how the game works.
1581.09s - 1583.01s |  This is pretty,
1584.53s - 1586.21s |  it's, out of all the options out there,
1586.21s - 1587.97s |  this is like a lower learning curve.
1588.53s - 1591.33s |  You could probably do a Userland-based cheat
1591.33s - 1595.09s |  for a single-player game inside of, you know, a few hours,
1595.09s - 1597.65s |  especially with the help of like ChatGPT or something.
1599.17s - 1601.33s |  If you mess up, the game client will crash,
1601.33s - 1603.25s |  your computer won't blue screen.
1604.29s - 1607.33s |  And it's well-documented on how to pull this off
1607.33s - 1608.85s |  and different, you know,
1608.85s - 1612.13s |  how to pull this off in different communities
1612.13s - 1615.81s |  and LLMs that, you know, have been fed with all this data.
1615.81s - 1617.97s |  I'll link all this stuff at the end of the presentation.
1618.77s - 1620.85s |  And it's likely to work with different OS versions
1620.85s - 1623.41s |  because you're working at the application layer
1623.41s - 1625.49s |  and you're not doing crazy, exotic,
1626.61s - 1629.57s |  kernel and API calls.
1629.57s - 1631.01s |  You're doing well-defined stuff
1631.01s - 1631.97s |  that's going to be maintained
1631.97s - 1633.41s |  between operating system versions.
1634.13s - 1637.09s |  For example, some of the stuff I built in like 1997
1637.09s - 1639.73s |  just spins right up and works in this year
1639.73s - 1642.37s |  and on Windows 11.
1642.37s - 1644.37s |  And I think I designed this stuff for Windows XP.
1646.77s - 1649.01s |  So there's less maintenance and overhead
1649.01s - 1650.93s |  to maintain your code.
1650.93s - 1655.09s |  The only thing I had to do was make my code compile on x64
1655.09s - 1657.17s |  because all the games switched over to 64-bit,
1657.17s - 1658.29s |  you know, in the past 10 years.
1659.73s - 1662.13s |  The problem with this is it's super easy to detect.
1662.93s - 1665.41s |  I wouldn't recommend this method for anything
1665.41s - 1667.73s |  other than maybe single-player games
1667.73s - 1671.25s |  or games that you know that don't have anti-cheat present.
1673.25s - 1673.75s |  Whoa.
1675.41s - 1677.81s |  An example of a user lens tool
1678.61s - 1680.77s |  that I built over 20 years ago
1680.77s - 1682.37s |  and still very relevant to this day.
1682.37s - 1684.13s |  I still use it almost every day.
1686.66s - 1690.02s |  So what's going on here is you have...
1692.10s - 1692.60s |  Great.
1693.14s - 1695.86s |  It basically injects a DLL into the game client.
1698.78s - 1700.94s |  That is injected into the game client.
1700.94s - 1702.30s |  It brings up a window.
1704.14s - 1705.90s |  View the packets that are going out
1712.62s - 1713.74s |  and then send it.
1715.02s - 1717.66s |  So that way, this is kind of like a burp suite
1717.66s - 1719.02s |  for binary protocols.
1733.58s - 1734.30s |  Okay, there we go.
1735.74s - 1736.24s |  Is that better?
1738.94s - 1739.58s |  Yeah, thanks a lot.
1740.46s - 1742.30s |  Okay, so kind of what you see here
1742.30s - 1745.02s |  is like me playing around and packets going in and out.
1745.02s - 1748.06s |  And then I've discovered like what's it look like
1748.06s - 1752.22s |  to move a item in your inventory using a packet
1752.22s - 1755.50s |  just to validate everything is working correctly.
1760.03s - 1761.79s |  Okay, I'll kind of skip forward.
1767.50s - 1768.00s |  Okay.
1769.34s - 1774.54s |  The next type of tools I started developing
1774.62s - 1775.98s |  were kernel-based tools
1777.58s - 1780.06s |  because their userland stuff is getting detected,
1780.06s - 1781.90s |  especially in like late 2000s.
1782.86s - 1785.34s |  You had Warden, then you had Punkbuster,
1785.34s - 1787.66s |  then a lot of the games built their own
1787.66s - 1789.66s |  proprietary anti-cheat stuff.
1789.66s - 1790.86s |  I think that's from the time
1790.86s - 1792.54s |  easy anti-cheat started coming out.
1793.10s - 1795.82s |  So I had to move my tools into the kernel space
1795.82s - 1798.54s |  or be a part of basically the Windows operating system.
1799.90s - 1802.06s |  That gave me access to physical memory directly.
1802.94s - 1805.10s |  It wasn't detected by any existing cheats,
1806.30s - 1807.98s |  especially for the games I was targeting.
1809.26s - 1810.86s |  It does have a steep learning curve.
1810.86s - 1814.94s |  It took me almost a year to transfer my tools
1814.94s - 1818.78s |  and my knowledge and learn all about Windows internals,
1819.58s - 1821.98s |  use many undocumented features of Windows
1821.98s - 1826.30s |  and Intel CPUs to help me do interesting things.
1826.30s - 1827.90s |  So it has a very steep learning curve.
1828.78s - 1831.34s |  You have to modify your kernel-based tools
1831.34s - 1833.42s |  for every single version of the operating system.
1834.62s - 1836.14s |  You'll have a lot of blue screens
1837.50s - 1838.78s |  and it's a big time sink.
1838.78s - 1840.38s |  And then at the end, when you're done,
1840.38s - 1841.74s |  you still have to sign your driver
1841.74s - 1845.90s |  because Windows, especially since I think 2008,
1846.62s - 1848.22s |  wouldn't allow you to load the driver
1848.22s - 1849.74s |  unless it was signed by Microsoft.
1850.54s - 1852.78s |  So either you either pay Microsoft
1852.78s - 1855.66s |  and appear to be as a legitimate business saying,
1855.66s - 1856.86s |  hey, I want to sign this driver
1856.86s - 1859.66s |  because it lets me help with my business
1859.66s - 1861.90s |  or you exploit vulnerable drivers.
1861.90s - 1863.42s |  And that's another deep rabbit hole.
1863.42s - 1866.38s |  There's tons of vulnerable drivers you can exploit
1866.38s - 1869.74s |  to gain basically read and write functionality
1869.74s - 1871.98s |  to physical memory.
1871.98s - 1873.98s |  And that way you can get a foothold
1873.98s - 1876.30s |  to interact with the game plans.
1878.74s - 1881.62s |  More recently, driver-based anti-cheat systems
1881.62s - 1882.98s |  have detected all of this.
1882.98s - 1884.82s |  So it's hitting this.
1886.26s - 1888.82s |  There's a lot out there
1888.82s - 1891.30s |  that will not get detected by anti-cheat systems.
1891.30s - 1892.26s |  And there's a lot out there
1892.26s - 1894.18s |  that will get detected by anti-cheat systems.
1894.18s - 1896.90s |  So it's a roll of the dice.
1905.71s - 1910.59s |  Here's an example of a tool that's in its second generation.
1910.59s - 1913.15s |  I wrote the first generation completely
1913.15s - 1915.23s |  in the Windows driver.
1915.23s - 1917.07s |  Then I got together with a buddy of mine.
1917.07s - 1918.67s |  We slapped a cool GUI on it
1918.67s - 1920.75s |  and kind of rewrote everything to be more efficient.
1921.71s - 1924.67s |  Basically what this tool does is,
1925.55s - 1934.43s |  oops, what this tool does
1934.43s - 1936.75s |  is it helps you examine
1938.75s - 1940.67s |  what a game client is doing
1940.67s - 1943.23s |  when it's executing based on user input.
1943.79s - 1945.71s |  And what I mean by that is
1946.83s - 1948.11s |  when you're reversing a game,
1948.99s - 1951.47s |  most games are really big in size.
1951.47s - 1954.19s |  They're between 20 and 100 megabytes.
1954.59s - 1956.19s |  And when you disassemble that game,
1956.91s - 1959.31s |  you might have half a million function calls
1959.31s - 1960.51s |  you're going to be looking at.
1961.07s - 1963.63s |  And it's really hard to find the functions
1963.63s - 1964.67s |  that you're interested in.
1965.39s - 1968.75s |  And when I'm reversing binary protocols,
1968.75s - 1970.99s |  I'm very interested in how a game client
1970.99s - 1972.43s |  is sending data out to the server,
1972.43s - 1973.71s |  how that data is being encrypted
1973.71s - 1976.59s |  and how that data is being transported.
1977.87s - 1981.39s |  To do that, you could do a bunch of manual debugging
1982.35s - 1985.15s |  with Oli debug or x64 debug.
1985.15s - 1986.19s |  You know, you could start up
1986.19s - 1987.95s |  like a Winsock send function
1987.95s - 1989.31s |  and trace your way backwards.
1989.95s - 1991.15s |  But then it gets really hairy
1991.15s - 1992.67s |  because most games are multithreaded.
1992.67s - 1994.27s |  So the data gets shuffled around
1994.27s - 1995.23s |  between different threads.
1996.51s - 1998.11s |  And then you get lost really quickly
1998.11s - 2000.75s |  in the rat's maze of function calls,
2000.75s - 2002.51s |  call stacks and where your data's at.
2003.39s - 2005.47s |  So I created this tool
2005.47s - 2008.11s |  to basically analyze the process as it's running.
2008.91s - 2010.67s |  I feed it one input,
2010.67s - 2012.27s |  that's a string of interest.
2012.27s - 2015.31s |  And whenever the game client executes on the string
2015.31s - 2017.31s |  or whenever the string appears
2017.31s - 2018.99s |  on the call stack for a function,
2019.71s - 2020.83s |  this tool will pick it up.
2021.23s - 2025.79s |  So this let me cut down my reversion during time
2025.79s - 2027.95s |  from, you know, weeks and months
2027.95s - 2030.91s |  using a traditional debugger methods
2030.91s - 2032.99s |  to a couple of hours
2032.99s - 2035.71s |  and helping me find a way to hook
2035.71s - 2037.47s |  the network stack at that point.
2039.07s - 2039.71s |  So that, you know,
2039.71s - 2040.99s |  you can start fuzzing the protocol
2040.99s - 2042.43s |  and finding exploits inside of the game.
2043.39s - 2045.71s |  So this is just an example of me going through it
2045.71s - 2049.15s |  and then finding functions that process the string
2049.15s - 2053.15s |  that, you know, said hello at whatever exclamation point.
2055.65s - 2057.33s |  And then this way you're able to find
2057.33s - 2059.33s |  which functions you want to hook
2059.33s - 2061.49s |  to examine data that's being sent out
2061.49s - 2063.33s |  and which functions you want to call
2063.33s - 2067.57s |  to send mock or spoof data out on
2067.57s - 2068.77s |  to start fuzzing the protocol.
2072.08s - 2074.00s |  My favorite, there's a lot of...
2075.04s - 2079.44s |  So the anti-cheat race is getting very hot.
2080.56s - 2082.80s |  Drivers are being detected
2082.80s - 2085.12s |  and it's very difficult to build the drivers
2085.12s - 2087.04s |  that, you know, are stealthy now
2087.04s - 2089.28s |  because all the anti-cheat typically lives
2090.00s - 2091.44s |  at the operating system level now.
2092.32s - 2094.24s |  So people are moving out of the, you know,
2094.24s - 2095.76s |  ring zero operating system layer.
2096.48s - 2100.40s |  And now they're doing hardware hacks basically
2100.40s - 2103.20s |  to give you direct memory access to physical RAM.
2105.12s - 2108.88s |  These are typically not detected by userland anti-cheats
2108.88s - 2112.32s |  and they are, well, they weren't detected
2112.32s - 2114.32s |  up until a few months ago
2114.32s - 2116.96s |  by kernel mode anti-cheat systems.
2116.96s - 2120.40s |  The way this works is you plug in a phony PCI device
2120.40s - 2124.72s |  and that PCI device has direct access to all your RAM.
2125.60s - 2127.28s |  And then you connect the cable to it
2127.28s - 2133.92s |  and you basically pipe memory access
2133.92s - 2134.72s |  to a different computer.
2134.72s - 2136.24s |  So a second PC can be like,
2136.24s - 2139.60s |  hey, malicious PCI device,
2139.60s - 2141.92s |  give me physical memory
2141.92s - 2143.76s |  belonging to this process basically.
2144.64s - 2146.24s |  So you have a two PC set up.
2146.24s - 2149.60s |  One PC is a host for the dummy PCI card
2149.60s - 2151.36s |  that gives you full memory access.
2151.36s - 2152.80s |  And then you have a second PC
2154.64s - 2156.64s |  that is able to issue commands and read memory.
2157.76s - 2159.68s |  This has a steep learning curve.
2159.68s - 2161.76s |  Again, it's always version specific.
2161.76s - 2162.72s |  It can be expensive.
2162.72s - 2164.88s |  Some of these cards can go for hundreds,
2164.88s - 2166.24s |  if not thousands of dollars.
2167.52s - 2170.80s |  And they are also detected by anti-cheat systems.
2170.80s - 2173.92s |  Currently, some kernel based anti-cheat systems
2173.92s - 2175.92s |  will detect this stuff.
2176.72s - 2178.64s |  And again, you're playing with hardware,
2179.36s - 2183.12s |  cables, different weird stuff going on here.
2183.12s - 2185.52s |  So if you mess up in how you're using it,
2185.52s - 2188.32s |  how you flash the phony PCI card,
2188.32s - 2191.68s |  you might break a $400 PCI card
2192.56s - 2194.00s |  or you might break your PC.
2194.72s - 2196.40s |  So again, it's a big roll of the dice.
2196.96s - 2198.16s |  But when you pull it off,
2198.16s - 2200.96s |  it's pretty cool and worth it.
2200.96s - 2201.76s |  It's a good hobby.
2206.56s - 2211.36s |  So you have cheats that's running on a separate PC now.
2211.36s - 2212.48s |  And then you have your main PC
2212.48s - 2213.44s |  that you're playing the game on.
2214.24s - 2217.04s |  So another piece of hardware that's important
2217.04s - 2219.44s |  is called an HDMI fuser,
2219.44s - 2222.32s |  where you fuse the display of the second PC
2222.32s - 2223.52s |  onto the main PC.
2223.52s - 2225.84s |  So if you're building something like a radar hack
2225.84s - 2226.64s |  or a wall hack,
2226.64s - 2229.28s |  where you're outlining boxes around enemy players,
2230.00s - 2233.20s |  you want to be able to overlay those things
2233.20s - 2234.56s |  on your main gaming PC.
2234.56s - 2237.44s |  So you can see what's going on in the game
2237.44s - 2238.08s |  as you're playing it,
2238.08s - 2239.92s |  instead of looking over to a second monitor
2239.92s - 2241.76s |  to see what's going on.
2243.68s - 2245.76s |  PCI, or I mean an HDMI fuser
2245.76s - 2248.24s |  is on the deck and both working at the HDMI level
2248.24s - 2250.08s |  on the cable that's going out to your monitor.
2250.08s - 2252.56s |  So there's nothing that can be done against that.
2254.16s - 2255.92s |  There's companies that sell entire kits.
2255.92s - 2258.32s |  You know, they'll sell you the PCI,
2258.32s - 2259.68s |  direct memory access card,
2260.48s - 2263.52s |  all the cabling, the HDMI fuser.
2263.52s - 2266.40s |  And if you want to emulate the keyboard and mouse,
2266.40s - 2267.76s |  you can get an emulator.
2268.40s - 2269.60s |  I don't recommend this.
2269.60s - 2271.04s |  It's a lot of money.
2271.84s - 2273.68s |  And you will probably get banned
2273.68s - 2275.92s |  because in the games you want to use this in,
2276.72s - 2278.40s |  especially competitive FPS games
2278.40s - 2280.64s |  like Valorant and Call of Duty,
2281.60s - 2284.32s |  the anti-cheat systems that are running on those
2284.32s - 2286.00s |  will detect these things
2286.00s - 2287.92s |  if they're not configured properly.
2288.48s - 2289.44s |  Or even if they are,
2289.44s - 2290.80s |  you still have to make sure to see
2290.80s - 2292.96s |  if the anti-cheat systems are being updated
2293.52s - 2297.76s |  to detect the current method of hardware cheat devices.
2297.76s - 2301.76s |  So it's a very rapidly evolving
2303.12s - 2304.48s |  cat and mouse game right now.
2304.48s - 2306.88s |  And what's your risk is getting an account banned
2306.88s - 2308.48s |  and potentially getting your hardware banned.
2309.44s - 2311.44s |  But again, it's a good hobby.
2313.36s - 2314.56s |  Here's an example I found
2314.56s - 2320.16s |  of somebody running this direct memory access cheat.
2320.16s - 2324.24s |  On this screen on the left is the cheat computer
2324.24s - 2327.28s |  that's analyzing physical memory from the gaming PC.
2327.76s - 2329.68s |  And then it's able to extract data
2329.68s - 2331.76s |  of where players are at
2331.76s - 2334.80s |  and then draw hit boxes around them.
2336.32s - 2337.84s |  And then using an HDMI fuser,
2337.84s - 2339.28s |  you overlay this to your main game.
2339.92s - 2342.56s |  And then you can see exactly where the players are.
2343.52s - 2349.12s |  And I mean, you get an unfair advantage.
2351.20s - 2353.28s |  I've never actually done this in practice
2353.92s - 2356.72s |  because there's a couple of things wrong with this.
2357.36s - 2359.44s |  Well, one, that's super cool and novel.
2359.44s - 2360.88s |  It's like bleeding edge technology.
2360.88s - 2364.32s |  But two, most games, especially competitive shooters
2364.32s - 2366.08s |  use shield-based matchmaking.
2366.08s - 2367.12s |  So if you're using this
2367.12s - 2369.04s |  and you're completely dominating the playing field,
2369.60s - 2372.08s |  what you're gonna get paired with is other cheaters.
2372.72s - 2376.00s |  And then everybody's on the same playing field.
2376.00s - 2380.24s |  So the end result is, you know,
2380.24s - 2381.52s |  you're gonna be playing with other player
2381.52s - 2384.00s |  just as good as yourself if you're using hacks or not.
2384.64s - 2385.92s |  So it gets kind of interesting.
2390.48s - 2394.48s |  So let's, we have time, we have time.
2394.48s - 2399.52s |  So let's go through and see what economic exploits look like
2399.52s - 2402.48s |  and what a for-profit exploit lifecycle looks like.
2405.28s - 2406.40s |  So when you wanna hack a game,
2407.84s - 2409.92s |  the lifecycle or the workflow is
2409.92s - 2411.92s |  you find the game that is gonna be popular.
2412.56s - 2414.96s |  If it's popular, it's gonna generate more money for you.
2415.68s - 2419.04s |  Then you reverse engineer this game, find the exploits.
2420.24s - 2421.36s |  Once you find an exploit,
2421.36s - 2424.72s |  you stockpile golden items in this game on your account.
2425.36s - 2428.08s |  Then you transfer this account to a wholesale supplier
2428.08s - 2432.40s |  that will resell out of your account to other players
2432.40s - 2433.60s |  via some website or something.
2434.24s - 2435.68s |  And then the exploit gets fixed.
2435.68s - 2438.00s |  Typically exploits live for, you know,
2439.68s - 2441.68s |  I'd say on average, most exploits
2441.68s - 2444.88s |  before they get detected live for a few months.
2444.88s - 2448.48s |  I've had exploits get fixed like the same day I discovered them.
2448.48s - 2451.28s |  And I've had exploits live for about 13 years.
2452.32s - 2453.68s |  And I've had everything in between.
2454.88s - 2458.48s |  Once that happens, you either go through this same loop again
2458.48s - 2461.04s |  to discover a new exploit.
2461.60s - 2463.52s |  In my experience, every game has about
2464.96s - 2467.04s |  five to 10 economic exploits
2467.04s - 2468.24s |  that you can use to your advantage
2468.24s - 2471.84s |  to mint infinite items and gold inside the game
2471.84s - 2473.44s |  to resell to other players.
2473.44s - 2478.08s |  Once that is exhausted, you find a new game or a new target.
2479.12s - 2482.72s |  The exploit research itself, it's a big time sink.
2483.84s - 2485.84s |  If it's your first, you know,
2485.84s - 2487.84s |  day at the rodeo of exploring games,
2487.84s - 2492.24s |  expect to sink about 200 hours to get like a simple exploit
2493.04s - 2494.56s |  or not even an exploit,
2494.56s - 2497.44s |  simple tools that go on that will help you discover exploits.
2500.80s - 2504.16s |  So let me jump back really quick to a side story.
2505.84s - 2508.72s |  This is an AI generated image of me, basically.
2509.36s - 2515.36s |  And I'm at Best Buy buying every single Final Fantasy XI box they had.
2515.36s - 2519.12s |  Final Fantasy XI was a very popular MMORPG back in the day.
2520.48s - 2524.56s |  And the way you bought those games back then is you get a box
2524.56s - 2526.56s |  and then inside the box, there's a CD
2526.56s - 2528.72s |  and like a CD key that you use to create an account.
2529.84s - 2534.00s |  So I went to a Best Buy and I bought every single box they had.
2534.64s - 2536.24s |  And the guy checking me out was like,
2536.24s - 2537.68s |  hey, why are you buying so many?
2537.68s - 2540.72s |  Do you own like a game land or whatever workshop?
2541.44s - 2543.04s |  And I was, I didn't know what to say.
2543.04s - 2545.84s |  So I was like, can I get banned for profanity a lot?
2545.84s - 2548.88s |  So I'm going through a lot of accounts and rolled his eyes.
2548.88s - 2550.88s |  And I was like, oops, I shouldn't have said that.
2550.88s - 2552.08s |  It was kind of cringe.
2552.08s - 2557.84s |  But anyway, like I said, I was supplying Final Fantasy XI.
2558.48s - 2559.84s |  They banned a lot of accounts.
2560.48s - 2562.24s |  So I needed about 40 accounts per day.
2562.80s - 2568.00s |  And the cost profit breakdown for this was back in the day,
2568.00s - 2570.80s |  a million gold in this game was selling for a hundred dollars.
2571.68s - 2575.68s |  I could load up one account safely with 60 million gold
2575.68s - 2576.88s |  without getting detected.
2577.84s - 2582.64s |  So my per profit or per account profit was $8,000.
2584.24s - 2587.44s |  A single box of Final Fantasy XI cost $30.
2587.68s - 2593.68s |  So my profit margin was close to 100%.
2595.20s - 2597.52s |  So like what anybody else would do,
2598.08s - 2602.08s |  I drove around in the LA area to every single Best Buy in the area.
2602.08s - 2605.60s |  And I bought out every single Final Fantasy box they had.
2605.60s - 2609.36s |  I'm sure Square Enix was like, why is our game so hot in this area?
2610.56s - 2611.06s |  Who knows?
2613.52s - 2616.40s |  So let's kind of jump forward a little bit.
2616.40s - 2619.20s |  So let's say you want to hack a game.
2619.20s - 2620.72s |  You develop your tool set.
2620.72s - 2623.04s |  You're going to attack the protocol.
2624.40s - 2627.68s |  Again, the attack surfaces either attack the IT infrastructure
2627.68s - 2632.40s |  and you get database root and modify your database that way.
2632.40s - 2633.60s |  I wouldn't recommend that.
2633.60s - 2634.88s |  That's highly illegal.
2635.84s - 2639.28s |  I recommend for abusing functionality
2639.28s - 2641.68s |  that the game server exposes to you.
2642.64s - 2646.96s |  Typically, your game server has packet handlers or RPC handlers
2646.96s - 2650.64s |  to handle things like logging in, logging out, moving.
2650.64s - 2654.72s |  Or one of my favorite exploits, I'll get into this in a little bit,
2654.72s - 2658.80s |  is if you have something in your inventory and you delete it,
2658.80s - 2661.76s |  there's a command you could issue to the server for that.
2662.56s - 2665.68s |  And the server will process that command and modify your storage.
2667.20s - 2669.92s |  For example, World of Warcraft had many commands
2669.92s - 2671.52s |  that the game client sent to the server.
2672.64s - 2677.84s |  I think it has close to 500 commands that the game client sends to the server
2677.84s - 2681.20s |  and about 600 commands that the server can send back to the game client.
2682.00s - 2684.96s |  Most online games have more than 100 commands
2684.96s - 2686.96s |  that you can start playing with and fuzzing.
2688.80s - 2692.00s |  So let's go through a very simple exploit.
2693.52s - 2695.52s |  This is one of my favorite exploits.
2695.52s - 2698.08s |  This was present in actually a few games.
2698.88s - 2703.36s |  Let's say you have two trash items in your inventory
2703.36s - 2704.64s |  and you want to delete them.
2704.64s - 2707.76s |  This is an example packet where it has an opcode saying,
2707.76s - 2709.76s |  hey, this means delete this item.
2710.32s - 2713.68s |  It has your character ID, it has your inventory ID
2713.68s - 2716.64s |  or your container ID, it has the slot number
2718.00s - 2720.72s |  and then the quantity of how many of those items you want to delete.
2720.72s - 2723.12s |  So if you want to delete this whole stack of green potions,
2723.12s - 2727.36s |  you'd kind of send this packet and you would delete both potions
2727.36s - 2728.48s |  and you'd have nothing left.
2729.84s - 2733.12s |  But well, if you delete a very large negative number,
2735.20s - 2737.92s |  when you take a negative and you subtract the negative from it,
2738.88s - 2741.28s |  I mean, when you take a number and you subtract the negative from it,
2741.28s - 2743.12s |  you end up adding to it.
2743.12s - 2746.40s |  So if you try to delete a negative amount from your inventory,
2746.96s - 2749.76s |  what will happen is it'll end up being added to your inventory.
2749.76s - 2753.92s |  And this happened probably in 90% of the games I went after
2753.92s - 2757.28s |  is you could delete something, give it a negative number
2757.28s - 2760.08s |  and then you just start minting that item off in there.
2762.32s - 2764.16s |  For example, in Final Fantasy XI,
2764.16s - 2767.92s |  I had stacks of 2 billion items in every single inventory slot
2767.92s - 2769.76s |  and I had like 60 inventory slots.
2769.76s - 2774.32s |  So we're talking about insane numbers.
2776.72s - 2779.36s |  My favorite type of exploit that's present
2779.36s - 2783.12s |  in again, almost every single game is a data race condition
2783.12s - 2786.48s |  because typically your game servers are distributed systems
2786.56s - 2788.24s |  and then distributed systems,
2788.24s - 2790.32s |  data synchronization is a huge problem.
2791.28s - 2792.72s |  And when you're developing a game
2792.72s - 2795.36s |  and you're under the gun to push the game out
2796.24s - 2799.20s |  on a launch schedule that the marketing team decided,
2799.92s - 2802.00s |  you're going to avoid things like security issues
2802.00s - 2804.96s |  with data synchronization and distributed systems.
2804.96s - 2809.36s |  So this is very present in a lot of games.
2809.36s - 2812.48s |  So let's say we're interacting with a game shop here
2812.48s - 2814.72s |  and we're sending an opcode of six,
2814.72s - 2817.28s |  or I mean four, you have your character ID
2817.28s - 2821.20s |  and we're issuing a buy command, you have the item ID
2821.20s - 2823.12s |  which happens to be a health potion
2823.12s - 2824.32s |  and you want to buy one of those.
2825.68s - 2828.40s |  Great, nothing fancy there, you're buying one potion.
2830.56s - 2834.16s |  So what if you, instead of using a buy command,
2834.16s - 2838.08s |  you do a sell command and what would happen
2838.08s - 2841.36s |  if you sent that sell command two times in a row
2841.36s - 2842.40s |  in rapid succession?
2843.36s - 2846.88s |  So what would happen is somewhere on the backend,
2846.88s - 2848.88s |  two threads or two different processes
2848.88s - 2850.64s |  would handle each packet separately.
2851.36s - 2853.36s |  And then each one will go through its checks.
2853.36s - 2855.36s |  It'll be like, hey, does this player have this item
2855.36s - 2856.48s |  that they're trying to sell?
2856.48s - 2858.24s |  It'll be like, the first thread is going to be like,
2858.24s - 2858.80s |  yes, they do.
2858.80s - 2860.88s |  The second thread is going to be like, yes, they do.
2860.88s - 2863.28s |  All right, cool, increase their gold balance,
2863.28s - 2865.20s |  increase their gold balance, both of them do this.
2865.92s - 2868.40s |  And then the first one tries to delete the item.
2868.40s - 2869.84s |  It's like, all right, the item's gone.
2869.84s - 2871.76s |  The second thread tries to delete the item.
2872.80s - 2875.76s |  And it'll probably error out, but it'll error out gracefully.
2875.76s - 2877.92s |  And then it'll be like, yeah, cool, the item's gone.
2877.92s - 2879.12s |  I don't know what happened.
2879.12s - 2880.56s |  There was some kind of error.
2880.56s - 2882.48s |  Hopefully somebody will check it out someday.
2882.48s - 2885.84s |  But in the end, as a player, you have 200 gold
2886.56s - 2888.88s |  because you just sold the same item twice
2888.88s - 2891.92s |  and abused a data race condition on the backend.
2892.96s - 2896.72s |  Again, this is very common in Final Fantasy 11, 14,
2896.72s - 2900.32s |  Guild Wars 2, pretty much every game I've ever touched.
2904.83s - 2909.39s |  When I was preparing this talk, a friend of mine was like,
2909.39s - 2910.83s |  are you going to mention Web3 at all?
2911.71s - 2915.31s |  And the short answer is no, because Web3 gaming
2915.31s - 2917.71s |  is a dumpster fire full of poop emojis.
2920.51s - 2922.67s |  The quality of Web3 games isn't great.
2922.67s - 2926.03s |  And they're mostly all made to be pyramid schemes
2926.03s - 2928.75s |  to make money of unsuspecting people.
2928.75s - 2931.95s |  AAA Web3 gaming might be a thing one day.
2931.95s - 2934.43s |  But right now, I'd stay away from it.
2936.85s - 2939.81s |  So if I haven't scared you guys away or bored you to death,
2939.81s - 2942.61s |  then you want to dive into some game hacking stuff.
2943.41s - 2947.89s |  I recommend these communities, Unknown Cheats, Guided Hacking,
2947.89s - 2949.01s |  and Furious Revolution.
2949.01s - 2951.97s |  There's a bunch of people talking about anti-cheat,
2951.97s - 2954.69s |  driver stuff, hardware stuff, anything you name.
2955.25s - 2957.17s |  They go down very deep rabbit holes.
2959.33s - 2961.89s |  Information sharing is challenging now
2961.89s - 2963.97s |  because any information that gets shared publicly,
2963.97s - 2967.33s |  especially on public forums, because people from Riot
2967.33s - 2970.85s |  or Blizzard, Microsoft, they're watching these forums
2970.85s - 2974.13s |  to make sure to be up to date on what's going on
2974.13s - 2975.57s |  in the underground hacking scene.
2977.01s - 2980.05s |  So a lot of the times when somebody finds a novel way
2980.05s - 2984.13s |  to bypass anti-cheat, they either won't post it
2984.13s - 2985.89s |  or they'll post the results of it.
2985.89s - 2988.21s |  They'll be like, hey, I created this really cool thing
2988.21s - 2989.09s |  that's undetectable.
2989.89s - 2991.49s |  If somebody asks them to post the source code,
2991.65s - 2993.25s |  they'll be like, no, because it'll just
2993.25s - 2995.09s |  get fixed by the game company because they're
2995.09s - 2995.97s |  watching these forums.
2997.57s - 2999.73s |  But it's a really good place to start.
2999.73s - 3003.89s |  And there's a lot of overlap between game hacking,
3004.85s - 3006.85s |  tool development, cheating, and all that,
3007.41s - 3010.37s |  and malware development, because malware development
3010.37s - 3013.17s |  is all about staying stealthy and interacting
3013.17s - 3016.77s |  with processes in a way that won't trigger either antivirus
3016.77s - 3020.37s |  or other things from blocking it.
3020.37s - 3022.29s |  Same thing with developing cheat tools.
3022.29s - 3023.65s |  You're interacting with a game client,
3023.65s - 3028.45s |  and then you have very advanced and sophisticated components
3028.45s - 3030.77s |  looking at the interactions of that game client
3030.77s - 3033.41s |  to make sure that nobody's interacting
3033.41s - 3034.69s |  with it in a malicious way.
3035.49s - 3040.85s |  So I recommend looking into Maldive Academy.
3040.85s - 3042.21s |  There's a lot of good information
3042.21s - 3045.65s |  on operating systems, how virtual memory is laid out,
3047.01s - 3048.53s |  threading, pretty much anything you
3048.53s - 3053.81s |  want to know about when you're trying to develop tooling
3053.81s - 3055.17s |  to help exploit video games.
3055.81s - 3058.85s |  And of course, a book I highly recommend
3058.85s - 3059.89s |  is Windows Internals.
3062.05s - 3063.33s |  There's a few editions.
3063.33s - 3068.61s |  I think the last edition covered Windows 10 or 8.
3069.89s - 3071.33s |  It hasn't been updated in a while.
3071.33s - 3073.73s |  I think the last edition was published in 2015,
3073.73s - 3076.53s |  but it's very current on what's going on in Windows
3076.53s - 3077.41s |  Internals right now.
3078.29s - 3080.61s |  And again, I have a Twitter, if anybody
3080.61s - 3082.45s |  wants to hit me up for any questions.
3082.45s - 3084.69s |  And I think that's all I have.
3084.69s - 3085.65s |  So thank you very much.
3088.22s - 3088.54s |  Thank you.
3088.54s - 3089.98s |  That was an excellent presentation.
3090.86s - 3092.78s |  I actually have a question relating
3092.78s - 3095.10s |  to VR that came out of gaming.
3095.82s - 3098.22s |  We've noticed, as we were looking
3098.22s - 3101.74s |  into replacements for Altspace VR,
3101.74s - 3106.38s |  that a number of the VR services out there,
3106.46s - 3110.22s |  VRChat being one of them, essentially
3110.22s - 3113.34s |  are using the same kinds of rootkits
3113.34s - 3117.50s |  that games use in order to find cheaters.
3117.50s - 3120.38s |  And we decided not to use those because we
3120.38s - 3123.10s |  felt that people from Defcon would probably
3123.10s - 3125.26s |  be a little resistant to installing
3125.26s - 3127.90s |  a rootkit on their machine just to watch a VR event.
3129.02s - 3131.18s |  I'm glad you used the word rootkit.
3131.18s - 3132.54s |  I was going to bring that up, but I
3132.54s - 3134.30s |  didn't want to stir a hornet's nest,
3134.30s - 3137.66s |  because it's a topic that's very controversial.
3137.66s - 3141.66s |  Yes, anybody that is playing first-person shooter games
3141.66s - 3144.54s |  that installs Vanguard anti-cheat or easy anti-cheat
3145.10s - 3146.70s |  are essentially installing rootkits.
3147.58s - 3152.86s |  Especially, they are very high-priority loaded drivers
3152.86s - 3155.58s |  that are the first to load when the operating system boots.
3156.70s - 3158.86s |  So they have a lot of power and a lot of access.
3158.86s - 3161.10s |  And you're trusting the game company
3161.10s - 3165.26s |  to either behave in an ethical way
3165.26s - 3166.54s |  and not collect data on you.
3167.98s - 3170.06s |  And you're trusting them not to get owned
3170.06s - 3172.06s |  and then having a malicious driver get pushed out
3172.06s - 3173.58s |  through the distribution channel.
3173.58s - 3174.46s |  That's a lot of trust.
3177.50s - 3181.02s |  I don't think anti-cheats should live on the operating system
3181.02s - 3181.82s |  or on game clients.
3182.38s - 3184.70s |  My solution to this whole problem
3184.70s - 3188.30s |  would be to monitor player behavior on the server side
3189.18s - 3191.58s |  and do things like skill-based matchmaking
3192.30s - 3194.38s |  and other high-level analytics you could do
3194.38s - 3197.66s |  without actually peering into a user's operating system
3197.66s - 3198.94s |  and see what they're doing.
3199.50s - 3204.22s |  Because in my experience, when I was reverse engineering games,
3204.22s - 3207.82s |  especially around 2010 to 2015 period,
3207.82s - 3209.74s |  a lot of them were sending game.
3209.74s - 3213.66s |  A lot of them were phoning home with interesting data.
3213.66s - 3215.98s |  They would send a process list back to the server.
3215.98s - 3218.54s |  And that process list would have command line arguments
3218.54s - 3221.42s |  because they wouldn't strip them down and things like that.
3224.06s - 3225.74s |  Back then, that was pretty dangerous.
3225.74s - 3227.66s |  But that is very dangerous now,
3227.66s - 3229.58s |  especially if you have processes running
3229.58s - 3231.98s |  with command line arguments that are very sensitive.
3234.22s - 3235.98s |  One example would be like some Web3 stuff.
3235.98s - 3237.18s |  If you have a wallet running
3237.18s - 3239.26s |  and if you have some sort of private key
3239.26s - 3241.34s |  or cryptographic secrets on the command line,
3241.34s - 3244.30s |  which you shouldn't, but it happens.
3244.86s - 3246.30s |  Those could be transmitted over the wire
3246.30s - 3247.74s |  back to the game company.
3247.74s - 3251.34s |  And who knows what analytics software that gets propagated to.
3251.34s - 3254.78s |  So yeah, I agree that you guys shouldn't be using VRChat
3254.78s - 3257.90s |  or anything that compromises privacy.
3264.66s - 3266.26s |  Great talk, Manfred.
3266.26s - 3269.78s |  I always enjoyed listening to your presentations.
3269.78s - 3275.14s |  Thank you so much for doing it in the DCG VR.
3275.14s - 3276.02s |  Appreciate it.
3276.02s - 3277.38s |  Cool. Thank you very much.
3277.38s - 3279.06s |  And I will step off now.