**Introduction**
- Welcome to "Popping Shells with $10 and a Bit of Arduino Magic"
- Speaker: Dan Beard, software engineer at MedCrypt
- Background in medical devices, worked on various instruments and devices

**Medical Device Design**
- Focus on **IVD** and **therapeutic devices**
- Devices typically have an embedded board running on **RTOS** or custom **FPGA**
- User interfaces often run on Windows or Linux, connected via CAN bus, CAT 6, RS232

**Bad USB**
- Bad USB is a two-decade-old exploit where USB devices falsely identify as human interface devices
- Lack of signature checks or validation by operating systems
- Examples include Hack5 rubber ducky and OMG elite cable

**Exploiting Bad USB**
- Physical access for an extended period is traditionally needed
- Dan challenges the assumption that exploits require internet connection or logged-in session
- Demonstrates a new approach that needs minimal physical access

**Developing the Exploit**
- Requirements: wireless capability, low cost, USB HIT emulation
- LilyGo T-Dongle S3 used, priced at $10.50-$15, supports Wi-Fi, Bluetooth, and multiple programming languages

**Introducing RadioJack**
- Open-source software on T-Dongle S3
- Emulates keyboard and mouse, hosts Wi-Fi server for payload deployment
- Features include a laughing skull animation

**Programming in Arduino**
- Chosen for ease of use and compatibility with HID and Wi-Fi libraries
- Emphasizes simplicity and accessibility for anyone to use

**Proof of Concept**
- Demonstrated using Windows gaming PC
- Can be used on medical devices, with Windows prevalent in the medical field

**Limitations and Improvements**
- Compared to OMG cable, RadioJack is a hobby project
- LilyGo LoRa S3 introduces long-range communication, theoretically up to three miles

**Using LoRa for Long-Range Attacks**
- LoRa allows for longer distances than Wi-Fi
- Requires line of sight, but effective in urban environments like Chicago

**Security Implications**
- Highlights vulnerabilities in devices running consumer operating systems
- Recommendations include covering USB ports and disabling USB when not needed

**Conclusion**
- Open-source and welcomes community contributions
- Emphasizes the need for security awareness and proactive measures