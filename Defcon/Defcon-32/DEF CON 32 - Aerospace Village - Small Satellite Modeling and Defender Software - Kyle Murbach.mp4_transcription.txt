{
  "webpage_url": "local:1731742972:583f7ae5:DEF CON 32 - Aerospace Village - Small Satellite Modeling and Defender Software - Kyle Murbach.mp4",
  "title": "DEF CON 32 - Aerospace Village - Small Satellite Modeling and Defender Software - Kyle Murbach.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 2.80s | This text was transcribed using whisper model: large-v2

 Very good afternoon, everyone. I'm going to go ahead and get started.
3.76s - 8.96s |  So I'm here today to talk to you about small satellite modeling and defender software.
8.96s - 14.24s |  My name is Dr. Kyle Merbach, and I'm from the University of Alabama in Huntsville,
14.24s - 19.68s |  Center for Cybersecurity Research and Education. And this project has been in partnership with the
19.68s - 23.84s |  U.S. Army Space and Missile Defense Command, and we're excited to share with you what we've been
23.84s - 31.60s |  doing the last few years. So a little bit about myself. I'm a principal research engineer at UAH
31.60s - 38.80s |  CCRE. I've been there since 2020. I've been a PI and SME on various research projects at a variety
38.80s - 44.40s |  of different topics, ranging from malware analysis, tool development, reverse engineering,
44.40s - 50.96s |  and vulnerability analysis. That can be in various topic areas, including satellites.
51.76s - 55.76s |  I have nine years of prior experience as a cybersecurity researcher and software
55.76s - 61.44s |  reverse engineer. I got my Ph.D. in cyber operations at Dakota State University,
61.44s - 67.20s |  and my B.S. and M.S. in computer security at Rochester Institute of Technology. I'm the
67.20s - 73.68s |  technical director of the space testing and resiliency simulation team at CCRE, where
74.40s - 80.64s |  we did a satellite project. So a little bit about the project itself. It's been going on
80.64s - 87.52s |  since fall of 2019. We have had a wide variety of student teams coming in and out throughout the
87.52s - 94.88s |  last five years. So as they come in, they work on various parts of the project, and then they
94.88s - 100.72s |  may either move on to other projects, or they graduate, and then we hire on additional students
100.72s - 107.20s |  and try to continue the work. So as a director, I've been continuing throughout that to make sure
107.20s - 113.92s |  that we continue to make meaningful progress. Here is a brief list of major project milestones
113.92s - 120.48s |  that we've achieved over the last five years, and we'll go over most of these in the slides
120.48s - 128.16s |  coming ahead. We'll talk about how we identified and acquired hardware and software to configure
128.16s - 134.00s |  a small satellite testbed to model a real-world functioning satellite system,
134.96s - 141.84s |  how we try to test for vulnerabilities and create different test scenarios, and come up with ways
141.84s - 148.80s |  to harden satellite systems to protect from cybersecurity threats. We developed Small
148.80s - 154.96s |  Satellite Defender, which is a software. We'll talk more about that later. And we were able to
154.96s - 163.04s |  go to the U.S. Cyber Command Cyber Recon Symposium in Dreamport, Maryland, and we also were able to
163.04s - 169.60s |  experiment this Small Satellite Defender software on an actual satellite orbiting Earth with Lockheed
169.60s - 177.36s |  Martin. And we are currently working on assembling and experimenting with TubeSat kits, and we're
177.36s - 191.73s |  hoping to continue our efforts there with Small Satellite Defender on those TubeSats. So the
191.73s - 201.25s |  purpose of this research project was to come up with a testbed of a small satellite system to be
201.25s - 208.93s |  able to perform different research experiments to inform how to better defend satellites from
208.93s - 215.81s |  potential cybersecurity threats. As you may know, launching satellites into space has become much
215.81s - 222.05s |  more affordable these days with SpaceX launching constantly all these rockets, which is great for
222.05s - 229.25s |  our industry. We're able to affordably launch a satellite, and that leads to the need of being
229.25s - 237.89s |  able to ensure we harden those satellites from potential threats. So in this testbed that we
237.89s - 246.21s |  were developing, we wanted to make it as real-world as possible. So our goal was to be able to operate
246.21s - 253.17s |  a payload of some sort. It could be either imagery, GPS, or communications, and then to have the
253.17s - 259.49s |  underlying critical infrastructure to support ground station communication, orbit movement,
259.49s - 266.77s |  and positioning, as well as data processing and battery charging and pointing towards the solar
266.77s - 272.93s |  panels to get that charge. And by developing that, we would be able to replicate a real-world system.
274.61s - 281.25s |  So in the very beginning of this project, we spent time researching, trying to figure out what the best
282.45s - 288.93s |  avenue was to build this testbed. And we were looking at the Raspberry Pi 4, as well as the
288.93s - 296.61s |  Pi Cubed version 4, as well. We found that the Raspberry Pis were relatively easy to acquire.
296.61s - 304.85s |  Obviously, everyone's badges. It's fairly inexpensive, simple to modify payloads and add payloads.
305.57s - 309.81s |  There's a lot of pre-existing libraries already configured. There's been a lot of research done
309.81s - 317.73s |  out there in the community. Whereas the Pi Cubed boards, they were developed to be nanosatellites
318.69s - 322.29s |  and we found it very difficult to be able to write to the boards.
323.09s - 329.17s |  There was very little documentation available. And unfortunately, when we acquired that hardware,
329.17s - 335.17s |  it was end of support. So we shipped it back to the Raspberry Pi platform moving forward.
337.09s - 342.29s |  So this is an illustration of what we were trying to achieve with these Raspberry Pis.
342.29s - 347.65s |  We would have the satellite and the ground station. With the satellite, we have a payload,
347.65s - 352.93s |  which in this case, we went with a camera where we can take pictures. We have antennas on both
352.93s - 357.33s |  the satellite and ground station. We're able to communicate to each other, send commands.
358.37s - 363.01s |  And as you can see, we had an encasement and some ports to be able to connect with it,
363.01s - 368.69s |  with a laptop to be able to upload code, configure things, and so forth.
368.69s - 376.05s |  And this is the real world image of what we created in the lab. We were able to replicate
376.05s - 382.29s |  that diagram. And essentially, the camera, the radios, and everything, we ordered and put together
382.29s - 390.45s |  preloaded libraries. So for the camera, we went with the Aoken Raspberry Pi cameras capable of
390.45s - 396.77s |  taking very low quality images. But just for the purposes of showing that you can use payloads
396.77s - 402.77s |  with the system we were setting up, that uses pre-existing Raspberry Pi libraries.
404.45s - 414.85s |  We also used the FM69ACW radios that attached directly to the GPIO header on the Raspberry Pis
415.41s - 420.85s |  that function at two different frequencies. It had a decent range. We were able to go as
420.85s - 425.81s |  far as 100 meters without any problems. We never had any need to go any further than that. But
425.81s - 433.39s |  the purposes of this project. And for the communication with these radios that we had
433.39s - 439.95s |  in place, we set up a TCP style communication between the ground station and satellite.
440.51s - 446.51s |  The satellite would interface with Cesium. We'll talk more about that later. And then we would
446.51s - 451.95s |  simulate this orbit window. And then when it would be in the communication window,
452.75s - 459.15s |  the satellite would send data to the ground station based on its previous tasking. And then
459.15s - 464.99s |  they would listen for additional tasking from the ground station. And we would control different
464.99s - 472.03s |  states for the satellite with the first byte of the data transmitted as an identifier.
476.46s - 483.50s |  So in this custom communication setup that we had, we had various bytes. We would let the
483.50s - 488.94s |  satellite know this is the end of the stream, or this is the start of a specific stream for pictures,
488.94s - 499.78s |  or it was a task, or it was for a configuration on the satellite. We also acquired the SenseHat
499.78s - 505.14s |  add-on board. This was originally developed for the International Space Station
505.14s - 512.18s |  by the Raspberry Pi Foundation. This allowed us to have an array of sensors with a variety of
512.18s - 518.50s |  different temperature, humidity. And the big thing for us was the gyroscope being able to
518.50s - 523.70s |  position the satellite to be able to figure out which way it's facing, which is really important for
524.42s - 530.74s |  yaw and axis, making sure the satellite doesn't spin out, and make sure that it's orienting the
530.74s - 538.10s |  solar panels in the right direction to get the energy to charge the batteries. With this add-on
538.10s - 542.10s |  board, there are a wide variety of different functions available with those sensors.
543.62s - 548.58s |  We would want to position the payload in the right direction to be able to take pictures
548.58s - 554.50s |  of Earth, and we would also want to protect the camera from not facing the sun, which can burn
554.50s - 561.86s |  the image sensor. We would orient the solar arrays using those positions, and we were able to measure
561.86s - 567.62s |  the orbit speed and g-force using the accelerometer built on the SenseHat board.
572.26s - 578.18s |  With all of these different components that we put together, we also had to keep track of
579.14s - 584.58s |  the satellite orbiting Earth. Obviously, it's in a lab just sitting on a table, so we had to
584.58s - 591.78s |  simulate the actual orbital movement. So we tried a variety of different open-source software.
591.78s - 598.58s |  The one that worked the best with our setup was Cesium Orbit software.
598.58s - 604.58s |  As you can see in the pictures, we were able to configure two different views. You can see
604.58s - 612.02s |  from the satellite's view to Earth, and you can see as it moves around the world. Whenever it
612.02s - 618.58s |  would come into a range of this ground station, you'll be able to see the pre-configured GPS
618.58s - 623.86s |  location that we would choose to be able to simulate that communication window opening and
623.86s - 630.58s |  closing. And as that orbit would occur, that's when we would transmit messages back up and down
630.58s - 641.76s |  from the ground station to the satellite. Once we had this testbed working well and functioning
641.76s - 648.24s |  the way we wanted it to, we started to move towards coming up with different task scenarios
648.24s - 653.84s |  and trying to come up or find different vulnerabilities that may be of interest
653.84s - 658.64s |  to try and make sure that a satellite that a researcher might send up to space, you want to
658.64s - 664.40s |  make sure that it doesn't happen to you, lose access to the satellite for whatever reason.
664.40s - 669.92s |  So we tried a variety of different attacks, man-in-the-middle attacks, denial of service,
669.92s - 676.16s |  spoofing that would interfere with the payload, as well as instructions that would send
676.16s - 681.68s |  configuration messages to the satellite. We would try to mess with those. We also tried to attack
681.68s - 687.36s |  the hardware itself to see if we could cause it to fail and no longer function in space.
693.42s - 697.18s |  So we looked at this in a variety of different ways. We looked at the communication,
697.18s - 701.02s |  the software that we were using, the hardware in the operating system.
701.58s - 706.22s |  We used a variety of traditional scanners, packet sniffers, and so forth.
707.10s - 711.34s |  I'm going to give you an example of one of the different scenarios that we came up with.
711.90s - 720.30s |  This was a man-in-the-middle attack scenario where the malicious actor with the correct
720.30s - 728.14s |  transmission bytes, we were able to send a configuration message to the satellite orbiting
728.14s - 734.14s |  Earth to make it think that we were the ground station when we were not supposed to be.
735.10s - 741.02s |  And essentially, we were able to change the satellite IDs and take over on that communication.
743.36s - 751.20s |  So this created a lockout scenario where the satellite orbiting Earth would ignore messages
751.20s - 758.32s |  from the legitimate ground station and only listen to the hijacked ground station. And as you can see,
758.32s - 765.60s |  we were able to take pictures in the bottom four images. You can see those were the normal
765.60s - 771.76s |  pictures. And then we were able to essentially take over and change the images being sent back
771.76s - 780.24s |  to the ground station. So we were able to either modify or withhold data or even change the data
780.24s - 789.57s |  being sent to the real ground station. Some other attack scenarios that the students worked on were
789.57s - 796.21s |  coming up with ways to mess with the Raspberry Pi system that ran the ground station as well as
796.21s - 803.89s |  the satellite. They had a lot of fun doing this. Most of this worked pretty well. And we were
803.89s - 808.21s |  creating these different experiments that we might be able to in a more real-world scenario.
811.06s - 816.34s |  And after creating all these different attack scenarios, we spent time looking at ways to
816.34s - 823.14s |  try to prevent different things that we created. And we wanted to make sure that those things can
823.14s - 829.06s |  happen or it would be harder to do. One of the obvious things to us was to come up with
829.06s - 835.38s |  a way to do command validation. There were some commands that we were sending, maybe with a typo
835.38s - 842.58s |  or in a wrong order that would cause a satellite to get confused and actually crash.
843.54s - 850.90s |  We also created timeouts to prevent the satellite from indefinitely waiting for the ground station
850.90s - 856.98s |  to acknowledge messages because this is a TCP communication model that we created. We also
856.98s - 864.74s |  implemented a health check where it would monitor the system and report any unusual warnings
866.18s - 867.86s |  and then send that back to the ground station.
868.26s - 875.94s |  So by building this model, we were hoping to avoid the need for other researchers to launch
875.94s - 883.94s |  satellites up to space and realize that something's vulnerable or broken and not be able to fix it
883.94s - 889.46s |  without having to launch another one. We really want to reduce the chances of compromise or
889.46s - 895.70s |  functionality of those satellites. And with this research, we're hoping to reduce the likelihood
896.10s - 901.14s |  of having to replace what you already launched. And we created this baseline testing system with
901.14s - 908.74s |  this model to be able to improve the overall resource posture. We published all of our efforts
908.74s - 916.74s |  with this paper, the IEEE International Conference on Cybersecurity and Resilience last year.
917.62s - 922.50s |  And you can find the paper on there and talks about the model in more detail.
923.06s - 931.86s |  I'm going to pivot over. After we did all of this stuff, creating the model, we kind of shifted our
931.86s - 936.42s |  efforts after we lost some students from graduating. We got some additional students on the
936.42s - 944.26s |  project. We started to focus on creating a lightweight program that can monitor and protect
944.98s - 952.50s |  on the project. We started to focus on creating a lightweight program that can monitor and protect
952.50s - 959.06s |  satellites that are orbiting Earth. We found that commercial off-the-shelf products that provide
959.06s - 964.82s |  that level of security were too resource intensive. So we wanted to create this lightweight
964.82s - 972.82s |  program that can run and essentially protect the satellite for potential threats. A variety of
972.82s - 978.82s |  different things we incorporated, including a scanner for malware, monitoring different metrics
978.82s - 990.18s |  of the file system, network checks, secure configuration, and so forth. So these different
990.18s - 995.70s |  test scenarios that we came up with, we found some mitigation strategies and we wanted to implement
995.70s - 1001.46s |  those on that small satellite defender to be able to protect the satellite from threats.
1004.75s - 1010.83s |  I'll go in more detail about what we monitored. So we monitored all of these different metrics,
1010.83s - 1017.39s |  essentially creating a baseline of known good of what is normal for a satellite. And once you have
1017.39s - 1021.79s |  that baseline, we would collect all this information and send it back to the ground
1021.79s - 1028.51s |  station for anything that may be unusual and have the ground station operator to further investigate
1028.51s - 1037.17s |  and figure out what may be going on. With that small satellite defender work, we submitted a
1037.17s - 1045.41s |  app stat to the CyberVCon symposium, which was run by the U.S. Cyber Command. And essentially
1045.41s - 1051.65s |  they assigned us a mentor, which was an Air Force colonel, and he worked with us to
1052.53s - 1056.77s |  help develop small satellite defender and focus on creating different experiments.
1057.65s - 1064.05s |  And after that, we, the team traveled to the symposium and presented the work to the
1064.77s - 1072.61s |  director of the National Security Agency, Elizabeth Leacole. With all of those efforts
1072.61s - 1079.81s |  with a small satellite defender, we were approached by Lockheed Martin to run this software
1079.81s - 1087.57s |  that we created on a actual orbiting satellite. So Lockheed Martin has this big night team
1087.81s - 1095.17s |  where they essentially create opportunities for academia and other companies
1095.17s - 1100.37s |  or researchers to be able to perform experiments on a decommissioned satellite.
1101.41s - 1106.29s |  And we were fortunate enough to have this opportunity with Lockheed Martin where
1106.29s - 1111.73s |  we were able to run the small satellite defender on an actual orbiting satellite.
1112.45s - 1120.85s |  So we worked with Lockheed Martin. They had their own identical twin of the satellite orbiting
1120.85s - 1126.53s |  Earth on a test bed. And we worked with their engineers to run small satellite defender.
1126.53s - 1133.17s |  And we found that the satellite did not work on the architecture that we developed, which was
1133.17s - 1139.49s |  Python, and they needed us to convert everything to Bash. So it was a challenge for the team to
1139.49s - 1146.77s |  be able to quickly convert everything we created from Python to Bash, refactored all the code,
1146.77s - 1152.85s |  and worked with the test bed and Lockheed Martin to be able to get the code to work and quickly
1152.85s - 1158.53s |  deploy that. I believe in a couple of weeks that's how quick we were working because we didn't know
1158.53s - 1163.33s |  how long it would be until that decommissioned satellite would no longer be available to
1163.33s - 1170.37s |  perform experiments with. And once we have a small satellite defender working with that test bed,
1170.93s - 1180.77s |  we had a session with their ground control team and we deployed small satellite defender on Linus
1180.77s - 1186.93s |  space vehicle orbiting Earth. We collected a system baseline and then we ran this
1187.81s - 1194.21s |  experiment where we would introduce some malicious activity where we would write a bunch of random
1194.21s - 1201.25s |  garbage to different files, basically clogging up the system resources in that small satellite
1201.25s - 1206.85s |  defender would collect metrics of the satellite and send them back to the ground station,
1206.85s - 1214.61s |  showing that unusual activity for the operator to identify that something's going on.
1216.93s - 1223.33s |  So that experiment was successful and we were able to showcase the success and viability of
1223.33s - 1233.01s |  monitoring a real world satellite using small satellite defender within the console available.
1235.01s - 1240.53s |  We had an article published and we also had an additional paper published with Lockheed Martin
1240.53s - 1247.25s |  where they wrote this paper talking about the process of working rapidly with different
1247.25s - 1253.81s |  universities to run different experiments on actual space vehicles that are decommissioning.
1255.73s - 1261.49s |  And in the University of Alabama we put together this list of experiments and are working on
1261.49s - 1267.17s |  developing additional experiments to be able to perform more of them if we have additional
1267.25s - 1273.49s |  upcoming opportunities potentially with the SMDC as well as Lockheed Martin moving forward.
1282.54s - 1290.70s |  So where are we today? Right now we are working on interorbital system tube sats. We ordered these
1291.82s - 1298.30s |  six to nine months ago. It's been a while. They've been building them and they finally
1298.30s - 1304.22s |  sent us the kits. The reason why we're now doing this is because we feel like this is the next step
1304.22s - 1312.78s |  in our research and we're hoping to finish putting together these satellites and just continue
1312.78s - 1317.66s |  these different ATT&CK scenarios that we've developed and to do additional vulnerability
1317.66s - 1325.02s |  research with actual real world satellites instead of our testbed. And these satellites
1325.02s - 1331.18s |  were about $8,000 each. We have two of them and they're the small size. They're probably like a
1331.18s - 1339.42s |  a big can basically and it has space in there for a payload of whatever you like to add in there
1339.42s - 1345.58s |  which is really cool. We haven't figured out what we're going to do yet with that but we are hoping
1345.58s - 1352.46s |  to integrate small satellite defender in those tube sats and to further iterate improvements
1352.46s - 1360.86s |  with small satellite defender. So this one this image is actually the one we put together and
1360.86s - 1365.74s |  one of our labs and as you can see it's pretty small. You can see the solar panels on that
1366.78s - 1373.50s |  and the tube sats use a different architecture than the raspberry pi's or linus so we're going
1373.50s - 1382.58s |  to have to further modify the small satellite defender to work with that. So with small
1382.58s - 1387.38s |  satellite defender moving forward we're hoping to come up with two different iterations. One
1387.38s - 1395.70s |  focusing on the ground station and one that focuses on the actual satellite and we're hoping
1395.70s - 1400.58s |  to collect all these different metrics to be able to provide a level of security and to have that
1400.58s - 1408.59s |  available for researchers to be able to secure their satellites when they launch into space.
1411.76s - 1415.76s |  These are the different metrics that we're hoping to collect. We're going to pay attention to
1416.96s - 1422.08s |  battery health system information and do health checks. We're going to be focusing on satellite
1422.08s - 1428.16s |  specific information. We're going to try to map those out on visualizations for the ground station
1428.16s - 1434.08s |  operator to be able to quickly see and identify some things that may be going on and we're also
1434.08s - 1441.76s |  going to obviously introduce security to this as well. Program error, chat sums, and so forth.
1443.52s - 1449.52s |  Here are some sample graphs that we're going to do with Optave to be able to plot and visualize
1449.52s - 1454.40s |  the two metrics that we're going to collect. We're going to show the solar panel charge,
1454.40s - 1463.89s |  bus current, and temperature. We're also going to be collecting information on the positioning
1463.89s - 1469.49s |  of the satellite. If it starts to spin you'll be able to quickly find that on those graphs as well.
1474.35s - 1478.35s |  That's all I have for you today.