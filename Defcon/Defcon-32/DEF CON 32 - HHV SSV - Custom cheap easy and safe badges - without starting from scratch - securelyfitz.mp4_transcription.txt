{
  "webpage_url": "local:1732042081:0e41b313:DEF CON 32 - HHV  SSV - Custom cheap easy and safe badges - without starting from scratch - securelyfitz.mp4",
  "title": "DEF CON 32 - HHV  SSV - Custom cheap easy and safe badges - without starting from scratch - securelyfitz.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 3.72s | This text was transcribed using whisper model: large-v2

 I haven't spoken at DEF CON in quite a while, so I'm kind of excited to be here.
3.72s - 8.48s |  I'm glad that we're in this room and not one of those other big ones.
8.48s - 11.20s |  How many of you have made badges before?
11.20s - 13.92s |  How many of you have used badges before?
13.92s - 15.64s |  How many of you like badges?
15.64s - 17.68s |  How many of you like badges that work?
17.68s - 19.68s |  How many of you have badges that work?
19.68s - 22.96s |  How many of you have badges that don't work, like not necessarily this conference, but
22.96s - 25.60s |  have ever been at a conference, you get a badge and it doesn't work?
25.60s - 27.66s |  Yeah, me too.
27.66s - 29.60s |  How many of you didn't even bother turning it on because you weren't sure it was going
29.60s - 31.16s |  to work anyway?
31.16s - 38.18s |  So the point of this talk is because I have made a few badges and I have a habit of reusing
38.18s - 43.36s |  as much as absolutely possible because the chief virtue of an engineer is laziness, right?
43.36s - 47.14s |  So if I'm going to put the effort into making a badge that I can reuse, I want to make sure
47.14s - 49.66s |  other people know that it's available and they can do that too.
49.66s - 54.62s |  I know there's tons of badges, but like, and many of them are open hardware, open source.
54.62s - 57.82s |  And rather than, of course, you know, just taking an existing open source one, I figured
58.00s - 60.00s |  why not do another open source one?
60.00s - 62.48s |  Because you know, so that's how it goes.
62.48s - 66.88s |  So I'm going to tell you about an open hardware badge design that I've worked on and that
66.88s - 71.36s |  I think will be useful because it's been tested, been through two conferences already.
71.36s - 73.88s |  It's going to be on track for a third one.
73.88s - 77.28s |  And I want it to be open hardware so that anybody who wants to make a badge doesn't
77.28s - 78.28s |  have to start from scratch.
78.28s - 82.68s |  You can just take this open hardware, change it how you want, however you want to do.
82.68s - 83.68s |  Just change the artwork.
83.68s - 84.68s |  You can change software.
84.68s - 86.22s |  You could keep it exactly the same.
86.48s - 87.48s |  Change the conference name.
87.48s - 90.08s |  And you've got a badge.
90.08s - 92.08s |  So a little bit about badges.
92.08s - 93.08s |  Me, I'm Joe.
93.08s - 94.08s |  Hi.
94.08s - 96.68s |  I teach classes on hardware hacking and reverse engineering.
96.68s - 100.40s |  I've been in Las Vegas for a week already because I was doing training at Black Hat.
100.40s - 101.72s |  So I'm a little bit exhausted.
101.72s - 104.80s |  But after this, I'm going to go hang around the pool, which is what I've been looking
104.80s - 107.80s |  forward to for the past week.
107.80s - 108.80s |  Yeah.
108.80s - 111.68s |  I do hardware stuff.
111.68s - 115.68s |  So let's talk about, this is what I'm going to talk about today, why we have badges, what
115.70s - 120.30s |  this thing is that I'm talking about, what my vision for it is, what we can do today,
120.30s - 123.46s |  and some logistics and pitfalls.
123.46s - 127.74s |  And it started out as kind of like a workshop-y thing, but the space and the venue worked
127.74s - 131.46s |  better for us to do kind of more of a talk slash demo.
131.46s - 135.18s |  So I'm going to talk a bit, and then I'm going to show you some software and hardware.
135.18s - 137.10s |  And then we'll have some time for questions.
137.10s - 138.10s |  Sound good?
138.10s - 139.10s |  Any questions?
139.10s - 140.10s |  Everybody ready?
140.10s - 141.10s |  Okay.
141.10s - 143.02s |  Listen carefully.
143.02s - 144.58s |  What are badges?
144.58s - 145.58s |  Why do we have badges?
145.58s - 146.84s |  Because we need access.
146.84s - 150.00s |  Whether it's a wristband or a badge or something that hangs around your neck or something you
150.00s - 153.16s |  tattoo on your forehead, we need a way to know who's supposed to be here, who's not,
153.16s - 156.36s |  who paid, who didn't, who gets free drinks, and who doesn't.
156.36s - 157.92s |  So we're going to have them anyway.
157.92s - 159.78s |  We might as well make use of them.
159.78s - 161.44s |  So we want the cool factor.
161.44s - 163.80s |  This is a handful of badges that I designed.
163.80s - 167.30s |  My first one over here was for B-Sides Portland 10 years ago.
167.30s - 172.78s |  It was a bus pirate, but the PCB shape was changed, so it was the shape of an IN cat.
172.78s - 177.72s |  So the rainbow ribbon cables that come out of the bus pirate were like the trail of rainbow
177.72s - 178.72s |  behind it.
178.72s - 186.36s |  And a couple of these were B-Sides Portland, some 503 Party badges, 44Con in London, TRCon,
186.36s - 191.64s |  which has kind of evolved into the Dan Initiative now.
191.64s - 193.28s |  So yeah, they look cool.
193.28s - 194.62s |  And you want them to look cool.
194.62s - 198.02s |  And as a conference organizer, you want people to say, oh, this is a cool badge.
198.02s - 199.02s |  Take pictures of it.
199.02s - 200.02s |  Post it on social media.
200.02s - 203.16s |  Say, I can't wait until I come back next year, and then conference organizers get more people
203.16s - 207.06s |  coming and yada, yada, yada.
207.06s - 208.66s |  Why else do we want badges?
208.66s - 211.86s |  Electronic badges hopefully have some sort of interaction.
211.86s - 220.15s |  And you can do interaction with a paper badge, but electronic badges are a little bit cooler.
220.15s - 224.07s |  So this is a few years ago, Joe Grand's previous DEF CON badge.
224.07s - 226.19s |  It was a little like magic tokens.
226.19s - 228.91s |  They had a piece of stone on the front.
228.91s - 234.27s |  And he used a type of NFC, not like standard NFC, but like a near field communication,
234.27s - 237.11s |  inductive communication method, which is pretty cool.
237.11s - 240.77s |  But what happens, people go around, they go up to people they don't know, they interact
240.77s - 243.07s |  with the badge, they meet people.
243.07s - 247.67s |  That's kind of like the best part about an electronic badge.
247.67s - 252.39s |  And also, like hopefully there's a lot ‑‑ how many of you have ever designed a PCB before?
252.39s - 257.19s |  How many of you have ever written embedded microcontroller code before, right?
257.19s - 260.17s |  How many of you have hacked on a badge, an electronic badge?
260.17s - 263.55s |  So hopefully the badge is an opportunity for you to get your hands on some hardware that
263.55s - 265.11s |  you might not have otherwise done.
265.11s - 271.07s |  So this one required a somewhat pricey programmer, but like once you had that, you could do whatever
271.07s - 272.07s |  you want.
272.07s - 273.71s |  There was also a serial port that you could interact with it.
273.71s - 279.95s |  But like getting people to interact with tools and learn something is kind of a great goal.
279.95s - 281.83s |  So why open taxes?
281.83s - 284.83s |  So I ‑‑ anybody know what a badger is?
284.83s - 291.91s |  The American badger, so this is the open badger, open taxes.
291.91s - 298.63s |  Not tax is, like things you pay, not Texas, the big state, but like taxes.
298.63s - 302.07s |  And at some point I'm going to have a cool logo and it's going to be like a badger with
302.07s - 305.15s |  a badge on that says open taxes.
305.15s - 307.91s |  But you can just visualize that right now.
307.91s - 311.63s |  Or go ask Dolly to make that during the talk and we can post it up there.
311.63s - 313.63s |  You can do a pull request.
313.63s - 314.63s |  So it's open.
314.63s - 315.63s |  Right?
315.63s - 316.99s |  This is the URL right now.
316.99s - 318.27s |  Open taxes.
318.27s - 323.19s |  And that is kind of like the sanitized cleaned up version that has all the strings for specific
323.19s - 325.99s |  events and all the logos and stuff removed.
325.99s - 330.63s |  So you can go and copy this and make it and not have to worry about infringing on anyone's
330.63s - 335.19s |  artwork copyright or all these detailed crappy things.
335.19s - 336.19s |  So yeah.
336.19s - 338.27s |  I'll put this URL up later.
338.27s - 342.91s |  But I think it's the only thing on GitHub called open taxes right now.
342.91s - 343.91s |  So it's custom.
343.91s - 344.91s |  Right?
344.91s - 347.23s |  Off the shelf is kind of cool.
347.23s - 348.83s |  Like if you have something interesting.
348.83s - 351.55s |  But there's really not a lot of off the shelf options.
351.55s - 358.31s |  One cool one we did a few years ago for DC503's badge was we had these little devices.
358.31s - 360.71s |  They were like this big.
360.71s - 362.75s |  They were smart response things.
362.75s - 365.65s |  So they're made for classrooms where you answer questions.
365.65s - 367.35s |  The teacher pops up on the screen.
367.35s - 368.35s |  But we took them.
368.35s - 371.19s |  We reflashed the firmware with a couple games and used that as our badge.
371.19s - 372.59s |  So we didn't design hardware.
373.27s - 376.83s |  We just took premade hardware and programmed it, which is kind of cool.
376.83s - 377.83s |  But this is the process.
377.83s - 380.03s |  I mean, we go through prototyping phases.
380.03s - 383.47s |  We have an actual badge and then we have a second iteration.
383.47s - 387.67s |  This is B-side San Francisco's badge, which is essentially the same hardware.
387.67s - 391.73s |  But two conferences, two badges, somewhat similar.
391.73s - 392.73s |  But it's okay.
392.73s - 396.51s |  Because there's a lot of conferences and there's a lot of badges.
396.51s - 400.11s |  So open, custom, and we also want it to be cheap.
400.11s - 404.79s |  My objective is that there's a lot of change in the microcontroller world lately.
404.79s - 410.59s |  This uses the RP2040, which is the predecessor to the fancy chip that's on a DEF CON badge.
410.59s - 412.11s |  It's amazing because it's dirt cheap.
412.11s - 414.47s |  In quantity, it's like 60 cents.
414.47s - 417.39s |  And that includes USB interface.
417.39s - 422.43s |  So there's a lot of extra chips you need sometimes to interface with a badge easily.
422.43s - 423.47s |  And this doesn't need them.
423.47s - 426.27s |  So it is extra cheap.
426.27s - 430.07s |  Something else I've learned is when you get stuff assembled overseas, if you go to a manufacturer
430.07s - 435.27s |  that does a lot of it, if you wanted to assemble a hundred badges, you need a hundred chips.
435.27s - 438.09s |  You buy those chips, you get the hundred chip price.
438.09s - 441.99s |  If you go and get them assembled and you get a hundred badges assembled, they get the chips
441.99s - 449.67s |  at the 1,000 or 10,000 or real price, real R-E-E-L, which is also the R-E-A-L price that
449.67s - 450.95s |  manufacturers get to pay.
450.95s - 456.27s |  And so I've actually found that for prototyping, it's cheaper for me to get a prototype assembled
456.27s - 461.59s |  than it is for me to get the PCBs and buy the parts and assemble it myself, which is
461.59s - 464.83s |  kind of a weird world we're in.
464.83s - 467.07s |  So yeah, right now, this is the last iteration.
467.07s - 475.67s |  These were $5.70 each plus some engineering costs, which I think is pretty cool.
475.67s - 479.27s |  $6 for a hardware badge that interacts is kind of a nice target.
479.27s - 480.27s |  I was aiming for five.
480.27s - 482.21s |  Actually, I started aiming for 10.
482.21s - 485.63s |  And then I went and did some cost reduction and managed to swap out some cheaper components
485.63s - 487.43s |  and got it down to almost five.
487.43s - 489.83s |  So long run, five is the goal.
489.83s - 490.83s |  Oops.
490.83s - 491.83s |  Cancel.
491.83s - 492.83s |  Cancel.
492.83s - 496.63s |  Apologies for the AV situation.
496.63s - 498.71s |  It's a little bit interesting.
498.71s - 500.95s |  So I want to encourage interaction.
500.95s - 503.55s |  So a badge has to have a way to communicate.
503.55s - 506.63s |  However, we're hackers, we're privacy-minded people.
506.63s - 509.13s |  We don't want these things broadcasting all the time, right?
509.13s - 511.95s |  So what I opted for was infrared communication.
511.95s - 516.67s |  What I like about infrared is that you can make it pretty short range.
516.67s - 519.07s |  You can have it only work when you need it to work.
519.07s - 522.51s |  And you can not use it if you don't want to.
522.51s - 529.81s |  So this device has a little IR LED right here and an IR receiver right here.
529.81s - 535.43s |  So when you line badges up, they kind of flash lights at each other.
535.43s - 541.21s |  And yeah, bill of material costs for the communication on this badge, $0.08.
541.21s - 545.41s |  So compare that to like an antenna, which is going to be more than $0.08.
545.41s - 547.13s |  Or yeah, anything else.
547.13s - 552.05s |  So I thought that was kind of awesome that I was able to get it that cheap.
552.05s - 554.19s |  Braden Lane, he's done like e-challenge coins.
554.19s - 559.61s |  He actually designed this IR circuit and I asked him for a schematic and parts and he
559.61s - 560.61s |  shared it with me.
560.61s - 564.41s |  So, you know, I appreciate his contribution to this because like, yeah, he was in the
564.41s - 565.41s |  same boat.
565.41s - 567.85s |  He wanted IR communications, but he wanted it to be cheap.
567.85s - 571.49s |  I literally just got my DEF CON badge like an hour ago.
571.49s - 576.17s |  So I haven't poked at this IR communication, so I don't know what it is, whether it's modulated.
576.17s - 579.47s |  But what this does, it's a UART connection, you know what UART is?
579.47s - 580.69s |  Serial connection.
580.69s - 584.01s |  And like nothing fancy, just spit that UART over an LED and it goes up and down, none
584.01s - 586.45s |  of the modulation, no extra transceivers.
586.45s - 588.93s |  And in the other end, you just have to do a little bit of clean up.
588.93s - 590.61s |  Downside, it's wicked slow.
590.61s - 592.61s |  Upside, it's dirt cheap.
592.61s - 595.41s |  Tradeoffs.
595.41s - 598.05s |  So I want to encourage learning.
598.05s - 606.41s |  And the original idea for this badge came from Brandon Levine and he wanted to do something
606.41s - 609.65s |  in circuit Python because he was not an embedded programmer, but he knew Python.
609.65s - 615.09s |  I had never used circuit Python before, so at first I was like, yeah, a little high overhead
615.09s - 616.09s |  for an embedded system.
616.09s - 619.65s |  We're going to do like C and maybe do some hand coded assembly.
619.65s - 623.41s |  But that's because I started doing microcontrollers 20 years ago when that's the way to do it.
624.41s - 628.49s |  20, 30 years ago when, you know, you had to pay for a compiler.
628.49s - 633.17s |  And then, you know, I kind of did work for a while and then when I left work, it's like,
633.17s - 636.05s |  oh, I can play electronics for fun and Arduino happens, right?
636.05s - 639.37s |  So now we could plug things in with a USB cable, download one thing, get our compiler
639.37s - 640.37s |  and all our tools.
640.37s - 641.37s |  And that was great.
641.37s - 644.05s |  But now circuit Python, you don't need a compiler.
644.05s - 645.05s |  You don't need anything.
645.05s - 646.49s |  You just plug in a USB cable.
646.49s - 652.53s |  You have a USB flash drive that shows up and there's a code.py file and you edit it and
652.65s - 653.65s |  it runs.
653.65s - 654.65s |  Right?
654.65s - 659.77s |  So your IDE is whatever text editor you want and, yeah, you don't have to download or install
659.77s - 660.77s |  anything.
660.77s - 661.77s |  I think it's amazing and wonderful.
661.77s - 665.85s |  It does have tradeoffs, but like objective here is something accessible, something that
665.85s - 667.21s |  gets people playing with stuff.
667.21s - 669.25s |  How many of you know Python?
669.25s - 672.65s |  How many of you can hack your way through and edit something in Python, even if you
672.65s - 674.61s |  don't call yourself someone who knows Python?
674.61s - 678.53s |  Well, how many of you have used circuit Python or micro Python on an embedded device?
678.53s - 679.53s |  Okay.
679.53s - 680.53s |  Give it a try.
681.25s - 684.81s |  I've only got like 80 of these with me, but I'll give them out afterwards.
684.81s - 688.65s |  And so if you feel like you want to either tinker with this or think you might have interest
688.65s - 691.65s |  in contributing anything to this project, I've got them for you.
691.65s - 695.45s |  If you just want something to like hang on your neck, then like let people who want to
695.45s - 698.45s |  work on them first, get them first, and then we'll have the rest available.
698.45s - 701.45s |  Sound good?
701.45s - 702.45s |  So easy.
702.45s - 705.17s |  Badges are not easy.
705.17s - 706.21s |  Hardware is not easy.
706.21s - 708.49s |  It's not called easy wear.
708.49s - 709.49s |  Okay?
709.49s - 711.13s |  So it's hard.
711.13s - 712.29s |  It's going to be difficult.
712.29s - 714.65s |  You need to go through multiple revisions.
714.65s - 715.65s |  And yeah.
715.65s - 716.89s |  So you should do that.
716.89s - 720.33s |  So here is so actually the background story for this one.
720.33s - 722.33s |  This is the LabsCon 2023.
722.33s - 725.37s |  LabsCon is a threat intelligence conference down in Phoenix.
725.37s - 727.13s |  It's pretty cool.
727.13s - 730.49s |  It's very unique and niche.
730.49s - 737.37s |  But I got home from DefCon at like August 16th or 15th or something.
737.37s - 738.37s |  I don't know when it was.
738.45s - 741.21s |  And it's like, okay, we've got five weeks.
741.21s - 743.21s |  We can do this.
743.21s - 744.21s |  And we did.
744.21s - 745.21s |  Right?
745.21s - 748.41s |  So we've got the cardboard mockup to kind of like figure out what we're going to do.
748.41s - 750.53s |  We've got the little PCB mockup.
750.53s - 752.81s |  This is the IR communication circuit that I prototyped.
752.81s - 753.97s |  I'm like, okay.
753.97s - 758.37s |  I know I can get a RB2040 working, I can get an IR communication working.
758.37s - 761.29s |  I did a PCB layout and I milled a sample one.
761.29s - 763.69s |  I didn't actually mill a functional prototype.
763.69s - 767.57s |  I just kind of used it to make sure I got the sizes and placement right.
767.77s - 773.21s |  And then a quick turn prototyping from I believe this one was JLCPCB.
773.21s - 776.57s |  So I think these were like under $10 each.
776.57s - 778.29s |  I ordered them on Monday.
778.29s - 779.45s |  No, Sunday night.
779.45s - 780.45s |  So Monday in China.
780.45s - 782.05s |  I received them Friday.
782.05s - 783.05s |  I was kind of like amazed.
783.05s - 786.93s |  Of course, during that time, I did like, you know, like little updating tweaks here and
786.93s - 789.13s |  there, added some artwork.
789.13s - 790.13s |  But yeah.
790.13s - 792.77s |  And of course, you see, you will make mistakes.
792.77s - 797.05s |  So like you see here, I've got that little blue wire that happens to be black.
797.85s - 803.81s |  And DRC is your friend, unless you're lazy, then you skip it, but whatever.
803.81s - 807.33s |  And actually, you can see up here, I had a pinout wrong for what I was using at the time,
807.33s - 810.05s |  which was an IR transceiver.
810.05s - 812.17s |  And yeah.
812.17s - 815.09s |  So I had to add that, change it a little bit.
815.09s - 816.09s |  Screen goes on top.
816.09s - 819.25s |  I like it because it hides all the components.
819.25s - 822.01s |  And that was the prototype and it worked, which was kind of amazing.
822.01s - 823.61s |  Just one blue wire and one component.
823.61s - 826.89s |  So we cleaned up that component, got the PCBs made.
827.73s - 832.53s |  So what I did at the same time is I did the bulk order from JLCPCB, as well as like a
832.53s - 834.69s |  small batch order.
834.69s - 838.45s |  So what happened is I got the small batch prototypes a week later.
838.45s - 839.45s |  You know, I ordered.
839.45s - 841.89s |  So I received Friday, spent all weekend working on it.
841.89s - 847.73s |  Monday ordered the second batch of prototypes, I guess, thinking they're going to be perfect
847.73s - 849.49s |  and just work.
849.49s - 853.45s |  And those came the following Friday, which again is amazing.
853.45s - 857.77s |  And in the meantime, finalized all the artwork and everything for the actual like production
857.77s - 858.77s |  run.
858.77s - 861.13s |  I did make a couple other tiny tweaks.
861.13s - 866.09s |  Turned out we got the production run in, took them two weeks, was kind of incredible for
866.09s - 868.97s |  a few hundred badges and they shipped.
868.97s - 875.33s |  And actually we had room for a week of customs hold up on these badges because I was renovating
875.33s - 876.33s |  my house.
876.33s - 877.33s |  So we were living somewhere else.
877.33s - 882.29s |  So apparently it was a unique address that I may, I don't know, maybe customs just let
882.29s - 885.49s |  stuff go to my home address and thought that this was a different address.
885.49s - 886.49s |  So it's not Joe.
886.49s - 887.49s |  I don't know.
887.49s - 891.09s |  That or they put too high a price on the invoice.
891.09s - 892.81s |  So but that's the badge we got.
892.81s - 896.09s |  I did have to manually solder on the battery holders and the screens.
896.09s - 897.85s |  That was a time constraint issue.
897.85s - 900.29s |  I really am frustrated by screens.
900.29s - 905.07s |  It's very difficult to get screens that are quality and reliable and consistent.
905.07s - 906.69s |  So I use modules, right?
906.69s - 910.71s |  You can get the modules cheaper than you can get the bare LCD OLED displays.
910.71s - 913.35s |  So I might as well just use those, right?
913.35s - 920.35s |  And the second iteration, so we went from this prototype for what was LabsCon and then
920.35s - 925.03s |  B-Side San Francisco was looking for a badge and I had a conversation which roped me into
925.03s - 926.51s |  another project.
926.51s - 931.31s |  And so basically the only change in the circuit had to do with the IR circuit.
931.31s - 934.03s |  I took off that transceiver that was up here.
934.03s - 935.99s |  That was a IRDA transceiver.
935.99s - 938.83s |  It was a $3 part.
938.83s - 941.99s |  It was there because I had it and tested it and it worked.
941.99s - 946.87s |  And that's when I changed it to these $0.08 of components which were great.
946.87s - 947.87s |  So yeah.
947.87s - 948.87s |  The prototype was pretty quick.
948.87s - 952.55s |  The production badges took a little longer than expected.
952.55s - 956.19s |  I used a contract manufacturer that I use regularly for Tigard.
956.19s - 957.19s |  Shameless plug.
957.19s - 960.99s |  Tigard is a little orange PCB that does JTAG, UART, and SPI and I make it and use it for
960.99s - 961.99s |  my classes.
961.99s - 963.91s |  But apparently other people like it too.
963.91s - 967.71s |  So you can get it on CrowdSupply.
967.71s - 970.55s |  So I had that manufacturer do it because I've worked with them in the past and they
970.55s - 974.55s |  will do stuff like custom solder mask color.
974.55s - 978.27s |  And what they did for this badge, oops, do I not have a picture of it?
978.27s - 979.27s |  Oh no.
979.27s - 986.19s |  So what they did for us for the B-Side San Francisco badge is we had two different colors
986.19s - 987.83s |  of silkscreen.
987.83s - 989.75s |  So they lined up perfectly.
989.75s - 991.95s |  Actually I want to do something silly.
991.95s - 995.83s |  I'm going to modify my presentation on the fly.
995.95s - 997.95s |  I'm going to take a picture.
997.95s - 1011.43s |  You don't see it on the screen yet, but there we go.
1011.43s - 1012.43s |  Can you see it?
1012.43s - 1014.39s |  How come you can't see it?
1014.39s - 1015.39s |  It's right there on the screen.
1015.39s - 1017.79s |  Maybe I have to go back and forth.
1017.79s - 1019.35s |  No?
1019.35s - 1022.11s |  I see it right here on my slides.
1022.11s - 1023.55s |  Oh.
1023.55s - 1032.40s |  I'm very confused right now.
1032.44s - 1036.28s |  I hope that you've been seeing the same thing as me all along because I'm literally looking
1036.28s - 1048.39s |  at my slides right now and it's different from, sorry, oh well.
1048.39s - 1052.63s |  This badge is cool because it's got two different colors of silkscreen so it's like a cream
1052.63s - 1058.11s |  kind of off-white grayish solder mask and then a red and a black silkscreen.
1058.11s - 1061.59s |  And we'll talk about it in a second, the reason you pay for a contract manufacturer instead
1061.59s - 1065.87s |  of a quick turn place is they'll do things like make sure those colors line up perfectly
1066.27s - 1067.55s |  and they did an amazing job.
1067.55s - 1068.55s |  I was better than I expected.
1068.55s - 1072.95s |  What you have to realize is PCBs are like precision things so like there is some effort
1072.95s - 1075.71s |  to make things precise.
1075.71s - 1078.27s |  Silkscreen is kind of like the last thing and it's usually only documentation.
1078.27s - 1079.75s |  It's not like functional.
1079.75s - 1084.47s |  So there's some more slop in the silkscreen than there is in the solder mask and metal
1084.47s - 1085.47s |  layers.
1085.47s - 1089.91s |  Anyway, afterwards you can come up and see some of these badges because, yeah, there's
1089.91s - 1090.91s |  a bunch here.
1090.91s - 1093.99s |  You can ogle the artwork.
1093.99s - 1094.99s |  So what's my vision?
1095.11s - 1099.87s |  I mentioned before I don't like doing this over again and people are frequently asking
1099.87s - 1105.63s |  me for badges and others and rather than have to be involved in the loop, it would be really
1105.63s - 1106.91s |  cool if I had a website.
1106.91s - 1110.15s |  You go to the website and you type in your conference name.
1110.15s - 1116.07s |  You upload the logo for the conference and you click go.
1116.07s - 1119.55s |  You get your board files, you get your bill of materials, get your code, everything ready
1119.55s - 1120.55s |  to go.
1120.55s - 1122.43s |  Does that sound cool?
1122.43s - 1126.25s |  So what you can do then is instead of having to start from scratch and go through three
1126.25s - 1129.95s |  iterations of prototypes and test everything and find the right components, you start with
1129.95s - 1133.11s |  something that works and change what you want to.
1133.11s - 1138.07s |  If you want to do like board changes and layout changes or add components, you do that.
1138.07s - 1141.03s |  You start with a board file that's functional and works.
1141.03s - 1144.39s |  You want to make just artwork changes, you can do that, but you've already got a board
1144.39s - 1145.39s |  that works.
1145.39s - 1148.31s |  If you want to keep the hardware exactly the same and change the game that it plays or
1148.87s - 1152.95s |  interacts, you can do that and that's actually what, besides Portland is going to likely
1152.95s - 1156.31s |  use the same hardware, but they're going to have a completely different game that it plays.
1156.31s - 1160.83s |  So like customize what you want to do and keep what you want to keep.
1160.83s - 1161.83s |  Make sense?
1161.83s - 1164.91s |  Again, chief virtue of an engineer is laziness.
1164.91s - 1170.23s |  So be as lazy as you think is appropriate and you'll be able to spend your time doing
1170.23s - 1171.39s |  the things you want to do.
1171.39s - 1175.23s |  So how many of you like PCB design?
1175.23s - 1178.03s |  How many of you like embedded software?
1178.03s - 1181.91s |  So you can go like meet up with each other and like work together or like do one or the
1181.91s - 1182.91s |  other.
1182.91s - 1183.91s |  Make sense?
1183.91s - 1184.91s |  Cool.
1184.91s - 1186.21s |  So what can we do today?
1186.21s - 1189.95s |  Because of the AV stuff, I'm going to like finish my slides first and then I'll flip
1189.95s - 1193.15s |  over to my laptop and do some like walkthrough demo-y stuff.
1193.15s - 1196.63s |  I'm not going to build a badge from scratch because it's not there yet, but maybe someone
1196.63s - 1199.71s |  will submit a pull request and we can do that.
1199.71s - 1201.11s |  So what can we do today?
1201.11s - 1204.27s |  If you are a hardware person, right, you can just change the logo.
1204.27s - 1205.27s |  That's easy.
1205.27s - 1207.15s |  You can adjust the board footprint.
1207.27s - 1211.15s |  I find like the cutout shape of the board is really a neat thing to customize a badge
1211.15s - 1214.31s |  because it looks neat.
1214.31s - 1215.51s |  You can rearrange the layout.
1215.51s - 1218.55s |  As it is right now, it's kind of ergonomically designed, right?
1218.55s - 1221.11s |  I happen to be left-handed, right?
1221.11s - 1224.43s |  But I wanted righties to be okay with it too, so I put the button in the middle so all you
1224.43s - 1226.99s |  people can use it.
1226.99s - 1230.27s |  And it also, it hangs down so you see the logo.
1230.27s - 1233.39s |  And if you want to use it, okay.
1233.39s - 1234.39s |  I still have power.
1234.39s - 1237.07s |  I'm going to keep talking.
1237.51s - 1242.19s |  You grab it and you point it at someone else and you trade, right?
1242.19s - 1246.79s |  Ergonomically, they hold each other edge to edge, screen still on.
1246.79s - 1249.79s |  You hold them edge to edge and they communicate.
1249.79s - 1253.99s |  One of the flaws of the current design is I need to tune the IR transmission a little
1253.99s - 1257.67s |  more because you literally have to hold them together like that for them to communicate.
1257.67s - 1261.91s |  Maybe like a half an inch, but if they're more like an inch or more, they don't work.
1261.91s - 1264.95s |  Which is kind of good because then you're not transmitting and receiving noise and other
1264.95s - 1266.83s |  people's stuff and whatever.
1266.87s - 1269.87s |  Also by using a module, the module kind of shades the IR stuff.
1269.87s - 1274.99s |  So even if there's, if there happen to be lights, something crazy like that, you don't
1274.99s - 1276.95s |  have some interference from that.
1276.95s - 1277.95s |  Cool.
1277.95s - 1282.35s |  If anybody's got any questions as I ramble on, please, yeah, what's up?
1282.35s - 1284.11s |  This is, hmm.
1284.11s - 1285.11s |  Maybe we'll do that later.
1285.11s - 1286.11s |  Sorry.
1286.11s - 1287.11s |  Unless there's another mic.
1287.11s - 1288.11s |  Nah.
1288.11s - 1289.11s |  Okay.
1289.11s - 1290.11s |  Sorry.
1290.11s - 1292.35s |  I'll repeat your question if I could hear it, but I hear that more.
1292.35s - 1295.07s |  And I don't think he's asking any questions about boards.
1295.07s - 1296.07s |  So what can we do?
1296.31s - 1299.71s |  We can rearrange the layout.
1299.71s - 1303.51s |  So if we wanted to, you know, have it wider or different layout, or if you really wanted
1303.51s - 1306.31s |  to change the infrared to something else, you totally could do that.
1306.31s - 1308.11s |  And you can hack it to pieces.
1308.11s - 1311.47s |  The way I did the layout, I'll show you when I look through a key cad, is I have a bundle,
1311.47s - 1312.47s |  that's the microcontroller.
1312.47s - 1314.19s |  I have a bundle, that's the power circuit.
1314.19s - 1317.15s |  I have a bundle, that's the, what's it called?
1317.15s - 1318.15s |  Infrared circuits.
1318.15s - 1321.99s |  So you can drag those blocks around and route those blocks together, or you can drag every
1321.99s - 1325.15s |  single little resistor and component together.
1325.23s - 1328.79s |  So if you're a software person, right, you could change strings, right?
1328.79s - 1334.83s |  Like you take the badge, instead of being OpenTaxus, you call it like B-Sides, you know,
1334.83s - 1336.67s |  Gallifrey or something like that.
1336.67s - 1338.55s |  And you know, you can change the game text.
1338.55s - 1341.51s |  Right now the game it plays is kind of, ever played Clue?
1341.51s - 1342.55s |  Yeah?
1342.55s - 1348.71s |  So in Clue, you have like a deck of suspects, weapons, and locations, right?
1348.71s - 1352.11s |  And you shuffle them, you draw one of each, and you put them in an envelope to the side,
1352.11s - 1353.75s |  and then you deal the rest out to everyone.
1353.75s - 1356.51s |  In the process of the game, you're kind of like trying to figure out what everybody else
1356.51s - 1358.63s |  has so you know what's missing, right?
1358.63s - 1363.99s |  Same thing, what it does right now is it deals one clue to each person, and you know, you
1363.99s - 1367.51s |  can trade those around, you meet people, it trades the handle that you put into the badge
1367.51s - 1372.13s |  as well as your clue, and when you get them all but one, you know the solution, right?
1372.13s - 1375.31s |  And there's, right now it's set up for eight games, but we won't go into the details of
1375.31s - 1376.31s |  that.
1376.31s - 1380.51s |  B-Sides Portland's gonna do a slightly different game as well.
1380.51s - 1382.35s |  You can change all the game text.
1382.35s - 1385.83s |  Right now, for B-Sides San Francisco, the AI theme they used, so it was a bunch of like
1385.83s - 1394.03s |  AI, it was a bunch of like doomsday scenarios, and it was a bunch of fixes, and so like you
1394.03s - 1399.75s |  randomly put those together, like you know, T-800 saved, you know, something from Whopper
1399.75s - 1403.19s |  or some weird thing like that.
1403.19s - 1406.59s |  So badge logistics, this can be very interesting, right?
1406.59s - 1408.47s |  Did I miss a slide there?
1408.47s - 1412.29s |  No, I think I got it.
1412.29s - 1413.29s |  Sorry.
1413.29s - 1416.85s |  So who likes hand soldering?
1416.85s - 1420.81s |  Who likes hand soldering a hundred badges?
1420.81s - 1424.41s |  Who likes hand soldering a thousand badges?
1424.41s - 1431.69s |  So when I solder, I design around 0603 surface mount components, because I used to be able
1431.69s - 1434.17s |  to see them and do it by hand.
1434.17s - 1437.25s |  I can't anymore, because I'm old.
1437.25s - 1440.81s |  And so I use a microscope and I can still do them by hand.
1440.81s - 1444.81s |  But if you're going to do some, this is designed for mass manufacturing, this is not designed
1444.81s - 1449.81s |  for hand soldering, so I use 0402 components, the really tiny ones, which means I can fit
1449.81s - 1455.81s |  them all on there easily, and they're small, and 0402 is a pretty reliable size, gets smaller
1455.81s - 1459.37s |  than that, and sometimes you get a higher failure rate.
1459.37s - 1464.65s |  So if you're going to hand solder, what I often do is I actually will get the prototypes
1464.65s - 1469.17s |  with all the small components assembled, right, and then I get those prototypes and I solder
1469.17s - 1470.93s |  on the big stuff.
1470.93s - 1475.57s |  For example, if I'm trying to fine tune which microcontroller, I get parts locally that
1475.57s - 1477.77s |  I want to use.
1477.77s - 1478.77s |  Next is small batch.
1478.77s - 1484.29s |  This is like JLCPCB, PCBWay, and others, Macrofab in the United States.
1484.29s - 1488.09s |  You just give them your design and tell them a little bit about the parts, and they'll
1488.09s - 1492.93s |  make the PCBs, assemble them for you, and ship them to you, which is pretty cool.
1492.93s - 1496.81s |  And like I said before, sometimes it's cheaper for me to do that than it is for me to just
1496.81s - 1502.73s |  buy boards and buy parts and waste my time assembling them.
1502.73s - 1504.29s |  And then last is contract manufacturing.
1504.29s - 1509.01s |  This is, you know, basically there's a weakening line between the small batch stuff and the
1509.01s - 1512.21s |  contract manufacturing because a lot of the same companies do the same thing or outsource
1512.21s - 1513.21s |  it to each other.
1513.21s - 1517.01s |  Again, I have a contract manufacturer I've used for Tigard, and also Bitmagic is the
1517.01s - 1518.33s |  logic analyzer.
1518.33s - 1523.25s |  If you've heard of like NETV or the FOMO, like mini FPGA, those were all done by the
1523.25s - 1524.41s |  same folks.
1524.41s - 1531.33s |  The reason why I chose them is because they'll do custom solder mask colors for me, so yay.
1531.33s - 1535.33s |  But yeah, once you're hitting a threshold of more than 100, you probably want to consider
1535.33s - 1536.33s |  this.
1536.33s - 1537.45s |  It will take you longer.
1537.45s - 1541.21s |  It will cost more, but it's more likely to get it right the first time, which is really
1541.21s - 1542.21s |  what you want to do.
1542.21s - 1547.37s |  You know, 100 badges in a contract manufacturer with one mistake is 100 badges you need to
1547.37s - 1548.37s |  rework.
1548.37s - 1551.05s |  And finally, flashing.
1551.41s - 1555.17s |  Once we've got these badges, even if we didn't change anything, we still have to provision
1555.17s - 1556.17s |  them.
1556.17s - 1560.37s |  And so I've got like a flashing rig here, which basically you slot the badges in.
1560.37s - 1566.05s |  It pops into a USB port, and they're all connected to like a seven-port USB hub.
1566.05s - 1569.85s |  And I've got a couple scripts in there that will go through, wait for a device to be attached,
1569.85s - 1571.49s |  and flash it.
1571.49s - 1574.77s |  There was a small bug in that, though, because what it does is it's a Linux script, and it
1574.77s - 1577.01s |  goes, it says, okay, you've attached a device.
1577.01s - 1578.01s |  Let's mount it.
1578.01s - 1579.01s |  What's the mount point?
1579.01s - 1580.61s |  Okay, and now we want to wipe it first.
1581.17s - 1590.17s |  So rm mount point slash star and then dash RF, right?
1590.17s - 1594.25s |  So you want to remove everything on that drive and force it, right?
1594.25s - 1596.97s |  Which is great until mount point for some reason doesn't exist.
1596.97s - 1599.93s |  Like you pulled it out before you got the mount point, and so that string is blank.
1599.93s - 1607.69s |  So it's rm slash star dash RF, or whatever the order, you know what I'm saying.
1607.69s - 1608.69s |  It was bad.
1608.77s - 1613.49s |  Luckily, I was using a utility called pmount, which runs as a user, as opposed to having
1613.49s - 1616.81s |  escalated privileges and running as root and mounting, because that would have been a much
1616.81s - 1620.13s |  worse rm dash RF slash star.
1620.13s - 1623.33s |  For those of you who are like more in the Windows world, that basically slash star is
1623.33s - 1625.33s |  your root directory and everything on your system.
1625.33s - 1628.13s |  So like it basically would hose your system if you did that.
1628.13s - 1629.13s |  Yeah.
1629.13s - 1630.61s |  That could have been a lot worse.
1630.61s - 1635.37s |  Luckily, it was discovered and found and fixed before we flashed all of our laptops instead
1635.37s - 1636.37s |  of the badges.
1636.37s - 1637.37s |  Flashing.
1637.37s - 1640.93s |  We just talked about flashing.
1640.93s - 1641.93s |  So common pitfalls.
1641.93s - 1642.93s |  Cool.
1642.93s - 1647.61s |  We got about halfway in, which means I want about half the time to go and either look
1647.61s - 1651.49s |  at questions or walk through the designs.
1651.49s - 1652.49s |  Common pitfalls.
1652.49s - 1655.69s |  I'm really going to emphasize one, schedule.
1655.69s - 1657.29s |  Give yourself more time than you need.
1657.29s - 1659.61s |  Once you've done that, give yourself even more time.
1659.61s - 1662.09s |  Add some buffer for, you know, manufacturing issues.
1662.09s - 1664.11s |  Add buffer for an extra prototype run.
1664.11s - 1669.07s |  Add buffer for, you know, testing and software and flashing and whatever.
1669.07s - 1670.23s |  You'll use them.
1670.23s - 1671.27s |  You'll make good use of them.
1671.27s - 1672.79s |  But you'll use them.
1672.79s - 1677.83s |  And part of the idea here is like if you're starting with a known good badge, right, you
1677.83s - 1682.47s |  can go get those started and get the badges manufactured and work on the software in parallel.
1682.47s - 1686.07s |  And then you don't have to worry about getting your hardware, testing it, making sure it
1686.07s - 1687.07s |  works.
1687.07s - 1689.43s |  You know, just remove the steps you don't want to have to deal with.
1689.43s - 1690.43s |  Cool.
1690.91s - 1693.51s |  So I'm going to go back.
1693.51s - 1696.03s |  And for those of you who wanted, where did I put it?
1696.03s - 1697.03s |  The URL.
1697.03s - 1698.03s |  Somewhere.
1698.03s - 1700.55s |  I put a URL.
1700.55s - 1701.55s |  It's GitHub.
1701.55s - 1702.55s |  Forget it.
1702.55s - 1703.99s |  I'm going to switch over to my laptop now.
1703.99s - 1705.27s |  I'll get that set up.
1705.27s - 1709.55s |  I have some hardware design and code I can walk through.
1709.55s - 1712.71s |  If any of you have questions, just come on up here and like you can ask the question
1712.71s - 1715.51s |  and I'll repeat it and then answer it as I do the walkthrough.
1715.51s - 1716.51s |  So give me a moment.
1716.51s - 1747.34s |  I'll swap up.
1747.34s - 1752.85s |  Okay.
1752.85s - 1753.85s |  I'm connected to this wire which goes straight to the TV.
1753.85s - 1761.44s |  It was just what I was on a second ago.
1761.44s - 1771.30s |  First device.
1771.30s - 1778.42s |  Checking that.
1778.42s - 1779.42s |  Looks good.
1779.42s - 1780.42s |  1080p.
1780.42s - 1781.42s |  What?
1781.42s - 1782.42s |  Input one.
1782.42s - 1783.42s |  I'm outputting to it right now.
1783.42s - 1784.42s |  Okay.
1784.42s - 1785.42s |  I'm going to switch over to my laptop now.
1785.42s - 1786.42s |  I have some hardware design and code I can walkthrough.
1786.42s - 1787.42s |  If any of you have questions, just come on up here and like you can ask the question
1787.42s - 1788.42s |  and I'll repeat it as I do the walkthrough.
1788.42s - 1792.94s |  So give me a moment.
1792.94s - 1793.94s |  I'll swap up.
1793.94s - 1794.94s |  Okay.
1794.94s - 1795.94s |  I'm connected to this wire which goes straight to the TV.
1795.94s - 1796.94s |  It was just what I was on a second ago.
1796.94s - 1797.94s |  First device.
1797.94s - 1798.94s |  Checking that.
1798.94s - 1799.94s |  Looks good.
1799.94s - 1800.94s |  1080p.
1800.94s - 1801.94s |  What?
1801.94s - 1802.94s |  Input one.
1803.94s - 1804.94s |  What?
1804.94s - 1805.94s |  Input one.
1805.94s - 1812.12s |  I'm outputting to it right now.
1812.12s - 1815.12s |  It's on the internal Google TV right now.
1815.12s - 1816.12s |  The internal?
1816.12s - 1817.12s |  It's showing on Google TV.
1837.54s - 1840.54s |  Well, that's not what I want to show you.
1840.54s - 1842.54s |  But we know the TV works.
1842.54s - 1853.18s |  So fingers crossed one more time.
1854.18s - 1856.55s |  More and more.
1861.14s - 1863.14s |  Thank you for your patience.
1863.14s - 1883.15s |  Anything?
1883.15s - 1886.58s |  No?
1887.58s - 1891.58s |  Well, that's what I get for using Linux.
1891.58s - 1904.82s |  So I'm going to try something if we can get this back up on the screen.
1904.82s - 1910.43s |  So let's see.
1912.43s - 1913.43s |  No.
1913.43s - 1914.43s |  No, we're good.
1914.43s - 1915.43s |  We're good.
1915.43s - 1916.43s |  Okay.
1916.43s - 1917.43s |  We're doing it live.
1923.07s - 1924.07s |  So where am I?
1924.07s - 1927.07s |  Can I get a volunteer?
1927.07s - 1936.04s |  Jake, come on up.
1936.04s - 1938.04s |  Do you want to just hold it and show my screen?
1938.04s - 1939.04s |  Just hold it?
1939.04s - 1940.04s |  Just hold it so we see the screen.
1940.04s - 1941.04s |  Thanks.
1941.04s - 1942.04s |  Everybody see that?
1942.04s - 1943.04s |  I'll make it bigger.
1943.04s - 1945.04s |  So there's the slides.
1945.04s - 1948.54s |  First, let's look at.
1948.54s - 1949.54s |  Let's see.
1949.54s - 1951.54s |  Can you hear me good?
1951.54s - 1956.54s |  First, let's look at the B-side San Francisco badge so you can kind of see what's going on.
1956.54s - 1957.54s |  We've got a schematic.
1957.54s - 1959.54s |  I'm not going to go into the details of the schematic.
1960.54s - 1962.54s |  Can you see anything at all?
1962.54s - 1965.54s |  We've got the RP2040, right?
1965.54s - 1966.54s |  We've got some flash.
1966.54s - 1967.54s |  We've got some IO pins.
1967.54s - 1971.54s |  We've got our IR circuit that, you know, just kind of works.
1971.54s - 1977.54s |  And we've got a USB interface that works, USB-C, which is great because everything should be USB-C.
1977.54s - 1979.54s |  But let's look also.
1979.54s - 1985.54s |  So this is what the finished badge looked like.
1985.54s - 1988.54s |  So this is just in black because that's what I usually do.
1988.54s - 1991.54s |  But you see it silkscreen on the front.
1991.54s - 1992.54s |  No components.
1992.54s - 1995.54s |  Makes it really easy to see, you know, a little closer.
1995.54s - 1997.54s |  Yeah, there we go.
1997.54s - 2001.54s |  Makes it easy to customize it because we don't have to worry about stuff.
2001.54s - 2003.54s |  There are a few holes, like through holes.
2003.54s - 2004.54s |  That's where the battery connector is.
2004.54s - 2005.54s |  That's where the USB connector is.
2005.54s - 2006.54s |  And that's where the string goes on.
2006.54s - 2010.54s |  But I tried to keep them near the edge to make it a little better.
2010.54s - 2014.54s |  One thing B-side San Francisco does is they use stickers to differentiate their badge types, which is kind of cool.
2014.54s - 2020.54s |  So if you really just want to fab this badge as is and just make stickers for your conference, like you can totally do that.
2020.54s - 2023.54s |  Like you literally don't even need a logo when you go and order the boards.
2023.54s - 2027.54s |  But what we've got here is the controller in the middle.
2027.54s - 2034.54s |  Up here we've got the Raspberry Pi 2040, some flash, an I2C connector so you can, like, attach things to it.
2034.54s - 2036.54s |  And then, yeah, IR circuits.
2036.54s - 2040.54s |  So let's look at the layout.
2040.54s - 2042.54s |  How many of you have used KiCad before?
2042.54s - 2046.54s |  How many of you have used any circuit board design software, CAD software?
2046.54s - 2049.54s |  So basically it's a whole bunch of layers, right?
2049.54s - 2053.54s |  And you make a schematic and then you make it into the layers of the board.
2053.54s - 2056.54s |  And you actually physically place stuff around.
2056.54s - 2060.54s |  I had mentioned before we have, oh, I de-grouped it.
2060.54s - 2062.54s |  I have most of the things in groups.
2062.54s - 2066.54s |  So, like, we can go and we can grab the, here, we've got the IR, TX, and RX.
2066.54s - 2072.54s |  So if you wanted to move that around, you can move this whole bundle at once instead of having to go and move every single component and lay it out.
2072.54s - 2076.54s |  And we'll flip the board over, view, flip board view.
2076.54s - 2077.54s |  Oops.
2077.54s - 2083.54s |  And then we'll, oh, boy, the resolution is just kind of making this wild.
2083.54s - 2090.50s |  Anyway, what we see here, footprint back, there we go.
2090.50s - 2091.50s |  So that's the silkscreen.
2091.50s - 2095.50s |  That's the layer that we would want to, you know, remove and replace.
2095.50s - 2100.50s |  If you wanted to see one example of what it looks like, of course, you know, boards are kind of, like, looking top down.
2100.50s - 2103.50s |  So it gets flipped and rotated a lot.
2103.50s - 2106.50s |  But, yeah, that's what you do.
2106.50s - 2109.50s |  Next.
2109.50s - 2114.50s |  Let's go over to, this is OpenTaxus straight out of the repository.
2114.50s - 2117.50s |  The question before was what the URL is.
2118.50s - 2120.50s |  GitHub slash securely fits slash OpenTaxus.
2120.50s - 2123.50s |  But if you just search GitHub for OpenTaxus, you should get it.
2123.50s - 2125.50s |  T-A-X-U-S.
2125.50s - 2126.50s |  What's the difference here?
2126.50s - 2127.50s |  Right?
2127.50s - 2128.50s |  There's none of the logos.
2128.50s - 2129.50s |  My logo is not on there.
2129.50s - 2132.50s |  The open hardware is on there.
2132.50s - 2134.50s |  The conference logo isn't on there.
2134.50s - 2136.50s |  There is the URL.
2136.50s - 2140.10s |  So we can see it.
2140.10s - 2141.10s |  Take a picture if you want.
2141.10s - 2143.10s |  I'll wait a second.
2143.10s - 2152.10s |  Take a picture of the screen showing a tablet, taking a picture of my laptop, showing a device that happens to have the URL text rendered as an image.
2152.10s - 2154.10s |  I mean, I think we need to do this anyway.
2154.10s - 2157.10s |  I would take a picture with my phone right now, but I cracked the screen yesterday.
2157.10s - 2159.10s |  So, oops.
2159.10s - 2161.10s |  But, yeah, you can see it's the same layout, same design.
2161.10s - 2164.10s |  And besides, Portland is literally going to use this exactly the same.
2164.10s - 2165.10s |  Actually, that's not true.
2165.10s - 2171.10s |  We're going to change R11 to a slightly different resistor value.
2172.10s - 2174.10s |  But we don't need to worry about that right now.
2174.10s - 2175.10s |  So, yeah.
2175.10s - 2178.10s |  And then, again, this should look very similar.
2178.10s - 2182.10s |  Get it nice and close so we get the screen as the whole screen.
2182.10s - 2183.10s |  There we go.
2183.10s - 2184.10s |  Perfect.
2184.10s - 2186.10s |  So, yeah, here is the board.
2186.10s - 2190.10s |  Blank on the back and stuff on the front.
2190.10s - 2198.10s |  One thing I'll mention, some people kind of like to shortcut and sometimes, oh, you can see me in there, too.
2199.10s - 2202.10s |  Oh, well, you know, it's cheaper if we just get the plain boards.
2202.10s - 2206.10s |  And the default selection is HASL.
2206.10s - 2211.10s |  It's a leaded kind of metal cover, so it makes it easier to solder on the copper.
2211.10s - 2212.10s |  But that's leaded.
2212.10s - 2216.10s |  And if you're doing these badges and you're handing them out to people, don't use lead.
2216.10s - 2217.10s |  Okay?
2217.10s - 2219.10s |  There are a lot of people who will be like, oh, yeah, I'm old school.
2219.10s - 2221.10s |  I'm just going to use leaded solder because, you know, whatever.
2221.10s - 2224.10s |  It tastes salty when you eat it, but too bad.
2224.10s - 2225.10s |  Use unleaded.
2225.10s - 2226.10s |  It exists for a reason.
2226.10s - 2230.10s |  And especially if you're going to be handing this to people and kids and they're going to hang it around their neck
2230.10s - 2232.10s |  and show it to their kids when they get home and they'll put it in their mouth.
2232.10s - 2236.10s |  You may want to put a bit of it on there just to make it like game cartridges.
2236.10s - 2238.10s |  But, yeah, don't use lead.
2238.10s - 2239.10s |  Figure it out.
2239.10s - 2241.10s |  Get the equipment and learn how.
2241.10s - 2248.10s |  I use SAC 305 solder, which is 3% silver and 0.5% lead.
2248.10s - 2249.10s |  Tin?
2249.10s - 2250.10s |  No, not lead.
2250.10s - 2251.10s |  Tin?
2251.10s - 2252.10s |  I don't know.
2252.10s - 2253.10s |  But just do it.
2253.10s - 2261.10s |  Practice doing it if you're a soldering person because it's the right thing to do for people who would otherwise get injured by lead.
2261.10s - 2265.10s |  Anyway, so let's look next.
2265.10s - 2267.10s |  Actually, I'll skip over because it's a little more visual.
2267.10s - 2270.10s |  This is the dock, right?
2270.10s - 2273.10s |  And so let me try and change it so you can see the dock better.
2273.10s - 2277.10s |  Has anybody ever used OpenSCAD before?
2277.10s - 2281.10s |  I love OpenSCAD because I'm like a console person.
2281.10s - 2284.10s |  And OpenSCAD is like CAD for console people.
2284.10s - 2285.10s |  There we go.
2285.10s - 2290.10s |  So here, what do I do now?
2290.10s - 2298.42s |  Oh, there's a button down here.
2298.42s - 2300.42s |  No, that was the wrong button.
2300.42s - 2301.42s |  There we go.
2301.42s - 2307.42s |  So OpenSCAD lets you just basically draw boxes and spheres and all that stuff.
2307.42s - 2311.42s |  And what you can see here is I've got, oh, why is it doing this?
2311.42s - 2313.42s |  I must have a sticky key or something.
2313.42s - 2315.42s |  So we'll look at it sideways.
2315.42s - 2318.42s |  I've got a groove for each of the badges to slot in there.
2318.42s - 2323.42s |  What I also have is it's parametric, so we can change the badge size right here without having to worry.
2323.42s - 2325.42s |  So if we change the PCB, it's pretty straightforward.
2325.42s - 2327.42s |  I like to put the USB port in the middle.
2327.42s - 2328.42s |  It just makes it easy.
2328.42s - 2336.42s |  And if we wanted to do a two-column version of it, not 23, we can go do that, and bam, you've got two columns.
2337.42s - 2343.42s |  If we only wanted to do a double one, we can do two columns and one row.
2343.42s - 2346.42s |  Yeah, bam, just a skinny one.
2346.42s - 2347.42s |  Make sense?
2347.42s - 2350.42s |  So I've got that up here.
2350.42s - 2353.42s |  So when I'm done talking, you all can come up and take a peek at it.
2353.42s - 2355.42s |  And yeah, again, I got badges.
2355.42s - 2361.42s |  So if you stick out all the way to the end and you're interested in contributing something or even just want to try these things out, come on up.
2361.42s - 2362.42s |  I didn't bring batteries.
2362.42s - 2365.42s |  I'm sorry.
2365.42s - 2370.42s |  And actually, now I'm realizing that there's something in my slides I forgot to mention, but I'll get back to that in a minute.
2370.42s - 2372.42s |  The last thing I want to talk about is code.
2372.42s - 2374.42s |  It's all Python.
2374.42s - 2377.42s |  Does anybody who's used Python, you look at this like, okay, we import stuff.
2377.42s - 2381.42s |  I have a bunch of libraries that I use specifically for this game.
2381.42s - 2384.42s |  And then it's Python, right?
2384.42s - 2389.42s |  Like we write Python code, and it actually works on hardware, and it's pretty awesome.
2389.42s - 2393.42s |  The downsides of Python on embedded hardware is it sucks power.
2393.42s - 2402.42s |  It uses a lot of battery, which is why I used AA batteries.
2402.42s - 2404.42s |  Yeah, no, I'll go back to that later.
2404.42s - 2412.42s |  I used AA batteries because they're cheap and because they have a battery holder that's inexpensive.
2412.42s - 2413.42s |  You can ship them.
2413.42s - 2414.42s |  You can transport them.
2414.42s - 2416.42s |  You can take them through TSA.
2416.42s - 2421.42s |  You don't have to worry about accidentally puncturing them and starting a fire.
2421.42s - 2426.42s |  So unless you really know what you're doing, stay away from lithium batteries on badges.
2426.42s - 2434.42s |  I mean, it's not as bad as lead on PCBs, but I feel like, you know, we've got a badge here that was well done
2434.42s - 2437.42s |  where they actually made an enclosure and protected the battery.
2437.42s - 2441.42s |  If you aren't enclosing your lipos, then be extra super careful.
2441.42s - 2444.42s |  Anyway, AA battery.
2444.42s - 2446.42s |  Actually, I started out with a AAA.
2446.42s - 2450.42s |  I used a AA because it didn't last very long the first time I did it.
2450.42s - 2453.42s |  But then I've added some power save features.
2453.42s - 2456.42s |  Somehow I should be able to look down here.
2456.42s - 2461.42s |  Right there, tiny, maybe you can see it, is some circuitry.
2461.42s - 2467.42s |  And what this does is it takes the 5 volts in over USB and boosts, sorry, the 1.5 volts from the battery
2467.42s - 2473.42s |  and boosts it up to 3.3, which means you can use that battery all the way down to like 0.8 volts before the thing cuts out.
2473.42s - 2475.42s |  So use your whole battery.
2475.42s - 2479.42s |  I used a lot of coin cells in the past, which is great if you have a very small thing.
2479.42s - 2482.42s |  If you're not running CircuitPython, 10 minutes, cool.
2482.42s - 2485.42s |  Let me wrap this up and we'll chat.
2485.42s - 2487.42s |  So yeah, it's Python code.
2487.42s - 2490.42s |  If you know Python, you can learn it pretty quickly.
2490.42s - 2493.42s |  CircuitPython is made by Adafruit.
2493.42s - 2496.42s |  They're a hobbyist electronics company based out of New York.
2496.42s - 2500.42s |  And they make reference boards, development boards, all sorts of stuff.
2500.42s - 2503.42s |  So if you want to prototype something, actually that's where we started.
2503.42s - 2508.42s |  We started with a bunch of Adafruit components, prototyped on like breadboards,
2508.42s - 2511.42s |  and ended up here with a custom PCB.
2511.42s - 2517.42s |  And the last thing I'm going to show you is, yeah, so skim through this.
2517.42s - 2525.07s |  This is basically the provisioning.
2525.07s - 2527.07s |  Not LSD. There we go.
2527.07s - 2528.07s |  So this is the configuration.
2528.07s - 2531.07s |  We've got a check.sh, which actually checks when you've got a solution.
2531.07s - 2539.07s |  But the genfiles.py is what basically generates all the files for the game.
2539.07s - 2543.07s |  So down below, you can see we have like our strings, right?
2543.07s - 2547.07s |  So our company options, Terrell Corporation, Neodymium Potion, Weyland-Yutani.
2547.07s - 2550.07s |  The startup is Algify, iTech, whatever.
2550.07s - 2552.07s |  And the tool is something else.
2552.07s - 2555.07s |  And the string is, blank company has just announced an intent to acquire a startup
2555.07s - 2558.07s |  to build the industry's most advanced AI-powered tool.
2559.07s - 2563.07s |  The solution is randomly chosen and comes out here.
2563.07s - 2567.07s |  The way it does that is basically it goes through the options, randomly chooses one,
2567.07s - 2572.07s |  generates a bunch of files that go on the badges, and then it signs the clues
2572.07s - 2577.07s |  and gives the public key out with RSA-512 because just enough to last you a day
2577.07s - 2580.07s |  without someone wasting a few grand.
2580.07s - 2583.07s |  And that will let you make sure that people don't mess with your game
2583.07s - 2586.07s |  by giving out fake clues, which could screw everything up.
2586.07s - 2588.07s |  So I'm going to stop here.
2588.07s - 2590.07s |  I've said all the things I think I wanted to say.
2590.07s - 2595.07s |  If you've got some questions, come on up here, and I can continue to talk to those out loud.
2595.07s - 2598.07s |  But you can also come on up and grab some badges if you want.
2598.07s - 2600.07s |  So yeah, go for it. Thank you.
2600.07s - 2602.07s |  Thank you.