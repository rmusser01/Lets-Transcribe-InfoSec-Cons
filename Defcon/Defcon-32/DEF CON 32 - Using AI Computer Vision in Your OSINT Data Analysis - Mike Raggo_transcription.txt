{
  "webpage_url": "https://www.youtube.com/watch?v=TK3A510jArc",
  "title": "DEF CON 32 - Using AI Computer Vision in Your OSINT Data Analysis  - Mike Raggo",
  "description": "OSINT is a great mechanism for the collection of data, but what do you do with all of it once it\u2019s collected? It can take significant time with the human eye to analyze each image or video. Furthermore, you may miss important artifacts in the foreground or background. Computer vision can churn through the plethora of data to pull out the relevant evidence at lightning speed. For the last 5 years we\u2019ve been exploring the use of Azure and AWS for computer vision to rapidly process large sets of image and video data acquisitions for forensic evidence.Through the use of AI we have analyzed thousands of images and videos to perform object detection, facial recognition, OCR, voice to text analysis, and more. In this session we\u2019ll explore the use of cloud platforms to exponentially increase your analysis of uncovering key artifacts to your case using demos and real world examples. We then apply chronolocation analysis to allow an investigator to paint a true-life narrative, for example an individual with a weapon at a location at a particular time. We\u2019ll provide live demos of common scenarios to reveal benefits to processing your data collections in a rapid, efficient, comprehensive, and accurate manner. We\u2019ll then wrap-up the presentation with additional AI computer vision recommendations and resources.",
  "channel_url": "https://www.youtube.com/channel/UC6Om9kAkl32dWlDSNlDS9Iw",
  "duration": 3159,
  "channel": "DEFCONConference",
  "uploader": "DEFCONConference",
  "upload_date": "20241016"
}

0.00s - 7.18s | This text was transcribed using whisper model: large-v2

 Good morning, everyone. Good morning. Hopefully everyone got some sleep? Ducks.
12.22s - 17.34s |  Before we begin, we got what? Two minutes? Oh, yeah, the clock. What am I doing? The clock is right here.
18.78s - 21.18s |  Just who's here? This is your first DEF CON.
22.10s - 25.06s |  Wow. Okay, so if this is your first DEF CON,
25.82s - 27.82s |  welcome.
28.62s - 30.62s |  You know, sitting in decks,
30.70s - 33.50s |  we haven't had a nice room like this for, you know, a
34.14s - 40.06s |  while, but 2019 was the last year and every time I look at a room of this size, it feels like
40.94s - 47.50s |  DEF CON of the ye good old days when talks weren't like 20, like 2,000 people and literally like
48.14s - 53.84s |  back in the ye good old days, like in the early 2000s, I mean, yeah, the talk room would be like this small and congregate.
56.06s - 58.06s |  You know, one of the things I tell people is
58.86s - 60.70s |  yeah, there's like
60.70s - 65.18s |  30, 40,000 people now at DEF CON, but the premise is the same
66.38s - 72.94s |  for anyone who, especially if this is your first time coming to the conference, learn as much as you can.
75.58s - 78.78s |  Make good use of your time. Talk to other people.
79.98s - 81.98s |  That's where the real learning happens.
82.70s - 85.98s |  Hallway Con is always, always valuable. You'll learn
86.62s - 88.62s |  probably more than
89.02s - 94.70s |  talking to the person next to you or sitting at the table than going to a lot of talks.
94.86s - 100.22s |  Oh, sorry, man. I didn't want to, I didn't, I didn't want to, I mean to say, I forgot. Oh,
101.02s - 102.86s |  but
102.86s - 105.74s |  no, the, you know, it is the size of the
107.90s - 110.06s |  talk rooms makes a big deal.
110.54s - 117.42s |  You know, it feels, this definitely feels like a more intimate setting than what it, you know, than what it is now.
117.50s - 120.38s |  I mean, I think my last DEF CON talk was like, holy,
121.10s - 127.18s |  you know, there's like, I didn't know what was, it was like eight, it went to 800 people and then it went to like
127.88s - 129.88s |  1,500 and like,
130.22s - 137.42s |  never had the honor of talking to a group of this size. So enjoy your time here at DEF CON.
137.98s - 139.50s |  And
139.50s - 141.10s |  we are now
141.10s - 145.10s |  at the top of the hour. Good morning. It's 10 o'clock
146.38s - 148.48s |  from beautiful Las Vegas, Nevada.
151.50s - 154.30s |  So our first of four talks of the day
157.00s - 159.18s |  presented by that Packet Hacking Village.
159.98s - 161.42s |  And
161.42s - 162.22s |  we
162.22s - 167.66s |  have the honor and it seems like this is like an annual, an annual get-together and
168.46s - 174.86s |  having Mike on stage to give a talk never ever disappoints and you're going to learn a lot. You're going to love this talk.
176.86s - 183.18s |  It is my pleasure to introduce to you all someone that we consider a friend. Mike Rago, everyone.
192.22s - 197.82s |  All right. Well, thanks so much for having me again. Shouts out to the Packet Hacking Village and Ming for
198.46s - 200.46s |  having me back again. Really enjoy
201.02s - 208.14s |  doing these particular talks at DEF CON. I've been coming here for I don't know how many years, I think since year 2000 and
209.34s - 214.22s |  try to never miss a con because there's just so much information and it's a great crowd and lots of friends.
216.22s - 217.82s |  In this particular
217.82s - 221.90s |  talk, we're going to talk about using AI for doing computer vision
222.86s - 228.00s |  to leverage all your data sets you may have across your OSINT data collections and performing
228.48s - 230.48s |  efficient analysis around that.
230.80s - 236.32s |  This is a culmination of a lot of research that myself and a very good friend of mine, Chet Hosmer,
236.80s - 243.68s |  have collaborated on for many years and actually have done talks in the past here in the Packet Hacking Village on
244.56s - 249.28s |  OSINT data collection, data analysis, reporting, pruning down that data,
249.68s - 255.20s |  really making it very actionable rather than really dealing with that wasteland of data and trying to prune that down.
255.20s - 256.88s |  So we'll talk a lot about
256.88s - 262.32s |  some of the previous strategies and just kind of highlight those for you again and then focus on really what we're going to talk about
262.40s - 268.72s |  today, which is looking at those images and video and trying to do a variety of cool and interesting things in them,
269.04s - 274.24s |  but in a very automated and efficient manner and with, in my opinion, a lot better accuracy.
274.24s - 276.24s |  But you know, I'll let you guys judge that for yourselves.
280.66s - 283.78s |  So Ming knows I don't really like to talk about myself too much.
283.78s - 289.54s |  So instead I'll tell you a funny story about how I got into cybersecurity and Ming has heard this story before.
290.50s - 291.46s |  So
291.46s - 292.88s |  it's circa
292.88s - 297.72s |  1994. I'm working at the NASDAQ stock market as a Unix system administrator
298.18s - 302.90s |  and it was long before there were vulnerability scanners out there like Nessus and other things. So
304.18s - 310.58s |  I saw this article on Information Week by a gentleman by the name of Dan Farmer who presented the first couple DEF CONs
311.22s - 317.30s |  and he released a tool called, of all names, called SATAN, which was an acronym for one of the first vulnerability scanners
317.30s - 319.80s |  and in this case for old Unix platforms.
320.34s - 324.74s |  So I thought, hey, it was always one of those types of people, probably much like yourselves.
324.98s - 330.02s |  I'm going to download it and run it wide open on the trading floor in the middle of the day and see what kind
330.02s - 332.02s |  of vulnerabilities I can find.
332.18s - 338.98s |  So obviously not a very bright idea because they accidentally knocked over a couple servers taking down the trading floor in the middle of the day.
339.86s - 345.06s |  But it was a good test of the failover for NASDAQ, failed over without missing a beat.
346.02s - 350.82s |  But I was called into the CISO's office and I fully expected to be fired.
351.30s - 356.10s |  And he said, Mike, I'm here to offer you one of two options. You're either fired or you can take a promotion.
356.82s - 361.38s |  So I certainly didn't want to be fired. So I took the promotion and and asked questions later.
361.38s - 367.06s |  But essentially he said, listen, you clearly demonstrated you could take down the network, albeit by accident.
367.62s - 369.22s |  But
369.22s - 371.38s |  now it's going to be your job to protect it.
371.62s - 376.50s |  So I had to build out first security team there and really start protecting the network.
377.46s - 380.90s |  One other thing I'd just highlight on this slide, you know,
381.46s - 383.62s |  Chet and I collaborate on a lot of research.
383.70s - 387.86s |  If you go back and look at the YouTube videos from the Packet Hacking Village in the Wall of Sheep,
388.10s - 392.42s |  you'll see a plethora of talks that we've done and many of them around OSINT.
392.74s - 398.34s |  So certain call outs I make out in these slides, if you're looking to go back in time and look at in detail at some
398.34s - 400.50s |  of those other presentations we've done around OSINT,
401.06s - 404.26s |  they are out there and on YouTube and Twitch and other places.
406.18s - 410.36s |  One last thing, one of the things I've taken on recently is also mentoring
411.06s - 415.54s |  folks that are looking to get into cybersecurity. They may be in IT today,
415.54s - 420.90s |  they may have graduated college or something else. And we know that there's this big gap between, you know,
420.98s - 427.38s |  folks that want to get into the cybersecurity industry and a plethora of jobs out there, millions of jobs around the globe.
428.10s - 432.18s |  But they all ask for experience, which is kind of odd considering it's an entry-level job.
432.18s - 437.86s |  So what we do is we work with folks and mentor them, give them research projects to work on.
438.02s - 443.22s |  They get that hands-on experience to help build their resume and hopefully land one of those jobs.
445.22s - 447.22s |  All right, into the presentation.
447.94s - 450.66s |  So we know with OSINT data collection,
451.54s - 456.98s |  whether you're investigating a person of interest, a top of interest or whatever it may be,
457.38s - 462.02s |  you typically end up with a wasteland of data, various types of social media,
462.98s - 467.22s |  information from various sites, RSS feeds, all kinds of different things.
467.86s - 473.14s |  And then you're left with the job of sifting through all that data to find the artifacts that
473.62s - 480.66s |  are actually the evidence that you're looking for. It's super time consuming. The majority of the data is worthless that you, you know,
480.82s - 485.70s |  collect. And so what we've talked about last year or the year before in a variety of talks is
486.18s - 490.02s |  collecting a lot of data and using efficient methods for pruning that down.
490.74s - 497.94s |  In one particular case, we talked about leveraging Power BI to sort that data, transform it, find the actual artifacts
497.94s - 504.02s |  you're looking for, and or create dashboards. And that presentation I think is last year that we did that here
504.66s - 506.66s |  in the Packet Hacking Village.
506.82s - 510.52s |  What we're going to talk about today is beyond all of that collection,
511.40s - 514.04s |  I've got a bunch of images. I've got a bunch of videos.
514.20s - 518.28s |  It's time consuming to go through those things and find the artifacts you're looking for.
518.60s - 522.28s |  You may be looking for a particular object like a gun or something else.
523.16s - 528.52s |  In the video, you may want to pull out certain audio, but if you've got a thousand video files
528.76s - 531.24s |  and they're all more than a gig in size,
531.56s - 536.12s |  it's super time consuming to try to watch all those videos and try to find the artifacts you're looking for.
536.44s - 538.44s |  And most of the time you're going to miss them.
538.68s - 542.28s |  So we're going to talk about using AI computer vision and
543.24s - 545.80s |  we'll talk about AWS as well as Azure.
545.88s - 547.88s |  We'll talk a little bit about ChatGBT,
548.20s - 554.36s |  but really kind of give you some thought provoking ideas and kind of a starting strategy in terms of how you can get started
554.44s - 556.92s |  with all of this if it's something that's somewhat new to you.
558.68s - 560.68s |  One other thing I find is
560.68s - 564.68s |  I find it kind of humorous that people refer to it as OSINT because
565.24s - 567.96s |  Chet and I agree that we kind of refer to it more as
568.52s - 575.00s |  OSINFO. You're collecting a ton of information. The intelligence is one small piece of it, right?
575.40s - 579.00s |  So a lot of what people are doing is collecting a wasteland of data
579.64s - 583.40s |  trying to convert it into intelligence or OSINT type data.
584.76s - 588.70s |  So at the end of the day, this really all just begs for some type of automation
589.42s - 592.46s |  and in testing AI and a lot of the research we've done,
592.86s - 599.02s |  computer vision across these various platforms and even what you may be able to do to an extent within Python and other things
599.26s - 601.42s |  can give you the ability to do this kind of thing.
605.13s - 610.49s |  In terms of OCR or optical character recognition, there's a lot of cool artifacts that you can
611.29s - 616.89s |  leverage and identify across images and video. They may be things such as signs or license plates.
617.13s - 623.37s |  There may be things in the foreground such as a store sign or in the background such as a military vehicle
623.69s - 628.97s |  with a specific serial number on it that maybe you can track in various locations across all your images.
629.37s - 631.37s |  We'll talk about a lot of those scenarios.
632.97s - 634.97s |  Also, you can do object
635.51s - 641.85s |  recognition or identification as well. So what type of object or objects are you actually looking for?
642.57s - 644.89s |  Are you monitoring events at
645.45s - 653.29s |  sports games and trying to identify amongst the crowd either inside the stadium or outside if maybe somebody has some form of a weapon?
653.69s - 660.09s |  Object identification can really help you with that and AI is super efficient at identifying those things across your data.
662.70s - 664.70s |  Also, when we talk about video,
664.94s - 666.30s |  there's also
666.30s - 667.66s |  speech recognition.
667.66s - 674.78s |  So whether they're conversations in the foreground or the background, being able to extract that and have the AI
675.34s - 681.90s |  really map out all those conversations for you. Maybe there's specific words you're actually looking for amongst the speech.
682.62s - 686.54s |  All of that speech recognition will also allow you to identify that too.
688.51s - 693.39s |  And then what we really want to do is it's great that we've automated and found all of this stuff,
693.79s - 695.79s |  but then how do we report on it?
695.79s - 699.57s |  How can we maybe consume it in an automated way into some kind of a dashboard?
700.11s - 702.43s |  Maybe I want to plot these things on a map.
702.75s - 708.03s |  We'll talk about some of those things we covered last year and how you can do that and some new ideas this year too.
711.63s - 714.91s |  So getting started with this, we'll first talk a little bit about Azure.
715.15s - 720.83s |  I'll kind of pivot to AWS and we'll kind of go back and forth as we go through the slides across these different topics.
721.95s - 723.55s |  Within Azure,
723.55s - 725.55s |  you can go to the main page,
725.63s - 731.15s |  you can upload images and play around with the optical character recognition as well as the object detection.
731.47s - 735.23s |  And there's also video analysis and a whole variety of other things that you can do.
735.87s - 737.55s |  There's also spatial analysis.
737.55s - 742.99s |  So if you have a video and you're looking at people that maybe come into a room and then leave a room or where they
742.99s - 749.95s |  are spatially, scattered throughout a large room or something else that you are monitoring or that you want to look at,
750.27s - 752.27s |  there's a whole variety of different
752.67s - 754.67s |  components that are available to you.
755.15s - 760.99s |  And if you start to dive into it, we'll talk about how you can train as well based on large data sets,
760.99s - 766.33s |  which we'll get into too.
766.33s - 772.49s |  So in a very simple way, you know, you can upload these images and perform optical character recognition on it.
772.57s - 776.73s |  You can upload an image and for a suite of images and say like,
777.37s - 782.25s |  what have you found in this image and let the AI computer vision identify that for you.
785.44s - 789.04s |  Anybody a fan of the the cult movie, They Live?
789.44s - 791.36s |  Okay, it was actually, you know,
791.84s - 796.08s |  a part of DEFCON a couple years ago, right, where it was sort of the theme for the conference.
796.08s - 798.08s |  So I was super stoked when I saw that.
798.48s - 801.36s |  Throughout the movie, there's all kinds of signs, right?
801.52s - 808.80s |  And, you know, the guys put on the sunglasses and they can actually see these signs that are otherwise somewhat hidden to the casual viewer.
809.68s - 814.24s |  But this is a good example that if you're collecting images and or video,
814.64s - 820.00s |  there's so much stuff going on, like if you've got a cityscape or something else that you're looking at,
820.32s - 825.20s |  like, how do I even look at this and am I going to miss something like a license plate in the background or
825.60s - 830.40s |  something else that's really important, maybe a document that somebody's holding and on the back of it,
830.40s - 832.64s |  you can see what, you know, what it's about.
833.28s - 840.00s |  So, you know, the optical character recognition obviously can create bounding boxes or you can look at the entire image
840.48s - 844.80s |  and have it automatically identify all of this for you. As you can see here,
844.88s - 850.64s |  there's a plethora of things that are identified in the image in a very quick and efficient manner in a matter of a couple seconds.
851.04s - 853.92s |  If you have, you know, a hundred thousand images,
854.16s - 859.36s |  yeah, you can use the back-end training and actually go through that and we'll talk about some of that too.
863.82s - 868.86s |  Common questions I get, you know, what about international languages? Yep, those are supported as well.
869.02s - 874.46s |  So it has the ability to identify that. If you're gathering a lot of OSINT data through social means,
875.10s - 879.26s |  in this case, this was a TikTok video and not only did it, you know,
879.74s - 885.42s |  grab and identify all the characters of whether it be Ukrainian, Russian or something else,
885.82s - 889.82s |  but furthermore, it captured something I didn't even notice in the image,
889.98s - 894.94s |  which is at the bottom in very fine print was their handle for actually for TikTok.
895.34s - 901.58s |  So those kinds of things will uncover artifacts that you probably miss trying to go through image by image yourself,
901.90s - 907.50s |  you know, using a, you know, human type of analysis to really do that vision and identify those things.
907.98s - 913.18s |  I will admit the majority of the time it always finds something in almost every image that I've missed
914.14s - 916.14s |  just simply by trying to look at it myself.
919.88s - 925.18s |  Geolocation information becomes increasingly difficult. If you attended our talk a few years ago,
925.18s - 927.66s |  we were talking about how to collect data
928.46s - 930.70s |  via Twitter and other means and
931.66s - 935.18s |  actually do geolocation on it in a very unique way.
936.30s - 937.82s |  And
937.82s - 943.26s |  as those things become locked down more and more and more becomes increasingly difficult.
944.14s - 951.34s |  But optical character recognition, object recognition, and all of these things can actually help paint a new picture
951.82s - 953.82s |  around the location information.
954.46s - 960.78s |  In this particular case, we had been and continue to do a lot of research around the Russian-Ukrainian war.
961.74s - 963.34s |  In this particular case,
963.34s - 968.70s |  I was actually collecting images looking for military vehicles and you can see that there's one here in the background.
969.18s - 973.84s |  What I didn't notice was the fact that there was a teeny little sign in the foreground
974.30s - 980.86s |  on the station facility there that actually tells me a little bit more about the location and where this is.
981.58s - 987.82s |  So again, if you're having issues with trying to identify where was this picture taken or where was this activity going on,
988.62s - 989.42s |  you know, again,
989.42s - 996.46s |  the optical character recognition of the bounding boxes might pick up on something really tiny in the background or foreground that you didn't even notice.
997.10s - 1001.50s |  We'll talk later about how we took this data, automated it, and plotted it on a map
1001.74s - 1008.14s |  and how we used it for predictive analysis related to the war and we had more than a 95 accuracy with this data.
1011.60s - 1015.68s |  In terms of MIST, I was wondering what it was. It's actually a shipping company
1016.32s - 1017.52s |  in the Ukraine.
1017.52s - 1023.52s |  But there were other signs and things in this image and others that exposed or enumerated in more detail again
1023.60s - 1026.24s |  where these locations were of these military vehicles.
1026.80s - 1029.36s |  And hold that thought because we'll come back to that in just a moment.
1033.64s - 1034.52s |  Also,
1034.52s - 1039.72s |  you know, during the beginning of the war, there were a lot of people trying to, you know, leave the country.
1040.28s - 1042.28s |  And there was, you know,
1042.68s - 1045.40s |  a lot of interesting pictures with mobs of people.
1046.20s - 1051.08s |  And again, in trying to identify where some of this activity was going,
1051.40s - 1057.88s |  the optical character recognition was great at picking up, again, location information based on signs of the train station and other things.
1058.28s - 1062.12s |  Again, this became super useful when trying to plot this out on a map.
1066.49s - 1067.61s |  In addition,
1067.61s - 1069.13s |  license plates.
1069.13s - 1072.09s |  Again, whether it's serial numbers on a tank,
1072.89s - 1075.53s |  letters that are on military vehicles,
1076.41s - 1080.59s |  license plates, and other things, these can be really useful if you identify
1081.45s - 1086.73s |  this vehicle in more than one location and also plotting that in a map and over a timeline.
1087.21s - 1092.73s |  So again, just another example of like a lot of information you may have scattered across, you know,
1092.87s - 1098.57s |  thousands if not hundreds of thousands of images or video that you have and which is really efficient at identifying this.
1102.75s - 1104.75s |  One of the things I also did
1104.83s - 1106.83s |  was, and some of this was,
1108.27s - 1112.91s |  we started to talk about it a little bit in the last few talks over the last few years here at DEFCON,
1113.39s - 1119.47s |  was around tracking all these military vehicles and trying to predict where they were going to, where Russia was going to attack next.
1120.27s - 1122.27s |  And in doing so, I, you know,
1122.35s - 1128.11s |  initially noticed that a lot of these military vehicles had all these serial numbers and things on the sides of them.
1128.51s - 1131.47s |  And, you know, my thought was thinking was that, you know,
1131.71s - 1134.59s |  I don't exactly know where all of these images are coming from,
1134.99s - 1141.79s |  unless the person, you know, that posted it or tweeted it or something else says spotted this vehicle at XYZ location in Kiev
1142.03s - 1144.03s |  or wherever it may be.
1144.19s - 1150.03s |  But I was kind of wondering, you know, from these numbers if I could start to kind of determine, you know,
1150.67s - 1155.31s |  how many, how often across my images maybe this particular vehicle showed up.
1155.79s - 1158.99s |  So if I did have limited vehicle information such as, you know,
1159.31s - 1162.35s |  the person, you know, posted from Kiev or something like that,
1163.15s - 1167.79s |  and then I saw this vehicle over on the other side of the country, which we actually did,
1168.19s - 1173.79s |  we were able to plot that stuff on a map. So pulling out these serial numbers was actually quite useful, too.
1174.51s - 1179.79s |  And there's sometimes various codes, as you can see here, too, that are representative of things, too.
1179.79s - 1184.03s |  So we're talking more than just numbers and letters and some special characters.
1184.03s - 1188.27s |  There may be weird codes, international languages, things like that, that is very good at bringing out.
1190.75s - 1196.27s |  Interestingly enough, this was another picture I had, and you can see the same vehicle number popped up.
1196.91s - 1201.79s |  Now, I was kind of wondering if it was maybe a category of vehicles or this number represented,
1202.19s - 1204.59s |  you know, a military team or things like that.
1204.91s - 1208.75s |  But as we looked through the data more and more, it was very unique to the truck.
1208.91s - 1213.79s |  We looked at the characteristics of the truck and some markings and scratches and things like that in the truck.
1213.87s - 1215.87s |  It was absolutely the same vehicle.
1215.95s - 1222.03s |  So again, it became super helpful in terms of the geolocation or really just plotting these things on a map.
1225.45s - 1228.01s |  Taking this data and making it useful,
1229.13s - 1231.61s |  you know, there's a lot of different tools out there.
1231.77s - 1235.13s |  You know, people use Grafana, Splunk, a whole bunch of different things.
1235.21s - 1240.17s |  I personally like to use Power BI because I like how it can take the data and do
1240.47s - 1244.81s |  transforms on it and look at it in a lot of different ways I didn't think about looking at the data.
1245.93s - 1248.01s |  In addition, it allows a lot of
1248.81s - 1251.71s |  click and point and create various widgets in your dashboard.
1251.93s - 1257.93s |  So now you can use it to kind of sort on the data, maybe by timeline, maybe by object type, maybe by
1259.13s - 1264.89s |  keyword or, you know, that was identified via optical character recognition and a whole variety of different things.
1265.69s - 1272.09s |  This also became very helpful in tying together posts and also the trustworthiness of those posts.
1272.41s - 1274.81s |  So one of the things that is always a challenge is,
1275.29s - 1279.77s |  is, you know, all of this content legitimate or is it meant to throw people off?
1281.93s - 1288.03s |  And so in doing so we were able to sort on the top 5, 10, 25 posters
1288.57s - 1292.73s |  and in cross validating like the data that they had posted said, you know,
1292.81s - 1298.33s |  these are the most trustworthy people that are posting a plethora of things around military vehicles or other things.
1298.81s - 1300.33s |  So sorting that
1300.33s - 1304.89s |  became very useful, very practical and was great because in a point and click I could say, okay,
1304.89s - 1309.29s |  I got it sorted in the way that I wanted. Now click, create a PDF report, boom,
1309.37s - 1313.37s |  I've got my triage report ready to use and, you know, put into action.
1315.79s - 1320.35s |  There's a variety of different widgets across all these different, you know, tools and many others.
1321.15s - 1326.91s |  In this particular case, there's all kinds of cool plugins. So there's word clouds and things like this.
1327.47s - 1334.91s |  What was really interesting about this one was I was not looking at the Oblast region of Kiev at all.
1335.23s - 1339.23s |  I was looking at other regions in Kiev where people were posting from and things like that.
1339.71s - 1343.39s |  And for whatever reason, I just overlooked this part of the city.
1343.95s - 1347.95s |  But you can see here, it's one of the top five largest words,
1348.35s - 1354.05s |  meaning that it's the, you know, in the top five quantity of posts where people were talking about Oblast.
1354.83s - 1356.51s |  What I uncovered was,
1356.51s - 1361.23s |  because I was looking at tanks and military vehicles, it didn't even pop up for me.
1362.03s - 1366.75s |  This was being posted because they were destroying a lot of churches around the Kiev area.
1367.15s - 1369.25s |  So I started to take a look at the churches.
1369.79s - 1375.23s |  That became one of the most interesting and key ingredients to the attacks and what was going on.
1375.71s - 1379.87s |  The Russians were really destroying the majority of the churches across the Ukraine.
1380.43s - 1385.41s |  And based on the timeline, we could see where they were based on when the church was destroyed.
1386.75s - 1391.31s |  So this really uncovered that artifact and it became the most precision,
1391.77s - 1396.03s |  predictive component of the data we looked at, even more than the military vehicles.
1396.59s - 1401.71s |  So again, leveraging transforms and these other things that are built into these reporting tools can help you look
1402.35s - 1405.71s |  at the data from a completely different angle you've had never considered.
1410.28s - 1413.32s |  As I mentioned, these things may show up in multiple pictures.
1413.64s - 1418.84s |  So if you're not exactly sure what you're looking for, but you kind of have a sense for what you're looking for,
1419.32s - 1423.32s |  again, this is where the computer vision is going to help you refine that and determine,
1423.64s - 1428.28s |  now I know what I am looking for. For me, I went into it looking for military vehicles.
1428.44s - 1430.78s |  It came out of it looking for destroyed churches.
1432.84s - 1439.34s |  And so these, you know, things of interest, person of interest, and more may be identified at multiple locations.
1439.64s - 1442.38s |  And again, this can be great for all kinds of location analysis.
1447.61s - 1450.89s |  Again, a lot of this stuff I overlooked by looking at it manually.
1451.77s - 1456.65s |  And in addition, there may be a lot of things in the foreground and the background that may be very informative.
1456.81s - 1461.77s |  So bottom line, in my humble opinion, my two cents, is if you're not using optical character recognition,
1462.01s - 1464.41s |  you're probably missing most of the important data points.
1473.07s - 1478.75s |  So, you know, we talked about Azure and we'll get into AWS here in a moment.
1479.63s - 1483.97s |  But in addition, you can use ChatGBT for doing some optical character recognition.
1484.77s - 1489.57s |  There are, of course, APIs available, just like there are for AWS and for Azure.
1490.29s - 1495.33s |  I've had kind of, you know, limited luck with identifying things within this.
1495.41s - 1499.89s |  You can see I uploaded an image, but it doesn't really show me the image that I uploaded.
1500.13s - 1505.75s |  It did find that number on the side of the military vehicle. So it was quite good at doing the optical character recognition.
1506.29s - 1509.73s |  But again, I didn't really dive into it, you know, very deeply.
1509.81s - 1514.93s |  But if you're looking for, you know, if you prefer ChatGBT, you can do some of this stuff with ChatGBT as well.
1517.36s - 1519.36s |  All right, so object recognition.
1519.36s - 1526.80s |  So up until now, we've talked about optical character recognition and identifying license plates and serial numbers and military numbers for vehicles.
1527.28s - 1532.72s |  Now we're looking for objects. It may be a gun. It may be a military vehicle. It may be a person. It may be a car.
1533.92s - 1540.56s |  And, you know, again, fundamentally with the, you know, free interface that's provided, in this case with Azure,
1540.88s - 1546.24s |  you can upload, you know, an image and have it identify for you things that are in the image.
1546.64s - 1549.68s |  It may be very transparent to you, and that's fine, right?
1550.16s - 1554.40s |  But again, we want to see what we've missed. And furthermore, we probably have a massive data set.
1554.40s - 1557.92s |  So we're not going to necessarily upload these images one at a time,
1558.16s - 1564.64s |  but the automation will allow you to either have a storage with a plethora of images that you can automate that will look at
1564.64s - 1569.12s |  it in much the same manner. We'll also talk about how you can train these classifiers, too.
1571.17s - 1578.53s |  So in this particular case, we identified, you know, two individuals as well as a land vehicle or a military vehicle,
1578.53s - 1584.69s |  but not a tank. And I was trying to do some training on tanks and really kind of test that out.
1585.49s - 1591.41s |  It also will give you kind of a threshold value and accuracy adjustments for the bounding boxes,
1591.57s - 1595.01s |  how you want to carve up the image and have the computer vision look at it.
1595.09s - 1597.65s |  So there's a lot of different options that you can leverage here.
1597.97s - 1601.49s |  And if it's something you want to play around with, I certainly encourage you to go out to,
1601.89s - 1606.13s |  you know, the Azure site and in what I'll talk about in a minute with AWS,
1606.29s - 1609.41s |  where you can test some of these things out and get more familiar with them if you want to,
1610.29s - 1612.29s |  you know, play around in your own sandbox.
1615.60s - 1617.60s |  When you actually create an account,
1618.08s - 1620.08s |  you can actually go in there and train the
1621.60s - 1626.02s |  model. And what this allows you to do is if you are looking for certain things in particular,
1626.42s - 1632.58s |  now you can upload from Kaggle or something else, a whole bunch of images, a huge corpus of data
1633.38s - 1637.06s |  that is already pre-sorted for you where they're all tanks, right?
1637.22s - 1641.30s |  And this is going to give me the fundamental baseline by which now when you
1641.68s - 1645.94s |  automate the feed of all of these images you have, this wasteland of data,
1646.34s - 1652.42s |  to help better identify if in any of those images, in this case, if they're in any of those images, if there's an actual tank.
1652.42s - 1660.02s |  So, I did exactly that. Went to Kaggle, downloaded a bunch of images, uploaded them into this and had,
1660.66s - 1665.62s |  and trained it, basically, in how to do this. And it wasn't difficult. This was a lot of point and click, right?
1665.78s - 1668.66s |  I'm not doing, like, command line coding, things like that.
1668.98s - 1671.06s |  I do use the API personally,
1671.06s - 1676.02s |  but I really wanted to kind of help people understand how I could get, how someone could get started very easily with this.
1676.50s - 1680.02s |  When you go ahead and create this, it will go ahead and generate keys for you,
1680.02s - 1682.90s |  so you can do it from a command line. You could even use curl.
1683.06s - 1687.46s |  There's a bunch of different ways in which you can easily use it. And on GitHub and other places,
1687.62s - 1690.50s |  there's a whole bunch of Python code and other things if you want to leverage
1691.06s - 1695.30s |  those bases that people may have created to help you more efficiently refine a lot of this.
1698.47s - 1703.99s |  As I mentioned, it'll create a bounding box around the object that's identified. When you upload these images,
1704.07s - 1708.87s |  you'll go ahead and actually manually tag them. Again, this is for the training purpose only.
1709.35s - 1713.43s |  And so you have these, in this case, tanks. You can go in there and label it as a tank.
1714.39s - 1719.91s |  And then once you're all done with doing that labeling, then you can go through the process of training.
1720.15s - 1724.87s |  So you'll upload or leverage the images that you've actually uploaded. And as a last step,
1724.95s - 1728.87s |  it'll go through and perform the training on all the images that you tagged.
1731.25s - 1734.21s |  Then you can start to test the accuracy of all of this.
1734.85s - 1736.77s |  So in this case here,
1736.77s - 1741.43s |  and one thing it kind of does is it sort of grays out the image a little bit when it shows the overlay
1741.73s - 1746.61s |  of what it identified and the level of accuracy to kind of see how well your model worked.
1747.17s - 1750.37s |  Within the training is the ability to iterate.
1750.45s - 1754.29s |  So there is a drop down that you can leverage where you can say, you know, it's pretty good,
1754.37s - 1757.17s |  but I want to train again and put some more images in here, right?
1757.33s - 1762.45s |  So you can actually go through that iteration over and over to hit the level of refinement that you're looking for.
1763.25s - 1769.89s |  In addition, at the bottom, it'll also show you things such as the threshold value, the accuracy.
1769.89s - 1774.29s |  You can also see the accuracy in the bounding box too, 90% accuracy.
1774.29s - 1775.65s |  I guess that's pretty good.
1775.65s - 1781.01s |  And we're going to show you in the next slide, though, is we're going to realize that like this isn't quite as accurate as we thought,
1781.01s - 1783.25s |  and it'll probably require additional iteration.
1784.05s - 1789.49s |  I love this episode, by the way.
1789.49s - 1794.13s |  So, you know, Homer had this vehicle that, you know, he designed that had, you know,
1795.09s - 1798.37s |  the biggest cup holder and all kinds of other things, you know, in it.
1798.37s - 1802.69s |  And I was like, you know, kind of looks like a military vehicle could maybe be mistaken by,
1802.69s - 1804.69s |  you know, the computer vision is maybe a tank.
1804.69s - 1807.73s |  So, you know, let me upload this and see how good this thing is.
1809.92s - 1815.12s |  Well, lo and behold, 98% accuracy that this is a tank, right?
1815.12s - 1817.04s |  We all know that it's not, right?
1817.04s - 1819.60s |  So it's not really a fault of the AI, right?
1819.60s - 1823.92s |  It just means we need to upload a larger corpus of data and do better training on it.
1824.48s - 1828.00s |  How many images did I load when I did the training on this?
1828.00s - 1829.36s |  11, right?
1829.36s - 1835.04s |  So clearly not enough images to, you know, accurately go ahead and train this model, right?
1835.04s - 1840.48s |  And what they typically recommend is, you know, upwards of 100, 500, maybe 1,000 images.
1840.48s - 1846.00s |  And again, websites like Kaggle and other things have, you know, large data sets like that.
1846.00s - 1848.48s |  I think you need an account, but you can download those
1849.12s - 1852.48s |  and then upload those to the training model to ensure better accuracy.
1855.54s - 1860.66s |  I also decided, hey, well, you know, let me, you know, with this limited training I've done,
1860.66s - 1864.50s |  let me upload, you know, just a regular vehicle in this case, a Land Rover.
1864.50s - 1869.06s |  Well, it also identified it as a tank with 95% accuracy, right?
1869.06s - 1870.34s |  Clearly not a tank.
1870.34s - 1875.46s |  So again, definitely want to go through iterations on this and upload large data sets.
1875.46s - 1876.66s |  Not a difficult thing, right?
1876.66s - 1878.66s |  A lot of this stuff is just point and click.
1878.66s - 1882.02s |  And if you do prefer command line, you can do it via those means too.
1882.02s - 1883.62s |  The API is available.
1883.62s - 1886.18s |  It creates a key within this screen here.
1886.18s - 1887.46s |  You can click over to that.
1887.46s - 1890.98s |  It'll give you your URL and the key and all of that kind of stuff.
1890.98s - 1894.42s |  So you can leverage the API to do the exact same type of analysis.
1898.31s - 1898.63s |  All right.
1898.63s - 1900.07s |  So let's talk about AWS.
1900.63s - 1908.07s |  So in a talk I did about five or six years ago, I did a talk around optical character recognition,
1908.07s - 1911.03s |  object detection, and things like that, and using AWS.
1911.67s - 1915.11s |  And continued to do testing, you know, within AWS as well.
1915.91s - 1921.51s |  And if you're familiar with AWS, you can download these CloudFormation templates
1922.07s - 1924.55s |  that are provided in the AWS store.
1924.55s - 1927.91s |  Upload that and it will build out some of this stuff for you
1927.91s - 1931.59s |  so that you have kind of a cool interface by which you can upload images.
1931.59s - 1936.23s |  So if you have an AWS account or you get a free account, you can look at the marketplace.
1936.23s - 1938.87s |  There'll be things sitting out there that people have built.
1938.87s - 1945.51s |  You can load it or download a CloudFormation template or Terraform, if you prefer, into AWS.
1945.51s - 1947.19s |  Have it build this out for you.
1947.19s - 1950.87s |  And then you can do, you know, similar kinds of things within AWS too.
1951.59s - 1957.43s |  In this particular case at the time, I was doing research around fake image detection.
1957.43s - 1960.95s |  And these images, some of them were fake.
1960.95s - 1962.31s |  Some of them were real.
1962.31s - 1970.15s |  And the AI available with the computer vision within AWS, also known as recognition with a K,
1971.35s - 1974.79s |  allows you to do very similar things to what I showed you within Azure.
1975.75s - 1981.11s |  So you can see at the bottom, it identified a whole variety of characteristics of the image,
1981.11s - 1983.59s |  such as humans, flag, symbol.
1984.79s - 1988.47s |  The symbol was identified actually from the flag that's orange and white,
1988.47s - 1989.91s |  which you can see in the background.
1992.31s - 1995.35s |  Apparel, clothing, a tie, things like that.
1995.35s - 1998.31s |  And so that became quite helpful in kind of determining,
1998.31s - 1999.99s |  comparing this to a couple different pictures.
1999.99s - 2001.59s |  Which one is the real one?
2001.59s - 2004.39s |  Well, the storyline was about a particular country,
2004.39s - 2009.43s |  whereas the image showed a flag from a different country with a different individual.
2009.43s - 2011.83s |  And again, you know, you can do facial recognition too.
2011.83s - 2015.19s |  I'll leave that up to you, you know, from a privacy standpoint.
2015.19s - 2020.39s |  But again, similar kind of thing that you can do also within AWS.
2020.39s - 2024.95s |  If you prefer AWS, again, that's a talk I did in the Packet Hacking Village,
2024.95s - 2029.19s |  maybe about five or six years ago, which I know is out on YouTube and other things too.
2033.24s - 2036.60s |  All right. So what are the benefits of the object detection?
2037.48s - 2039.16s |  It can help build out that timeline.
2039.16s - 2044.20s |  So if I can find characteristics of the image that enumerate where the picture was taken,
2044.20s - 2047.08s |  then I can actually map it out on a map just like this.
2048.68s - 2053.24s |  So I automated within Google Maps the ability to auto-label these images
2053.32s - 2057.64s |  and then plot them on a map because I wanted to use it for predictive analysis.
2057.64s - 2060.76s |  So here, and this is part of the presentation I covered last year,
2060.76s - 2066.28s |  but now using this with the optical character recognition and object detection
2066.28s - 2067.96s |  to map out a lot of these things.
2069.32s - 2073.96s |  So as I had these fed into Google Maps and then tagged,
2074.76s - 2077.72s |  and by location or estimated location,
2077.72s - 2082.92s |  I could start to kind of map out the formation and the ongoing war
2082.92s - 2085.72s |  in terms of a timeline, location, and other things.
2086.28s - 2090.84s |  Again, which is super helpful if you don't have latitude, longitude, geolocation,
2090.84s - 2093.00s |  specific type data, which many times you don't.
2093.88s - 2096.84s |  So this became super helpful in mapping this out
2096.84s - 2100.36s |  and understanding where the Russians might attack next within the Ukraine.
2104.24s - 2106.24s |  So again, if this is something you're interested in,
2106.80s - 2109.12s |  we dove really deep on this last year.
2109.12s - 2114.40s |  But one of the things I will say is it became very helpful with predictive analysis.
2114.40s - 2117.68s |  So we started to identify churches that were being destroyed,
2117.68s - 2119.68s |  which was a data point I wasn't looking at at all.
2119.68s - 2120.96s |  We talked about that earlier.
2121.76s - 2125.84s |  So in terms of looking at those data points of the churches being destroyed,
2125.84s - 2128.00s |  we actually could see the path of the military
2128.00s - 2130.16s |  and where they were going from a timeline perspective.
2130.72s - 2135.52s |  If you're tracking a person of interest unrelated to war or something like that,
2135.52s - 2138.96s |  again, you can leverage this data and potentially map it on a map too.
2139.52s - 2140.64s |  Very easy to do.
2140.64s - 2146.32s |  I just used Google Maps, went in there and leveraged the ability to create all of these pins,
2146.32s - 2149.28s |  put all that data in there, which was quite easy to do,
2149.28s - 2153.60s |  and then started looking at the data from a predictive analysis perspective.
2158.20s - 2160.76s |  So some of the lessons learned on the object detection side,
2161.32s - 2163.72s |  definitely train and then train again.
2163.72s - 2165.72s |  This takes an iterative approach.
2165.72s - 2167.96s |  But again, there's large data sets sitting out there
2167.96s - 2169.80s |  that are very easy to download and upload,
2170.28s - 2176.04s |  whole process, identifying that and getting those images in there just takes a few minutes,
2176.04s - 2179.88s |  but it might take a day or longer for it to train if you have a huge corpus of data.
2182.21s - 2185.25s |  But what's really great about it is when you do that training,
2185.25s - 2187.97s |  now it's focusing on the data you're most interested in.
2187.97s - 2191.25s |  And I'll take a day's worth of training versus
2191.25s - 2194.93s |  two weeks of sifting through a wasteland of OSINT data any day.
2198.08s - 2199.84s |  So you can also do video analysis.
2200.80s - 2204.16s |  This type of thing is available within AWS and Azure.
2204.72s - 2207.68s |  And the extraction is really interesting.
2209.44s - 2212.72s |  If you're trying to do this today, it's very manually intensive.
2213.44s - 2217.28s |  You may have a lot of videos, very time consuming as well.
2218.64s - 2223.52s |  And one of the cool things when I first started doing this a number of years back
2223.52s - 2225.04s |  is the speech recognition too,
2225.04s - 2227.92s |  which actually helped me find some really interesting things
2227.92s - 2230.40s |  going on with some of the investigations I was doing
2230.40s - 2232.56s |  and really brought out some cool evidence.
2232.56s - 2233.84s |  So let's talk more about that.
2236.79s - 2242.07s |  So in the case of AWS recognition, it will identify objects throughout the video.
2242.87s - 2246.95s |  It'll also tell you in the timeline where it showed up in the video,
2246.95s - 2254.15s |  how often it showed up in the video, and the location, as I mentioned in the timeline.
2255.03s - 2259.99s |  It may also miss a lot of subtleties that you actually didn't identify.
2260.63s - 2264.95s |  Much like the optical character recognition and the object detection,
2265.67s - 2268.95s |  with the video analysis, very similar approach in that regard.
2268.95s - 2272.23s |  But again, help identify things in the foreground or the background.
2272.95s - 2282.39s |  In the video, this was an interview myself and a coworker did for CNN.
2283.27s - 2286.95s |  I did a demo and later in the video was showing things in the video
2286.95s - 2290.71s |  and I was blown away with how it found all this stuff
2290.71s - 2293.27s |  in the actual demo that I was actually doing.
2293.27s - 2295.43s |  Things I didn't even realize were in the image.
2295.43s - 2297.75s |  So there's lots of cool stuff and you can see at the bottom
2299.35s - 2302.23s |  how you can really leverage this and automate this as a process.
2302.23s - 2305.43s |  You can upload all the images and just have it crank through all of them
2305.43s - 2308.23s |  and create reports or consolidated reports for you.
2308.23s - 2310.47s |  Very clean and efficient way to do it.
2310.47s - 2313.59s |  This was also related to a talk I did a couple years back,
2313.67s - 2318.07s |  which is also on YouTube if you're looking at this from an AWS standpoint.
2320.88s - 2322.96s |  You can do the same thing within Azure.
2322.96s - 2326.56s |  From that home screen, if you want to upload a sample video,
2326.56s - 2328.16s |  it'll do the same type of thing.
2328.16s - 2329.52s |  May look a little bit different, right?
2329.52s - 2330.96s |  Different cloud platform.
2330.96s - 2333.12s |  But it effectively does the same kind of thing.
2333.68s - 2337.92s |  And here I uploaded a presentation Chet and I had done at a different conference,
2337.92s - 2340.72s |  which was more like slides and talking,
2340.72s - 2343.28s |  but it did pick up on all the instances.
2343.28s - 2345.52s |  In this case, I wanted to find related to OSINT.
2346.32s - 2348.64s |  Any slide that had OSINT on it and all of that stuff,
2348.64s - 2351.44s |  it found it not by virtue of the PowerPoint,
2351.44s - 2354.88s |  but by virtue of the actual video itself, which I thought was pretty cool.
2354.88s - 2358.96s |  And this only took a couple minutes to run and it was an hour long presentation.
2362.56s - 2365.36s |  The speech recognition is also super awesome.
2365.36s - 2369.12s |  In the case of AWS, again, it'll help identify
2369.12s - 2371.52s |  where in the video in the timeline this occurred.
2372.16s - 2378.96s |  It'll also then transform this into words and phrases
2378.96s - 2382.24s |  and how frequently they showed up, the confidence level,
2382.24s - 2385.36s |  and actually gives you a search capability to go through that
2385.36s - 2387.36s |  if you're looking for somebody talking about
2387.36s - 2389.52s |  something suspicious to your investigation.
2392.72s - 2394.96s |  So when you dive into the details of it,
2394.96s - 2396.56s |  you have all these various filters.
2396.56s - 2399.52s |  You can see all the keywords, all the mentions,
2399.52s - 2401.92s |  and everything that were done as a result of
2402.88s - 2406.32s |  analyzing the video using AWS recognition
2406.32s - 2408.24s |  and the speech recognition componentry.
2409.92s - 2412.08s |  There are a variety of other things that you can do with it.
2412.08s - 2417.20s |  As you can see here, it used to have the capabilities with celebrities.
2417.20s - 2420.08s |  I know there's been some privacy lockdowns and things like that
2420.08s - 2424.08s |  with some of the cloud vendors, but also faces, words, cues.
2424.08s - 2427.28s |  You could upload a face of a person of interest
2427.28s - 2429.28s |  that you're investigating, things like that.
2429.28s - 2433.76s |  Again, rely on your laws, privacy, all of that kind of stuff.
2438.36s - 2441.96s |  So some of the things that come out of this then
2441.96s - 2445.72s |  are trying to improve the accuracy, the efficiency,
2445.72s - 2448.44s |  and what I consider time to evidence.
2448.44s - 2451.88s |  Again, if you collected a plethora of data or your team has,
2451.88s - 2454.68s |  and now it's your job to kind of sift through all of this,
2454.68s - 2457.80s |  these automated approaches are kind of priceless.
2457.80s - 2460.44s |  I mean, you could just leverage all this ability
2460.44s - 2463.48s |  to really find that data of interest you're most interested in.
2463.48s - 2465.56s |  It's impossible to do all of it manually.
2467.08s - 2471.08s |  In addition, it can also kind of validate narratives you may have
2471.08s - 2473.80s |  or nefarious activity that you're trying to prove out.
2474.44s - 2476.76s |  So as you start to look at the data,
2476.76s - 2480.04s |  you may eliminate things too that you thought were important artifacts
2480.04s - 2483.80s |  that are actually unrelated to the event, the activity,
2483.80s - 2486.20s |  the investigation as well.
2486.20s - 2488.20s |  So there's that other side of the coin too,
2488.20s - 2492.92s |  and making sure you kind of validate the legitimateness of that evidence.
2494.76s - 2497.56s |  And it's not a replacement for the human in the loop,
2498.44s - 2504.28s |  but it will vastly distill down your valuable data to less than 1%.
2505.16s - 2508.68s |  And then as your team may be going through and manually,
2508.68s - 2511.64s |  visually looking at a lot of these things to validate it,
2511.64s - 2515.56s |  help create that really refined, curated data set
2515.56s - 2517.08s |  that you're really focused on.
2517.08s - 2520.44s |  In other words, the human in the loop will really come into play
2520.44s - 2524.60s |  much more in that last mile with the analysis and the results of that.
2525.72s - 2528.36s |  So I know we have a few minutes left.
2529.24s - 2532.92s |  Anybody have any questions or anything related to what we've covered?
2536.32s - 2536.82s |  Go ahead.
2537.62s - 2540.02s |  How are you, you know, these sorts of data,
2540.02s - 2544.20s |  you know, there's these are offers and stuff like that.
2544.20s - 2547.08s |  But say, you know, you're, you're looking to do,
2547.88s - 2562.12s |  like, trace labs, but, you know, listed out there in images and stuff like that.
2562.84s - 2566.68s |  Where, besides X, you know, where, where would I go,
2566.68s - 2573.64s |  where things like that, where would you find availability for?
2573.64s - 2577.24s |  Yeah, I have found over the years,
2578.20s - 2583.56s |  the source, the sources that are best are related to the type of thing you're doing.
2583.56s - 2585.08s |  So here's an example.
2585.08s - 2588.84s |  So, yeah, X may have a plethora of data in the case of like,
2588.84s - 2589.88s |  I'll give a few examples.
2589.88s - 2592.20s |  The first being the Russian-Ukrainian war.
2592.20s - 2596.76s |  But we also found that the second most useful resource was actually Discord.
2596.76s - 2599.96s |  So people were posting stuff from around the world on there
2599.96s - 2602.68s |  that were both pro-Russian as well as pro-Ukrainian,
2602.68s - 2605.48s |  you know, not to get into the political side of it,
2605.48s - 2609.24s |  but there was, like, valuable data coming in from, like, both sides.
2609.24s - 2613.24s |  So those became a wealth of information for the type of research we did.
2613.24s - 2615.88s |  Did we get information from other locations too?
2615.88s - 2619.08s |  Sure, we got stuff from Facebook and Instagram and other locations,
2619.08s - 2622.12s |  but I would say those were the two standouts in terms of the war.
2623.32s - 2626.28s |  In other types of, you know, analysis and investigation,
2626.28s - 2629.40s |  we've done, for example, an imminent weather event.
2629.40s - 2632.04s |  You know, I live in Cape Coral, Florida, you know,
2632.04s - 2635.40s |  and we were hit directly by Hurricane Ian, you know.
2635.96s - 2639.24s |  And really trying to get that intelligence,
2639.24s - 2643.32s |  I was going out there and gathering all kinds of weather-related data.
2643.32s - 2646.44s |  I was also doing it not by just hitting up social media,
2646.44s - 2651.88s |  but RSS feeds and other things were incredibly useful for my OSINT data collection.
2651.88s - 2654.52s |  So I was able to gather a lot of that information,
2654.52s - 2657.00s |  you know, quite handy as well.
2657.00s - 2659.00s |  And that became a really important data source.
2659.00s - 2660.84s |  It was like, who uses RSS anymore?
2660.84s - 2662.44s |  And it was like, it's like bigger than ever.
2662.44s - 2665.00s |  I couldn't believe how much data was out there, you know.
2665.00s - 2667.96s |  So at the end of the day, I think it becomes, you know,
2667.96s - 2670.20s |  it becomes a little bit part of the tradecraft
2670.20s - 2673.80s |  in kind of determining like the type of investigation you're doing
2673.80s - 2678.84s |  and what the most useful, you know, locations are for that type of data.
2678.84s - 2681.32s |  You know, I don't know if that fully answers your question,
2681.32s - 2682.28s |  but that's what I've learned.
2682.76s - 2693.53s |  Yeah, right, exactly.
2694.09s - 2694.81s |  Cool.
2694.81s - 2696.25s |  I know someone had a question over here.
2705.82s - 2710.22s |  Yeah, there are options to assign weighted values to it as well.
2710.22s - 2713.26s |  There's a bunch of dropdowns I didn't really get into in a lot of detail
2713.26s - 2715.98s |  in like a 40-minute presentation, but you're absolutely right.
2715.98s - 2719.10s |  So whether it's in AWS or within Azure,
2719.10s - 2723.42s |  there are a lot of those weighted options and thresholds and performance stuff
2724.22s - 2726.54s |  that you can actually validate as you train
2726.54s - 2728.70s |  and then retrain and go through those iterations.
2728.70s - 2729.26s |  Good point.
2729.26s - 2730.22s |  Yep, absolutely.
2731.58s - 2732.38s |  Go ahead.
2732.38s - 2740.79s |  Oh, interesting.
2741.19s - 2747.91s |  Um, I know that in the example for Azure with Power Automate and Power Apps,
2747.91s - 2750.39s |  you can do it kind of like a live feed.
2750.39s - 2758.15s |  So as an example, I've done labs with X or formerly Twitter doing exactly that.
2758.15s - 2762.23s |  So as the tweets are coming out more based on the live feed,
2762.23s - 2765.27s |  whereas what you're viewing in the app is it may be a second old,
2765.27s - 2767.19s |  but it's historical data, right?
2767.19s - 2773.35s |  Using the live streaming Tweepy API versus the historical feed, right?
2773.35s - 2776.31s |  So techniques like that, yes, you know, to leverage that.
2776.31s - 2777.59s |  So the short answer is yes.
2777.59s - 2780.15s |  And I think that becomes a little part of the tradecraft too.
2780.15s - 2784.63s |  I know Chet and I did a presentation a few years ago on how to use Tweepy to do that with,
2785.27s - 2789.67s |  at the time it was Twitter, you know, but we also tested when it morphed into X as well.
2790.31s - 2792.23s |  I'm sorry, there's so many people raising their hands.
2792.23s - 2792.55s |  Go ahead.
2817.34s - 2820.46s |  We have and we demonstrated it in the Packet Hacking Village.
2821.34s - 2823.34s |  I think two years ago.
2823.98s - 2825.82s |  So if you go back and look at those videos,
2825.82s - 2829.82s |  we created a Python tool and a little mini UI for doing that.
2829.82s - 2834.30s |  And it would collect from multiple sources to do that kind of thing.
2834.30s - 2838.14s |  Again, kind of based on the tradecraft and knowing what you wanted to collect.
2838.14s - 2841.66s |  Again, we use the Russian-Ukrainian War because there was a ton of data around that.
2841.66s - 2843.18s |  We also did it around the election,
2843.18s - 2848.30s |  the previous election and things like that too, excuse me, to collect that data.
2848.30s - 2850.70s |  So the short answer is yes, you can definitely do that.
2850.70s - 2852.70s |  The APIs may be quite different.
2852.70s - 2856.38s |  So the API for Discord versus X versus all these different things
2856.38s - 2859.26s |  are all slightly proprietary unto themselves, right?
2859.26s - 2860.86s |  But the short answer is yes.
2860.86s - 2861.10s |  Yeah.
2861.90s - 2863.02s |  Someone had a question over here.
2863.58s - 2863.90s |  Go ahead.
2873.24s - 2876.28s |  I can't, honestly, I can't really comment on that
2876.28s - 2879.48s |  because it's changing so much and there's so many different laws.
2879.48s - 2880.12s |  Yeah.
2880.12s - 2882.04s |  So you're absolutely right.
2883.48s - 2886.12s |  The only advice I would really give is what you would expect,
2886.12s - 2889.08s |  which is like check your local vicinity, your country,
2889.32s - 2893.24s |  all of those things and see what you are and are not allowed to do.
2893.24s - 2895.08s |  There's so many overlapping laws now,
2895.08s - 2898.68s |  I'd probably get myself in trouble making any kind of recommendation.
2898.68s - 2899.88s |  So my apologies.
2899.88s - 2900.60s |  So, yeah.
2916.73s - 2921.69s |  So what you're talking about is testing to see
2922.49s - 2926.01s |  if you've created something that it will accidentally miss.
2926.57s - 2927.05s |  Yeah.
2927.05s - 2927.45s |  Yeah.
2927.45s - 2928.09s |  So I have.
2928.09s - 2931.69s |  And that was in a presentation a couple of years ago when I did the AWS one.
2931.69s - 2936.33s |  What I did in that particular one was I come from a steganography background.
2936.33s - 2940.97s |  So I was really looking for creative ways to circumvent the detection,
2940.97s - 2943.45s |  basically, for the optical character recognition.
2943.45s - 2946.01s |  In that presentation, I covered a couple of different types.
2946.65s - 2949.93s |  The easiest one was taking a Word document,
2951.45s - 2954.89s |  making it a black background instead of a white background,
2954.89s - 2960.41s |  and then changing the shade of my characters to just one off
2960.41s - 2962.41s |  from the main page.
2962.41s - 2964.57s |  So it looked like black on black.
2964.57s - 2967.21s |  If you looked at it at histogram or other type of analysis,
2968.01s - 2971.29s |  the exposure type of analysis, you would see it.
2971.29s - 2974.57s |  But I wanted to see if the AI could actually detect it or not.
2974.57s - 2975.13s |  And it didn't.
2975.69s - 2977.93s |  But I talked about that in the presentation.
2977.93s - 2981.13s |  So in the point I had made was like,
2981.13s - 2987.37s |  and I think the presentation I did at the time was remaining covert in an overt world.
2987.37s - 2989.05s |  I did it in the packet hacking village.
2989.05s - 2991.05s |  I think it was in that presentation where I talked about
2991.05s - 2994.57s |  how you could covertly communicate in a whole bunch of different ways.
2994.57s - 2995.53s |  And that was one of them.
2995.53s - 2998.81s |  And I showed how the optical character recognition didn't detect it.
2998.81s - 3000.25s |  So does that kind of help?
3000.25s - 3001.61s |  Is that we were kind of wondering?
3001.61s - 3002.25s |  Yeah.
3002.25s - 3002.65s |  Yeah.
3002.65s - 3006.25s |  If you're interested in that topic, that particular presentation,
3006.25s - 3008.33s |  I cover a bunch of other methods too.
3008.33s - 3008.89s |  Yep.
3008.89s - 3010.97s |  So any other questions?
3010.97s - 3011.47s |  Oh, go ahead.
3012.19s - 3015.07s |  So I see we have that string surface.
3015.07s - 3016.27s |  We have an object surface.
3018.19s - 3023.07s |  If we're looking for, let's say, an object with a specific variation,
3023.71s - 3028.59s |  do we have to then create that object dictionary with those variations in it?
3030.19s - 3033.23s |  So let's say I need to find this way of hearing
3033.23s - 3037.79s |  that has specifically no upcapping from the ground up.
3037.87s - 3041.95s |  I'm going to have to upload 100, 500 images of that with no upcapping.
3041.95s - 3042.75s |  What will it be?
3042.75s - 3046.19s |  Like, for an individual, like maybe a face tattoo or a scar.
3046.19s - 3049.63s |  At what point do I get to answer that in regularity?
3049.63s - 3054.59s |  Because sometimes that is really the difference between getting the info to the...
3055.47s - 3056.11s |  Yeah.
3056.11s - 3058.03s |  It's a complex answer.
3058.03s - 3062.19s |  So I'll see if I can kind of answer it with my knowledge.
3063.15s - 3070.43s |  One, the most key ingredient in that case, in my opinion, would be the bounding boxes.
3070.43s - 3075.71s |  Having bounding boxes focused on a smaller portion of a picture.
3075.71s - 3079.23s |  Because in most cases, you're going to have a picture of the whole car,
3079.23s - 3081.07s |  including the wheels and the hubcaps.
3081.07s - 3085.39s |  Not just pictures of wheels with hubcaps or not hubcaps, right?
3085.39s - 3091.87s |  And then in addition, you're looking for maybe the front left tire only, right?
3091.87s - 3096.51s |  And how does the AI know, like, am I looking at the driver's side of the car
3096.51s - 3098.27s |  or the passenger side of the car?
3098.27s - 3099.39s |  And those kinds of things.
3099.39s - 3102.91s |  So I think a little bit of it would be testing.
3102.91s - 3109.71s |  But the root of it, in my opinion, it starts with the bounding boxes type stuff.
3109.71s - 3113.87s |  So you're kind of training it to do a more refined look at every image,
3113.87s - 3116.43s |  which is mostly like each one is going to be a car.
3116.43s - 3118.59s |  And the car is going to be at different angles,
3118.59s - 3121.95s |  but that you specifically want to focus on the wheels and the hubcaps.
3121.95s - 3127.47s |  I know that on the Azure side, when you go through the training,
3127.47s - 3131.39s |  it will ask you the level of refinement that you want for those bounding boxes.
3131.39s - 3134.43s |  And in addition, the kinds of things you're actually looking for.
3134.43s - 3136.59s |  So it'll help you kind of get started with it.
3136.59s - 3139.31s |  And then you could kind of iterate with it too, you know, from there.
3140.83s - 3141.63s |  Sound cool? You're welcome.
3142.35s - 3144.27s |  Cool. Well, awesome.
3144.27s - 3146.99s |  I know we're probably, yeah, we're right at 150.
3146.99s - 3149.15s |  So thanks so much for attending.
3149.15s - 3151.63s |  I hope you guys got a couple good nuggets out of this.
3151.63s - 3153.23s |  And thanks so much for coming.