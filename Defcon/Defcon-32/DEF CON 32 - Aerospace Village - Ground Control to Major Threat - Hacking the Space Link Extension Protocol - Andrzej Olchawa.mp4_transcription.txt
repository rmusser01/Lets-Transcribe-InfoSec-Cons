{
  "webpage_url": "local:1731742209:a551b449:DEF CON 32 - Aerospace Village - Ground Control to Major Threat - Hacking the Space Link Extension Protocol - Andrzej Olchawa.mp4",
  "title": "DEF CON 32 - Aerospace Village - Ground Control to Major Threat - Hacking the Space Link Extension Protocol - Andrzej Olchawa.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 3.32s | This text was transcribed using whisper model: large-v2

 OK, so I'm going to start.
3.32s - 5.12s |  My name is Andy.
5.12s - 8.96s |  I work as an open source security in space industry
8.96s - 11.28s |  in Europe.
11.28s - 17.44s |  How many of you know or how many of you work in space industry?
17.44s - 18.24s |  How many of you?
18.24s - 20.48s |  OK, that's some hands up.
20.48s - 25.58s |  How many of you know what the SLE is?
25.58s - 27.98s |  OK, that's like three people.
27.98s - 29.70s |  Excellent.
29.70s - 35.76s |  So hacking satellites is not a new thing, obviously.
39.04s - 43.04s |  However, most of the discussion revolve around the space
43.04s - 47.36s |  segment and the means of directly hacking
47.36s - 50.68s |  or accessing the satellite.
50.68s - 55.64s |  However, I would argue that it is the ground segment that
55.64s - 60.96s |  is more likely to be targeted by the adversaries.
60.96s - 69.04s |  And that's mainly because of the large attack surface
69.04s - 71.20s |  that it presents.
71.20s - 73.00s |  So in this presentation, I will briefly
73.00s - 77.04s |  compare the space segment with the ground segment
77.04s - 80.00s |  as in terms of attack surface.
80.00s - 84.60s |  I will introduce you to the SLE protocol and some security
84.60s - 86.12s |  aspects of it.
86.12s - 88.24s |  And then I will proceed to demonstrate
88.24s - 93.08s |  how you can exploit some exploitation
93.08s - 99.64s |  methods of the protocol and some mitigations against them.
99.64s - 102.44s |  So just very briefly, every space mission
102.44s - 106.68s |  can be divided loosely into space segment and the ground
106.68s - 107.40s |  segment.
107.40s - 108.82s |  And the ground segment, of course,
108.82s - 110.72s |  also include the user segment for simplicity.
113.96s - 115.68s |  In general, the space segment usually
115.68s - 118.48s |  is much more complex than the ground segment.
118.48s - 119.88s |  However, if you think about it, it
119.88s - 122.64s |  is just like one node in the whole system.
122.64s - 126.16s |  So the satellite is a very complete node.
126.16s - 129.36s |  However, there is only one interface, one entry point
129.36s - 130.60s |  interface.
130.60s - 134.32s |  And because of that, it has a very small attack surface.
134.32s - 136.28s |  And the ground segment, on the other hand,
136.28s - 141.84s |  has less complex elements to it, but there are many available.
141.84s - 147.96s |  And because of that, it imposes much larger attack surface.
147.96s - 151.44s |  On top of that, communicating directly with spacecraft
151.44s - 154.40s |  is quite challenging, and not because
154.40s - 157.08s |  of the technical aspects of it, but because
157.08s - 161.44s |  of the environmental aspects, like visibility, orbit,
161.44s - 165.16s |  and also the distance from Earth.
165.16s - 171.48s |  And on the other hand, the ground segment,
171.48s - 173.08s |  or it uses standard infrastructure,
173.08s - 177.24s |  which means that most of its components
177.24s - 183.52s |  are also vulnerable to the vulnerabilities that
183.52s - 187.20s |  are present in any other infrastructure or software
187.20s - 190.36s |  that we are using on a daily basis.
190.36s - 192.44s |  And because most of the applications
192.44s - 194.72s |  that are used in space industry on the ground segment
194.72s - 197.68s |  are custom development, I would say
197.68s - 201.16s |  that that creates some additional avenues
201.16s - 204.64s |  to find new vulnerabilities in it.
204.64s - 212.16s |  And then again, to try to hack the ground segment components,
212.16s - 216.92s |  there is no sophisticated equipment required.
216.92s - 221.48s |  So this is an extremely high level representation
221.48s - 224.08s |  of a space mission, where we divide space segment
224.08s - 227.72s |  and separate it from the ground segment.
227.72s - 230.32s |  Obviously, on the space segment, you
230.32s - 233.00s |  have a space asset, which this might be a spacecraft.
233.00s - 235.20s |  And then you have a ground station that communicates
235.20s - 236.04s |  with the spacecraft.
236.04s - 240.20s |  You have a mission control that uses ground station
240.20s - 242.36s |  to communicate with the spacecraft.
242.36s - 245.44s |  And then you have users that use the mission control
245.44s - 247.52s |  applications.
247.52s - 251.64s |  And they either work internally on dedicated workstations,
251.64s - 255.64s |  or they connect remotely through a VPN, or jump hosts,
255.64s - 258.52s |  or whatever you might have.
258.56s - 261.08s |  Now, my argument is that it's going
261.08s - 263.76s |  to be much easier to hack this thing that you
263.76s - 266.40s |  see on the screen than actually build it in order
266.40s - 271.28s |  to communicate with many satellites, which
271.28s - 273.76s |  you would like to hack.
273.76s - 276.80s |  So what is SLE?
276.80s - 280.92s |  SLE is a protocol developed or created
280.92s - 285.12s |  by CCSDS standardization body.
285.12s - 286.68s |  It's a standard.
286.72s - 290.92s |  It is used to send telecommands and receive telemetry
290.92s - 293.04s |  from spacecraft.
293.04s - 295.04s |  It is based on TCP IP.
295.04s - 300.80s |  It supports transport layer and encoding and authentication.
300.80s - 302.00s |  And it can have two roles.
302.00s - 304.96s |  One is the SLE provider, which is, in our case,
304.96s - 306.48s |  like a ground station.
306.48s - 309.88s |  And then you have SLE user, which is like a mission control
309.88s - 312.87s |  system.
312.87s - 316.55s |  So in a nutshell, it defines a protocol
316.55s - 322.55s |  to transfer the PDUs using the TCP for transfer,
322.55s - 326.47s |  for data transfer, and ASL1 for data encoding.
326.47s - 329.47s |  And in the system, there are two places.
329.47s - 331.11s |  Well, OK, there could be many places.
331.11s - 333.75s |  But in principle, there are at least two places
333.75s - 335.55s |  where the SLE is used.
335.55s - 338.03s |  It is in the communication between the MCS, which
338.03s - 341.83s |  is mission control system, and the ground station,
341.83s - 348.43s |  and also between the ground station and the space asset.
348.43s - 351.75s |  But because we are hacking the ground segment,
351.75s - 353.51s |  we are focusing only on the link that
353.51s - 355.63s |  is highlighted on the slide.
355.63s - 357.55s |  So here is this slide.
357.55s - 359.99s |  Here you can see all the organizations and most
359.99s - 363.03s |  of the companies that use, or the most famous companies that
363.03s - 367.67s |  use the SLE to some extent.
367.67s - 369.87s |  If you look on the standard itself,
369.87s - 372.35s |  at the documentation, here is a list of all agencies
372.35s - 375.87s |  that are responsible for development of the standard.
375.87s - 378.99s |  So there are quite a few of them.
378.99s - 382.83s |  And there are at least three times more
382.83s - 385.75s |  different organizations, public and private companies,
385.75s - 390.79s |  using the standard for space operations.
390.79s - 395.07s |  Also, some of the ground segment specialized equipment
395.07s - 397.43s |  comes with support to SLE.
397.43s - 399.11s |  If you look at the, for instance,
399.11s - 404.71s |  Safran Cortex devices, they all support SLE.
404.71s - 408.07s |  And also here, NASA space, near space network,
408.07s - 412.03s |  they probably share that they are also
412.03s - 416.27s |  supporting SLE protocols on the list of their interfaces
416.27s - 418.95s |  and capabilities.
418.95s - 421.51s |  So for the purpose of this research,
421.51s - 424.47s |  we focus only on the commanding capabilities.
424.47s - 428.95s |  So it is called FCLT, which is Forward Communication
428.95s - 432.87s |  and Transport Unit, transmission unit.
432.87s - 434.67s |  And it is basically the thing that you
434.67s - 436.79s |  are sending to spacecraft.
436.79s - 439.07s |  It combines it, or the service that you
439.07s - 442.43s |  are using to send telecommands to spacecraft.
442.43s - 445.39s |  It defines a number of, quite a decent list
445.39s - 447.27s |  of different types of operations.
447.27s - 449.15s |  But for this research, we are focusing only
449.15s - 453.91s |  on the bind, unbind to establish a connection and disconnect.
453.91s - 456.75s |  And then start and stop to set up certain properties
456.75s - 458.67s |  on the ground station equipment.
458.67s - 462.51s |  And then we also look at the transfer data operation,
462.51s - 467.98s |  which is used to send the actual telecommands to spacecraft.
467.98s - 472.30s |  Now, as per documentation, there is no data privacy.
472.30s - 477.54s |  That comes with the SLE as a protocol, and also standard.
477.54s - 480.30s |  It comes with a sequence numbering.
480.30s - 486.18s |  And this is supposed to be helped in preventing injection.
486.18s - 488.78s |  It's potentially seizing control of spacecraft,
488.78s - 492.26s |  but that doesn't really work.
492.26s - 495.74s |  There is an easy way to bypass this restriction.
495.74s - 498.22s |  And also, there is an authentication
498.22s - 501.14s |  that is provided out of the box.
501.14s - 504.22s |  However, it's very susceptible to many of the middle attacks
504.22s - 508.26s |  because of the lack of encryption.
508.26s - 511.38s |  So later, I will show you the demos how this actually
511.38s - 513.58s |  can work in practice.
513.58s - 519.10s |  We have a very simple test environment,
519.10s - 525.26s |  where we assume that, so this is assumed breach testing.
525.26s - 529.70s |  We assume that the adversaries are in the network already.
529.70s - 533.22s |  And we have a SLE provider that plays a role
533.22s - 538.22s |  as a ground station, which is like a simple Debian VM.
538.22s - 541.70s |  And with European Space Agency SLE API implementation
541.70s - 543.46s |  installed on it.
543.46s - 546.50s |  SLE user is another VM, which plays a role as a mission
546.50s - 548.42s |  control system.
548.42s - 549.14s |  It's also Debian.
549.14s - 551.06s |  And the SLE implementation used there
551.06s - 556.54s |  is the simple Python SLE, which is like a PID package.
556.54s - 558.54s |  You can download it.
558.54s - 561.02s |  And this is just to demonstrate that it doesn't really matter
561.02s - 563.06s |  what is the implementation of the SLE.
563.06s - 566.22s |  As long as you're using any SLE or any implementation that
566.22s - 568.50s |  follows the standard, your operations
568.50s - 572.02s |  are going to be vulnerable to those attacks, which
572.02s - 573.86s |  I'm going to demonstrate.
573.86s - 575.82s |  So because there is no encryption,
575.82s - 579.34s |  we thought that the best idea would
579.34s - 583.90s |  be to wrap our attack scenarios within the many middle attack
583.90s - 584.98s |  technique.
584.98s - 587.82s |  So at the high level, we do the ARP spoofing.
587.82s - 590.34s |  We capture the data at the TCP frame level.
590.34s - 592.62s |  We decode them using the ISP1.
592.62s - 594.26s |  We decode the ISP1 frames.
594.30s - 597.18s |  I will explain what it is in a second.
597.18s - 598.90s |  And then we manipulate the content
598.90s - 601.18s |  of the SLEs that are going to be sent to SpaceCraft.
601.18s - 605.30s |  And then we update the TCP frame and then push it forward
605.30s - 606.22s |  to the receiving part.
609.58s - 611.90s |  OK, everyone knows how the ARP spoofing works.
611.90s - 613.66s |  I'm going to skip that part.
613.66s - 615.58s |  We basically grab the packets and put it
615.58s - 617.94s |  in the net filter queue.
617.94s - 619.26s |  And then we process them.
619.26s - 622.54s |  So the interesting part is the processing part.
624.34s - 628.82s |  As I mentioned before, the data is obviously
628.82s - 631.10s |  in the TCP frame data field.
631.10s - 634.38s |  And these are the SLE PDUs elements,
634.38s - 636.18s |  which are in the ISP1 format.
636.18s - 641.58s |  Now, ISP1 is based on the ASN1 encoding,
641.58s - 644.78s |  which is basically a simple tagline value
644.78s - 647.38s |  data, which is very easy to decode.
647.38s - 650.90s |  And however, there are a few, apart from the TLV,
650.90s - 655.14s |  there are a few custom structures
655.14s - 658.62s |  and context-related sequences, which
658.62s - 660.70s |  you would have to struggle a little bit to decode.
660.70s - 662.50s |  But the standard is pretty well described.
662.50s - 667.46s |  So it didn't take too much time to figure out what they are.
667.46s - 670.10s |  So as I mentioned before, in our demo,
670.10s - 672.54s |  we are focusing only on the telecommanding part,
672.54s - 675.86s |  because our goal is to start sending something
675.86s - 679.90s |  to SpaceCraft to the ground station.
679.90s - 687.02s |  Once you decode the data using the ASN1 encoding,
687.02s - 690.58s |  you have to map it to the FCLTU structures.
690.58s - 693.18s |  And this is also something that is described in the standard,
693.18s - 696.02s |  so it's available to everyone.
696.02s - 697.74s |  And that's what we used.
697.74s - 702.86s |  So this is an example of a bind message or bind operation
702.86s - 707.98s |  between the mission control system and the ground station.
707.98s - 710.14s |  So we can see that we have an ISP header,
710.14s - 712.14s |  then you have a main structure, which is followed
712.14s - 714.50s |  by the additional structure.
714.50s - 717.62s |  And then somewhere in the middle, we have the credentials.
717.62s - 720.30s |  And there's also some additional elements,
720.30s - 722.74s |  which you can overwrite or you can play with.
725.74s - 731.38s |  Again, there is no encryption, so all those bytes are,
731.38s - 733.82s |  they mean what it says, right?
733.82s - 738.58s |  So in terms of demo, just to establish the baseline,
738.58s - 741.18s |  I will show you how the typical communication
741.18s - 744.38s |  between the NCS and the ground station looks like.
744.38s - 746.98s |  In this demo, you will see that first we are doing the binding
746.98s - 749.74s |  between the two nodes, then we are sending the,
749.74s - 753.10s |  we are asking the receiving node to start the operations.
753.10s - 755.90s |  We are sending some data, then we are stopping,
755.90s - 760.06s |  and then we are unbinding it.
760.06s - 768.25s |  And I will try to play the video.
768.25s - 771.25s |  Let me know if you can see it.
771.25s - 775.17s |  Okay, so on the top screen, you see the,
775.17s - 779.25s |  on the bottom part, you see the SLE provider.
779.25s - 783.89s |  On the top, you see the SLE user.
783.89s - 785.21s |  The provider is the ground station,
785.21s - 788.29s |  and the user is the mission control system.
788.29s - 797.26s |  So we start the SLE provider, and then we run our test.
797.26s - 801.02s |  You can see that we have first established the connection.
801.02s - 804.30s |  We send the bind, which was the successful operation,
804.30s - 810.79s |  and then we are sending the start operation,
810.79s - 813.75s |  and then we are sending the data.
813.75s - 815.47s |  We are sending the data to the ground station.
815.51s - 824.67s |  So this string of bytes is what's going to get eventually
824.67s - 827.27s |  to the spacecraft, like some of those bytes.
827.27s - 834.35s |  And then we stop it, and then we unbind, right?
834.35s - 847.87s |  So that's like the nominal situation.
847.87s - 852.94s |  So what happens then?
852.94s - 855.54s |  So one of the things, the first things which we can do
855.58s - 859.58s |  is to cause a little bit of denial of service
859.58s - 862.70s |  by preventing the users from authenticating
862.70s - 864.10s |  to the ground station.
864.10s - 868.02s |  And the reason why it's an annoying way of doing this
868.02s - 870.18s |  for the user is because the SLE provider,
870.18s - 873.18s |  when the user fails authentication,
873.18s - 875.10s |  the SLE provider simply drops the connection.
875.10s - 877.54s |  There is no feedback whatsoever.
877.54s - 880.74s |  So the users don't know what is the reason
880.74s - 883.18s |  of failing the connection.
883.18s - 885.66s |  It's only the ground station that knows.
885.66s - 888.54s |  So in this case, we basically do the same.
888.54s - 893.02s |  We try to grab the bind operation,
893.02s - 895.26s |  which has a very well-defined structure.
895.26s - 898.10s |  So when you're monitoring what's happening on the wire,
898.10s - 900.50s |  you can easily find patterns,
900.50s - 903.02s |  and then you can simply mangle the bytes
903.02s - 905.82s |  which are responsible for the authentication.
905.82s - 921.06s |  So what's going to happen?
921.06s - 923.90s |  So what's going to happen is the following.
923.90s - 926.78s |  On the right-hand side, you have our exploit.
926.78s - 928.70s |  And then on the right-hand side,
928.70s - 931.26s |  you have at the bottom, you again have SLE provider,
931.26s - 936.42s |  and on the top is our MCS,
936.42s - 940.06s |  mission control system that connects to the ground station.
940.06s - 941.34s |  So we start the R-spoofing,
941.34s - 953.36s |  and we start observing the communication between the both.
953.36s - 956.04s |  And then you can see,
956.04s - 961.44s |  despite the fact that we have sent the bind request,
961.44s - 962.64s |  we didn't succeed.
962.64s - 967.40s |  There is an exception on the SLE implementation,
967.40s - 977.66s |  but there is no feedback going back to the user.
977.66s - 981.06s |  So at this point, we cannot really do anything.
981.06s - 987.89s |  We see the authentication failure.
987.89s - 992.73s |  So this way, you can create a denial-of-service
992.73s - 997.67s |  as long as you're in the network.
997.67s - 1003.36s |  So the next demo,
1003.36s - 1005.84s |  this is also quite similar to the previous one,
1005.84s - 1008.00s |  but here we are actually grabbing the credentials
1008.00s - 1012.84s |  because, as I mentioned before, we can actually reuse them.
1012.84s - 1017.20s |  So here you will see grabbing the credentials
1017.20s - 1019.40s |  from the bind message
1019.40s - 1030.16s |  and then display them on the screen.
1030.16s - 1034.99s |  It's a similar situation.
1034.99s - 1037.55s |  So we started our exploit.
1037.55s - 1039.63s |  We start the SLE provider.
1039.63s - 1045.18s |  We start our MCS.
1045.18s - 1046.38s |  We capture the credentials.
1046.38s - 1048.50s |  The bind is successful,
1048.50s - 1049.82s |  but we did capture the credentials,
1049.82s - 1053.82s |  so now we can reuse them.
1053.82s - 1056.54s |  The credentials are encrypted,
1056.54s - 1058.98s |  but it doesn't matter because you will see later
1058.98s - 1063.38s |  that SLE as a protocol is vulnerable to replay attacks.
1063.38s - 1066.38s |  So you can just grab them,
1066.38s - 1079.63s |  and then you can use them for your own connection.
1079.63s - 1080.75s |  I'm trying to...
1080.75s - 1083.11s |  Okay, so as I mentioned before,
1083.11s - 1087.23s |  we can let the management operations go as they are,
1087.23s - 1090.03s |  and instead we can, in a stealth mode,
1090.03s - 1092.31s |  try to tamper with the data themselves,
1092.31s - 1094.95s |  the ones that are going to get to the spacecraft.
1094.95s - 1096.27s |  So we're going to...
1096.27s - 1099.83s |  In this case, we're not going to do anything to the operations.
1099.83s - 1102.87s |  We only capture the frames
1102.87s - 1107.19s |  which contain the transfer data PDFs,
1107.19s - 1112.11s |  and then we change the content of the commands
1112.11s - 1125.15s |  that are being sent to spacecraft.
1125.15s - 1128.23s |  So here, basically, at the bottom screen,
1128.23s - 1130.83s |  at the bottom side, you can see on the left side,
1130.83s - 1133.99s |  you can see the SLE provider or the ground station
1133.99s - 1136.63s |  and then mission control system on the right side.
1136.63s - 1138.87s |  And then on top, you can see our exploit,
1138.87s - 1146.27s |  which is searching for a specific string of bytes
1146.27s - 1158.44s |  and then replaces it with something else.
1158.44s - 1162.48s |  So because there is absolutely no verification
1162.48s - 1166.88s |  of what the MCS is actually sending to the ground station,
1166.88s - 1168.40s |  and the ground station simply takes it
1168.40s - 1172.20s |  and forwards it to the spacecraft,
1172.20s - 1173.72s |  this can be done in a stealth mode,
1173.72s - 1176.04s |  and it's going to be very difficult,
1176.04s - 1178.84s |  unless you are monitoring for our spoofing.
1178.84s - 1182.40s |  It's going to be difficult for the operators to realize
1182.40s - 1183.44s |  that they are sending something
1183.44s - 1198.69s |  that they have not meant to send.
1198.69s - 1201.49s |  This is the string which we...
1201.49s - 1204.65s |  This is what the MCS sent,
1204.65s - 1209.33s |  and this is what has been received at the ground station.
1209.33s - 1212.33s |  However, we can see that in the communication,
1212.33s - 1216.69s |  everything is verified, everything is fine.
1216.69s - 1219.69s |  Neither MCS nor ground station complain about it.
1219.69s - 1233.70s |  So this way, we can send whatever we want to spacecraft.
1233.70s - 1236.10s |  And so I think the most interesting demo
1236.10s - 1240.90s |  is where you can actually take all those elements together,
1240.90s - 1242.98s |  and you can prepare and exploit in a way
1242.98s - 1247.02s |  that it will take over or let you take over the SLE session.
1247.02s - 1249.22s |  So here we are capturing the bind
1249.22s - 1251.46s |  and manipulate the credential structures
1251.46s - 1253.90s |  in order to prevent authentication.
1253.90s - 1256.86s |  Then we reuse the credentials which we have captured
1256.86s - 1260.06s |  for our own SLE session.
1260.06s - 1263.50s |  And we can keep on using those credentials
1263.50s - 1266.78s |  for as long as it is defined in the authentication delay
1266.78s - 1271.02s |  of the SLE provider configuration.
1271.06s - 1273.58s |  And from what I have seen so far,
1273.58s - 1276.66s |  it is a very long delay
1276.66s - 1280.78s |  because of the propagation delay
1280.78s - 1284.06s |  and all the distance,
1284.06s - 1288.90s |  depending on the distance between the Earth and the spacecraft.
1288.90s - 1291.70s |  By default, this value is usually around 600 seconds.
1291.70s - 1296.26s |  So that's a lot of time to actually cause a damage
1296.26s - 1300.06s |  and start sending something that is going to make some trouble
1300.10s - 1303.60s |  on the spacecraft side.
1303.60s - 1310.49s |  So here it is.
1310.49s - 1313.81s |  It is a semi-automated exploit
1313.81s - 1319.45s |  because I want to show you how this works in details.
1319.45s - 1322.53s |  So we are starting on the right-hand side.
1322.53s - 1324.21s |  We are starting the SLE provider.
1324.21s - 1327.33s |  On the right-hand side, on the top, we are starting the MCS.
1327.33s - 1331.17s |  MCS tries to bind, but it fails.
1331.17s - 1334.81s |  Our exploit caught the credentials,
1334.81s - 1336.85s |  and then we are going to copy those credentials
1336.85s - 1346.73s |  and reuse them in another exploit.
1346.73s - 1349.13s |  As you can see, nothing really happened on the ground station.
1349.13s - 1351.29s |  There is an exception, but that's because
1351.29s - 1353.97s |  that implementation doesn't handle it properly.
1353.97s - 1355.61s |  But from the ground segment,
1355.61s - 1357.21s |  from the ground station point of view,
1357.21s - 1360.89s |  that's a nominal situation
1360.89s - 1363.13s |  because someone tried to authenticate.
1364.13s - 1366.05s |  So nothing happened on the ground station.
1366.05s - 1367.85s |  We're going to keep on waiting, and then in the meantime,
1367.85s - 1372.53s |  the adversaries can actually bind to the ground station
1372.53s - 1378.49s |  as if they were a legitimate mission control system.
1378.49s - 1389.16s |  And then we managed to bind to the ground station.
1389.16s - 1392.60s |  We are starting the typical management operations,
1392.60s - 1399.28s |  and then we are sending the data as adversaries or as the MCS,
1399.28s - 1406.83s |  but we are adversaries in this case.
1406.83s - 1411.03s |  So that's basically how you take over control of a spacecraft
1411.03s - 1417.40s |  if you have access to the ground station.
1417.40s - 1420.76s |  So in conclusion, it was just one of the methods
1420.76s - 1423.12s |  that you can take over the control of spacecraft
1423.12s - 1426.56s |  using SLE protocol.
1426.56s - 1429.48s |  As mentioned before, we focus only on the commanding parts,
1429.48s - 1432.28s |  but there is also telemetry part,
1432.28s - 1434.40s |  which if you can imagine,
1434.40s - 1439.88s |  there are quite nasty things you can do with telemetry
1439.88s - 1442.28s |  and how we can mangle the bytes
1442.28s - 1445.04s |  and how we can affect the operations
1445.04s - 1450.40s |  by changing the telemetry that the spacecraft is receiving.
1450.40s - 1452.76s |  So important bit is that all that knowledge
1452.76s - 1455.56s |  which I presented here is based on OSINT.
1455.56s - 1459.20s |  All the standards, all the documentations are public,
1459.20s - 1462.00s |  so you can go and have a look.
1462.00s - 1464.96s |  CCSDS is trying to mitigate those issues
1464.96s - 1467.72s |  providing space data link security.
1467.72s - 1469.56s |  However, this is only between the ground station
1469.56s - 1472.68s |  and the spacecraft itself.
1472.68s - 1475.16s |  The ground segment is still going to be vulnerable,
1475.16s - 1480.44s |  and our argument will be that CCSDS PKI concept
1480.44s - 1483.80s |  could be used instead of SDS
1483.80s - 1487.12s |  to enable TSL-like features on the ISP level,
1487.12s - 1488.36s |  and therefore all the communication
1488.36s - 1490.44s |  would be encrypted and everything.
1490.44s - 1492.60s |  All the issues which I'm presenting today,
1492.60s - 1496.74s |  they will go away.
1496.74s - 1498.90s |  Currently, we are discussing with European Space Agency
1498.90s - 1499.90s |  to...
1499.90s - 1502.34s |  Currently, we are discussing space agency with...
1502.34s - 1505.70s |  We want to make some additional tests,
1505.70s - 1507.46s |  and here is the list of all resources.
1507.46s - 1509.78s |  You can have a look,
1509.78s - 1512.26s |  and the publication is going to be available
1512.26s - 1514.50s |  as of today on this website,
1514.50s - 1516.90s |  so you can have a look at all the details,
1516.94s - 1518.62s |  how it is...
1518.62s - 1522.78s |  what I have just described in this presentation,
1522.78s - 1523.82s |  so thanks.
1523.82s - 1525.82s |  Thank you very much.