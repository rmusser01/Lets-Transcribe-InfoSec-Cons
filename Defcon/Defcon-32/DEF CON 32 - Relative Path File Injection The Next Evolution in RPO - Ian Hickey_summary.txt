**Introduction to Relative Path File Injection (RPFI)**
- **Relative Path Overwrite (RPO)**: Known attack that injects malicious CSS via browser path quirks.
- **Relative Path File Injection (RPFI)**: New attack vector allowing malicious files download through trusted sites.

**Discovery and Presentation**
- **Presenter**: Ian Hickey, a software developer with a focus on security.
- **Event**: DEF CON 32, AppSec Village.

**RPO vs RPFI**
- **RPO**: Injects CSS into HTML pages, exploits path confusion.
- **RPFI**: Similar techniques to RPO but targets file downloads.

**Technical Insights**
- **Injecting JavaScript**: Use of **AngularJS** for JavaScript execution in restricted contexts.
- **Lenient Parsers**: Allow execution of JavaScript in unexpected places (e.g., PDFs).
- **PDF Files**: Can execute JavaScript and submit forms; exploited in RPFI.

**Attack Demonstration**
- **PDF Injection**: Malicious HTML can be saved as a PDF and execute JavaScript.
- **Download Manipulation**: Users download different content than intended.

**Exploiting Other File Types**
- **SVG, XML, Markdown, and Rich Text**: Explored for potential exploits.
- **Shell Scripts**: Can execute HTML when downloaded as a shell script.

**Mitigation Strategies**
- **Base Tags**: Use to prevent relative paths.
- **Content Security Policy**: Implement to protect against attacks.
- **Server Vulnerability Checks**: Test for path handling vulnerabilities.

**Research and Community Involvement**
- **GitHub Repository**: Open source proof of concepts for RPFI.
- **Encouragement**: Explore more file types and vulnerabilities for further research and bug bounties.