{
  "webpage_url": "local:1731818139:62c14571:DEF CON 32 - Car Hacking Village - How I discovered and hacked Learning Codes of the key job of a car assembled in my country - Danilo Erazo.mp4",
  "title": "DEF CON 32 - Car Hacking Village - How I discovered and hacked Learning Codes of the key job of a car assembled in my country - Danilo Erazo.mp4",
  "description": "Local file",
  "channel_url": null,
  "duration": null,
  "channel": null,
  "uploader": null,
  "upload_date": null
}

0.00s - 1.46s | This text was transcribed using whisper model: large-v2

 Yo, hello.
1.46s - 3.84s |  Yo, my Gs.
3.84s - 5.52s |  Welcome to my presentation.
5.52s - 7.92s |  For me, it's a pleasure to stay here.
7.92s - 10.72s |  I'm so happy to share that research.
10.72s - 13.60s |  So I'm going to show how I discovered
13.60s - 16.18s |  that I can unlock those avocados in my country.
16.18s - 19.76s |  So the principal topic is breaking learning codes.
19.76s - 23.20s |  Please get up your hands if someone
23.20s - 28.50s |  know about learning codes, how to hack learning codes.
28.50s - 30.06s |  Two people.
30.06s - 30.98s |  OK.
30.98s - 39.38s |  So right now, I'm going to show who I am.
39.38s - 43.82s |  My official work is a penetration tester.
43.82s - 44.62s |  Why I say that?
44.62s - 47.78s |  Because in South America, we don't
47.78s - 50.90s |  have automatic cybersecurity companies.
50.90s - 54.62s |  So I do the research alone because I
54.62s - 56.54s |  learn car hacking alone.
56.62s - 63.62s |  So in my free time, I do hardware security research.
63.62s - 65.10s |  OK?
65.10s - 67.58s |  I create Reverse Everything, a YouTube channel
67.58s - 70.14s |  where I upload all my research.
70.14s - 74.70s |  So I am 28 years old from Ecuador.
74.70s - 77.34s |  We don't have anything about car hacking security,
77.34s - 78.50s |  nothing about that.
78.50s - 81.82s |  So I do alone.
81.82s - 83.34s |  I'm going to show about introduction
83.34s - 84.78s |  about learning codes.
84.78s - 86.94s |  After that, the hardware hacking.
86.94s - 89.06s |  After that, I'm going to learn how
89.06s - 91.74s |  to set a backdoor in the keyless entry system.
91.74s - 94.06s |  After that, collision problems that
94.06s - 96.90s |  appears if you use learning codes.
96.90s - 99.78s |  And after that, I'm going to show the Auto RAF Killer.
99.78s - 102.78s |  It's the tool that I developed to unlock cars
102.78s - 106.50s |  with fixed learning code and rolling code using
106.50s - 108.74s |  the no attacks.
108.78s - 114.98s |  So I was trying to find a CAN injection.
114.98s - 120.30s |  So when I connect my OBD port to the interface OBD2,
120.30s - 124.74s |  I find the CAN ID 545 is the ID that
124.74s - 130.22s |  appears when you unlock or lock the car with the KFOB control.
130.22s - 131.02s |  OK?
131.02s - 135.58s |  So I say, hey, let's go to do the research
135.58s - 139.70s |  about the keyless entry system, the radio frequency system.
139.70s - 142.86s |  So here we have a universal radio hacker.
142.86s - 144.50s |  I record the signal.
144.50s - 147.06s |  This is the signal to unlock the car.
147.06s - 149.86s |  And after that, I proceed to demodulate the signal.
149.86s - 154.10s |  The signal is in 370 megahertz.
154.10s - 157.02s |  I demodulate with ASK modulation.
157.02s - 162.10s |  And I use a symbol per second of 500, OK?
162.10s - 166.46s |  So if you see, we have the unlock signal to,
166.46s - 168.06s |  and after that, the lock signal.
168.06s - 169.62s |  After that, unlock signal.
169.62s - 176.06s |  Again, we see we have the first row is a fixed code.
176.06s - 178.26s |  The second row is the same fixed code.
178.26s - 180.10s |  So I say, hey, what the hell is that?
180.10s - 181.74s |  This isn't really code, OK?
181.74s - 186.34s |  So I say, I need to do a deeper research about that.
186.34s - 191.06s |  So the unlock signal in hexadecimal format,
191.06s - 194.14s |  the previously slide is in bit format.
194.14s - 197.42s |  In hexadecimal format is that signal.
197.42s - 204.90s |  So what happen if you see that there is a fixed code that
204.90s - 206.82s |  repeat many times?
206.82s - 210.90s |  And the lock signal is very similar to the unlock signal.
210.90s - 216.10s |  So just the three last hexadecimal digits change.
216.10s - 219.22s |  OK, so I say, hey, let's go to verify the replay attack.
219.22s - 220.90s |  So this is a fixed code.
220.98s - 225.70s |  And right now, I am in the fifth floor in Abandoned Build-It.
225.70s - 227.26s |  And the car is in the first floor.
227.26s - 233.54s |  So this is the first time that I was able to unlock my car.
233.54s - 239.46s |  So let's go to listen the song when the car is unlocked.
239.46s - 252.36s |  So with Universal Radio Hacker, I send the signal.
252.36s - 256.20s |  After that, I send the signal to lock the car.
256.20s - 261.84s |  So I don't know if you listen, but from here, I listen.
261.84s - 264.24s |  So I verify with that replay attack
264.24s - 268.36s |  that my car use something like fixed code.
268.36s - 272.68s |  So I disassembled the K4, and I found a learning code chip.
272.68s - 276.12s |  The learning code chip is HS2240.
276.12s - 279.08s |  If you find that in internet, you
279.08s - 282.76s |  are going to find that this is a learning code chip.
282.76s - 284.56s |  So what the hell is learning code?
284.56s - 286.56s |  Learning code is similar to fixed code.
286.56s - 288.92s |  The difference is in the programmation mode.
288.92s - 295.08s |  In fixed code, you have the code soldered to the board in the K4.
295.08s - 298.12s |  But in learning code, you have the pin
298.12s - 299.96s |  into the integrated circuit.
299.96s - 302.80s |  So another difference is that when
302.80s - 305.40s |  you are going to program in fixed code,
305.40s - 308.28s |  you don't have to do a programmation.
308.28s - 310.64s |  In learning code, you have the teacher,
310.64s - 313.76s |  this is the K4, the learning code
313.76s - 316.32s |  to the microcontroller receiver.
316.32s - 321.24s |  So when the microcontroller receiver listen the code
321.24s - 326.16s |  to the antenna, microcontroller save that code in his memory.
326.16s - 330.08s |  And he's able to save up to four different learning codes.
330.08s - 334.88s |  So keep it in mind, because this is useful information
334.88s - 339.84s |  to set up backdoor in a few minutes in the other slides.
339.84s - 342.16s |  So this is a learning code.
342.16s - 346.24s |  Each K4 has a different learning code, OK?
346.24s - 347.20s |  Each K4.
347.20s - 350.00s |  And each card has a different learning code.
350.00s - 353.96s |  And each K4 has a different learning code, OK?
353.96s - 355.28s |  So keep in mind.
355.28s - 358.04s |  So let's go to the hardware hacking.
358.04s - 364.24s |  If you disassemble the vulnerable K4,
364.24s - 369.48s |  we found an oscillator and 370 megahertz batteries
369.60s - 371.68s |  that we assume two batteries.
371.68s - 373.92s |  We have 6.38 volts.
373.92s - 376.12s |  It's important to do mathematics calculation
376.12s - 379.36s |  to the brute force attack that I am going to do in a few slides.
379.36s - 382.52s |  After that, we identify the ASK modulation.
382.52s - 386.24s |  Remember that we have to do a modulation
386.24s - 389.52s |  to set to the LED RF transmit.
389.52s - 394.36s |  So the final signal is ascending to the LED RF transmit.
394.36s - 398.64s |  And also, we have here a multimeter to check.
398.64s - 401.24s |  So let's go to the burn the circuit.
401.24s - 403.16s |  We have four inputs.
403.16s - 407.76s |  Remember that the K4 has four buttons.
407.76s - 411.04s |  So each button is translated to one.
411.04s - 414.40s |  For example, if I press one button of the four buttons,
414.40s - 416.24s |  I have 1, 0, 0, 0.
416.24s - 419.96s |  If I press the second button, I have 0, 1, 0, 0.
419.96s - 425.92s |  And each signal pass through a pull-down resistor.
425.92s - 429.04s |  So after the pull-down resistor,
429.04s - 432.32s |  enter to the integrated circuit.
432.32s - 436.68s |  So we have four entries, K0, K1, K2, K3.
436.68s - 439.20s |  And the output is through the pin number 3.
439.20s - 443.84s |  So the learning code encoded exit through the pin number 3.
443.84s - 446.00s |  And in the left, we have the ASK modulation
446.00s - 449.52s |  with capacitors, resistors, inductors, and more.
449.52s - 453.88s |  So the final modulator learning code encoded
453.88s - 457.16s |  go out by the LED.
457.16s - 459.80s |  So keep in mind, because we have four modes.
459.80s - 462.28s |  So how do the learning code is formatted?
462.28s - 463.76s |  It's like the frame.
463.76s - 465.48s |  The frame is a preamble.
465.48s - 468.00s |  After that, we have 20-bit code.
468.00s - 470.64s |  After that, we have four bits of the mode.
470.64s - 472.88s |  Remember, each mode is a button.
472.88s - 476.04s |  So in 20 bits, we have one million possibility code.
476.04s - 481.12s |  So 2 to power 20 bits, we have one million possibility code.
481.12s - 484.24s |  And in mode, we have four bits.
484.24s - 487.28s |  So here we have the different modes
487.28s - 494.24s |  that are able to enter to the integrated circuit.
494.24s - 498.04s |  So the preamble, here we have the bits of the learning code.
498.04s - 500.00s |  20 bits of learning code, four bits more.
500.00s - 502.44s |  So the preambles, I get 96 bits.
502.44s - 506.16s |  So 96 subtract 20 bits of the learning code
506.16s - 507.56s |  subtracts 40 bits of the mode.
507.56s - 510.76s |  We have 72 bits preamble.
510.88s - 513.24s |  And here we have 96 bits.
513.24s - 518.28s |  But 72 bits of preamble, I don't know sure.
518.28s - 521.24s |  So that's the reason that I do a hardware hacking
521.24s - 523.32s |  with a logic analyzer.
523.32s - 526.52s |  This is logic analyzer LA5016 that
526.52s - 530.56s |  is able to record up to 500 megahertz.
530.56s - 533.04s |  So here's the connection.
533.04s - 536.28s |  Channel 1 is to the transmit pin, the pin number 3,
536.28s - 540.60s |  ground to ground, and channel 2 into the H input system,
540.60s - 543.16s |  for example, K0, K1, K2, and K3.
543.16s - 550.24s |  And a multimeter to check the voltage pin.
550.24s - 553.84s |  So what do we get when we do that?
553.84s - 558.20s |  For example, if we press the first button, the K0,
558.20s - 561.00s |  we have that signal in the transmit pin.
561.00s - 566.76s |  This is the learning code that repeats 25 times.
566.76s - 569.20s |  And after that, we have the preamble of the next signal.
569.24s - 570.80s |  So when we press the button, we have
570.80s - 573.56s |  the pulse in the channel 1.
573.56s - 576.76s |  So the duration of the pulse is the duration
576.76s - 577.80s |  that we press the button.
577.80s - 579.72s |  So if we press the button one more,
579.72s - 584.04s |  we have one more of learning codes, the same learning code.
584.04s - 587.24s |  So the same with K1, the same with K2,
587.24s - 589.52s |  that is the button to unlock the car.
589.52s - 592.56s |  The same with the K3, that is the button to lock the car.
592.56s - 596.08s |  So if we assume what we have, for example,
596.08s - 598.64s |  here is the learning code.
598.64s - 602.36s |  Here is the learning code 1, 2, 3, 4, and more learning code.
602.36s - 604.36s |  If we do assume to the learning code,
604.36s - 611.72s |  we have a pulse 0, a pulse with more duration,
611.72s - 613.20s |  and a 0 with less duration.
613.20s - 615.00s |  So I say, hey, what that means?
615.00s - 620.48s |  If I get it when I record the signal with a HAC RF,
620.48s - 623.36s |  I say I get 1, 0, 1, 0.
623.36s - 626.64s |  But how I translate that to 1, 0, 1, 0?
626.64s - 631.32s |  Because here I have a pulse that is longer than that pulse.
631.32s - 635.12s |  And here I have a 0 that is longer than that 0.
635.12s - 637.76s |  So I say, hey, this is encoded.
637.76s - 639.08s |  So this is encoded.
639.08s - 641.88s |  So after reversing the encodification,
641.88s - 644.20s |  after reading a lot of data sheets,
644.20s - 647.48s |  I achieved to discover the encoding to the learning code.
647.48s - 650.28s |  So I get the learning code with logic on the large cell.
650.28s - 656.36s |  So the integrated chip sends a 0 with four bits.
656.36s - 660.44s |  And it sends a 1 bit with four bits.
660.44s - 662.76s |  So for example, if the integrated code
662.76s - 667.72s |  wants to send 0, it sends 1, 0, 0, 0.
667.72s - 673.28s |  And if the integrated circuit wants to send 1 bit,
673.28s - 675.88s |  the 1 bit is sent to 1, 1, 1, 0.
675.88s - 680.76s |  So for example, here we have 1, 0, three 0's.
680.76s - 684.08s |  And also we have here 1, 1, 1, 0.
684.08s - 687.72s |  So here we have a 1, and here we have a 0.
687.72s - 691.76s |  So after that, the preamble is a constant.
691.76s - 697.68s |  The preamble is a constant of the 1 bit and 31 0's.
697.68s - 702.00s |  So that's the reason that when we get that signal with logic
702.00s - 705.52s |  analyzer, we have here the preamble 1 bit and 31 0's.
705.52s - 709.32s |  And after that here, for example, we have 0, 1, 0, 1,
709.32s - 711.12s |  1, 0, 0, and so.
711.12s - 713.88s |  And the mode also is encoded with that codification.
713.88s - 718.08s |  We have here a 1, 0, 0, 0.
718.08s - 719.28s |  OK?
719.28s - 721.84s |  So after that, we have all the information
721.84s - 724.12s |  to encode or decode any signal.
724.12s - 725.68s |  So how I verify that?
725.68s - 727.96s |  Remember that 96 bits.
727.96s - 732.16s |  So if we multiply 20 bits by 4 bits,
732.16s - 738.40s |  and plus 4 bits by 4 bits of the mode, we have 96 bits.
738.40s - 741.84s |  So this is the reason that at the start of the presentation,
741.84s - 744.40s |  we have recorded 96 bits.
744.40s - 745.04s |  OK?
745.04s - 749.68s |  So after that, we have the preamble of the next frame,
749.68s - 751.68s |  of the next learning code.
751.68s - 752.88s |  So why do I do that?
752.88s - 756.44s |  Because I see data sheets that say
756.44s - 758.96s |  me bad information, fake information
758.96s - 761.44s |  for use for us, like hackers.
761.44s - 764.16s |  For example, there are another vulnerable radio frequency
764.16s - 764.66s |  chips.
764.66s - 768.64s |  For example, there are also the HS1527,
769.04s - 777.52s |  24, the HS2241, and more, the HTCP20D, the HTCP20B,
777.52s - 778.64s |  and more.
778.64s - 781.40s |  So if you read the data sheet, the data sheet
781.40s - 785.00s |  say something like, hey, it can reduce any code collision
785.00s - 787.20s |  and authorize it co-scanning possibilities.
787.20s - 790.36s |  So hey, are you sure we are going to probe the opposite?
790.36s - 793.64s |  Because I discovered the encodification,
793.64s - 794.84s |  the encodification, and more.
794.88s - 799.56s |  So I built a general radio block that do a brute force attack.
799.56s - 805.16s |  This is the brain of the attack, is that block that I built.
805.16s - 807.36s |  And this is ASK modulation.
807.36s - 809.24s |  We have here repeated interpolation
809.24s - 811.56s |  to better the signal.
811.56s - 813.72s |  Here we have the carrier signal.
813.72s - 815.96s |  Multiply, we have the modulated signal,
815.96s - 820.44s |  and a trouble to maintain to the sample rate.
820.44s - 820.96s |  OK?
820.96s - 825.04s |  And after that, we send that to the OSMO com scene
825.04s - 828.32s |  that is compatible with our hack LF.
828.32s - 838.08s |  OK, so let's go to see how I am able to unlock the car with
838.08s - 840.68s |  my general radio brute force attack.
840.68s - 843.72s |  So the car right now is locked.
843.72s - 854.23s |  I run my general radio script, and right now, the car
854.23s - 855.31s |  is unlocked.
855.31s - 855.87s |  So simple.
855.87s - 858.15s |  The brute force is customizable.
858.15s - 863.19s |  You can set parameters, for example,
863.19s - 866.07s |  the delay between each signal.
866.07s - 868.59s |  And after that, I created AutoRefKiller.
868.59s - 871.63s |  It's a tool that I developed to unlock whatever car that
871.63s - 874.63s |  use learning code, fixed code, or rolling code
874.67s - 876.59s |  with roll jam attacks.
876.59s - 880.75s |  So let's go to the city to unlock
880.75s - 882.15s |  hundreds of vulnerable cars.
882.15s - 885.03s |  So here we have the real gangster hacker.
885.03s - 886.71s |  This is a pet black hacker.
886.71s - 889.47s |  Don't use my pet, please.
889.47s - 900.47s |  So here, I show about how I perform in Akia Soluto.
900.47s - 906.51s |  OK, so right now, I run the brute force attacks.
906.51s - 914.51s |  I remember that the brute force attack take one minute,
914.51s - 915.35s |  I guess.
915.35s - 920.55s |  And in one minute, my script was able to unlock the car.
920.55s - 925.11s |  So OK, remember, each car has a different learning code.
925.11s - 931.23s |  And each car is able to save up to four different learning
931.23s - 932.43s |  codes.
932.43s - 936.91s |  OK, so right now, I'm going to check the car is locked.
936.91s - 945.87s |  And after I run my script, right now, the script is running.
957.30s - 958.58s |  And let's go to wait.
958.58s - 962.50s |  And in a few minutes, the car will be unlocked.
962.50s - 967.86s |  Each signal is sent through each 30 milliseconds.
967.86s - 972.78s |  But you can set that parameter to, I don't know,
972.78s - 973.98s |  60 milliseconds.
973.98s - 976.82s |  If you have more interference, you
976.82s - 980.14s |  are able to send with a more delayed.
980.14s - 986.21s |  OK, right now, we have a TRU.
986.21s - 989.53s |  So it's the same attack.
990.25s - 997.53s |  So the carrier was able to unlock the car with two
997.53s - 998.69s |  different learning codes.
998.69s - 1003.45s |  Remember, each car had between two learning codes
1003.45s - 1005.89s |  up to four different learning codes.
1005.89s - 1014.19s |  So let's go to ZotuC quickly.
1014.19s - 1016.03s |  So we check the car is locked.
1016.03s - 1020.95s |  And after I run my script, I am able to unlock the car.
1023.06s - 1025.46s |  All right, now the car is locked.
1025.46s - 1031.14s |  OK, and final, with another Renault X, I don't know.
1031.14s - 1034.66s |  Remember, there is a possibility that you
1034.66s - 1040.74s |  go to a car keyless entry system.
1040.74s - 1046.62s |  And there are a possibility that your car, the car dealership,
1046.62s - 1049.22s |  install you a vulnerable keyless entry system
1049.22s - 1050.54s |  with learning code.
1050.58s - 1055.02s |  So I guess that in Renault, I don't see the model.
1055.02s - 1060.13s |  I guess that this is the case.
1060.13s - 1063.01s |  Also, there are vulnerable cars like Kia Picanto
1063.01s - 1065.97s |  and more cars in Ecuador.
1065.97s - 1067.17s |  So I'm from Ecuador.
1067.17s - 1073.84s |  I forget to say that, I guess.
1073.84s - 1081.02s |  So this is a real attack in the streets.
1081.02s - 1084.86s |  Right now, I unlocked the car.
1084.86s - 1087.50s |  So let's go to the next part.
1087.50s - 1089.98s |  Let's go to the setting backdoor in keyless entry system.
1089.98s - 1095.70s |  Remember that how we know that a malicious actor don't
1095.70s - 1099.10s |  send a backdoor into our keyless entry system?
1099.10s - 1099.94s |  We don't know.
1099.94s - 1102.86s |  So there are high probability.
1102.86s - 1107.42s |  Because in Latin America, in South America,
1107.42s - 1109.66s |  there are something like universal case.
1109.66s - 1112.42s |  Universal case, there is a fogging.
1112.42s - 1118.54s |  Because this is a case fog of the malicious actor
1118.54s - 1121.34s |  sent into the keyless entry system of many cars.
1121.34s - 1123.50s |  So this is where it's rolling code.
1123.50s - 1128.38s |  So 1K unlock N cars.
1128.38s - 1133.94s |  Because previously, the car was backdoorized.
1133.94s - 1137.10s |  OK, so let's go to backdoor inside a keyless entry system.
1137.10s - 1141.10s |  For that, we have the receiver microcontroller with STM8,
1141.10s - 1144.78s |  the horn, the voltage source to power on the circuit.
1151.13s - 1154.05s |  We don't have sound, but don't worry.
1154.05s - 1160.25s |  Right now, also, we have the hack RF, my SD device,
1160.25s - 1162.53s |  and also the auto RF killer that I
1162.53s - 1166.93s |  created to create a custom signal to create the backdoor.
1166.93s - 1172.53s |  And basically, I put in programmation mode
1172.53s - 1174.81s |  on the keyless entry system.
1174.81s - 1177.61s |  We connect the ignition to the voltage
1177.61s - 1179.85s |  and press a button six times.
1179.85s - 1183.97s |  So this is how to backdoorize the keyless entry system.
1183.97s - 1185.93s |  So after the keyless entry system
1185.93s - 1189.13s |  is in learning code programmation mode,
1189.13s - 1194.01s |  I send whatever signal, whatever signal.
1194.01s - 1199.05s |  For example, I put, for example, 1001001 or 001,
1199.05s - 1202.57s |  whatever, or 00000001.
1202.57s - 1204.57s |  So this is the backdoor code.
1204.57s - 1208.33s |  So right now, I use my tool.
1208.33s - 1211.17s |  I put the backdoor code right now.
1211.17s - 1222.05s |  And after that, the receiver will save that in his memory.
1222.05s - 1226.21s |  So right now, I connect ignition to the voltage
1226.21s - 1228.29s |  to put in programmation mode.
1228.29s - 1230.77s |  They are sounds.
1230.77s - 1236.13s |  And after that, I send the backdoor code.
1236.13s - 1240.13s |  And finally, I exit the programmation mode.
1240.13s - 1245.49s |  And after that, I am able to unlock the car
1245.49s - 1248.05s |  with my backdoor code.
1248.05s - 1252.41s |  So basically, I am able to unlock that car
1252.41s - 1268.42s |  with my hack RF.
1268.42s - 1271.30s |  So right now, I'm going to send the signal.
1271.30s - 1276.38s |  I am going to unlock the system with the hack RF.
1276.38s - 1282.78s |  So let's go to send the signal with the hack RF.
1282.78s - 1285.66s |  I lock the system, lock the system.
1285.66s - 1291.02s |  And if you listen, I know that you don't listen right now,
1291.02s - 1293.14s |  but trust me.
1293.14s - 1297.38s |  The system is on, so the system is unlocked with the backdoor.
1297.38s - 1299.02s |  OK.
1299.02s - 1301.86s |  There are also a collision problem.
1301.86s - 1303.94s |  What means the collision problem?
1303.94s - 1306.90s |  The most integrated chip learning code
1306.90s - 1310.42s |  use the same two to power 20 bits.
1310.42s - 1314.46s |  So the most integrated circuit chips learning code
1314.46s - 1316.14s |  have one million possibility code.
1316.14s - 1323.06s |  So what I mean, for example, if we take the AB1527 chip,
1323.06s - 1325.98s |  there are high probability that that chip have the same
1325.98s - 1327.98s |  learning code that have another chip that
1327.98s - 1329.46s |  use the same range.
1329.46s - 1334.70s |  For example, the HS2240, HS2241, and more.
1334.70s - 1335.62s |  Why I say that?
1335.62s - 1337.62s |  Because just in my country alone,
1337.62s - 1341.50s |  there are tons of cars that use that KLS entry system,
1341.50s - 1343.34s |  vulnerable KLS entry system.
1343.34s - 1348.02s |  So if we join all the cars in one place,
1348.02s - 1350.46s |  all of the cars of the world in one place
1350.46s - 1352.66s |  that use the learning codes, there
1352.66s - 1356.34s |  are high probability that if I take a random KFOB
1356.34s - 1359.22s |  and press the button, there are another cars
1359.22s - 1362.54s |  that will unlock or lock.
1362.54s - 1363.58s |  And why I say that?
1363.58s - 1369.50s |  Because there will come a time where the million codes will
1369.50s - 1372.98s |  be filed all over the world and will be a collision,
1372.98s - 1377.22s |  and no one will figure it out.
1377.22s - 1383.26s |  Or maybe this figure find out, or maybe this figure
1383.26s - 1384.74s |  has already been reached.
1384.74s - 1388.42s |  So that question, I put you in your mind.
1388.42s - 1392.22s |  So for example, my KFOB code unlock my car,
1392.22s - 1395.18s |  or I unlock a garage door in United States
1395.18s - 1398.94s |  because that learning codes also are
1398.94s - 1403.98s |  using in garage door and radio frequency devices protection.
1403.98s - 1407.22s |  So finally, I'm going to exploit everything.
1407.22s - 1415.22s |  This is a tool with 1,300 Python lines code.
1415.22s - 1417.46s |  So the first feature is to brute force learning codes
1417.46s - 1418.54s |  with our database.
1418.54s - 1421.50s |  I created a database that have all codification
1421.50s - 1424.70s |  of the integrated learning code chips.
1424.70s - 1428.70s |  So also, you can discover in backdoor codes in your car
1428.70s - 1430.22s |  running that brute force attack.
1430.22s - 1433.14s |  So for example, if you run and your car
1433.14s - 1435.54s |  was unlocked by another learning code,
1435.54s - 1438.66s |  your car is backdoorized.
1438.66s - 1440.50s |  Another is the brute force attack
1440.50s - 1441.62s |  with arbitrary parameters.
1441.62s - 1447.38s |  For example, if you want to run your chip
1447.38s - 1452.66s |  with custom parameters, you also are able to run that.
1452.66s - 1456.06s |  You also create a backdoor custom code or signal.
1456.06s - 1461.54s |  And also, you are able to perform a replay attack.
1461.54s - 1465.10s |  And finally, roll jam attack.
1465.10s - 1469.34s |  To do that, you need two SDR device
1469.34s - 1471.82s |  to unlock cars with rolling code.
1471.82s - 1479.77s |  So finally, let's go to see the tool.
1479.77s - 1483.77s |  So I entered the integrated chip name.
1483.77s - 1487.01s |  So the program sent me the information
1487.01s - 1488.57s |  about that integrated chip.
1488.57s - 1492.41s |  So we don't have anything more than put the radio frequency,
1492.41s - 1493.25s |  whatever frequency.
1493.25s - 1497.09s |  For example, in this case, 350, and the brute force attack
1497.09s - 1497.89s |  is performing.
1497.89s - 1502.21s |  So we need to wait on nothing more.
1502.21s - 1512.87s |  Also here, we execute a perform brute force attack
1512.87s - 1515.95s |  with 22 bits, not just 20 bits.
1515.95s - 1521.27s |  So you can set whatever number of bits.
1521.27s - 1525.43s |  You enter the start number to brute force attack
1525.43s - 1528.07s |  and the end number to finish the brute force attack,
1528.07s - 1530.27s |  the delays, and more.
1530.27s - 1536.55s |  And after that, I execute the option number four
1536.55s - 1538.23s |  to send a jamming signal.
1538.23s - 1543.51s |  So you also can use that tool to create jamming signals
1543.51s - 1544.83s |  in whatever frequency.
1544.83s - 1547.63s |  And you set the duration of the jamming.
1548.63s - 1550.03s |  OK.
1550.03s - 1557.46s |  And finally, finally, finally, also we
1557.46s - 1560.98s |  can choose the option number three
1560.98s - 1563.70s |  to record and replay a radio frequency signal
1563.70s - 1566.70s |  to discover your car is vulnerable to fixed code
1566.70s - 1569.22s |  or learning codes.
1569.22s - 1571.90s |  So you set the frequency.
1571.90s - 1576.70s |  You need my script and also the hack RF and nothing more.
1576.70s - 1580.90s |  So you record in 10 seconds the signal.
1580.90s - 1584.78s |  And immediately in 10 seconds, your signal is replayed again.
1594.15s - 1596.75s |  And finally, set a backdoor into the Kali's entry system.
1596.75s - 1598.19s |  You set the frequency.
1598.19s - 1602.75s |  And you put the bits, for example, 110, whatever.
1602.75s - 1607.19s |  So the script create the modulation, do everything.
1607.19s - 1613.50s |  So you just need to put the bits and nothing more.
1613.50s - 1614.94s |  So thank you so much.
1614.94s - 1619.89s |  This was breaking learning codes in my country.
1619.89s - 1621.81s |  Thank you so much.