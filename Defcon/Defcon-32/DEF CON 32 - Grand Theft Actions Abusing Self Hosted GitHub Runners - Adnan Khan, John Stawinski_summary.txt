**GitHub Actions and Security Vulnerabilities**
- **GitHub Actions**: A **CI/CD provider** for various projects with insecure defaults leading to vulnerabilities.
- **Self-Hosted Runners**: Machines executing jobs in workflows, prone to misconfigurations and exploitation.
- **PyTorch Attack**: Example of a vulnerability allowing direct code contribution and backdoor installation through compromised runners.

**Research and Exploitation Techniques**
- **Misconfigurations**: Identified at scale, enabling potential backdoor access to major projects.
- **Runner Compromise**: Exploiting non-ephemeral self-hosted runners for persistent access and privilege escalation.
- **GitHub Token**: A key element in post-exploitation, used for API and Git operations with varying permissions.

**Tools and Methods**
- **Gato Tool**: Used for identifying GitHub Actions vulnerabilities and automating runner takeovers.
- **CodeSearch and Sourcegraph Dorks**: Tools employed to search for repositories using self-hosted runners.
- **Runner-on-Runner Technique**: Installing a self-hosted runner on an existing compromised runner to evade detection.

**Attack Scenarios and Impact**
- **Supply Chain Attacks**: Potential widespread impact through compromised GitHub repositories and releases.
- **Token and Secret Exfiltration**: Accessing GitHub secrets and tokens for further exploitation and lateral movement.
- **AWS Key Compromise**: Demonstrated impact through unauthorized access to cloud resources and potential release tampering.

**Recommendations for Security**
- **Warning and Documentation**: Improve visibility and clarity of security warnings in GitHub documentation.
- **Secure Defaults**: Implement more secure default settings for workflow approvals and runner configurations.
- **Ephemeral Runners**: Encourage the use of ephemeral runners to limit the window of exploitation opportunities.

**Conclusion and Call to Action**
- **Awareness**: Emphasize the need for increased awareness and understanding of CICD security vulnerabilities.
- **Proactive Measures**: Encourage organizations to implement controls and secure configurations to prevent future attacks.