{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 4.0600000000000005,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Hi, everyone."
    },
    {
      "Time_Start": 4.0600000000000005,
      "Time_End": 7.5,
      "Text": " We are happy to be here at the BionConference."
    },
    {
      "Time_Start": 7.5,
      "Time_End": 13.3,
      "Text": " Today we are going to talk about Ghost in the DLM, a two-year journey of testing in"
    },
    {
      "Time_Start": 13.3,
      "Time_End": 18.7,
      "Text": " the wild LPX road in the North Commonwealth Fire Sector."
    },
    {
      "Time_Start": 18.7,
      "Time_End": 20.7,
      "Text": " My name is Chuan Jin."
    },
    {
      "Time_Start": 20.7,
      "Time_End": 24.900000000000002,
      "Text": " They are my two team members, Xi Shi and Guo Xianzhong."
    },
    {
      "Time_Start": 24.900000000000002,
      "Time_End": 30.900000000000002,
      "Text": " We are from BBATP Security Weaving Lab."
    },
    {
      "Time_Start": 30.900000000000002,
      "Time_End": 34.900000000000006,
      "Text": " This slide outlines the key points of our presentation."
    },
    {
      "Time_Start": 34.900000000000006,
      "Time_End": 41.900000000000006,
      "Text": " First, we will talk about our journey of testing in the wild LPX roads in the North Commonwealth"
    },
    {
      "Time_Start": 41.900000000000006,
      "Time_End": 42.900000000000006,
      "Text": " Fire Sector."
    },
    {
      "Time_Start": 42.900000000000006,
      "Time_End": 48.900000000000006,
      "Text": " Second, we will review a Pandora's box of the North Commonwealth Fire Sector X roads"
    },
    {
      "Time_Start": 48.900000000000006,
      "Time_End": 52.900000000000006,
      "Text": " and compare them with the work of other vendors."
    },
    {
      "Time_Start": 52.9,
      "Time_End": 58.9,
      "Text": " Third, we will discuss some samples that other vendors have overlooked."
    },
    {
      "Time_Start": 58.9,
      "Time_End": 66.9,
      "Text": " Finally, we will provide some insights into the transport in the wild Windows LP0 days."
    },
    {
      "Time_Start": 66.9,
      "Time_End": 72.9,
      "Text": " This page lists some previous researches on Windows Commonwealth Fire System, including"
    },
    {
      "Time_Start": 72.9,
      "Time_End": 78.9,
      "Text": " Death Note of Microsoft Windows Kernel by Ken Lam, Commonwealth Fire System Internals"
    },
    {
      "Time_Start": 78.9,
      "Time_End": 79.9,
      "Text": " by Alex."
    },
    {
      "Time_Start": 79.9,
      "Time_End": 85.9,
      "Text": " Tracking the Commonwealth Fire System by 360 and Windows Commonwealth Fire System and"
    },
    {
      "Time_Start": 85.9,
      "Time_End": 90.9,
      "Text": " file X roads used by ransomware operators by Kaspersky."
    },
    {
      "Time_Start": 90.9,
      "Time_End": 96.9,
      "Text": " Similarity with these words will help you better understand our talk."
    },
    {
      "Time_Start": 96.9,
      "Time_End": 105.9,
      "Text": " Next, we will divide our presentation into five parts."
    },
    {
      "Time_Start": 105.9,
      "Time_End": 110.9,
      "Text": " The first part is Start, where we will discuss how we began this work."
    },
    {
      "Time_Start": 110.9,
      "Time_End": 117.9,
      "Text": " The second part is Hunt, where we will explain how we hunt the first eight Commonwealth Fire"
    },
    {
      "Time_Start": 117.9,
      "Time_End": 118.9,
      "Text": " System X roads."
    },
    {
      "Time_Start": 118.9,
      "Time_End": 126.9,
      "Text": " We will provide a brief overview of each X road, including basic information and the"
    },
    {
      "Time_Start": 126.9,
      "Time_End": 128.9,
      "Text": " vulnerability root cause."
    },
    {
      "Time_Start": 128.9,
      "Time_End": 135.9,
      "Text": " The third part is Analyzing, focusing on our painful experience in analyzing the first"
    },
    {
      "Time_Start": 135.9,
      "Time_End": 142.9,
      "Text": " Commonwealth Fire System X roads and how we developed some tools to speed up the analysis."
    },
    {
      "Time_Start": 142.9,
      "Time_End": 147.9,
      "Text": " And share two more unpublished Commonwealth Fire System X roads."
    },
    {
      "Time_Start": 147.9,
      "Time_End": 153.9,
      "Text": " The first part is Variant, where we will share two Commonwealth Fire System vulnerabilities"
    },
    {
      "Time_Start": 153.9,
      "Time_End": 156.9,
      "Text": " that we discovered through variant analysis."
    },
    {
      "Time_Start": 156.9,
      "Time_End": 162.9,
      "Text": " The last part is Summary, where we will provide the relations between different Commonwealth"
    },
    {
      "Time_Start": 162.9,
      "Time_End": 166.9,
      "Text": " Fire System X roads and make a summary."
    },
    {
      "Time_Start": 166.9,
      "Time_End": 170.9,
      "Text": " Now, let's step into the Start section."
    },
    {
      "Time_Start": 170.9,
      "Time_End": 177.9,
      "Text": " We began our journey by catching the first Commonwealth Fire System X road in October"
    },
    {
      "Time_Start": 177.9,
      "Time_End": 182.9,
      "Text": " 2021, which triggered a YARA report we wrote for Pipe Tribute."
    },
    {
      "Time_Start": 182.9,
      "Time_End": 189.9,
      "Text": " This X road, with its CV under, achieved control flow hijacking by modifying the P"
    },
    {
      "Time_Start": 189.9,
      "Time_End": 190.9,
      "Text": " container pointer."
    },
    {
      "Time_Start": 190.9,
      "Time_End": 198.9,
      "Text": " For more details about this step, you can refer to my Black Hat USA 2022 presentation."
    },
    {
      "Time_Start": 198.9,
      "Time_End": 204.9,
      "Text": " Here, I want to highlight the P container member, which is illustrated in a diagram"
    },
    {
      "Time_Start": 204.9,
      "Time_End": 206.9,
      "Text": " from a blog of Kaspersky."
    },
    {
      "Time_Start": 206.9,
      "Time_End": 211.9,
      "Text": " This diagram is easy to understand, so I will close it here."
    },
    {
      "Time_Start": 211.9,
      "Time_End": 217.9,
      "Text": " P container is a key pointer exploited by the first and all subsequent Commonwealth"
    },
    {
      "Time_Start": 217.9,
      "Time_End": 219.9,
      "Text": " Fire System X roads we caught."
    },
    {
      "Time_Start": 219.9,
      "Time_End": 225.9,
      "Text": " All the X roads we caught focus on how to modify this member."
    },
    {
      "Time_Start": 225.9,
      "Time_End": 230.9,
      "Text": " So, let's see how the first X road modifies the P container."
    },
    {
      "Time_Start": 230.9,
      "Time_End": 237.9,
      "Text": " It modifies the P container by performing a 1-bit flip inside the Commonwealth Fire"
    },
    {
      "Time_Start": 237.9,
      "Time_End": 241.9,
      "Text": " System logSVB physical FlashMatterData function."
    },
    {
      "Time_Start": 241.9,
      "Time_End": 250.9,
      "Text": " Through this operation, it changed 1-bit of an offset, causing the Commonwealth Fire"
    },
    {
      "Time_Start": 250.9,
      "Time_End": 254.9,
      "Text": " System driver to load a fake P container."
    },
    {
      "Time_Start": 254.9,
      "Time_End": 262.9,
      "Text": " In April 2022, several Commonwealth Fire System vulnerabilities were reported, including one"
    },
    {
      "Time_Start": 263.9,
      "Time_End": 268.9,
      "Text": " reported by NSN and CrowdStrike."
    },
    {
      "Time_Start": 268.9,
      "Time_End": 274.9,
      "Text": " Additionally, the research paper on 360 attacking the Commonwealth Fire System was presented"
    },
    {
      "Time_Start": 274.9,
      "Time_End": 278.9,
      "Text": " at Black Hat Asia 2022 this month."
    },
    {
      "Time_Start": 278.9,
      "Time_End": 285.9,
      "Text": " At that time, we realized that more X roads in the Commonwealth Fire System may appear"
    },
    {
      "Time_Start": 285.9,
      "Time_End": 288.9,
      "Text": " in the future."
    },
    {
      "Time_Start": 289.90000000000003,
      "Time_End": 293.90000000000003,
      "Text": " When we realized this, we began a serious hunt journey."
    },
    {
      "Time_Start": 293.90000000000003,
      "Time_End": 298.90000000000003,
      "Text": " So, how do we better hunt these X roads?"
    },
    {
      "Time_Start": 298.90000000000003,
      "Time_End": 303.90000000000003,
      "Text": " First, let's review how the first X road was caught."
    },
    {
      "Time_Start": 303.90000000000003,
      "Time_End": 308.90000000000003,
      "Text": " It was detected by a YARA work we wrote for the pipe tribute technique."
    },
    {
      "Time_Start": 308.90000000000003,
      "Time_End": 314.90000000000003,
      "Text": " For more details, please refer to my presentation at Black Hat USA 2022."
    },
    {
      "Time_Start": 314.90000000000003,
      "Time_End": 321.90000000000003,
      "Text": " The Chinese philosopher Lao Tzu once said, the way backs one, one backs two, two backs"
    },
    {
      "Time_Start": 321.90000000000003,
      "Time_End": 323.90000000000003,
      "Text": " three, and three backs all things."
    },
    {
      "Time_Start": 323.90000000000003,
      "Time_End": 329.90000000000003,
      "Text": " By carefully studying the first X road, we can quickly find the second and the third."
    },
    {
      "Time_Start": 329.90000000000003,
      "Time_End": 333.90000000000003,
      "Text": " So, how did we analyze the first X road?"
    },
    {
      "Time_Start": 333.90000000000003,
      "Time_End": 340.90000000000003,
      "Text": " We studied it from multiplying dimensions, such as code similarity, PVB paths, X road"
    },
    {
      "Time_Start": 340.90000000000003,
      "Time_End": 342.90000000000003,
      "Text": " techniques, and strings."
    },
    {
      "Time_Start": 342.90000000000003,
      "Time_End": 349.90000000000003,
      "Text": " Additionally, Steve Jobs once said, stay hungry, stay foolish, means one should remain"
    },
    {
      "Time_Start": 349.90000000000003,
      "Time_End": 351.90000000000003,
      "Text": " humble and eager."
    },
    {
      "Time_Start": 351.90000000000003,
      "Time_End": 357.90000000000003,
      "Text": " Therefore, we actively collected and carefully studied information about Commonwealth Fire"
    },
    {
      "Time_Start": 357.90000000000003,
      "Time_End": 361.90000000000003,
      "Text": " System vulnerabilities disclosed by other vendors."
    },
    {
      "Time_Start": 362.90000000000003,
      "Time_End": 372.90000000000003,
      "Text": " Another month passed, and we caught the second Commonwealth Fire System X road, which also"
    },
    {
      "Time_Start": 372.90000000000003,
      "Time_End": 374.90000000000003,
      "Text": " triggered the pipe tribute work."
    },
    {
      "Time_Start": 374.90000000000003,
      "Time_End": 377.90000000000003,
      "Text": " This stamper was caught in May 2022."
    },
    {
      "Time_Start": 377.90000000000003,
      "Time_End": 384.90000000000003,
      "Text": " One interesting aspect of this stamper is that its PVB paths indicate that the author"
    },
    {
      "Time_Start": 384.90000000000003,
      "Time_End": 391.90000000000003,
      "Text": " believed he was writing an X road for CVE 2022-24521, but he's not."
    },
    {
      "Time_Start": 391.90000000000003,
      "Time_End": 396.90000000000003,
      "Text": " This X road was labeled by Kaspersky as X road 1."
    },
    {
      "Time_Start": 396.90000000000003,
      "Time_End": 403.90000000000003,
      "Text": " Let's take a look at where the P container point is modified in this stamper."
    },
    {
      "Time_Start": 403.90000000000003,
      "Time_End": 411.90000000000003,
      "Text": " It's still within CLFS, not CVE physical flush mentor data, but this time it's using"
    },
    {
      "Time_Start": 412.90000000000003,
      "Time_End": 425.90000000000003,
      "Text": " The third Commonwealth Fire System X road we caught was in a wild stamper of CVE 2022-24521."
    },
    {
      "Time_Start": 425.90000000000003,
      "Time_End": 430.90000000000003,
      "Text": " This was the real CVE 2022-24521."
    },
    {
      "Time_Start": 430.90000000000003,
      "Time_End": 436.90000000000003,
      "Text": " The vulnerability origin from a lack of proper validation on the signature's movie set of"
    },
    {
      "Time_Start": 436.90000000000003,
      "Time_End": 439.90000000000003,
      "Text": " CLFS log block header."
    },
    {
      "Time_Start": 440.90000000000003,
      "Time_End": 444.90000000000003,
      "Text": " Let's see how the stamper tampered with the P container."
    },
    {
      "Time_Start": 444.90000000000003,
      "Time_End": 451.90000000000003,
      "Text": " It modified the P container within the CLFS encode block function, and the CLFS encode"
    },
    {
      "Time_Start": 451.90000000000003,
      "Time_End": 459.90000000000003,
      "Text": " block function was called by the CLFS base file persisted write metadata block."
    },
    {
      "Time_Start": 461.90000000000003,
      "Time_End": 467.90000000000003,
      "Text": " In the same month, we also caught another in the wild Commonwealth Fire System X road."
    },
    {
      "Time_Start": 467.90000000000003,
      "Time_End": 469.90000000000003,
      "Text": " This time is a really zero day."
    },
    {
      "Time_Start": 469.90000000000003,
      "Time_End": 474.90000000000003,
      "Text": " The CVE number is CVE 2022-37969."
    },
    {
      "Time_Start": 474.90000000000003,
      "Time_End": 480.90000000000003,
      "Text": " This stamper also hit our pipe tribute row and many other rows."
    },
    {
      "Time_Start": 480.90000000000003,
      "Time_End": 486.90000000000003,
      "Text": " The X road code of the stamper used a different technique from the previous stampers."
    },
    {
      "Time_Start": 486.90000000000003,
      "Time_End": 494.90000000000003,
      "Text": " It employed the NTSC set access state generate matching and the CLFS earlier LSN function."
    },
    {
      "Time_Start": 494.90000000000003,
      "Time_End": 502.90000000000003,
      "Text": " For those interested, this galler had published two high-quality blog posts you can read there."
    },
    {
      "Time_Start": 503.90000000000003,
      "Time_End": 507.90000000000003,
      "Text": " Let's see how the stamper modified the P container."
    },
    {
      "Time_Start": 507.90000000000003,
      "Time_End": 514.9000000000001,
      "Text": " This time it was done in CLFS base file persisted a log symbol by using memory set."
    },
    {
      "Time_Start": 514.9000000000001,
      "Time_End": 518.9000000000001,
      "Text": " It particularly zeroed out the P container."
    },
    {
      "Time_Start": 519.9,
      "Time_End": 526.9,
      "Text": " One month later, we caught another new Commonwealth Fire System one day X road, which was also"
    },
    {
      "Time_Start": 526.9,
      "Time_End": 528.9,
      "Text": " detected by the pipe tribute row."
    },
    {
      "Time_Start": 528.9,
      "Time_End": 532.9,
      "Text": " We couldn't identify the CVE number for this X road."
    },
    {
      "Time_Start": 532.9,
      "Time_End": 539.9,
      "Text": " But what's interesting is that it introduced some new X road techniques, this including"
    },
    {
      "Time_Start": 539.9,
      "Time_End": 546.9,
      "Text": " hijacking virtual function codes in CLFS base file persisted check secure access and using"
    },
    {
      "Time_Start": 546.9,
      "Time_End": 555.9,
      "Text": " functions such as CLFS, MGMT to register management client, NTPOFX processor notification"
    },
    {
      "Time_Start": 555.9,
      "Time_End": 558.9,
      "Text": " and NTRK or clear read."
    },
    {
      "Time_Start": 558.9,
      "Time_End": 564.9,
      "Text": " Kaspersky had also discussed this stamper in their blog labelled as X road 2."
    },
    {
      "Time_Start": 564.9,
      "Time_End": 567.9,
      "Text": " Readers interested can refer to their blog."
    },
    {
      "Time_Start": 568.9,
      "Time_End": 572.9,
      "Text": " Let's see how the fifth stamper modified the P container."
    },
    {
      "Time_Start": 572.9,
      "Time_End": 579.9,
      "Text": " This time, it returned to the CLFS log FCP physical flush meter data function, but used"
    },
    {
      "Time_Start": 579.9,
      "Time_End": 581.9,
      "Text": " the F attributes instead."
    },
    {
      "Time_Start": 584.9,
      "Time_End": 592.9,
      "Text": " Another month passed and we caught the sixth CLFS X road, which also didn't have a CVE number."
    },
    {
      "Time_Start": 592.9,
      "Time_End": 597.9,
      "Text": " The X road technique used in this stamper is similar to the previous one."
    },
    {
      "Time_Start": 597.9,
      "Time_End": 603.9,
      "Text": " Kaspersky had also discussed this stamper in their blog labelled as X road 3."
    },
    {
      "Time_Start": 605.9,
      "Time_End": 608.9,
      "Text": " Let's see how the stamper modified the P container."
    },
    {
      "Time_Start": 608.9,
      "Time_End": 615.9,
      "Text": " This time, it was still within the CLFS log FCP physical flush meter data function, but"
    },
    {
      "Time_Start": 615.9,
      "Time_End": 618.9,
      "Text": " it used the LSTM restart number."
    },
    {
      "Time_Start": 619.9,
      "Time_End": 627.9,
      "Text": " By summarizing the strengths and X road techniques of different X roads, we can clearly identify"
    },
    {
      "Time_Start": 627.9,
      "Time_End": 629.9,
      "Text": " two different developers."
    },
    {
      "Time_Start": 629.9,
      "Time_End": 637.9,
      "Text": " We can roughly categorize the first and the top of thirds on the developer A and the second,"
    },
    {
      "Time_Start": 637.9,
      "Time_End": 642.9,
      "Text": " the first, the fifth, the sixth and a later one on the developer B."
    },
    {
      "Time_Start": 643.9,
      "Time_End": 653.9,
      "Text": " The next stamper we caught was CVE-2023-28252, but we decided to first discuss in the wild"
    },
    {
      "Time_Start": 653.9,
      "Time_End": 664.9,
      "Text": " sample of CVE-2023-23376, which we discovered when analyzing the CVE-2023-28252 X road."
    },
    {
      "Time_Start": 664.9,
      "Time_End": 668.9,
      "Text": " This is a zero day that was caught by Microsoft itself."
    },
    {
      "Time_Start": 668.9,
      "Time_End": 676.9,
      "Text": " Due to Kaspersky had provided detailed information about this vulnerability in their blog, and"
    },
    {
      "Time_Start": 676.9,
      "Time_End": 682.9,
      "Text": " they labelled it as X road 4, so I won't talk too much about this X road here."
    },
    {
      "Time_Start": 682.9,
      "Time_End": 686.9,
      "Text": " Interested readers can refer to their blog."
    },
    {
      "Time_Start": 687.9,
      "Time_End": 694.9,
      "Text": " The eighth X road we caught was CVE-2023-28258, another in the wild zero days."
    },
    {
      "Time_Start": 695.9,
      "Time_End": 700.9,
      "Text": " It was reported to Microsoft by us, Kaspersky and Mandiant."
    },
    {
      "Time_Start": 700.9,
      "Time_End": 706.9,
      "Text": " Kaspersky has also discussed this X road in their blog, labelled as X road 5."
    },
    {
      "Time_Start": 706.9,
      "Time_End": 710.9,
      "Text": " Again, I won't talk too much about this X road here."
    },
    {
      "Time_Start": 710.9,
      "Time_End": 713.9,
      "Text": " Interested readers can refer to their blog."
    },
    {
      "Time_Start": 714.9,
      "Time_End": 723.9,
      "Text": " After briefly sharing the eight common log file system X roads, we can move to the analyze section."
    },
    {
      "Time_Start": 724.9,
      "Time_End": 731.9,
      "Text": " First, I'd like to share with you how we analyzed the first common log file system X road."
    },
    {
      "Time_Start": 731.9,
      "Time_End": 739.9,
      "Text": " At that time, we were completely unfamiliar with Windows common log file system and BLF file format,"
    },
    {
      "Time_Start": 739.9,
      "Time_End": 743.9,
      "Text": " and there were few materials available for them."
    },
    {
      "Time_Start": 743.9,
      "Time_End": 751.9,
      "Text": " To analyze the first X road, we did a lot of debugging and reverse engineering, made us exhausted."
    },
    {
      "Time_Start": 752.9,
      "Time_End": 760.9,
      "Text": " Afterwards, we started developing a 010 enter template for parsing the BLF file format."
    },
    {
      "Time_Start": 760.9,
      "Time_End": 766.9,
      "Text": " With the template, analyzing the BLF log files became much easier."
    },
    {
      "Time_Start": 766.9,
      "Time_End": 770.9,
      "Text": " This greatly accelerated our analyzed speed."
    },
    {
      "Time_Start": 771.9,
      "Time_End": 779.9,
      "Text": " In addition to the 010 enter template, we also wrote a common log file system structure header file"
    },
    {
      "Time_Start": 779.9,
      "Time_End": 782.9,
      "Text": " that could be imported into Header."
    },
    {
      "Time_Start": 782.9,
      "Time_End": 789.9,
      "Text": " After importing the header file, reverse engineering of the common log file system driver became much easier."
    },
    {
      "Time_Start": 789.9,
      "Time_End": 796.9,
      "Text": " This greatly facilitated our analysis of common log file system X roads."
    },
    {
      "Time_Start": 797.9,
      "Time_End": 800.9,
      "Text": " Next, let's discuss a few questions."
    },
    {
      "Time_Start": 800.9,
      "Time_End": 807.9,
      "Text": " The first question is how to define whether a sample is a 0-day, 1-day, or N-day."
    },
    {
      "Time_Start": 807.9,
      "Time_End": 814.9,
      "Text": " The second question is how to determine the root cause of a common log file system vulnerability."
    },
    {
      "Time_Start": 818.9,
      "Time_End": 825.9,
      "Text": " The third question is how to classify a new X road under a specific common CDE."
    },
    {
      "Time_Start": 825.9,
      "Time_End": 835.9,
      "Text": " For the first question, we used the simplest method, creating three environments to distinguish the three types of X roads."
    },
    {
      "Time_Start": 835.9,
      "Time_End": 843.9,
      "Text": " For the second question, we typically used the 010 template to parse the fields of the tampered BLF file"
    },
    {
      "Time_Start": 843.9,
      "Time_End": 850.9,
      "Text": " to locate the files that facilitate the identification of the vulnerability's root cause."
    },
    {
      "Time_Start": 850.9,
      "Time_End": 860.9,
      "Text": " For cases where 010 template is not enough, we will use reverse engineering and debugging for further confirmation."
    },
    {
      "Time_Start": 861.9,
      "Time_End": 866.9,
      "Text": " During the analysis process, we also discovered some interesting samples."
    },
    {
      "Time_Start": 866.9,
      "Time_End": 880.9,
      "Text": " For example, in the wild X roads of CDE-2023-23376 and CDE-2023-28252 at Packard and to evade detection,"
    },
    {
      "Time_Start": 880.9,
      "Time_End": 888.9,
      "Text": " some samples are also obfuscated, like the 28258 in the middle of this slide."
    },
    {
      "Time_Start": 888.9,
      "Time_End": 895.9,
      "Text": " Additionally, there are some samples that do not work properly or cause a BSOD after running."
    },
    {
      "Time_Start": 897.9,
      "Time_End": 904.9,
      "Text": " Next, let's look at the 9th common log file system X road, which we caught in November 2023."
    },
    {
      "Time_Start": 904.9,
      "Time_End": 915.9,
      "Text": " Interestingly, its compilation time was also in November 2023, but the corresponding vulnerability was patched in January 2022."
    },
    {
      "Time_Start": 915.9,
      "Time_End": 922.9,
      "Text": " The code style of this sample is significantly different from the two developers mentioned before,"
    },
    {
      "Time_Start": 922.9,
      "Time_End": 929.9,
      "Text": " and the code quality is a bit low. After running the sample, the winlog process will crash."
    },
    {
      "Time_Start": 929.9,
      "Time_End": 935.9,
      "Text": " Additionally, this sample is not compatible with the Windows 11 operating system."
    },
    {
      "Time_Start": 935.9,
      "Time_End": 941.9,
      "Text": " All signs indicate that this sample was written by a non-professional developer."
    },
    {
      "Time_Start": 941.9,
      "Time_End": 946.9,
      "Text": " This sample has not been publicly disclosed before."
    },
    {
      "Time_Start": 947.9,
      "Time_End": 951.9,
      "Text": " Let's see how this X road modifies the P contender."
    },
    {
      "Time_Start": 951.9,
      "Time_End": 960.9,
      "Text": " This sample also modifies the P contender when assigning the query time number in the CLFF logFCB,"
    },
    {
      "Time_Start": 960.9,
      "Time_End": 967.9,
      "Text": " physical flush mental data function. It's in the same point as I mentioned in the second X road."
    },
    {
      "Time_Start": 968.9,
      "Time_End": 973.9,
      "Text": " In the same month, we also caught another common log file system X road."
    },
    {
      "Time_Start": 973.9,
      "Time_End": 978.9,
      "Text": " It is a vulnerability that was patched in September 2022."
    },
    {
      "Time_Start": 978.9,
      "Time_End": 984.9,
      "Text": " We found that this sample's X road techniques are basically the same to the second X road."
    },
    {
      "Time_Start": 984.9,
      "Time_End": 990.9,
      "Text": " So it can also be considered as being written by the developer B."
    },
    {
      "Time_Start": 990.9,
      "Time_End": 994.9,
      "Text": " This sample has not been published disclosed before."
    },
    {
      "Time_Start": 994.9,
      "Time_End": 1001.9,
      "Text": " Next, let my partner Yingqi Shi explain how to look for the root cause of this X road."
    },
    {
      "Time_Start": 1024.9,
      "Time_End": 1032.9,
      "Text": " Since we have many malicious samples, the next question is how to analyze the malicious exploit."
    },
    {
      "Time_Start": 1032.9,
      "Time_End": 1039.9,
      "Text": " We must know how they do, how they construct the P of file."
    },
    {
      "Time_Start": 1039.9,
      "Time_End": 1045.9,
      "Text": " Let's look for root cause of about 10 exploits."
    },
    {
      "Time_Start": 1045.9,
      "Time_End": 1053.9,
      "Text": " The first thing we do when we get a malicious sample is to reverse it."
    },
    {
      "Time_Start": 1053.9,
      "Time_End": 1061.9,
      "Text": " But unfortunately, our sample has been obfuscated by counterflow."
    },
    {
      "Time_Start": 1061.9,
      "Time_End": 1071.9,
      "Text": " There are too many junk instructions, too big stack frames, and this assembler is too slow."
    },
    {
      "Time_Start": 1071.9,
      "Time_End": 1075.9,
      "Text": " How to solve it?"
    },
    {
      "Time_Start": 1075.9,
      "Time_End": 1081.9,
      "Text": " Let's try to think as an exploit developer."
    },
    {
      "Time_Start": 1081.9,
      "Time_End": 1086.9,
      "Text": " We allocate memory to store our shared code locally."
    },
    {
      "Time_Start": 1086.9,
      "Time_End": 1090.9,
      "Text": " In Windows, we use virtual log generally."
    },
    {
      "Time_Start": 1090.9,
      "Time_End": 1096.9,
      "Text": " So we look up import tables and try to find the code."
    },
    {
      "Time_Start": 1096.9,
      "Time_End": 1100.9,
      "Text": " You can see our guess was right."
    },
    {
      "Time_Start": 1100.9,
      "Time_End": 1109.9,
      "Text": " Next, we set a hardware breakpoint in the allocate memory region."
    },
    {
      "Time_Start": 1110.9,
      "Time_End": 1113.9,
      "Text": " You can see interrupt success."
    },
    {
      "Time_Start": 1113.9,
      "Time_End": 1126.9,
      "Text": " They still use decontainer to hijack the counterflow and elevate their privileges from user level to kernel."
    },
    {
      "Time_Start": 1126.9,
      "Time_End": 1129.9,
      "Text": " Then, we have a question."
    },
    {
      "Time_Start": 1129.9,
      "Time_End": 1133.9,
      "Text": " Where does decontainer change?"
    },
    {
      "Time_Start": 1134.9,
      "Time_End": 1142.9,
      "Text": " After some reversing works and debugging, we noticed the function writeMeetDataBlock"
    },
    {
      "Time_Start": 1142.9,
      "Time_End": 1149.9,
      "Text": " placed the decontainer in the class instance into the file count block."
    },
    {
      "Time_Start": 1149.9,
      "Time_End": 1152.9,
      "Text": " Let's see where decontainer comes from."
    },
    {
      "Time_Start": 1154.9,
      "Time_End": 1159.9,
      "Text": " As you see, container context contains decontainer."
    },
    {
      "Time_Start": 1159.9,
      "Time_End": 1164.9,
      "Text": " Context comes from the function acquireContainerContext."
    },
    {
      "Time_Start": 1164.9,
      "Time_End": 1168.9,
      "Text": " Now, let's see more about this function."
    },
    {
      "Time_Start": 1170.9,
      "Time_End": 1183.9,
      "Text": " In this function, it gets the base log recorder and retrievals named rgContainers according to the index."
    },
    {
      "Time_Start": 1184.9,
      "Time_End": 1189.9,
      "Text": " rgContainers is an array of the container symbols offset."
    },
    {
      "Time_Start": 1189.9,
      "Time_End": 1195.9,
      "Text": " Then, it will call function getSymbol to get container context."
    },
    {
      "Time_Start": 1197.9,
      "Time_End": 1199.9,
      "Text": " New question arrives."
    },
    {
      "Time_Start": 1199.9,
      "Time_End": 1201.9,
      "Text": " Where does the container symbol change?"
    },
    {
      "Time_Start": 1203.9,
      "Time_End": 1209.9,
      "Text": " Before we continue our question and answer, we must know what symbol."
    },
    {
      "Time_Start": 1209.9,
      "Time_End": 1211.9,
      "Text": " What is the structure of symbol?"
    },
    {
      "Time_Start": 1211.9,
      "Time_End": 1214.9,
      "Text": " You can see the picture on the screen."
    },
    {
      "Time_Start": 1216.9,
      "Time_End": 1221.9,
      "Text": " It's still referring from Kaspersky's log."
    },
    {
      "Time_Start": 1221.9,
      "Time_End": 1229.9,
      "Text": " As you see, this structure means hash symbol and has field named cbOffset,"
    },
    {
      "Time_Start": 1229.9,
      "Time_End": 1232.9,
      "Text": " means count of bytes offset."
    },
    {
      "Time_Start": 1232.9,
      "Time_End": 1240.9,
      "Text": " This offset points to all contexts, including client and container."
    },
    {
      "Time_Start": 1241.9,
      "Time_End": 1247.9,
      "Text": " And cfS driver according symbol offset to get context."
    },
    {
      "Time_Start": 1247.9,
      "Time_End": 1253.9,
      "Text": " The function symbol tells us we have another function to hash symbol."
    },
    {
      "Time_Start": 1254.9,
      "Time_End": 1255.9,
      "Text": " Continue."
    },
    {
      "Time_Start": 1255.9,
      "Time_End": 1260.9,
      "Text": " According to the input tables and reference code,"
    },
    {
      "Time_Start": 1260.9,
      "Time_End": 1264.9,
      "Text": " there are function chain called by addLogContainer."
    },
    {
      "Time_Start": 1264.9,
      "Time_End": 1267.9,
      "Text": " That means our idea is right."
    },
    {
      "Time_Start": 1267.9,
      "Time_End": 1272.9,
      "Text": " We can call function aLogSymbol to create a new symbol."
    },
    {
      "Time_Start": 1272.9,
      "Time_End": 1274.9,
      "Text": " Let's see that."
    },
    {
      "Time_Start": 1274.9,
      "Time_End": 1277.9,
      "Text": " It's getting more and more interesting."
    },
    {
      "Time_Start": 1279.9,
      "Time_End": 1287.9,
      "Text": " After reading, we can see that the initial symbol has part cbSymbolZoom."
    },
    {
      "Time_Start": 1287.9,
      "Time_End": 1291.9,
      "Text": " That offset of symbolZoom."
    },
    {
      "Time_Start": 1291.9,
      "Time_End": 1295.9,
      "Text": " I think it can be called symbol cursor."
    },
    {
      "Time_Start": 1295.9,
      "Time_End": 1299.9,
      "Text": " It's offset of nextSymbolOffset."
    },
    {
      "Time_Start": 1299.9,
      "Time_End": 1305.9,
      "Text": " That means it's offset to all of all exist symbol ended position."
    },
    {
      "Time_Start": 1305.9,
      "Time_End": 1313.9,
      "Text": " This function initializes the memory region to the symbol according to cbSymbolZoom."
    },
    {
      "Time_Start": 1313.9,
      "Time_End": 1321.9,
      "Text": " You can see my blue comment marks the offset in my comment block."
    },
    {
      "Time_Start": 1322.9,
      "Time_End": 1324.9,
      "Text": " Remember it."
    },
    {
      "Time_Start": 1324.9,
      "Time_End": 1325.9,
      "Text": " Be careful."
    },
    {
      "Time_Start": 1325.9,
      "Time_End": 1333.9,
      "Text": " If you use format template path file, you will be stressed."
    },
    {
      "Time_Start": 1333.9,
      "Time_End": 1342.9,
      "Text": " So you can see on the screen, I have marked the points corresponding to cbSymbolZoom."
    },
    {
      "Time_Start": 1342.9,
      "Time_End": 1346.9,
      "Text": " Clamp context overlaps with container symbol."
    },
    {
      "Time_Start": 1346.9,
      "Time_End": 1348.9,
      "Text": " It's magic."
    },
    {
      "Time_Start": 1348.9,
      "Time_End": 1349.9,
      "Text": " OK."
    },
    {
      "Time_Start": 1349.9,
      "Time_End": 1351.9,
      "Text": " Next, let's move on."
    },
    {
      "Time_Start": 1352.9,
      "Time_End": 1353.9,
      "Text": " Back to Kotlin."
    },
    {
      "Time_Start": 1353.9,
      "Time_End": 1355.9,
      "Text": " You can see the highlighted code."
    },
    {
      "Time_Start": 1355.9,
      "Time_End": 1360.9,
      "Text": " It's construct structure of cfsHashSymbol."
    },
    {
      "Time_Start": 1360.9,
      "Time_End": 1364.9,
      "Text": " This structure includes cbOffset."
    },
    {
      "Time_Start": 1364.9,
      "Time_End": 1367.9,
      "Text": " Remember it's offset of context."
    },
    {
      "Time_Start": 1370.9,
      "Time_End": 1371.9,
      "Text": " OK."
    },
    {
      "Time_Start": 1371.9,
      "Time_End": 1373.9,
      "Text": " Back to Kotlin again."
    },
    {
      "Time_Start": 1373.9,
      "Time_End": 1378.9,
      "Text": " We create symbol after calling and symbol next function."
    },
    {
      "Time_Start": 1378.9,
      "Time_End": 1387.9,
      "Text": " AddContainer will use cbOffset and locate to symbol and read offset of context."
    },
    {
      "Time_Start": 1387.9,
      "Time_End": 1394.9,
      "Text": " And the key point, setToClampDistance will end rgContainers."
    },
    {
      "Time_Start": 1394.9,
      "Time_End": 1404.9,
      "Text": " Do you remember that a few minutes ago, I mentioned the rgContainers in function acquireContainerContext."
    },
    {
      "Time_Start": 1404.9,
      "Time_End": 1406.9,
      "Text": " Let's see it again."
    },
    {
      "Time_Start": 1407.9,
      "Time_End": 1408.9,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1408.9,
      "Time_End": 1412.9,
      "Text": " We use cbSymbolZoom to control offset of symbol."
    },
    {
      "Time_Start": 1412.9,
      "Time_End": 1422.9,
      "Text": " So when we call acquireContainerContext, the driver will get valid container context under our control."
    },
    {
      "Time_Start": 1425.9,
      "Time_End": 1426.9,
      "Text": " Back to the code."
    },
    {
      "Time_Start": 1426.9,
      "Time_End": 1432.9,
      "Text": " It's then will call to the function named writeMeetDateBlock."
    },
    {
      "Time_Start": 1432.9,
      "Time_End": 1434.9,
      "Text": " Does it look familiar?"
    },
    {
      "Time_Start": 1434.9,
      "Time_End": 1436.9,
      "Text": " We are back to the beginning."
    },
    {
      "Time_Start": 1436.9,
      "Time_End": 1443.9,
      "Text": " So now, we control driver to write a new container context as a special case."
    },
    {
      "Time_Start": 1443.9,
      "Time_End": 1451.9,
      "Text": " The last question is, where modify the container in the structure of container context?"
    },
    {
      "Time_Start": 1451.9,
      "Time_End": 1457.9,
      "Text": " In order to answer this question, we notice the function, flashMeetDate."
    },
    {
      "Time_Start": 1458.9,
      "Time_End": 1466.9,
      "Text": " As you see, this symbol modifies the container."
    },
    {
      "Time_Start": 1466.9,
      "Time_End": 1471.9,
      "Text": " cbOffsetDriver restores client context from class instance."
    },
    {
      "Time_Start": 1474.9,
      "Time_End": 1480.9,
      "Text": " By the way, the reason I mentioned the restore also means that there must be backup."
    },
    {
      "Time_Start": 1480.9,
      "Time_End": 1484.9,
      "Text": " So in this case, I omit backup part."
    },
    {
      "Time_Start": 1485.9,
      "Time_End": 1493.9,
      "Text": " The corresponding field view comes from raw file con cloud in fact."
    },
    {
      "Time_Start": 1494.9,
      "Time_End": 1503.9,
      "Text": " The modification occurs when the LSN last and LSN restart member was assigned."
    },
    {
      "Time_Start": 1505.9,
      "Time_End": 1509.9,
      "Text": " Finally, you can see the container has been modified."
    },
    {
      "Time_Start": 1509.9,
      "Time_End": 1517.9,
      "Text": " At this point, we have synonymously identified the root cause of this vulnerability."
    },
    {
      "Time_Start": 1517.9,
      "Time_End": 1526.9,
      "Text": " Next, I will get my under-training and you shall read the rest of our presentation."
    },
    {
      "Time_Start": 1526.9,
      "Time_End": 1542.9,
      "Text": " After discussing the 10 in the wild common log file system exploits, we will now talk about variant analysis."
    },
    {
      "Time_Start": 1542.9,
      "Time_End": 1546.9,
      "Text": " Why variant analysis is important?"
    },
    {
      "Time_Start": 1546.9,
      "Time_End": 1550.9,
      "Text": " I think this slide by Manny Stow gives us a reason."
    },
    {
      "Time_Start": 1551.9,
      "Time_End": 1556.9,
      "Text": " How do we conduct variant analysis?"
    },
    {
      "Time_Start": 1556.9,
      "Time_End": 1560.9,
      "Text": " I think it can be divided into two situations."
    },
    {
      "Time_Start": 1560.9,
      "Time_End": 1564.9,
      "Text": " The first is when the vulnerability itself hasn't disappeared,"
    },
    {
      "Time_Start": 1564.9,
      "Time_End": 1571.9,
      "Text": " but a patch accidentally prevents the triggering of this vulnerability, causing the exploit to fail."
    },
    {
      "Time_Start": 1571.9,
      "Time_End": 1576.9,
      "Text": " A typical example is CVE-2022-24481."
    },
    {
      "Time_Start": 1576.9,
      "Time_End": 1585.9,
      "Text": " The second is when the developer seems to understand the root cause of the vulnerability and fix the bug,"
    },
    {
      "Time_Start": 1585.9,
      "Time_End": 1590.9,
      "Text": " but they have not completely fixed or made a mistake."
    },
    {
      "Time_Start": 1590.9,
      "Time_End": 1604.9,
      "Text": " A typical example is CVE-2022-35803, which we found by auditing the patch for CVE-2022-24481."
    },
    {
      "Time_Start": 1605.9,
      "Time_End": 1611.9,
      "Text": " Let's first look at the example of CVE-2022-24481."
    },
    {
      "Time_Start": 1611.9,
      "Time_End": 1618.9,
      "Text": " A key point of this exploit is that there is a 1-bit flip at this location."
    },
    {
      "Time_Start": 1620.9,
      "Time_End": 1629.9,
      "Text": " However, in the September 2021 patch, an added validation accidentally blocked this vulnerability."
    },
    {
      "Time_Start": 1629.9,
      "Time_End": 1634.9,
      "Text": " The patch only checked the value of ClientContextOffset,"
    },
    {
      "Time_Start": 1634.9,
      "Time_End": 1639.9,
      "Text": " to make sure it couldn't be less than 3068."
    },
    {
      "Time_Start": 1641.9,
      "Time_End": 1648.9,
      "Text": " So what if we construct a ClientContextOffset that is greater than this value"
    },
    {
      "Time_Start": 1648.9,
      "Time_End": 1654.9,
      "Text": " and make the ClientContextOffset point to a forward container context?"
    },
    {
      "Time_Start": 1655.9,
      "Time_End": 1662.9,
      "Text": " But after some simple modification, a new 1-bit flip was born."
    },
    {
      "Time_Start": 1662.9,
      "Time_End": 1665.9,
      "Text": " And this leads to BSOD."
    },
    {
      "Time_Start": 1665.9,
      "Time_End": 1668.9,
      "Text": " Now we can see the familiar BSOD again."
    },
    {
      "Time_Start": 1668.9,
      "Time_End": 1674.9,
      "Text": " This variant is CVE-2022-24481."
    },
    {
      "Time_Start": 1675.9,
      "Time_End": 1682.9,
      "Text": " And now let's look at the example of CVE-2022-35803."
    },
    {
      "Time_Start": 1682.9,
      "Time_End": 1690.9,
      "Text": " This vulnerability was discovered while analyzing the patch for CVE-2022-24480."
    },
    {
      "Time_Start": 1690.9,
      "Time_End": 1696.9,
      "Text": " In the April 2022 patch, the Common Log File System driver added a new function"
    },
    {
      "Time_Start": 1696.9,
      "Time_End": 1700.9,
      "Text": " CLFSBaseFileValidateRgOffsets."
    },
    {
      "Time_Start": 1700.9,
      "Time_End": 1707.9,
      "Text": " Due to this patch, the method of directly modifying the ClientContextOffset was fixed."
    },
    {
      "Time_Start": 1707.9,
      "Time_End": 1712.9,
      "Text": " However, there was still no check for CIDNode.ctype."
    },
    {
      "Time_Start": 1712.9,
      "Time_End": 1717.9,
      "Text": " Therefore, we only need to set the CIDNode.ctype file"
    },
    {
      "Time_Start": 1717.9,
      "Time_End": 1722.9,
      "Text": " of a ClientContext to ContainerContext to bypass this patch."
    },
    {
      "Time_Start": 1722.9,
      "Time_End": 1726.9,
      "Text": " Lucky Yu has written a wonderful blog about this vulnerability."
    },
    {
      "Time_Start": 1726.9,
      "Time_End": 1730.9,
      "Text": " Anyone interested in this case can read his blog."
    },
    {
      "Time_Start": 1730.9,
      "Time_End": 1735.9,
      "Text": " By the way, the in-the-web-exploits mentioned in Lucky Yu's blog"
    },
    {
      "Time_Start": 1735.9,
      "Time_End": 1739.9,
      "Text": " is actually the second exploit discussed in this talk."
    },
    {
      "Time_Start": 1741.9,
      "Time_End": 1746.9,
      "Text": " From the figure, we can see that by changing the type of different contexts,"
    },
    {
      "Time_Start": 1746.9,
      "Time_End": 1754.9,
      "Text": " we successfully hijacked a function point to a non-executable memory, triggering a BSOD."
    },
    {
      "Time_Start": 1755.9,
      "Time_End": 1761.9,
      "Text": " Finally, let's briefly summarize this presentation."
    },
    {
      "Time_Start": 1762.9,
      "Time_End": 1766.9,
      "Text": " From October 2021 to November 2022,"
    },
    {
      "Time_Start": 1766.9,
      "Time_End": 1771.9,
      "Text": " we caught 10 different Common Log File Systems in the wild exploits over 2 years."
    },
    {
      "Time_Start": 1771.9,
      "Time_End": 1775.9,
      "Text": " The table shows the CVE numbers of these exploits,"
    },
    {
      "Time_Start": 1775.9,
      "Time_End": 1780.9,
      "Text": " their corresponding neighbors by Kaspersky's blog, and their hashes."
    },
    {
      "Time_Start": 1781.9,
      "Time_End": 1786.9,
      "Text": " During the journey of tracking Common Log File Systems,"
    },
    {
      "Time_Start": 1786.9,
      "Time_End": 1789.9,
      "Text": " we have caught two Windows-in-the-wild zero-days"
    },
    {
      "Time_Start": 1789.9,
      "Time_End": 1795.9,
      "Text": " and independently discovered two Common Log File Systems zero-days through variant analysis."
    },
    {
      "Time_Start": 1795.9,
      "Time_End": 1800.9,
      "Text": " All these four vulnerabilities received acknowledgments from Microsoft."
    },
    {
      "Time_Start": 1801.9,
      "Time_End": 1805.9,
      "Text": " And finally, combining with recent observations,"
    },
    {
      "Time_Start": 1805.9,
      "Time_End": 1809.9,
      "Text": " we can predict the trends of Windows-in-the-wild exploits."
    },
    {
      "Time_Start": 1809.9,
      "Time_End": 1814.9,
      "Text": " We believe that the battle with Windows Common Log File System is nearing end,"
    },
    {
      "Time_Start": 1814.9,
      "Time_End": 1821.9,
      "Text": " while vulnerabilities in Desktop Window Manager and other models will gradually increase."
    },
    {
      "Time_Start": 1822.9,
      "Time_End": 1826.9,
      "Text": " Thanks to these guys for assisting in this journey."
    },
    {
      "Time_Start": 1826.9,
      "Time_End": 1830.9,
      "Text": " And bingo, it's another stage."
    },
    {
      "Time_Start": 1832.9,
      "Time_End": 1835.9,
      "Text": " Thank you for listening to our presentation."
    },
    {
      "Time_Start": 1836.9,
      "Time_End": 1839.9,
      "Text": " Does anyone have any questions?"
    },
    {
      "Time_Start": 1847.9,
      "Time_End": 1849.9,
      "Text": " Thank you for the presentation."
    },
    {
      "Time_Start": 1849.9,
      "Time_End": 1852.9,
      "Text": " Can you open the floor for any questions?"
    },
    {
      "Time_Start": 1866.9,
      "Time_End": 1871.9,
      "Text": " Do you think there's a systemic issue with the CLFS,"
    },
    {
      "Time_Start": 1871.9,
      "Time_End": 1875.9,
      "Text": " or was it just bad at the start?"
    },
    {
      "Time_Start": 1876.9,
      "Time_End": 1879.9,
      "Text": " Do you think there's a systemic issue?"
    },
    {
      "Time_Start": 1879.9,
      "Time_End": 1884.9,
      "Text": " In the sense of, is there a methodology in the way that it's implemented"
    },
    {
      "Time_Start": 1884.9,
      "Time_End": 1886.9,
      "Text": " that creates a series of security issues,"
    },
    {
      "Time_Start": 1886.9,
      "Time_End": 1889.9,
      "Text": " that they're just sort of putting band-aids over,"
    },
    {
      "Time_Start": 1889.9,
      "Time_End": 1891.9,
      "Text": " or was it just bad at the start?"
    },
    {
      "Time_Start": 1892.9,
      "Time_End": 1896.9,
      "Text": " Is there something systemic in the way that it was built that leads to security issues?"
    },
    {
      "Time_Start": 1905.9,
      "Time_End": 1907.9,
      "Text": " Okay, due to my English,"
    },
    {
      "Time_Start": 1907.9,
      "Time_End": 1911.9,
      "Text": " your question is a bit complex to me."
    },
    {
      "Time_Start": 1911.9,
      "Time_End": 1913.9,
      "Text": " And you can ask under this stage,"
    },
    {
      "Time_Start": 1913.9,
      "Time_End": 1917.9,
      "Text": " and we can talk one-to-one."
    },
    {
      "Time_Start": 1921.9,
      "Time_End": 1922.9,
      "Text": " Oh, okay."
    },
    {
      "Time_Start": 1924.9,
      "Time_End": 1927.9,
      "Text": " Because I have to think about this question."
    },
    {
      "Time_Start": 1927.9,
      "Time_End": 1933.9,
      "Text": " I think when Microsoft developed this common log file system driver,"
    },
    {
      "Time_Start": 1933.9,
      "Time_End": 1937.9,
      "Text": " they made some mistakes on the desire level."
    },
    {
      "Time_Start": 1941.9,
      "Time_End": 1946.9,
      "Text": " Actually, many of the exploits were successful"
    },
    {
      "Time_Start": 1946.9,
      "Time_End": 1949.9,
      "Text": " due to this peak and end pointer."
    },
    {
      "Time_Start": 1949.9,
      "Time_End": 1958.9,
      "Text": " But if you do better in the desired level,"
    },
    {
      "Time_Start": 1958.9,
      "Time_End": 1965.9,
      "Text": " I think they can prevent this at a very early time."
    },
    {
      "Time_Start": 1965.9,
      "Time_End": 1969.9,
      "Text": " But for now, Microsoft,"
    },
    {
      "Time_Start": 1969.9,
      "Time_End": 1973.9,
      "Text": " they only fix every case,"
    },
    {
      "Time_Start": 1973.9,
      "Time_End": 1978.9,
      "Text": " and they never disable this driver"
    },
    {
      "Time_Start": 1978.9,
      "Time_End": 1983.9,
      "Text": " in order to introduce some implications for this question."
    },
    {
      "Time_Start": 1986.9,
      "Time_End": 1993.9,
      "Text": " But the good thing is that these exploits have a line like this."
    },
    {
      "Time_Start": 1993.9,
      "Time_End": 1999.9,
      "Text": " So I think this battle with the common log file system is near the end."
    },
    {
      "Time_Start": 2000.9,
      "Time_End": 2004.9,
      "Text": " Because in the past six months,"
    },
    {
      "Time_Start": 2004.9,
      "Time_End": 2009.9,
      "Text": " we have called two Windows Desktop Manager zero days."
    },
    {
      "Time_Start": 2009.9,
      "Time_End": 2018.9,
      "Text": " So I think maybe the target now pays attention to DWM and other models."
    },
    {
      "Time_Start": 2018.9,
      "Time_End": 2025.9,
      "Text": " I think these models will have a trend like this."
    },
    {
      "Time_Start": 2026.9,
      "Time_End": 2028.9,
      "Text": " There's another question."
    },
    {
      "Time_Start": 2029.9,
      "Time_End": 2037.9,
      "Text": " Why do you say that the battle with CLFS is nearing its end,"
    },
    {
      "Time_Start": 2037.9,
      "Time_End": 2044.9,
      "Text": " and why do you see Desktop Window Manager being more vulnerable over time?"
    },
    {
      "Time_Start": 2044.9,
      "Time_End": 2048.9,
      "Text": " Okay, I have just answered this question, and I'll answer it again."
    },
    {
      "Time_Start": 2050.9,
      "Time_End": 2053.9,
      "Text": " From our presentation, you can find that"
    },
    {
      "Time_Start": 2053.9,
      "Time_End": 2058.9,
      "Text": " the first eight common log file system exploits caught by us"
    },
    {
      "Time_Start": 2058.9,
      "Time_End": 2072.9,
      "Text": " happened in November 2021 to November 2023."
    },
    {
      "Time_Start": 2072.9,
      "Time_End": 2082.9,
      "Text": " And the last two were caught in November 2023."
    },
    {
      "Time_Start": 2083.9,
      "Time_End": 2087.9,
      "Text": " If you draw a picture,"
    },
    {
      "Time_Start": 2087.9,
      "Time_End": 2092.9,
      "Text": " by time and the catch time,"
    },
    {
      "Time_Start": 2092.9,
      "Time_End": 2097.9,
      "Text": " you can figure a picture like this."
    },
    {
      "Time_Start": 2097.9,
      "Time_End": 2100.9,
      "Text": " So based on it,"
    },
    {
      "Time_Start": 2100.9,
      "Time_End": 2105.9,
      "Text": " we can predict that the battle with common log file system is near the end."
    },
    {
      "Time_Start": 2105.9,
      "Time_End": 2112.9,
      "Text": " And why do I think Windows Desktop Manager vulnerability will have more in the future?"
    },
    {
      "Time_Start": 2112.9,
      "Time_End": 2125.9,
      "Text": " Because in November 2023 and in April 2024,"
    },
    {
      "Time_Start": 2125.9,
      "Time_End": 2131.9,
      "Text": " we have caught two DWM in the last zero days."
    },
    {
      "Time_Start": 2131.9,
      "Time_End": 2136.9,
      "Text": " And due to the complexity of the Desktop Window Manager model,"
    },
    {
      "Time_Start": 2136.9,
      "Time_End": 2140.9,
      "Text": " it's DWM code, not Dell,"
    },
    {
      "Time_Start": 2140.9,
      "Time_End": 2144.9,
      "Text": " or the 132k model,"
    },
    {
      "Time_Start": 2144.9,
      "Time_End": 2150.9,
      "Text": " we think there are more vulnerabilities under this model."
    },
    {
      "Time_Start": 2150.9,
      "Time_End": 2156.9,
      "Text": " So I think maybe this is just the start of the next battle."
    },
    {
      "Time_Start": 2157.9,
      "Time_End": 2162.9,
      "Text": " Any more questions?"
    },
    {
      "Time_Start": 2162.9,
      "Time_End": 2167.9,
      "Text": " Looks like that's about it. Thank you very much, guys."
    }
  ]
}