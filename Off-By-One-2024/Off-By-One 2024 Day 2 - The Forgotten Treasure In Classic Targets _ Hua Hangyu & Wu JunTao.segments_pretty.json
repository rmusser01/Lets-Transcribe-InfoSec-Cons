{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 9.0,
      "Text": "This text was transcribed using whisper model: large-v2\n\n So, good afternoon everyone, welcome to our talk."
    },
    {
      "Time_Start": 9.0,
      "Time_End": 13.0,
      "Text": " Thank you everyone for sticking to the last, second topic."
    },
    {
      "Time_Start": 13.0,
      "Time_End": 18.0,
      "Text": " And this is about some benefit research in classical techniques."
    },
    {
      "Time_Start": 22.0,
      "Time_End": 24.0,
      "Text": " So, a little about us."
    },
    {
      "Time_Start": 24.0,
      "Time_End": 25.0,
      "Text": " My name is Junhao Wu."
    },
    {
      "Time_Start": 25.0,
      "Time_End": 27.0,
      "Text": " You can just call me Dawu He."
    },
    {
      "Time_Start": 27.0,
      "Time_End": 29.0,
      "Text": " I'm a security researcher at CERTIC."
    },
    {
      "Time_Start": 29.0,
      "Time_End": 34.0,
      "Text": " And I have founded the CERTICO team, which likes to explore new things."
    },
    {
      "Time_Start": 34.0,
      "Time_End": 41.0,
      "Text": " I have been selected into sensing and hardware owner of mobile security hardware green screen clients."
    },
    {
      "Time_Start": 41.0,
      "Time_End": 47.0,
      "Text": " At the same time, I have submitted some benefits to Google and other beneficiaries."
    },
    {
      "Time_Start": 47.0,
      "Time_End": 50.0,
      "Text": " Now I'm mainly focused on mobile and web 3."
    },
    {
      "Time_Start": 50.0,
      "Time_End": 53.0,
      "Text": " And this is my partner, Tang Yihua."
    },
    {
      "Time_Start": 53.0,
      "Time_End": 57.0,
      "Text": " And he is a security researcher at Yunnan Cyber."
    },
    {
      "Time_Start": 57.0,
      "Time_End": 60.0,
      "Text": " And he is also the founder of the Shuffle Team."
    },
    {
      "Time_Start": 60.0,
      "Time_End": 64.0,
      "Text": " He mainly focuses on the low-level security research."
    },
    {
      "Time_Start": 66.0,
      "Time_End": 67.0,
      "Text": " So here is the agenda."
    },
    {
      "Time_Start": 67.0,
      "Time_End": 71.0,
      "Text": " The content mainly revolves around the forgotten trash,"
    },
    {
      "Time_Start": 71.0,
      "Time_End": 76.0,
      "Text": " focusing on the vulnerabilities that are often overlooked by security agents"
    },
    {
      "Time_Start": 76.0,
      "Time_End": 80.0,
      "Text": " and can not easily be detected by tools."
    },
    {
      "Time_Start": 80.0,
      "Time_End": 84.0,
      "Text": " And I have divided the content into three parts."
    },
    {
      "Time_Start": 86.0,
      "Time_End": 91.0,
      "Text": " So let's take a first look at why forgotten trashes appear."
    },
    {
      "Time_Start": 91.0,
      "Time_End": 94.0,
      "Text": " Here is a little background."
    },
    {
      "Time_Start": 94.0,
      "Time_End": 95.0,
      "Text": " So we once had a doubt."
    },
    {
      "Time_Start": 95.0,
      "Time_End": 100.0,
      "Text": " Is this one of the reasons why the exploit chain continues to appear?"
    },
    {
      "Time_Start": 100.0,
      "Time_End": 104.0,
      "Text": " If you are familiar with the news about web 3 security manipulatives,"
    },
    {
      "Time_Start": 104.0,
      "Time_End": 108.0,
      "Text": " you should know that if there are problems in the project,"
    },
    {
      "Time_Start": 108.0,
      "Time_End": 111.0,
      "Text": " it is very easy to cause direct economic losses."
    },
    {
      "Time_Start": 111.0,
      "Time_End": 114.0,
      "Text": " Therefore, the audit habit of web 3 project"
    },
    {
      "Time_Start": 114.0,
      "Time_End": 118.0,
      "Text": " is to find all the vulnerabilities as much as possible."
    },
    {
      "Time_Start": 118.0,
      "Time_End": 123.0,
      "Text": " However, the differences between the web 2 project and the web 3 project"
    },
    {
      "Time_Start": 123.0,
      "Time_End": 125.0,
      "Text": " is that its size is very large."
    },
    {
      "Time_Start": 125.0,
      "Time_End": 131.0,
      "Text": " And it is almost impossible to guarantee that all vulnerabilities are discovered."
    },
    {
      "Time_Start": 131.0,
      "Time_End": 135.0,
      "Text": " Therefore, some have been tested by tools, of course,"
    },
    {
      "Time_Start": 135.0,
      "Time_End": 139.0,
      "Text": " that have been manually audited many times are often ignored."
    },
    {
      "Time_Start": 141.0,
      "Time_End": 145.0,
      "Text": " This is the first vulnerability since a while that I want to talk about."
    },
    {
      "Time_Start": 145.0,
      "Time_End": 151.0,
      "Text": " It is very special because many security researchers have noticed and retweeted it."
    },
    {
      "Time_Start": 151.0,
      "Time_End": 158.0,
      "Text": " The reason for this appears in 3 types that have been tested and audited many times."
    },
    {
      "Time_Start": 158.0,
      "Time_End": 162.0,
      "Text": " And because there are many projects using 3 types,"
    },
    {
      "Time_Start": 162.0,
      "Time_End": 165.0,
      "Text": " so it has a very wild impact."
    },
    {
      "Time_Start": 165.0,
      "Time_End": 170.0,
      "Text": " The vulnerability exists in the lowest-biased PNG,"
    },
    {
      "Time_Start": 170.0,
      "Time_End": 176.0,
      "Text": " and which could process the PNG images embedded in fonts."
    },
    {
      "Time_Start": 176.0,
      "Time_End": 181.0,
      "Text": " This function first will obtain the image width and height from the head"
    },
    {
      "Time_Start": 181.0,
      "Time_End": 184.0,
      "Text": " as 32-byte integrals,"
    },
    {
      "Time_Start": 184.0,
      "Time_End": 188.0,
      "Text": " and then it truncates the opt-in values to 16 bytes"
    },
    {
      "Time_Start": 188.0,
      "Time_End": 191.0,
      "Text": " and stores them in the T-squared measure structure."
    },
    {
      "Time_Start": 191.0,
      "Time_End": 196.0,
      "Text": " Then it will use the truncated values to calculate the bit-byte size."
    },
    {
      "Time_Start": 198.0,
      "Time_End": 202.0,
      "Text": " Then it will block the back-end stores of that size."
    },
    {
      "Time_Start": 202.0,
      "Time_End": 208.0,
      "Text": " You can see it finally passed the PNG structure and the back-end store to the PNG function."
    },
    {
      "Time_Start": 208.0,
      "Time_End": 213.0,
      "Text": " So normally this isn't a vulnerability that is difficult to find,"
    },
    {
      "Time_Start": 213.0,
      "Time_End": 216.0,
      "Text": " but why didn't the father find it at that time?"
    },
    {
      "Time_Start": 218.0,
      "Time_End": 220.0,
      "Text": " From the fuzzing test results,"
    },
    {
      "Time_Start": 220.0,
      "Time_End": 224.0,
      "Text": " you can see that the black box fuzz tools"
    },
    {
      "Time_Start": 224.0,
      "Time_End": 228.0,
      "Text": " and the fuzzers corresponding to the OASIS fuzz platform"
    },
    {
      "Time_Start": 228.0,
      "Time_End": 231.0,
      "Text": " were used to test this code representation."
    },
    {
      "Time_Start": 231.0,
      "Time_End": 235.0,
      "Text": " But the bugged file isn't being fuzzed at all."
    },
    {
      "Time_Start": 235.0,
      "Time_End": 238.0,
      "Text": " So it is a very clear gap."
    },
    {
      "Time_Start": 240.0,
      "Time_End": 244.0,
      "Text": " And the next, let's turn our attention back to the recent vulnerability."
    },
    {
      "Time_Start": 244.0,
      "Time_End": 248.0,
      "Text": " This vulnerability appears in the relevant parsing code of WebP."
    },
    {
      "Time_Start": 248.0,
      "Time_End": 251.0,
      "Text": " It occurred in September last year."
    },
    {
      "Time_Start": 251.0,
      "Time_End": 254.0,
      "Text": " It is also the vulnerability in the wild,"
    },
    {
      "Time_Start": 254.0,
      "Time_End": 259.0,
      "Text": " affecting the security of Android, Chrome, macOS, and other platforms."
    },
    {
      "Time_Start": 259.0,
      "Time_End": 264.0,
      "Text": " The cause of this vulnerability is the problem of the auto-bounce writing"
    },
    {
      "Time_Start": 264.0,
      "Time_End": 268.0,
      "Text": " in the invention of the Kafka encoding algorithm."
    },
    {
      "Time_Start": 268.0,
      "Time_End": 270.0,
      "Text": " In the processing flow,"
    },
    {
      "Time_Start": 270.0,
      "Time_End": 275.0,
      "Text": " the decoder first reads the prefixed encoded data from the image data stream"
    },
    {
      "Time_Start": 275.0,
      "Time_End": 279.0,
      "Text": " and builds a completed Huffman encoding table based on this data."
    },
    {
      "Time_Start": 279.0,
      "Time_End": 284.0,
      "Text": " Then the decoder decodes the compressed data in the data stream"
    },
    {
      "Time_Start": 284.0,
      "Time_End": 287.0,
      "Text": " according to the table and restores the original image."
    },
    {
      "Time_Start": 287.0,
      "Time_End": 291.0,
      "Text": " According to the standard Huffman coding algorithm,"
    },
    {
      "Time_Start": 291.0,
      "Time_End": 293.0,
      "Text": " when constructing the Huffman coding table,"
    },
    {
      "Time_Start": 293.0,
      "Time_End": 295.0,
      "Text": " the first level table will be used."
    },
    {
      "Time_Start": 296.0,
      "Time_End": 301.0,
      "Text": " This table is used to carry Huffman code with a length less than 10 bytes."
    },
    {
      "Time_Start": 301.0,
      "Time_End": 303.0,
      "Text": " The default byte is 8 bytes."
    },
    {
      "Time_Start": 303.0,
      "Time_End": 306.0,
      "Text": " If the length exceeds 10 bytes in coding,"
    },
    {
      "Time_Start": 306.0,
      "Time_End": 313.0,
      "Text": " the decoder will allocate a secondary table to carry this part of the long encoding."
    },
    {
      "Time_Start": 313.0,
      "Time_End": 319.0,
      "Text": " The problem is that the Huffman coding table saved in the decoder's default picture is reasonable."
    },
    {
      "Time_Start": 319.0,
      "Time_End": 325.0,
      "Text": " So it calculates the maximum memory length in advance based on this assumption."
    },
    {
      "Time_Start": 325.0,
      "Time_End": 329.0,
      "Text": " The core premise here is that the encoded data must confer"
    },
    {
      "Time_Start": 329.0,
      "Time_End": 333.0,
      "Text": " the specific of parametric Huffman coding."
    },
    {
      "Time_Start": 333.0,
      "Time_End": 337.0,
      "Text": " That is, the Huffman tree should be a complete binary tree"
    },
    {
      "Time_Start": 337.0,
      "Time_End": 341.0,
      "Text": " with each left node corresponding to a prefixed code."
    },
    {
      "Time_Start": 341.0,
      "Time_End": 345.0,
      "Text": " There are no unused left nodes."
    },
    {
      "Time_Start": 346.0,
      "Time_End": 350.0,
      "Text": " However, since the Huffman coding table data comes from the on-chess itself"
    },
    {
      "Time_Start": 350.0,
      "Time_End": 353.0,
      "Text": " and may be irreparably congested by attack,"
    },
    {
      "Time_Start": 353.0,
      "Time_End": 359.0,
      "Text": " the decoder passes a completed binary tree"
    },
    {
      "Time_Start": 359.0,
      "Time_End": 362.0,
      "Text": " without checking the valid date of this data"
    },
    {
      "Time_Start": 362.0,
      "Time_End": 365.0,
      "Text": " and may allocate too much of the secondary table"
    },
    {
      "Time_Start": 365.0,
      "Time_End": 370.0,
      "Text": " and will cause the total memory usage to exceed the pre-allocated size"
    },
    {
      "Time_Start": 370.0,
      "Time_End": 373.0,
      "Text": " and a deep backflow will occur."
    },
    {
      "Time_Start": 376.0,
      "Time_End": 380.0,
      "Text": " Regarding the key point of this availability,"
    },
    {
      "Time_Start": 380.0,
      "Time_End": 383.0,
      "Text": " we can actually focus on two main lines."
    },
    {
      "Time_Start": 383.0,
      "Time_End": 386.0,
      "Text": " The first is the counter area and the second is the root table."
    },
    {
      "Time_Start": 386.0,
      "Time_End": 392.0,
      "Text": " Here is the counter area which stores the numbers of the users of each line of the code."
    },
    {
      "Time_Start": 392.0,
      "Time_End": 399.0,
      "Text": " Specifically, the code line is allocated space in the top-level function with Huffman codes"
    },
    {
      "Time_Start": 399.0,
      "Time_End": 404.0,
      "Text": " and obtains the corresponding specific data in Huffman code lines."
    },
    {
      "Time_Start": 404.0,
      "Time_End": 406.0,
      "Text": " This root table is actually a Huffman table"
    },
    {
      "Time_Start": 406.0,
      "Time_End": 409.0,
      "Text": " and its boundaries are determined at the beginning."
    },
    {
      "Time_Start": 409.0,
      "Time_End": 412.0,
      "Text": " The most important thing here is the table size"
    },
    {
      "Time_Start": 412.0,
      "Time_End": 417.0,
      "Text": " can have user, control, color, cache size variables"
    },
    {
      "Time_Start": 417.0,
      "Time_End": 420.0,
      "Text": " to affect the selection of the fixed values."
    },
    {
      "Time_Start": 420.0,
      "Time_End": 425.0,
      "Text": " The Huffman tables are logged in using the number of each tree groups"
    },
    {
      "Time_Start": 425.0,
      "Time_End": 431.0,
      "Text": " times the table size times the size of Huffman tables as the final size,"
    },
    {
      "Time_Start": 431.0,
      "Time_End": 436.0,
      "Text": " most of which cannot be changed by the adapter."
    },
    {
      "Time_Start": 440.0,
      "Time_End": 444.0,
      "Text": " The patch here is actually the in-app version."
    },
    {
      "Time_Start": 444.0,
      "Time_End": 447.0,
      "Text": " In fact, the repair method adopted by Google"
    },
    {
      "Time_Start": 447.0,
      "Time_End": 452.0,
      "Text": " is to add some new structures for preparation and verification."
    },
    {
      "Time_Start": 452.0,
      "Time_End": 456.0,
      "Text": " But the repair on iOS is closer to the original version."
    },
    {
      "Time_Start": 456.0,
      "Time_End": 460.0,
      "Text": " It can be seen that the most direct fix here is to check"
    },
    {
      "Time_Start": 460.0,
      "Time_End": 464.0,
      "Text": " whether the access element has crossed the boundary."
    },
    {
      "Time_Start": 464.0,
      "Time_End": 466.0,
      "Text": " If so, it will fail on the original panel."
    },
    {
      "Time_Start": 466.0,
      "Time_End": 469.0,
      "Text": " However, this fix may not be particularly perfect"
    },
    {
      "Time_Start": 469.0,
      "Time_End": 473.0,
      "Text": " so they later adopted a more complex fix patch."
    },
    {
      "Time_Start": 475.0,
      "Time_End": 479.0,
      "Text": " And since WebP is also a project in Google OSS fast platform,"
    },
    {
      "Time_Start": 479.0,
      "Time_End": 484.0,
      "Text": " let's take a look at why this variability was discovered by researchers."
    },
    {
      "Time_Start": 484.0,
      "Time_End": 489.0,
      "Text": " We can see that the function file where the problem occurs"
    },
    {
      "Time_Start": 489.0,
      "Time_End": 493.0,
      "Text": " has actually been relatively fully tested by photo coverage."
    },
    {
      "Time_Start": 493.0,
      "Time_End": 497.0,
      "Text": " Each function has been 100% covered."
    },
    {
      "Time_Start": 497.0,
      "Time_End": 499.0,
      "Text": " So where does the problem lie?"
    },
    {
      "Time_Start": 499.0,
      "Time_End": 503.0,
      "Text": " Here we need to reflect why hadn't this bug been found earlier?"
    },
    {
      "Time_Start": 503.0,
      "Time_End": 507.0,
      "Text": " Why had the library not been found enough?"
    },
    {
      "Time_Start": 507.0,
      "Time_End": 509.0,
      "Text": " Had it not been found right?"
    },
    {
      "Time_Start": 509.0,
      "Time_End": 512.0,
      "Text": " In fact, the deep-seated reasons why this variability"
    },
    {
      "Time_Start": 512.0,
      "Time_End": 514.0,
      "Text": " hadn't been discovered are as follows."
    },
    {
      "Time_Start": 514.0,
      "Time_End": 517.0,
      "Text": " First, its travel conditions are very complex."
    },
    {
      "Time_Start": 517.0,
      "Time_End": 523.0,
      "Text": " It needs to overflow data of sufficient length to track a crash."
    },
    {
      "Time_Start": 523.0,
      "Time_End": 525.0,
      "Text": " But in the actual environment,"
    },
    {
      "Time_Start": 525.0,
      "Time_End": 529.0,
      "Text": " the space allotted by the malloc is usually larger"
    },
    {
      "Time_Start": 529.0,
      "Time_End": 533.0,
      "Text": " than the actual parameter size passed in."
    },
    {
      "Time_Start": 533.0,
      "Time_End": 536.0,
      "Text": " Secondly, the tracking of this variability"
    },
    {
      "Time_Start": 536.0,
      "Time_End": 539.0,
      "Text": " also requires the cooperation of the first-level table"
    },
    {
      "Time_Start": 539.0,
      "Time_End": 542.0,
      "Text": " and the specificity of the encoding data."
    },
    {
      "Time_Start": 542.0,
      "Time_End": 548.0,
      "Text": " That's caused a lot of bugs during the blockchain version."
    },
    {
      "Time_Start": 548.0,
      "Time_End": 552.0,
      "Text": " And this is the last variability."
    },
    {
      "Time_Start": 552.0,
      "Time_End": 557.0,
      "Text": " This variability is located in the TCP-ULP model."
    },
    {
      "Time_Start": 557.0,
      "Time_End": 561.0,
      "Text": " There are some protocols in the Linux kernel that support this model."
    },
    {
      "Time_Start": 561.0,
      "Time_End": 564.0,
      "Text": " And these protocols that support this model need to"
    },
    {
      "Time_Start": 564.0,
      "Time_End": 567.0,
      "Text": " implant TCP-ULP-AUX structure,"
    },
    {
      "Time_Start": 567.0,
      "Time_End": 570.0,
      "Text": " which contains a clone function point."
    },
    {
      "Time_Start": 570.0,
      "Time_End": 574.0,
      "Text": " When the TCP three-way handshake protocol is complete,"
    },
    {
      "Time_Start": 574.0,
      "Time_End": 577.0,
      "Text": " that is, when the TCP listener states"
    },
    {
      "Time_Start": 577.0,
      "Time_End": 580.0,
      "Text": " change to TCP established,"
    },
    {
      "Time_Start": 580.0,
      "Time_End": 585.0,
      "Text": " SK clone lock will be called to generate a new SK."
    },
    {
      "Time_Start": 585.0,
      "Time_End": 588.0,
      "Text": " When the protocol is used, such as subflow,"
    },
    {
      "Time_Start": 588.0,
      "Time_End": 591.0,
      "Text": " and implements the clone function,"
    },
    {
      "Time_Start": 591.0,
      "Time_End": 594.0,
      "Text": " the clone function will be called to process the context state."
    },
    {
      "Time_Start": 594.0,
      "Time_End": 596.0,
      "Text": " If there is no original SK,"
    },
    {
      "Time_Start": 596.0,
      "Time_End": 600.0,
      "Text": " it will copy its own context to the new SK."
    },
    {
      "Time_Start": 600.0,
      "Time_End": 605.0,
      "Text": " For example, the TLS protocol doesn't implant this clone."
    },
    {
      "Time_Start": 605.0,
      "Time_End": 608.0,
      "Text": " This will result in two different SKs"
    },
    {
      "Time_Start": 608.0,
      "Time_End": 611.0,
      "Text": " pointing to the same context,"
    },
    {
      "Time_Start": 611.0,
      "Time_End": 615.0,
      "Text": " which is a typical double-free problem."
    },
    {
      "Time_Start": 615.0,
      "Time_End": 619.0,
      "Text": " The interesting point of this vulnerability"
    },
    {
      "Time_Start": 619.0,
      "Time_End": 622.0,
      "Text": " is that the TLS protocol only allows"
    },
    {
      "Time_Start": 622.0,
      "Time_End": 625.0,
      "Text": " the TCP established step to be set"
    },
    {
      "Time_Start": 625.0,
      "Time_End": 628.0,
      "Text": " after the three-way handshake is successful."
    },
    {
      "Time_Start": 628.0,
      "Time_End": 631.0,
      "Text": " So we need to use the same software to repeatedly"
    },
    {
      "Time_Start": 631.0,
      "Time_End": 634.0,
      "Text": " perform the three-way handshake to check this vulnerability,"
    },
    {
      "Time_Start": 634.0,
      "Time_End": 640.0,
      "Text": " which obviously violates the general password coverage standard."
    },
    {
      "Time_Start": 640.0,
      "Time_End": 644.0,
      "Text": " Next, let's turn our attention to the second part,"
    },
    {
      "Time_Start": 644.0,
      "Time_End": 647.0,
      "Text": " review the targets."
    },
    {
      "Time_Start": 652.0,
      "Time_End": 656.0,
      "Text": " We can see that since Google offered a bounty for Linux,"
    },
    {
      "Time_Start": 656.0,
      "Time_End": 661.0,
      "Text": " a large number of exploitable vulnerabilities in Linux core has appeared."
    },
    {
      "Time_Start": 661.0,
      "Time_End": 666.0,
      "Text": " And Hongjiong also has Ubuntu LTE project every year."
    },
    {
      "Time_Start": 666.0,
      "Time_End": 672.0,
      "Text": " So Linux seems to be a great target for BAU."
    },
    {
      "Time_Start": 672.0,
      "Time_End": 679.0,
      "Text": " As we all know, the most common solution for bug hunting is farming."
    },
    {
      "Time_Start": 679.0,
      "Time_End": 684.0,
      "Text": " So we want to fast Linux."
    },
    {
      "Time_Start": 684.0,
      "Time_End": 687.0,
      "Text": " First of all, the tech service."
    },
    {
      "Time_Start": 687.0,
      "Time_End": 691.0,
      "Text": " A year or two ago, EPF was very famous"
    },
    {
      "Time_Start": 691.0,
      "Time_End": 694.0,
      "Text": " and had many vulnerabilities."
    },
    {
      "Time_Start": 694.0,
      "Time_End": 697.0,
      "Text": " But due to Ubuntu's setting,"
    },
    {
      "Time_Start": 698.0,
      "Time_End": 702.0,
      "Text": " the user couldn't access this module."
    },
    {
      "Time_Start": 702.0,
      "Time_End": 706.0,
      "Text": " You can see the screenshot on my computer here."
    },
    {
      "Time_Start": 709.0,
      "Time_End": 711.0,
      "Text": " Next is IOUMI."
    },
    {
      "Time_Start": 711.0,
      "Time_End": 713.0,
      "Text": " Last year's EPF had,"
    },
    {
      "Time_Start": 713.0,
      "Time_End": 719.0,
      "Text": " it clearly showed that IOUMI had many vulnerabilities"
    },
    {
      "Time_Start": 719.0,
      "Time_End": 722.0,
      "Text": " and most of them are exploitable."
    },
    {
      "Time_Start": 722.0,
      "Time_End": 729.0,
      "Text": " These vulnerabilities could even be used in Android critical before."
    },
    {
      "Time_Start": 729.0,
      "Time_End": 737.0,
      "Text": " But recently, Android disabled unregulated users for accessing IOUMI."
    },
    {
      "Time_Start": 737.0,
      "Time_End": 745.0,
      "Text": " However, many distributions like Ubuntu know its use."
    },
    {
      "Time_Start": 745.0,
      "Time_End": 749.0,
      "Text": " Therefore, it's a good tech service"
    },
    {
      "Time_Start": 749.0,
      "Time_End": 752.0,
      "Text": " with repeat code updates."
    },
    {
      "Time_Start": 752.0,
      "Time_End": 757.0,
      "Text": " However, the disadvantages are also perverse."
    },
    {
      "Time_Start": 757.0,
      "Time_End": 760.0,
      "Text": " Too many people have deleted,"
    },
    {
      "Time_Start": 760.0,
      "Time_End": 764.0,
      "Text": " which makes the vulnerabilities easy to repeat."
    },
    {
      "Time_Start": 766.0,
      "Time_End": 770.0,
      "Text": " Then there is our superstar, Netfilter."
    },
    {
      "Time_Start": 770.0,
      "Time_End": 778.0,
      "Text": " We can see that a large number of vulnerabilities in Google KCTF come from this module."
    },
    {
      "Time_Start": 779.0,
      "Time_End": 782.0,
      "Text": " We can even see that most of them."
    },
    {
      "Time_Start": 782.0,
      "Time_End": 786.0,
      "Text": " Looking back at the vulnerabilities in recent years,"
    },
    {
      "Time_Start": 786.0,
      "Time_End": 791.0,
      "Text": " this module has always been a hotspot for bug hunting."
    },
    {
      "Time_Start": 793.0,
      "Time_End": 798.0,
      "Text": " This fully provides that this module is complete enough"
    },
    {
      "Time_Start": 798.0,
      "Time_End": 801.0,
      "Text": " and may contain a lot of treasures."
    },
    {
      "Time_Start": 802.0,
      "Time_End": 807.0,
      "Text": " Moreover, a large number of well-known security researchers"
    },
    {
      "Time_Start": 807.0,
      "Time_End": 814.0,
      "Text": " have published their own treasure-hunting articles for this module,"
    },
    {
      "Time_Start": 814.0,
      "Time_End": 818.0,
      "Text": " which makes it very easy for us to get stuck."
    },
    {
      "Time_Start": 818.0,
      "Time_End": 828.0,
      "Text": " But the price is that this makes the vulnerabilities you find in Netfilter"
    },
    {
      "Time_Start": 828.0,
      "Time_End": 836.0,
      "Text": " will be easy to repeat even higher than the IOURI."
    },
    {
      "Time_Start": 837.0,
      "Time_End": 843.0,
      "Text": " By the way, as a large number of Linux kernel vulnerabilities are discovered,"
    },
    {
      "Time_Start": 843.0,
      "Time_End": 848.0,
      "Text": " the price of Ubuntu on Tobio is decreasing year by year."
    },
    {
      "Time_Start": 851.0,
      "Time_End": 855.0,
      "Text": " So, what is the target of funding?"
    },
    {
      "Time_Start": 856.0,
      "Time_End": 859.0,
      "Text": " After some research, after some searching,"
    },
    {
      "Time_Start": 859.0,
      "Time_End": 864.0,
      "Text": " I finally decided to fund in the network package scheduler."
    },
    {
      "Time_Start": 865.0,
      "Time_End": 871.0,
      "Text": " Its advantages are that it is complete and has no vulnerabilities requirement,"
    },
    {
      "Time_Start": 871.0,
      "Time_End": 875.0,
      "Text": " and most importantly, it has less attention."
    },
    {
      "Time_Start": 876.0,
      "Time_End": 880.0,
      "Text": " Its disadvantages are also perverse."
    },
    {
      "Time_Start": 880.0,
      "Time_End": 887.0,
      "Text": " It has poor generalizability and requires a new network space."
    },
    {
      "Time_Start": 890.0,
      "Time_End": 893.0,
      "Text": " So, how to use NetScheduler?"
    },
    {
      "Time_Start": 894.0,
      "Time_End": 901.0,
      "Text": " First, we need to create an SD, then call sendMessage with ASConnect link."
    },
    {
      "Time_Start": 902.0,
      "Time_End": 907.0,
      "Text": " There are also a lot of RTMs for us to choose."
    },
    {
      "Time_Start": 907.0,
      "Time_End": 914.0,
      "Text": " You can choose to create a new QDisk, a new class, a new chain, a new filter, and a new action."
    },
    {
      "Time_Start": 915.0,
      "Time_End": 920.0,
      "Text": " RTM New QDisk has many options,"
    },
    {
      "Time_Start": 920.0,
      "Time_End": 926.0,
      "Text": " like Schedule FIFO, which means first-in-first-out,"
    },
    {
      "Time_Start": 926.0,
      "Time_End": 932.0,
      "Text": " and Schedule HDB, Schedule Multicube."
    },
    {
      "Time_Start": 933.0,
      "Time_End": 938.0,
      "Text": " RTM NetFilters also has many options."
    },
    {
      "Time_Start": 938.0,
      "Time_End": 942.0,
      "Text": " But first, we need to select which CLS you want,"
    },
    {
      "Time_Start": 942.0,
      "Time_End": 949.0,
      "Text": " like CLS.UserDistribute, CLS.Follow, CLS.Flowers, and CLS.EM,"
    },
    {
      "Time_Start": 949.0,
      "Time_End": 955.0,
      "Text": " like EM.Text, EM.IDT, EM.UserDistribute."
    },
    {
      "Time_Start": 957.0,
      "Time_End": 960.0,
      "Text": " RTM New Action is the same."
    },
    {
      "Time_Start": 960.0,
      "Time_End": 963.0,
      "Text": " You can choose the actions you want."
    },
    {
      "Time_Start": 966.0,
      "Time_End": 972.0,
      "Text": " So, after kind of finding these structures,"
    },
    {
      "Time_Start": 972.0,
      "Time_End": 974.0,
      "Text": " it's easy for us to start planning,"
    },
    {
      "Time_Start": 974.0,
      "Time_End": 977.0,
      "Text": " like you can use this code."
    },
    {
      "Time_Start": 981.0,
      "Time_End": 986.0,
      "Text": " Unfortunately, after a while, we didn't have any good results."
    },
    {
      "Time_Start": 987.0,
      "Time_End": 994.0,
      "Text": " So, I decided to do a code review directly."
    },
    {
      "Time_Start": 996.0,
      "Time_End": 999.0,
      "Text": " Then I found something interesting."
    },
    {
      "Time_Start": 999.0,
      "Time_End": 1003.0,
      "Text": " Let's look at the CLS.Flowers."
    },
    {
      "Time_Start": 1003.0,
      "Time_End": 1006.0,
      "Text": " We can see that the FLC,"
    },
    {
      "Time_Start": 1006.0,
      "Time_End": 1008.0,
      "Text": " we can see that the FLC,"
    },
    {
      "Time_Start": 1008.0,
      "Time_End": 1013.0,
      "Text": " this general OPT has an LOS infrastructure"
    },
    {
      "Time_Start": 1013.0,
      "Time_End": 1017.0,
      "Text": " that directly uses the LOS parameter,"
    },
    {
      "Time_Start": 1017.0,
      "Time_End": 1023.0,
      "Text": " which looks like a potential variable for the ability."
    },
    {
      "Time_Start": 1025.0,
      "Time_End": 1030.0,
      "Text": " The LOS of this LOS is 255."
    },
    {
      "Time_Start": 1033.0,
      "Time_End": 1036.0,
      "Text": " But when we continue to look at it,"
    },
    {
      "Time_Start": 1036.0,
      "Time_End": 1041.0,
      "Text": " our subsequent code actually checks the length of length."
    },
    {
      "Time_Start": 1043.0,
      "Time_End": 1046.0,
      "Text": " So, this isn't a bug."
    },
    {
      "Time_Start": 1047.0,
      "Time_End": 1049.0,
      "Text": " My spider science told me"
    },
    {
      "Time_Start": 1049.0,
      "Time_End": 1052.0,
      "Text": " I should go back and take another look."
    },
    {
      "Time_Start": 1054.0,
      "Time_End": 1056.0,
      "Text": " Let's go back and take a look."
    },
    {
      "Time_Start": 1056.0,
      "Time_End": 1060.0,
      "Text": " We can see that after getting OPT from the LOS,"
    },
    {
      "Time_Start": 1062.0,
      "Time_End": 1065.0,
      "Text": " OPT is assigned a value immediately."
    },
    {
      "Time_Start": 1065.0,
      "Time_End": 1069.0,
      "Text": " And below the arrow is the length."
    },
    {
      "Time_Start": 1070.0,
      "Time_End": 1074.0,
      "Text": " This length will be 0 when we first call this function."
    },
    {
      "Time_Start": 1074.0,
      "Time_End": 1078.0,
      "Text": " And R1, R2, R3 are also 0."
    },
    {
      "Time_Start": 1079.0,
      "Time_End": 1082.0,
      "Text": " So, it looks like 0 is 1."
    },
    {
      "Time_Start": 1086.0,
      "Time_End": 1090.0,
      "Text": " The arrow contacts the OPT struct and the data."
    },
    {
      "Time_Start": 1091.0,
      "Time_End": 1097.0,
      "Text": " Length points to the end of the data filled in the arrow."
    },
    {
      "Time_Start": 1097.0,
      "Time_End": 1101.0,
      "Text": " It's not difficult to concentrate a suitable length."
    },
    {
      "Time_Start": 1101.0,
      "Time_End": 1105.0,
      "Text": " And then OPT overrides length to 0."
    },
    {
      "Time_Start": 1108.0,
      "Time_End": 1110.0,
      "Text": " Now we can bypass the check for length"
    },
    {
      "Time_Start": 1110.0,
      "Time_End": 1115.0,
      "Text": " and fill the subsequent data into the structure"
    },
    {
      "Time_Start": 1116.0,
      "Time_End": 1120.0,
      "Text": " to complete the autofound right in the structure."
    },
    {
      "Time_Start": 1124.0,
      "Time_End": 1133.0,
      "Text": " The limitation is that we can only overwrite over 128 bytes."
    },
    {
      "Time_Start": 1136.0,
      "Time_End": 1140.0,
      "Text": " If we look for this structure in the source code,"
    },
    {
      "Time_Start": 1140.0,
      "Time_End": 1145.0,
      "Text": " we can see that the structure where our arrow is located"
    },
    {
      "Time_Start": 1145.0,
      "Time_End": 1150.0,
      "Text": " is actually imbibed in two different structures."
    },
    {
      "Time_Start": 1150.0,
      "Time_End": 1158.0,
      "Text": " One of which happens to have a chain that can be overwritten later."
    },
    {
      "Time_Start": 1159.0,
      "Time_End": 1162.0,
      "Text": " Which means that we can modify a head point"
    },
    {
      "Time_Start": 1163.0,
      "Time_End": 1167.0,
      "Text": " which can easily convert this vulnerability."
    },
    {
      "Time_Start": 1168.0,
      "Time_End": 1172.0,
      "Text": " The other contains a function point,"
    },
    {
      "Time_Start": 1172.0,
      "Time_End": 1176.0,
      "Text": " which means we can modify and delete a function point."
    },
    {
      "Time_Start": 1178.0,
      "Time_End": 1184.0,
      "Text": " Since the CLS flower provides us with the function of passing the data,"
    },
    {
      "Time_Start": 1184.0,
      "Time_End": 1188.0,
      "Text": " we pass the bank to the user space."
    },
    {
      "Time_Start": 1188.0,
      "Time_End": 1192.0,
      "Text": " It may depend on the OPT of each handler"
    },
    {
      "Time_Start": 1193.0,
      "Time_End": 1196.0,
      "Text": " and the total length."
    },
    {
      "Time_Start": 1200.0,
      "Time_End": 1208.0,
      "Text": " If we continue to fill data in this arrow after checking the structure overflow,"
    },
    {
      "Time_Start": 1208.0,
      "Time_End": 1211.0,
      "Text": " since our length has been modified,"
    },
    {
      "Time_Start": 1211.0,
      "Time_End": 1215.0,
      "Text": " we will start writing the content of the data again."
    },
    {
      "Time_Start": 1216.0,
      "Time_End": 1222.0,
      "Text": " After layout, we can modify the length of part of the original OPT."
    },
    {
      "Time_Start": 1222.0,
      "Time_End": 1228.0,
      "Text": " At the same time, build a fake OPT struct at the end of the arrow."
    },
    {
      "Time_Start": 1228.0,
      "Time_End": 1230.0,
      "Text": " Since the kernel will be mistaken,"
    },
    {
      "Time_Start": 1230.0,
      "Time_End": 1234.0,
      "Text": " since there will be more data passed in later."
    },
    {
      "Time_Start": 1237.0,
      "Time_End": 1240.0,
      "Text": " Realizing the autofound right in the structure"
    },
    {
      "Time_Start": 1240.0,
      "Time_End": 1246.0,
      "Text": " we can link the function point mentioned earlier."
    },
    {
      "Time_Start": 1249.0,
      "Time_End": 1253.0,
      "Text": " That's the exploded Ubuntu."
    },
    {
      "Time_Start": 1255.0,
      "Time_End": 1259.0,
      "Text": " More details can be found in the link below."
    },
    {
      "Time_Start": 1265.0,
      "Time_End": 1268.0,
      "Text": " Now let's turn our attention to mobile RCE"
    },
    {
      "Time_Start": 1268.0,
      "Time_End": 1271.0,
      "Text": " and the parsing logic of HEAP."
    },
    {
      "Time_Start": 1271.0,
      "Time_End": 1276.0,
      "Text": " HEAP files are special cases of ISO-based media file formats."
    },
    {
      "Time_Start": 1276.0,
      "Time_End": 1282.0,
      "Text": " Latest conditions and timed media and metadata streams forms a check,"
    },
    {
      "Time_Start": 1282.0,
      "Time_End": 1287.0,
      "Text": " whereas static media and metadata is stored as items."
    },
    {
      "Time_Start": 1287.0,
      "Time_End": 1291.0,
      "Text": " Consequently, HEAP has the following basic designers."
    },
    {
      "Time_Start": 1291.0,
      "Time_End": 1296.0,
      "Text": " First is, still images are stored as items."
    },
    {
      "Time_Start": 1296.0,
      "Time_End": 1301.0,
      "Text": " Second, image sequences are stored as checks."
    },
    {
      "Time_Start": 1301.0,
      "Time_End": 1307.0,
      "Text": " So a file may contain both image items and image sequences,"
    },
    {
      "Time_Start": 1307.0,
      "Time_End": 1309.0,
      "Text": " checks along with other media."
    },
    {
      "Time_Start": 1309.0,
      "Time_End": 1315.0,
      "Text": " The picture on the right illustrates how a file player processes a coded image"
    },
    {
      "Time_Start": 1315.0,
      "Time_End": 1318.0,
      "Text": " and the derived image includes a file."
    },
    {
      "Time_Start": 1318.0,
      "Time_End": 1323.0,
      "Text": " The file player decodes a coded image into a reconstructed image."
    },
    {
      "Time_Start": 1323.0,
      "Time_End": 1328.0,
      "Text": " Similarly, the file player applies the operation of the derived image"
    },
    {
      "Time_Start": 1328.0,
      "Time_End": 1334.0,
      "Text": " to the indicated one or more important image"
    },
    {
      "Time_Start": 1334.0,
      "Time_End": 1338.0,
      "Text": " to obtain the respective code image."
    },
    {
      "Time_Start": 1340.0,
      "Time_End": 1346.0,
      "Text": " The flowchart here simply shows the parsing process of simple on-sensing."
    },
    {
      "Time_Start": 1346.0,
      "Time_End": 1349.0,
      "Text": " Since the HEAP I mentioned before"
    },
    {
      "Time_Start": 1349.0,
      "Time_End": 1353.0,
      "Text": " can actually be regarded as a combined type of file."
    },
    {
      "Time_Start": 1353.0,
      "Time_End": 1356.0,
      "Text": " This is mainly divided into two parts."
    },
    {
      "Time_Start": 1356.0,
      "Time_End": 1360.0,
      "Text": " The first part is about the HEAP file HEAP parsing,"
    },
    {
      "Time_Start": 1360.0,
      "Time_End": 1364.0,
      "Text": " and the other part is about the parsing of the file content inside HEAP."
    },
    {
      "Time_Start": 1364.0,
      "Time_End": 1368.0,
      "Text": " Since the file content is highly inclusive,"
    },
    {
      "Time_Start": 1368.0,
      "Time_End": 1373.0,
      "Text": " its content will lead to parsing of some other file formats."
    },
    {
      "Time_Start": 1374.0,
      "Time_End": 1381.0,
      "Text": " At that time, tools like AFL++ hadn't yet introduced filing tests"
    },
    {
      "Time_Start": 1381.0,
      "Time_End": 1385.0,
      "Text": " that could be directly run on mobile phones."
    },
    {
      "Time_Start": 1385.0,
      "Time_End": 1391.0,
      "Text": " So I initially wondered why I can't test these function libraries through the QMU."
    },
    {
      "Time_Start": 1391.0,
      "Time_End": 1394.0,
      "Text": " But this idea was quickly rejected because"
    },
    {
      "Time_Start": 1394.0,
      "Time_End": 1398.0,
      "Text": " the gen-line interface elements of these function libraries"
    },
    {
      "Time_Start": 1398.0,
      "Time_End": 1401.0,
      "Text": " are relatively complex Java objects,"
    },
    {
      "Time_Start": 1401.0,
      "Time_End": 1406.0,
      "Text": " which may not be well suitable for the simulation testing QMU."
    },
    {
      "Time_Start": 1406.0,
      "Time_End": 1410.0,
      "Text": " So I considered whether I could use Vreda to write a fuzzer"
    },
    {
      "Time_Start": 1410.0,
      "Time_End": 1413.0,
      "Text": " for completely code coverage calculation."
    },
    {
      "Time_Start": 1413.0,
      "Time_End": 1416.0,
      "Text": " So here it is, a not-too-bad fuzzer."
    },
    {
      "Time_Start": 1416.0,
      "Time_End": 1421.0,
      "Text": " Its main improvement is that it doesn't both mutiline functions through JS,"
    },
    {
      "Time_Start": 1421.0,
      "Time_End": 1426.0,
      "Text": " but directly use the function interface brought by the Vreda core."
    },
    {
      "Time_Start": 1426.0,
      "Time_End": 1433.0,
      "Text": " In fact, the Vreda core itself is the underlying hooking framework"
    },
    {
      "Time_Start": 1433.0,
      "Time_End": 1436.0,
      "Text": " directed through the QMU object,"
    },
    {
      "Time_Start": 1436.0,
      "Time_End": 1439.0,
      "Text": " so we can directly use its underlying interface."
    },
    {
      "Time_Start": 1439.0,
      "Time_End": 1443.0,
      "Text": " The function shown in the pictures here,"
    },
    {
      "Time_Start": 1443.0,
      "Time_End": 1447.0,
      "Text": " the onMessage() will transmit the code block information"
    },
    {
      "Time_Start": 1447.0,
      "Time_End": 1452.0,
      "Text": " checked by the underlying stacker back to our Honey's program,"
    },
    {
      "Time_Start": 1452.0,
      "Time_End": 1457.0,
      "Text": " and thereby realizing the collection of block coverage"
    },
    {
      "Time_Start": 1457.0,
      "Time_End": 1462.0,
      "Text": " and some other functions will support some crash or excess signups."
    },
    {
      "Time_Start": 1462.0,
      "Time_End": 1467.0,
      "Text": " So the final effect is that I can run my fuzzer directly on my phone."
    },
    {
      "Time_Start": 1467.0,
      "Time_End": 1474.0,
      "Text": " The result of fuzzing test is a total of 16 manipulations were discovered within mouse,"
    },
    {
      "Time_Start": 1474.0,
      "Time_End": 1477.0,
      "Text": " including 5 critical and 1 high."
    },
    {
      "Time_Start": 1477.0,
      "Time_End": 1483.0,
      "Text": " The CVE-2021-39804 is actually a bit interesting."
    },
    {
      "Time_Start": 1483.0,
      "Time_End": 1487.0,
      "Text": " This manipulator itself is not very dangerous,"
    },
    {
      "Time_Start": 1487.0,
      "Time_End": 1491.0,
      "Text": " but it does bring me some inspiration and encouragement,"
    },
    {
      "Time_Start": 1491.0,
      "Time_End": 1497.0,
      "Text": " which proves platforms like OASIS Fuzz cannot achieve 100% success,"
    },
    {
      "Time_Start": 1497.0,
      "Time_End": 1502.0,
      "Text": " even if faced with some fuzzing modules that have been tested many times."
    },
    {
      "Time_Start": 1502.0,
      "Time_End": 1510.0,
      "Text": " Different fuzzing methods will still be able to discover different security manipulations."
    },
    {
      "Time_Start": 1512.0,
      "Time_End": 1517.0,
      "Text": " So let's compare some existing fuzzing test flow methods,"
    },
    {
      "Time_Start": 1517.0,
      "Time_End": 1522.0,
      "Text": " which are basically connected from the last year, Zerocon 2023."
    },
    {
      "Time_Start": 1522.0,
      "Time_End": 1525.0,
      "Text": " So MJ, he wrote a great series of blogs,"
    },
    {
      "Time_Start": 1525.0,
      "Time_End": 1530.0,
      "Text": " he had a research about closed-source and binary fuzzing,"
    },
    {
      "Time_Start": 1530.0,
      "Time_End": 1533.0,
      "Text": " and I used to write the 3D fuzzer."
    },
    {
      "Time_Start": 1533.0,
      "Time_End": 1538.0,
      "Text": " The folks have a topic about Android J9 fuzzing,"
    },
    {
      "Time_Start": 1538.0,
      "Time_End": 1544.0,
      "Text": " and the guys from Zhejiang University also test on something called closed-source libraries."
    },
    {
      "Time_Start": 1544.0,
      "Time_End": 1552.0,
      "Text": " So fuzzing testing can be a general approach to find bugs in closed-source native libraries."
    },
    {
      "Time_Start": 1552.0,
      "Time_End": 1559.0,
      "Text": " For mobile testing targets, code coverage should be the most effective fuzzing testing method."
    },
    {
      "Time_Start": 1559.0,
      "Time_End": 1564.0,
      "Text": " From an object point of view, currently in Android native library,"
    },
    {
      "Time_Start": 1564.0,
      "Time_End": 1568.0,
      "Text": " basically all the function libraries' objects can be fuzzed tested."
    },
    {
      "Time_Start": 1568.0,
      "Time_End": 1572.0,
      "Text": " For shared libraries, if the parameters are memory, address, or object,"
    },
    {
      "Time_Start": 1572.0,
      "Time_End": 1579.0,
      "Text": " string, file, or descript, we can use QMU to collect the code coverage."
    },
    {
      "Time_Start": 1579.0,
      "Time_End": 1582.0,
      "Text": " If the parameters are objects of Java library,"
    },
    {
      "Time_Start": 1582.0,
      "Time_End": 1587.0,
      "Text": " we can use JVM or QMU or Frida to collect the code coverage,"
    },
    {
      "Time_Start": 1587.0,
      "Time_End": 1590.0,
      "Text": " such as a survice process."
    },
    {
      "Time_Start": 1590.0,
      "Time_End": 1595.0,
      "Text": " And there is already a corresponding tool, like Chatsify."
    },
    {
      "Time_Start": 1595.0,
      "Time_End": 1602.0,
      "Text": " And its implementation is also to collect the code coverage through Frida."
    },
    {
      "Time_Start": 1602.0,
      "Time_End": 1606.0,
      "Text": " And for native network process and session,"
    },
    {
      "Time_Start": 1606.0,
      "Time_End": 1611.0,
      "Text": " Netella from Google Project Zero did a corresponding buzzing test"
    },
    {
      "Time_Start": 1611.0,
      "Time_End": 1614.0,
      "Text": " on some mainstream information-transmitting software,"
    },
    {
      "Time_Start": 1614.0,
      "Time_End": 1618.0,
      "Text": " including WhatsApp and other applications."
    },
    {
      "Time_Start": 1618.0,
      "Time_End": 1624.0,
      "Text": " So the method used was also similar to the Frida passive fuzzing test."
    },
    {
      "Time_Start": 1624.0,
      "Time_End": 1630.0,
      "Text": " So in theory, it can also use Frida to collect the code coverage."
    },
    {
      "Time_Start": 1630.0,
      "Time_End": 1634.0,
      "Text": " So is there anything else we should pay attention to?"
    },
    {
      "Time_Start": 1634.0,
      "Time_End": 1644.0,
      "Text": " As we mentioned before, the CVE-2020-15999 is missed by fuzzing test operations."
    },
    {
      "Time_Start": 1644.0,
      "Time_End": 1652.0,
      "Text": " And the CVE-2020-4863, they are missed because of complex conditionals"
    },
    {
      "Time_Start": 1652.0,
      "Time_End": 1655.0,
      "Text": " and deep travel paths."
    },
    {
      "Time_Start": 1655.0,
      "Time_End": 1660.0,
      "Text": " Another point is that the seed source of fuzzing test always affects some aspects."
    },
    {
      "Time_Start": 1660.0,
      "Time_End": 1667.0,
      "Text": " Sometimes it is difficult for us to find a seed file that can trigger deep-level code very acutely."
    },
    {
      "Time_Start": 1667.0,
      "Time_End": 1674.0,
      "Text": " So in addition, fuzzing testing tools themselves usually have various problems."
    },
    {
      "Time_Start": 1674.0,
      "Time_End": 1681.0,
      "Text": " For example, Frida is very unstable and prone to crash in the actual user's theory times."
    },
    {
      "Time_Start": 1681.0,
      "Time_End": 1684.0,
      "Text": " And its testing speed is very slow."
    },
    {
      "Time_Start": 1684.0,
      "Time_End": 1688.0,
      "Text": " And due to the particular of mobile Frida code coverage crashing,"
    },
    {
      "Time_Start": 1688.0,
      "Time_End": 1694.0,
      "Text": " the multi-line process parallel fuzzing test method is also very difficult to implement."
    },
    {
      "Time_Start": 1697.0,
      "Time_End": 1699.0,
      "Text": " So it's time to review."
    },
    {
      "Time_Start": 1699.0,
      "Time_End": 1706.0,
      "Text": " And here is the CVE-2020-30699."
    },
    {
      "Time_Start": 1709.0,
      "Time_End": 1713.0,
      "Text": " In fact, this isn't a very complex type of limiting."
    },
    {
      "Time_Start": 1713.0,
      "Time_End": 1719.0,
      "Text": " It still happens in the header fuzzing module that appears in the GIF file."
    },
    {
      "Time_Start": 1719.0,
      "Time_End": 1722.0,
      "Text": " So why hasn't this bug been found by Frida?"
    },
    {
      "Time_Start": 1722.0,
      "Time_End": 1728.0,
      "Text": " So here is the details about CVE-2020-30699."
    },
    {
      "Time_Start": 1728.0,
      "Time_End": 1734.0,
      "Text": " And the V38 variable will store the file data read from the GIF."
    },
    {
      "Time_Start": 1734.0,
      "Time_End": 1738.0,
      "Text": " And it will use the size in the subsequent read function."
    },
    {
      "Time_Start": 1738.0,
      "Time_End": 1742.0,
      "Text": " And V21 points to a memory variable."
    },
    {
      "Time_Start": 1742.0,
      "Time_End": 1746.0,
      "Text": " And its header stores the value of 1."
    },
    {
      "Time_Start": 1746.0,
      "Time_End": 1752.0,
      "Text": " And it will pass 1 from the V21 as the memory read area."
    },
    {
      "Time_Start": 1752.0,
      "Time_End": 1756.0,
      "Text": " So since we can control this total length,"
    },
    {
      "Time_Start": 1756.0,
      "Time_End": 1759.0,
      "Text": " it seems an out-of-bounds override."
    },
    {
      "Time_Start": 1759.0,
      "Time_End": 1761.0,
      "Text": " But there is a limitation."
    },
    {
      "Time_Start": 1761.0,
      "Time_End": 1766.0,
      "Text": " The sum of the lengths is actually the same as the elements"
    },
    {
      "Time_Start": 1766.0,
      "Time_End": 1770.0,
      "Text": " accumulated in the MyLogElement object before."
    },
    {
      "Time_Start": 1770.0,
      "Time_End": 1775.0,
      "Text": " So this will have to be no problem."
    },
    {
      "Time_Start": 1775.0,
      "Time_End": 1778.0,
      "Text": " Actually, the real problem is here."
    },
    {
      "Time_Start": 1778.0,
      "Time_End": 1781.0,
      "Text": " There is an integral truncation vulnerability"
    },
    {
      "Time_Start": 1781.0,
      "Time_End": 1785.0,
      "Text": " which can cause MyLogElement to allocate less space than expected."
    },
    {
      "Time_Start": 1785.0,
      "Time_End": 1787.0,
      "Text": " You can see that in the example,"
    },
    {
      "Time_Start": 1787.0,
      "Time_End": 1793.0,
      "Text": " this vulnerability uses the AND instruction instead of the MOV instruction."
    },
    {
      "Time_Start": 1795.0,
      "Time_End": 1799.0,
      "Text": " So if our logic is as shown in here,"
    },
    {
      "Time_Start": 1799.0,
      "Time_End": 1804.0,
      "Text": " it will traverse the collection area in the HVCC function."
    },
    {
      "Time_Start": 1804.0,
      "Time_End": 1808.0,
      "Text": " And then it will traverse the NeoUnit inside each area"
    },
    {
      "Time_Start": 1808.0,
      "Time_End": 1813.0,
      "Text": " and calculate the final space size that needs to be collocated"
    },
    {
      "Time_Start": 1813.0,
      "Time_End": 1819.0,
      "Text": " based on the size of each NeoUnit plus the length of the prefix."
    },
    {
      "Time_Start": 1819.0,
      "Time_End": 1822.0,
      "Text": " Therefore, due to the previous integral truncation vulnerability,"
    },
    {
      "Time_Start": 1822.0,
      "Time_End": 1826.0,
      "Text": " an out-of-bounds right problem will occur here."
    },
    {
      "Time_Start": 1826.0,
      "Time_End": 1830.0,
      "Text": " So why is this vulnerability not defined by father?"
    },
    {
      "Time_Start": 1830.0,
      "Time_End": 1835.0,
      "Text": " It is the vulnerability that also requires mutiline connection to match."
    },
    {
      "Time_Start": 1835.0,
      "Time_End": 1840.0,
      "Text": " This parsing part is a sub-model in the head."
    },
    {
      "Time_Start": 1840.0,
      "Time_End": 1844.0,
      "Text": " And it requires that the key file has mutiline NEOs."
    },
    {
      "Time_Start": 1844.0,
      "Time_End": 1849.0,
      "Text": " But in fact, the value of each NEO is limited in the small size."
    },
    {
      "Time_Start": 1849.0,
      "Time_End": 1854.0,
      "Text": " And finally, the sum of these values must exist"
    },
    {
      "Time_Start": 1854.0,
      "Time_End": 1858.0,
      "Text": " the maximum value of AND 32."
    },
    {
      "Time_Start": 1860.0,
      "Time_End": 1864.0,
      "Text": " Next, let's turn our attention to the content of this report"
    },
    {
      "Time_Start": 1864.0,
      "Time_End": 1866.0,
      "Text": " and enhance our fathers."
    },
    {
      "Time_Start": 1866.0,
      "Time_End": 1869.0,
      "Text": " So, why father fail?"
    },
    {
      "Time_Start": 1869.0,
      "Time_End": 1875.0,
      "Text": " The first kind is that the more use of this vulnerability is difficult to construct."
    },
    {
      "Time_Start": 1875.0,
      "Time_End": 1879.0,
      "Text": " For example, some memory destructive vulnerabilities"
    },
    {
      "Time_Start": 1879.0,
      "Time_End": 1883.0,
      "Text": " may not have induced effects such as crashes"
    },
    {
      "Time_Start": 1883.0,
      "Time_End": 1886.0,
      "Text": " so when they write out-of-bounds,"
    },
    {
      "Time_Start": 1886.0,
      "Time_End": 1890.0,
      "Text": " they may perform it at the internal of some memory unit"
    },
    {
      "Time_Start": 1890.0,
      "Time_End": 1895.0,
      "Text": " and the modified value is reasonable under certain probability."
    },
    {
      "Time_Start": 1895.0,
      "Time_End": 1899.0,
      "Text": " The second situation is usually more common"
    },
    {
      "Time_Start": 1899.0,
      "Time_End": 1901.0,
      "Text": " in some process files parsing."
    },
    {
      "Time_Start": 1901.0,
      "Time_End": 1903.0,
      "Text": " Because in some cases,"
    },
    {
      "Time_Start": 1903.0,
      "Time_End": 1907.0,
      "Text": " the character parts of the code are many and complex,"
    },
    {
      "Time_Start": 1907.0,
      "Time_End": 1911.0,
      "Text": " it is difficult to determine all the key process modules in a short time."
    },
    {
      "Time_Start": 1911.0,
      "Time_End": 1914.0,
      "Text": " Therefore, in most cases,"
    },
    {
      "Time_Start": 1914.0,
      "Time_End": 1918.0,
      "Text": " more attention may be paid to the earlier processing modules."
    },
    {
      "Time_Start": 1918.0,
      "Time_End": 1923.0,
      "Text": " There is also the third type of vulnerability"
    },
    {
      "Time_Start": 1923.0,
      "Time_End": 1926.0,
      "Text": " which is often the hardest one to find."
    },
    {
      "Time_Start": 1926.0,
      "Time_End": 1930.0,
      "Text": " It needs to be checked when the mutiline conditions are met at the same time."
    },
    {
      "Time_Start": 1930.0,
      "Time_End": 1934.0,
      "Text": " In many cases, we may not actually understand the key points"
    },
    {
      "Time_Start": 1934.0,
      "Time_End": 1936.0,
      "Text": " involved in parsing a function."
    },
    {
      "Time_Start": 1936.0,
      "Time_End": 1938.0,
      "Text": " At the same time it is closed,"
    },
    {
      "Time_Start": 1938.0,
      "Time_End": 1941.0,
      "Text": " so in closed parsing tests,"
    },
    {
      "Time_Start": 1941.0,
      "Time_End": 1945.0,
      "Text": " we usually focus more on the adaption of earlier interface elements"
    },
    {
      "Time_Start": 1945.0,
      "Time_End": 1948.0,
      "Text": " with the improvement of the code coverage."
    },
    {
      "Time_Start": 1948.0,
      "Time_End": 1951.0,
      "Text": " In attention, there are still some types of vulnerabilities"
    },
    {
      "Time_Start": 1951.0,
      "Time_End": 1954.0,
      "Text": " that are difficult to find with parsing tests."
    },
    {
      "Time_Start": 1955.0,
      "Time_End": 1958.0,
      "Text": " So we improve our parsing in the following ways."
    },
    {
      "Time_Start": 1958.0,
      "Time_End": 1961.0,
      "Text": " First, for mutiline layer nest structures,"
    },
    {
      "Time_Start": 1961.0,
      "Time_End": 1964.0,
      "Text": " we pay more attention to the efficiency of the parsing testing"
    },
    {
      "Time_Start": 1964.0,
      "Time_End": 1967.0,
      "Text": " to reach specific blocks or instructions"
    },
    {
      "Time_Start": 1967.0,
      "Time_End": 1969.0,
      "Text": " rather than the code coverage."
    },
    {
      "Time_Start": 1969.0,
      "Time_End": 1974.0,
      "Text": " This means we may pay more attention to the deeps of the code testing"
    },
    {
      "Time_Start": 1974.0,
      "Time_End": 1976.0,
      "Text": " rather just than the breadth."
    },
    {
      "Time_Start": 1976.0,
      "Time_End": 1981.0,
      "Text": " Because many existing parsing test tools focus on the breadth,"
    },
    {
      "Time_Start": 1981.0,
      "Time_End": 1984.0,
      "Text": " but some test results or vulnerabilities"
    },
    {
      "Time_Start": 1984.0,
      "Time_End": 1986.0,
      "Text": " only occur in the shadow code."
    },
    {
      "Time_Start": 1986.0,
      "Time_End": 1989.0,
      "Text": " Frequently crashes in the shadow logic"
    },
    {
      "Time_Start": 1989.0,
      "Time_End": 1994.0,
      "Text": " are not very competitive to test the deep code."
    },
    {
      "Time_Start": 1996.0,
      "Time_End": 2002.0,
      "Text": " Secondly, we pay more attention to the path testing"
    },
    {
      "Time_Start": 2002.0,
      "Time_End": 2004.0,
      "Text": " of some key interesting locations."
    },
    {
      "Time_Start": 2004.0,
      "Time_End": 2007.0,
      "Text": " For example, we use mutiline test on the same path,"
    },
    {
      "Time_Start": 2007.0,
      "Time_End": 2011.0,
      "Text": " but we use the different or unique value space."
    },
    {
      "Time_Start": 2011.0,
      "Time_End": 2016.0,
      "Text": " In general, this is the guided path testing structure"
    },
    {
      "Time_Start": 2016.0,
      "Time_End": 2020.0,
      "Text": " that focuses more on some forgotten vulnerabilities."
    },
    {
      "Time_Start": 2021.0,
      "Time_End": 2026.0,
      "Text": " And here are some new vulnerabilities tests we discovered."
    },
    {
      "Time_Start": 2026.0,
      "Time_End": 2033.0,
      "Text": " We can still find some new vulnerabilities on these targets."
    },
    {
      "Time_Start": 2033.0,
      "Time_End": 2037.0,
      "Text": " However, since some vulnerabilities are still being fixed,"
    },
    {
      "Time_Start": 2037.0,
      "Time_End": 2041.0,
      "Text": " we will mainly talk about the latest canal here."
    },
    {
      "Time_Start": 2047.0,
      "Time_End": 2048.0,
      "Text": " Hi."
    },
    {
      "Time_Start": 2052.0,
      "Time_End": 2056.0,
      "Text": " So the bug is in the schedule module."
    },
    {
      "Time_Start": 2056.0,
      "Time_End": 2059.0,
      "Text": " In the module, we need to delete the code"
    },
    {
      "Time_Start": 2059.0,
      "Time_End": 2064.0,
      "Text": " and make a new variable with a new Qtist."
    },
    {
      "Time_Start": 2064.0,
      "Time_End": 2071.0,
      "Text": " The length of the tree is determined by the number of CX queens."
    },
    {
      "Time_Start": 2072.0,
      "Time_End": 2081.0,
      "Text": " We can see that at position 1, QOPT bands are assigned."
    },
    {
      "Time_Start": 2081.0,
      "Time_End": 2090.0,
      "Text": " At position 2, the node is allocated by Qmax binds minus Qbinds."
    },
    {
      "Time_Start": 2090.0,
      "Time_End": 2097.0,
      "Text": " At position 3, Qbinds is assigned by Qoptbinds."
    },
    {
      "Time_Start": 2097.0,
      "Time_End": 2107.0,
      "Text": " At position 4, we put some extra Qtist objects into the removed analog."
    },
    {
      "Time_Start": 2107.0,
      "Time_End": 2111.0,
      "Text": " And then freeze them at position 5."
    },
    {
      "Time_Start": 2111.0,
      "Time_End": 2118.0,
      "Text": " Why is the old Qbinds used to allocate the removed size at position 2,"
    },
    {
      "Time_Start": 2118.0,
      "Time_End": 2125.0,
      "Text": " but the new Qbinds is used in the for loop later?"
    },
    {
      "Time_Start": 2125.0,
      "Time_End": 2127.0,
      "Text": " This seems strange."
    },
    {
      "Time_Start": 2127.0,
      "Time_End": 2135.0,
      "Text": " If maxbinds minus newbinds is greater than twice maxbinds minus oldbinds,"
    },
    {
      "Time_Start": 2135.0,
      "Time_End": 2141.0,
      "Text": " the for loop may write Qoptbinds to a tap point."
    },
    {
      "Time_Start": 2141.0,
      "Time_End": 2144.0,
      "Text": " That will be freezed soon."
    },
    {
      "Time_Start": 2146.0,
      "Time_End": 2154.0,
      "Text": " But first, we need to figure out what number CX queens and real number CX queens are."
    },
    {
      "Time_Start": 2154.0,
      "Time_End": 2162.0,
      "Text": " After I checked the source code of AI and tried it in my old network card,"
    },
    {
      "Time_Start": 2162.0,
      "Time_End": 2171.0,
      "Text": " I found that these two require hardware support."
    },
    {
      "Time_Start": 2171.0,
      "Time_End": 2175.0,
      "Text": " So this is a useless part."
    },
    {
      "Time_Start": 2175.0,
      "Time_End": 2180.0,
      "Text": " My spine size tells me these are not that simple."
    },
    {
      "Time_Start": 2180.0,
      "Time_End": 2184.0,
      "Text": " What if we create a virtual network card?"
    },
    {
      "Time_Start": 2184.0,
      "Time_End": 2185.0,
      "Text": " Boom!"
    },
    {
      "Time_Start": 2185.0,
      "Time_End": 2199.0,
      "Text": " We can now control the real number CX queens and default number CX queens to 128."
    },
    {
      "Time_Start": 2201.0,
      "Time_End": 2203.0,
      "Text": " Here is an example."
    },
    {
      "Time_Start": 2203.0,
      "Time_End": 2206.0,
      "Text": " First, we create a network card."
    },
    {
      "Time_Start": 2206.0,
      "Time_End": 2211.0,
      "Text": " Then we set real number CX queens to 124,"
    },
    {
      "Time_Start": 2211.0,
      "Time_End": 2215.0,
      "Text": " and call maxmultiple twins again,"
    },
    {
      "Time_Start": 2215.0,
      "Time_End": 2220.0,
      "Text": " which will create a 124-valued object."
    },
    {
      "Time_Start": 2220.0,
      "Time_End": 2229.0,
      "Text": " Then modify real number CX queens to 190,"
    },
    {
      "Time_Start": 2229.0,
      "Time_End": 2233.0,
      "Text": " and call maxloop twins again."
    },
    {
      "Time_Start": 2233.0,
      "Time_End": 2239.0,
      "Text": " We can write a tap point or loop that will be released immediately."
    },
    {
      "Time_Start": 2241.0,
      "Time_End": 2246.0,
      "Text": " Vulnerability was fixed by us a few weeks ago."
    },
    {
      "Time_Start": 2246.0,
      "Time_End": 2248.0,
      "Text": " Here is a demo."
    },
    {
      "Time_Start": 2263.0,
      "Time_End": 2264.0,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2264.0,
      "Time_End": 2265.0,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2291.0,
      "Time_End": 2292.0,
      "Text": " Thank you."
    }
  ]
}