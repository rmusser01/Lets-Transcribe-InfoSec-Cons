**Introduction:**
- Presentation at BionConference by **Quan Jin**, **Yingqi Shi**, and **Guoxian Zhong** from **DBAPPSecurity WeBin Lab**.
- Topic: "Ghost in the DLM": A 2-year journey of testing in-the-wild LPX roads in the North Commonwealth Fire Sector.

**Agenda:**
- Journey of testing in-the-wild LPX roads.
- Review of Pandora's box of the North Commonwealth Fire Sector X-roads and comparison with other vendors' work.
- Discussion of samples overlooked by other vendors.
- Insights into transport in-the-wild Windows LP0 days.

**Previous Research:**
- **Death Note of Microsoft Windows Kernel** by Ken Lam.
- **Commonwealth Fire System Internals** by Alex.
- **Tracking the Commonwealth Fire System** by 360.
- **Windows Commonwealth Fire System and File X-roads used by ransomware operators** by Kaspersky.

**Presentation Outline:**
- **Start:** Discuss how they began their work.
- **Hunt:** Explain the process of hunting the first eight Commonwealth Fire System X-roads, providing an overview of each, including basic information and vulnerability root cause.
- **Analyzing:** Share their experience in analyzing the first Commonwealth Fire System X-roads and the tools they developed to speed up the process. Also, share two unpublished Commonwealth Fire System X-roads.
- **Variant:** Discuss two Commonwealth Fire System vulnerabilities discovered through variant analysis.
- **Summary:** Provide relations between different Commonwealth Fire System X-roads and conclude.

**Start:**
- Journey began in October 2021 by catching the first Commonwealth Fire System X-road, which triggered a YARA report for Pipe Tribute.
- **P container** pointer exploitation: Achieving control flow hijacking by modifying the P container pointer.
- Refer to the Black Hat USA 2022 presentation for more details.
- **P container** is a key pointer exploited by all subsequent Commonwealth Fire System X-roads.

**Hunt:**
- **First X-road** (October 2021): Modified the P container by performing a 1-bit flip inside the Commonwealth Fire System logSVB physical FlashMatterData function.
- **Second X-road** (May 2022): Triggered the pipe tribute work. The author believed they were writing an X-road for CVE-2022-24521, but they were not. Kaspersky labeled it as X-road 1.
- **Third X-road** (In-the-wild stamper of CVE-2022-24521): Vulnerability originated from a lack of proper validation on the signature's movie set of CLFS log block header.
- **Fourth X-road** (In-the-wild zero day, CVE-2022-37969): Used a different technique, employing NTSC set access state generate matching and the CLFS earlier LSN function. Modified the P container in CLFS base file persisted a log symbol by using memory set.
- **Fifth X-road** (New Commonwealth Fire System one-day X-road): Detected by the pipe tribute row. Introduced new X-road techniques, including hijacking virtual function codes and using functions such as CLFS, MGMT, NTPOFX processor notification, and NTRK or clear read. Kaspersky labeled it as X-road 2.
- **Sixth X-road** (Similar technique to the previous one): Kaspersky labeled it as X-road 3. Modified the P container in the CLFS log FCP physical flush meter data function using the LSTM restart number.

**Analyzing:**
- **Analysis process:** Debugging, reverse engineering, and developing tools (010 enter template and common log file system structure header file) to facilitate analysis.
- **Sample analysis:** Determining if a sample is a 0-day, 1-day, or N-day; finding the root cause of a common log file system vulnerability; classifying a new X-road under a specific CVE.
- **Interesting samples:** In-the-wild X-roads of CDE-2023-23376 and CDE-2023-28252 with obfuscation techniques and samples that cause BSOD.

**Analyzing (cont.):**
- **Ninth X-road** (November 2023): Significantly different code style, low code quality, and incompatibility with Windows 11. Indicates a non-professional developer.
- **Tenth X-road** (November 2023): Similar X-road techniques to the second X-road, suggesting the same developer (Developer B).
- **Root cause analysis:** Understanding how malicious samples work and how they construct the P-file.

**Variant:**
- **Importance of variant analysis:** Identifying vulnerabilities that may have been accidentally blocked or not completely fixed.
- **CVE-2022-24481** (1-bit flip at a specific location blocked by added validation in the September 2021 patch).
- **CVE-2022-35803** (Common Log File System driver added a new function in the April 2022 patch, but there was still no check for CIDNode.ctype).

**Summary:**
- From October 2021 to November 2022, 10 different Common Log File System in-the-wild exploits were caught over 2 years.
- During the journey, 2 Windows in-the-wild zero-days were discovered, and 2 Common Log File System zero-days were independently found through variant analysis.
- All four vulnerabilities received acknowledgments from Microsoft.
- Prediction: The battle with the Windows Common Log File System is nearing its end, while vulnerabilities in Desktop Window Manager and other models will increase.