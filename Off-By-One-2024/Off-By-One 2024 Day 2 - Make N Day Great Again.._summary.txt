**Introduction:**
- The presentation discusses the creation of an **N-Day** full-chain exploit, showcasing the power of chaining multiple vulnerabilities.
- The exploit targets a **Chrome browser** running in a **VMware guest**, ultimately achieving **SYSTEM privileges** in the **Windows host**.
- The research team from **Theori** demonstrates their exploit, which includes six unique vulnerabilities, three of which were exploited in the wild and two during **Pwn2Own 2023**.

**Speakers:**
- **JeongOh Kyea**: Researcher at Theori Korea with an interest in automatic vulnerability detection, binary analysis, and exploit techniques. Recipient of the **Most Valuable Researcher** award from Microsoft in 2020, 2021, and 2022.
- **Gwangun Jung**: Security researcher at Theori with a focus on operating systems, virtualization, and red teaming. Winner of the **Pwn2Own Vancouver 2024 Virtualization** category by targeting **VMware Workstation**.
- **Yeonghun Kim**: Security researcher at Theori specializing in web browsers and JavaScript engines, particularly **Chrome** and **V8**.

**Fermion Service:**
- Theori's threat intelligence service, which is a database of vulnerability reports since 2019.
- As of 2023, the service contains **486 reports**, with **half of them** having working exploits.
- Some of these vulnerabilities have been exploited in the wild or in competitions like **Hunter-Hunter**.

**Ingredients for the Exploit:**
- The team wanted to showcase a practical scenario, so they chose a situation where a **security analyst clicks on a malicious link in a virtual machine**.
- The exploit starts from the **renderer in the guest** and aims to achieve **SYSTEM privileges in the host**.
- They used **six unique vulnerabilities**: three exploited in the wild, two from Pwn2Own 2023, and one variant of a Pwn2Own 2023 vulnerability.

**Vulnerabilities and Exploits:**
- **CVE-2023-3079**: A type confusion bug in the inline cache for JSStrictArgument objects in **V8**, allowing for arbitrary code execution in Chrome Renderer.
- **Windows Kernel Vulnerability**: CVE-2023-21674, affecting **ALPC** (Advanced Local Procedure Call), enabling privilege escalation within the guest.
- **CVE-2023-29360**: A logic bug allowing attackers to map arbitrary addresses, including kernel addresses, leading to privilege escalation within the guest.
- **CVE-2023-34044**: A variant of a Pwn2Own 2023 vulnerability, an uninitialized bug in handling **URB** (USB Request Block) for virtual Bluetooth, used to leak address information.
- **CVE-2023-20869**: A vulnerability in processing **SDP** (Service Discovery Protocol) of Bluetooth, enabling a buffer overflow and arbitrary code execution within VMware.
- **CVE-2023-36802**: A type confusion bug in the same driver as CVE-2023-29360, allowing for final privilege escalation to SYSTEM on the host.

**Chaining the Exploits:**
- The team discusses the challenges of chaining the renderer and sandbox escape exploits, requiring the use of a helper class to embed the sandbox escape exploit code as JavaScript.
- They chose the **file picker process** as the target for privilege escalation due to its medium integrity and fewer mitigations.
- To achieve arbitrary code execution, they overwrote a **global variable** with a **fake object**, triggering the exploit when the global object returned.
- The fake object was constructed using specific gadgets to connect function calls and invoke desired functions.
- To overcome the limited space for commands, they utilized the physical memory of the guest OS, which is treated as mapped memory from the host OS perspective.

**Conclusion:**
- The presentation highlights the power of chaining multiple vulnerabilities, making them more powerful and fun.
- The research team learned a lot about each system and plans to continue their research with the ingredients in their vulnerability database.