{
  "webpage_url": "https://www.youtube.com/watch?v=CkIgTG0IwJk",
  "title": "Hyperscalers and FinCrime: A Match Made in the Cloud | SLEUTHCON 2024",
  "description": "May 24, Sleuthcon 2024 in Arlington, VA\nPresented by Zack Allen\n\nJoin Zack Allen, Senior Director of Security Detection Research at Datadog, as he highlights several incidents dealing with Hyperscalers. According to Wall Street, Hyperscalers include AWS, Azure, and GCP, which present opportunities for crime on all levels.\n\nZach provides context with several interesting cases, providing informational models on the where, what, who, and hows, helping professionals navigate and mitigate cloud-based attacks. This talk will also cover the evolution of TTPs involving Hyperscalers, from low-level crypto mining to large-scale ransom.\nThis talk offers valuable knowledge, frameworks, and real-world scenarios to help you understand the cybersecurity landscape and enhance your awareness on emerging threats.\n @DatadogHQ \n\nTimestamps:\n00:00 Introduction\n00:35 Outline\n01:01 Defining Hyperscalers\n03:00 The 4Cs - Cloud, Cluster, Container, Code (Where?)\n04:05 Data on the wire (What?)\n04:42 Bot or not? (Who?)\n05:10 MITRE ATT&CK Cloud (How?)\n05:51 Cloud as Ancillary Target\n\n\n\n#CloudSecurity #Cybersecurity #Hyperscalers #AWS #Azure #GCP #TechTalk",
  "channel_url": "https://www.youtube.com/channel/UCqNH7RRDYNXmrcf_ldl_miQ",
  "duration": 1482,
  "channel": "SLEUTHCON",
  "uploader": "SLEUTHCON",
  "upload_date": "20240827"
}

This text was transcribed using whisper model: large-v2

 Hi, everyone. Thanks for coming to my talk, Hyperscalers and FinCrime, a match made in  the cloud. I'm going to go a lot louder. Thank you. Keep doing that, by the way, because  I'm going to need that. All right. So, that's me. I currently work as the Senior Director  of Security Detection Research at Datadog. We do cloud security stuff. And much like  Brazilian Jiu-Jitsu and much like CrossFit, if you run a newsletter, you have to tell  everybody that you run a newsletter. So, that's my newsletter. A lot of the content that's  in there, a lot of people in this very audience wrote. So, thank you so much. I really appreciate  it. But, yeah, I have a lot to talk about. I split the talk into three buckets. Basically,  I'm going to do some buzzword bingo on cloud service providers. You saw the word hyperscalers,  so a bunch of Wall Street analysts got really excited probably if they heard that. We're  going to talk about how Datadog models cloud threats for detection opportunities, and we're  going to do some case studies here, specifically into two buckets. One bucket is going to be  using the cloud to go and do something else outside the cloud, and then cloud as the actual  primary target. And so, when you hear the word hyperscalers, you mostly think of these  three different companies, right? Amazon, Microsoft, and Google. And there's many reasons  why it's called hyperscalers. You go and look on their websites, you pull things up, you  start to notice that it's not just somebody else's computer. They offer hundreds of services  that a developer can use to go and write code, deploy, start a company, right? Go and look  at it for Azure. Notice it's over 200. I don't know if they're competing and making  sure they have that in their marketing copy. And in the most Google way possible, they  don't say how much they have. They have an interactive map of all the things that you  can go and do. I counted 237. So, all of them are really focused in making sure that they  can create all these different types of services so that developers can write fast. And it's  very similar to how a programming language would work. So, maybe you write Python at  one company, you go to another company, you're gonna use the same tool set, right? So, it's  very similar. You go to one company, you're working on Amazon, you're working on GCP,  you go to another, you're gonna do the same thing. And so, the threat model that they  generally follow revolves around something called the shared responsibility model. Google  calls it the shared fate model. Again, Google, they have to do something different. But the  basic premise behind it is that you're responsible for certain things and securing them and we're  responsible for certain things and securing them. And there's a little bit in the middle  that we're both responsible for. And so, what this does is it creates these homogenous  environments. They're built for scale and rapid deployment of new services. The problem  with these homogenous environments and when you're adding new services is it creates an  information asymmetry. What that basically means is that as these cloud service providers  are making more things and you're trying to make more things with them, cyber criminals  are also taking advantage of this. And they're not really banking on the fact that you know  everything about all the different services that are being deployed. And so, they're built  to rapidly launch these. It's all about the line going up, right? And so, this is taking  advantage of that. And so, the question becomes, how do you precisely describe a cloud service  attack? And again, more than just crypto mining, right? And so, what we do at Datadog is we  try to answer the where, what, why, and how. And so, the where is basically where is the  attack in the cloud being performed? And so, obvious one, cloud. This is like I log  into Amazon, I log into my Azure tenant, and I can configure things. I can launch things,  right? But as you move kind of closer and closer to where the code's being run, you  start looking at the cluster, the actual EC2 instance, the compute node, the virtual machine,  and a lot of the orchestrators like Kubernetes and things like that. Things run on these  EC2 instances. Containers. This is like the de facto standard to building like a hyperscale  company is you're deploying containers and that container contains code. And so, when  we're thinking about where is this attack occurring, we first say where did it first  start? And it can start in any one of the four Cs. And by the way, from those four Cs,  there are attack paths to go and navigate between everything here. So, it can go from  code to container, cluster to cloud, cloud back to code. And so, it's kind of important  to kind of realize like it's a little bit complicated to really go and perform all these  different types of detections, right? The next is specifically the data on the wire.  This is the what can we see. Typically, the cloud service providers talk about two things,  the control plane, the data plane. The control plane is I'm booting up a database and this  database is going to be a certain version. I'm listing my databases. I'm removing them.  The data plane is the data inside the database. So, specifically, what I'm putting in there.  A lot of these, like Amazon, for example, calls this the value. Data plane contains  the value of a company or of a cloud, right? And so, looking at how can I find different  detection opportunities between these two is a really important thing when you're trying  to track all of these different intrusions. The next is the who. We call this the bot  or not question. You go and you look at identity and access management on almost all of the  cloud service providers. They always talk about whether an identity that's interacting  with these resources, is it a human or is it a machine? And there are different things  that you can baseline based on that behavior. A dev does certain things. A database does  certain things. So, baselining where this is, who's doing it, and whether or not it's  a bot is very important. And then, lastly, the how. This is kind of where Mitre comes  in and Mitre ATT&CK. We leverage Mitre ATT&CK pretty heavily, at least for the cloud. It  does have some things that, like, kind of repeat between each of the different stages,  but it's because it's kind of showcasing all of these different components of the where  and the what. And so, it's very useful for us as we're modeling these. So, quick recap,  how we put this all together. Where, what, who, and how. So, where in the four Cs can  we find telemetry? What information is available in those data planes or control planes? Who  is the identity type interested in the cloud resource? And how can a T code describe the  tactic? I stole this from the Proofpoint folks. I think they said on one of their podcasts  a T code for Mitre ATT&CK. Very precise and concise, which I love. So, I talked a lot  about what it is, what is a hyperscaler, why there's an information asymmetry, why it's  really targeted for devs, and now I'm going to start showing everyone a couple things  that we've seen at Datadog as well as things we've seen in the wild and kind of model it  using that threat model that I talked about earlier. So, we recently wrote a blog post  where a threat actor performed a resource hijacking attack to do a phishing campaign,  specifically smishing, I think I'm allowed to say that, or SMS-based phishing. But the  basic setup of it, and the way I'm going to do this is a sequence diagram. So, you have  the participants at the top, and then I'm going to walk through each one of the four  Cs, data plane, identity, things like that. So, we had an IP address that we were tracking  that was interacting with a ton of tenants. And what it basically did is it loaded a bunch  of stolen AWS keys on this specific piece of infrastructure, and it took those AWS keys  and started talking to these victim cloud service provider environments. Specifically,  it was saying I was performing some control plane API calls, and those are get caller  identity and get SMS attributes and get SMS sandbox status. And what that basically was  checking was given this AWS key, can I start sending text messages through the Amazon simple  notification service? And if it can, it went back to that attacker so they can carry out  the next part of their attack. So, there's a detection opportunity right there. The next  part of the attack included using a lot of those access keys to go and issue a data plane  event, which is send the text messages. So, a lot of these customers and a lot of these  honeypots that we had set up did not have text messaging through SNS enabled, and so  we saw a spike of data plane events specifically to go and target phishing victims on the right.  What was interesting about this one is that the same infrastructure that was interacting  with these victim AWS environments was the same infrastructure that was hosting the phishing  website. So, this is kind of like a larger interesting detection opportunity where if  you see a spike of this traffic, and it's coming from an IP address and it's issuing a ton of data  plane events, you can actually pivot on that IP address and find associated phishing website.  So, we thought that was kind of cool. But this is sleuth con. How the heck did this happen in  the first place? So, let's go sleuthing a little bit. So, really, the economy behind this initial  access for the stolen keys kind of boils down to this. An attacker will go and scan the internet,  they'll look for code repos, environment files, they'll look for blob storage devices,  and they're basically grepping out different types of access keys. And from those access keys,  then they can leverage that to go and attack these environments. And then the question becomes,  like, is this working? You can go on GrayNoise right now, go and look at their env crawler tag,  and you'll notice that even just over the last month, you'll see a bunch of internet activity  just scanning for these environment files. If you notice at the bottom two, they're also  leveraging a couple of vulnerabilities. And so, maybe it's not misconfigured to expose an  environment file, but it is misconfigured in the sense that it has a vulnerability. And so,  they can jump on there and pull those access keys from those files. Let's go sleuthing even more. Go  on Telegram. If anyone has a Telegram account, if you'd like, type in a bunch of cloud service  provider services. In this specific case, SES and SNS. You'll see all kinds of advertisements  for this type of access. Some things that are interesting, SNS is for SMS, SES is for email.  So, instead of hijacking an email account, they're just going to hijack a cloud service provider  and a victim there, and they're going to use that to send out emails. You'll also notice that  there's 50,000, 100,000, and 500,000 quota. That's that sandbox account status that you saw earlier.  Basically, breaking out of that sandbox and saying, I'm no longer a dev. I'm going to spend  money on you, Amazon. I'm going to send this a bunch of email. I'm going to send a bunch of text  messages. And they now have really reliable, trusted infrastructure for these campaigns.  So, that's one of them. And a lot of these dev misconfigurations, they lead to these long-lived  access keys, but that's targeting the machine. That machine identity I was talking about earlier.  How about targeting devs directly? Is there any payoff if you can target them directly to get  access keys? Because that's what devs use. They use that to interact with the cloud.  And so, you know, this is a tweet from a few years ago. Super interesting campaign. We're  basically a popular Python library and a popular PHP library. We're compromised. Three million  users combined. And the malicious code was basically enumerating environment variables  and sending it to a Heroku app. Nothing here specifically, well, they said AWS, but if you  go and you look at some of the malware. So, for example, this was the malware in that backdoor  package. Enumerate the environment and send it off to this Heroku app. Nothing here that kind of  indicates this is targeting the cloud. But if you go and look at the PHP version, right there in the  middle, I think 4748, it's specifically targeting those access keys and specifically targeting  those secret keys going to that same Heroku app. So, pull up the sequence diagram. The basic premise  behind this is that someone's compromising a developer account that holds these popular  packages. And then you're shimming in your legitimate or your malware code. You're then  uploading that to a registry like PyPI. And then you're waiting for someone to either run it on  their laptop or run it in prod or staging or a build environment. And then that's when it gets  downloaded. Whether it's on any of those environments, it's now enumerating secrets. It's  taking those and it's bringing those back to that attacker controlled infrastructure. But again,  this is SleuthCon. How did this initial access happen in the first place? So, let's go sleuthing.  So, this is a screenshot of an actor named John Malkovich who eventually became EvilProxy.  And this post was four years ago. But basically, they're advertising their phishing kit.  I've done phishing research for years. And this was the first time, if you see the red box at  the bottom there, I've ever seen templates for registries. So, this is the victimology of this  is really somebody who's a developer. That was years ago. You know, recently, if you kind of  search for these things, you'll notice other actors talking about access they have to different  rats and different botnets. And this particular one was saying that, hey, we get to these  different installs through compromised apps. Or sorry, compromised packages. So, on PyPI and  Golang and things like that. They made a post afterwards kind of describing a little bit more.  You can read it top to bottom. Basically, anything that you can see on the registries, how many  installs it has per day, where it's hosted and things like that. And so, they're constantly  thinking about how can I get access to these popular packages so I can shim in malware and  then get installs on it. If you read the end, they're talking a little bit about they're interested  in a victim set targeting like crypto wallets. And I would say there's probably a Venn diagram  between developers and crypto holders. But it's still kind of interesting to note that is this  are they targeting the cloud? Maybe. But at the same time, like this is the evolution that  I've personally seen where you target, you know, folks that hold crypto and then you realize the  payouts higher if you target companies themselves. So, I thought that was a pretty interesting  finding here. So, I talked a lot about like cloud is like an ancillary target. But we're starting to  see a lot more. And I know a lot of folks here are seeing this too because I've had a lot of great  conversations already where cloud is the primary target. It's the thing that they want to get  access to because they want to do something to the firm that runs that. And so, I can't really  talk about this without talking about Scattered Spider or Muddled Libra. But this is an amazing  blog post by Margaret Zimmerman over at Unit 42 that basically talked about Scattered Spider's  evolution to the cloud and all the associated TTPs with it. So, they're showing that they're  learning how to navigate within these environments. And they're doing cross cloud too, which is also  interesting. I'm not going to model everything that happens during an intrusion because I want  to hone in on something specific. But the basic premise behind it, and I'm sure a lot of people  here know, when you get into a cloud environment, it's somebody that has privileged access to it.  Who is that usually? Either an IT person or a developer, right? So, they'll socially engineer  them. They'll achieve some type of session cookie steal, or they'll add some secondary MFA.  They pivot into the cloud service provider. They set up persistence. It's not just adding things  like a user, but they're doing things like setting up rogue identity providers and tenants,  and they're using that to pivot back in. And then they're literally just enumerating as much as they  can. And they're looking for a few things. They're looking for secrets, and they're looking for  intellectual property, and then they exfiltrate that. And so, again, I'm interested in this part.  How are these actors talking about this? Why are they interested in this specific thing?  And so, I have a screenshot from a supposed Alfie Black Hat actor here. I had to gray out a lot to  make it safe for work. This was an interesting threat on Xplate where they were basically  arguing with LockBit. This was right before the Black Hat takedown and the LockBit takedown. But  the interesting part is right there in the red box where they basically say exfil is the only  thing that actually matters. So, it's kind of moving away from double extortion where they're  ransoming a company, and they're kind of really focusing on taking something from that company.  Another interesting note, too, you'll see the big screenshot right there. The way they prove  they're in Black Hat is they said they were the one that submitted the Meridian Link SEC complaints.  And so, that's their proof right there. Really fascinating threat if you kind of want to see  people bickering. It's almost like trash TV. You can't stop watching it. You like watching  these Jersey housewives argue. But this is where you can glean a lot of that intel, right? I think  I was having that conversation with John earlier. Once they start infighting, all kinds of stuff  starts to come out. I can't really talk about cloud exfiltration without talking about Sisense.  So, for those that are unfamiliar, a few months ago, SISA released an advisory that basically  said this business intelligence company, Sisense, was breached, and if you're a customer,  you should start really thinking about talking to them and rerolling a lot of your integrations with  them. Our good friend Brian Krebs had an expose on this whole thing. He had insiders that had  access to the breach data. So, I want to build that sequence diagram just based on what's on  this public information that Krebs posted because it still kind of shows people are really interested  in targeting the cloud. So, according to the article, there was a host of GitLab server that  was either misconfigured or vulnerable to something. Once that was discovered, the actor  performed some exploit, or they took advantage of the misconfiguration to download source code.  Again, devs. They're targeting the devs and what the devs do. Within that source code,  they found AWS keys within that source code, and they used that to list the S3 buckets that Sisense  owns, and they found a backup, and they downloaded it. And the whole implication throughout this post  from Brian Krebs is that they were going to use that to pivot into customer environments.  And so, I thought this was interesting, too, in the sense of they're not necessarily downloading  Sisense code, or at least that's not what the blog post said, but they definitely targeted  another part of intellectual property that is their customers. And if you go and you look at  some of the emails that Sisense's CISO sent out, again, Krebs got a hold of this and posted it on  the blog, but I put red boxes around like the cloudy things. But if you kind of read everything  here, you can almost always associate it with the cloud, right? API secrets, Active Directory  integrations, and things like that. So, they wanted the secrets, and they want to use it almost in like  a 3CX-style supply chain attack to go and pivot into other environments. So, again, exfiltration  is really going to be a hotter topic. It's something I'm telling my detection teams to  really focus on, because this is such like a massive event that you can catch. But a lot of  the times when it comes to those detection opportunities in the cloud, it's kind of hard to  put it all together and then start detecting it and then stopping it. I can't talk about  cloud threat actors without talking about these guys, Team TNT. So, Team TNT was a group that  kind of emerged on the scene in 2019. This is their Malpedia page. What made them interesting  is they're targeting cloud-native technologies, that cluster and container component I talked  about within the four Cs, specifically looking at Kubernetes, deploying malicious containers that  they uploaded to Docker Hub, Docker itself. They did the boring stuff like deployed a crypto miner,  but what kind of made them interesting is how they did their targeting and how they pivoted  into cloud environments afterwards. And so, the interesting part with this group, too,  is that the main person tweeted all the time all kinds of things that they were doing. So,  Hildegard, that's their Twitter. They still have it up. Notice that they're just like talking smack  that they got into a customer environment or just a cloud environment in general. They also  would go after like researcher firms, like this is Cato Security, talking about things they found  related to Hildegard and Team TNT's tooling. So, this is just him, again, bragging and engaging  with the community. So, it was a really fun time really interacting with Hildegard. The problem,  if you look on the right there, is they retired. And so, one of the first publicly reported  cloud threat actor groups that showed expertise in these environments. Hildegard is likely the  main actor of the group, but announced leaving the scene in late 2021. And one thing when they  left the scene is that they took their tooling and they leaked it. And so, since 2021, since that  leak, at least at Datadog, we've seen all kinds of stuff both in Honeypots as well as some of  our engagements where we're finding code reuse. We're finding a lot of Hildegard and Team TNT's  tooling. And so, I wanted to highlight a specific campaign we saw from Team TNT where we had an IP  address at the top, the command and control server, hitting our Honeypot, trying to get into  our cloud and trying to pivot to other victim environments, both with those exposed Kubernetes  and Docker APIs. Basically, the tooling would reach out, it would check to see if we had a  vulnerably configured Docker API, and it would do a bunch of stuff, such as it would create a  container, it would try to break out of that container, it would try to set up persistence  via all kinds of methods, including cron jobs. It tried to steal the AWS keys that we had as  a canary on that Honeypot, and it would try to interact with those AWS keys. Afterwards, in like  a wormy type of fashion, it would use that same machine that it tried to compromise to go and do  more scanning of the internet, more ways to kind of add things to the cloud, and then it kinds of  ended up in the crypto miner. But again, this is SleuthCon. Let's take a look at this. Specifically,  there are cron jobs that we know are uploading to a very specific endpoint at this IP address.  Well, we as curious observers decided to access that upload API, and it was misconfigured. I think  they should probably watch this talk to learn a little bit more about securing the cloud. We  downloaded a bunch of their tooling, we downloaded their bash history, we downloaded just basically  everything they had on that C2 server, and then we noticed something in the bash history. We  specifically found a unique password. So, within the bash history, this is kind of a snippet of it.  What this actor would do is they would access victim AWS keys. They would then load it into  the AWS CLI hosted locally on that command and control server. It would do a bunch of  persistence things like creating user login profiles, attaching user policies, basically  everything in persistence you can think of. But the one interesting part was right there.  The password, erdnubble1704. I got really excited and my team was weirded out by me,  but I'm like, we get to do the best pivot and thread Intel passwords! And they're like, okay,  sounds good, Zach. So, I took it, and we put it in some breach databases, and we got some hits.  It's like, okay, maybe, you know, we're not going to get full attribution, maybe this person's  kind of small, but at least we're starting to see some hits here. So, we got an email address,  which is great. That's another pivot that we're about to do in a second. We got an IP address,  and we realized that IP address was in Germany, and Hildegard speaks German.  And we're like, okay, it's a little weird, but let's kind of keep going here. And so,  we took that email address and we got a name. From that name, we found social media profiles.  From the social media profiles, we found one specific person from around 2020 to 2021 talking  about writing malware related to Team TNT as well as posting their screenshots. So, you know,  the question became, like, who is this, and is this Hildegard? And so, I reached out to my good  buddy Silas Cutler, who did a lot of work with Team TNT back in the day. He managed to find out  who he was, too. So, I asked him, is Hildegard's name blank? He's like, yeah, that's him. You found  him. And I said, okay, we have some hands-on keyboard activity in a honeypot. It used a very  specific password. He's like, oh, yeah, he does a lot by hand. So, Silas did all the hard work,  like, years ago. And so, specifically, 22 March 2021. He just wanted me to make sure everyone  knew that's when he found him. So, it really kind of came down to, like, he announced he left the  scene. Maybe he just got a little bit smart and still is doing what he was doing back then. He  just wasn't bragging. And so, you know, it is our assessment that Hildegard is continuing operations.  We have hands-on keyboard activity with a unique password tied to his name, further uncovered by  other researchers who on separate occasions found his identity. And so, like a good analyst, we did  some analysis of competing hypothesis. Maybe other threat actors are using this password, either  through a collision or they knew it belonged to Hildegard. We didn't find anything of those  passwords within any of his tooling. It seems a little bit far-fetched. It's not a hunter two  password or a last pass. It's something where we can go and pivot and find very specific findings  in these breached databases. With the other competing hypothesis is, hey, maybe the tooling  that he had leaked by Hildegard contains his password. I have access to all that tooling.  Luckily, we were there when he dropped that tooling and we found nothing related to this  password. And so, I did what anyone does, reach out to Hildegard on Twitter and ask  him if he's still around. He still hasn't DMed me back.  So, that's basically the talk. I hope you all leave here today kind of understanding a little  bit more about the cloud. It's not just someone else's computer. It's about 237, according to  Google. Other things that you can do there. It's kind of hard to track everything that's going on  in terms of, like, where is something being attacked and what layers of the four Cs.  But I hope you can kind of think about this a little bit more because  threat actors are definitely thinking about this more. And it's something that I  hope with this talk I brought to light. So, thank you.