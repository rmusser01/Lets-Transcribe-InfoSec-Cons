{
  "webpage_url": "https://www.youtube.com/watch?v=kk6Uvo46k78",
  "title": "Certified Evil | SLEUTHCON 2024",
  "description": "May 24, Sleuthcon 2024 in Arlington, VA\nPresented by Jason Killam \n\nLearn more about signed malware such as Lumma and SolarMarker/Yellow Cockatoo in this talk by Jason Killam, Senior Detection Engineer at Red Canary. Discover the process of acquiring signed certificates from trusted sources such as SSL.com and how it establishes trust and prevents security warnings, and how much revoking them can disrupt these malicious activities.\n\nAdditionally, Jason provides practical guidance on the revocation process, and even shares tools to do so on GitHub. github.com/killamjr\n\nTimestamps:\n00:30 How code-signing certs work\n01:01 Types/costs of code-signing certifications\n01:37 Example with Vidar\n02:31 Anatomy of code-signing certification\n04:00 Investigation and inconsistencies\n06:08 Example with Yellow Cuckatoo\n07:13 Call to action\n08:15 How to revoke\n09:21 Conclusion",
  "channel_url": "https://www.youtube.com/channel/UCqNH7RRDYNXmrcf_ldl_miQ",
  "duration": 574,
  "channel": "SLEUTHCON",
  "uploader": "SLEUTHCON",
  "upload_date": "20240827"
}

This text was transcribed using whisper model: large-v2

 So, my name is Jason Killam, I'm a detection engineer for Red Canary, and I'm going to  talk about malicious sign code and why we need to revoke these and how this helps everybody.  So this is kind of a sequel, and Scooby-Doo helped me with some of the information and  research and context for this slide, so a lot of thanks to him for helping me with this.  Sort of a sequel to that.  Basically, for code signing certificates, you purchase a key from a certificate  signer like SSL.com, Satigo, those kind of places, and this kind of gives you a level  of trust with your binary. This usually prevents, a code signing certificate prevents the smart  screens pop-ups and the warning from Microsoft saying, hey, this is some untrusted stuff,  you sure you want to run this kind of thing. Next slide.  So, for EV certificates, I thought about leaving this out, but the reason I want to include  the cost for these certificates, if it's a standard cert, it's $300 to $500, and if it's  an EV cert, it actually costs $1,500 to $3,000, so these guys have to make these fake shell  companies and all this stuff, all this work that goes into this, and they have to pay this money,  and then they have to charge somebody else, you know, to sell the certificate on, so all this,  if we can revoke these certificates, cost them actual money, and this is the actual dollar  figures that are costing this stuff. Hit it. So, this is my first example. This is a stealer  called Vidar. On the left is our bad one in red, and you can kind of see it's got some generic  information about it. I think monkey soft is the name in that one. It's a downloader. It was  actually pretending to be an installer for a piece of software called Notion, which I think is like  a home automation kind of software thing, and on the bottom, you can see the signer. This is all,  most of my screenshots are from VirusTotal, so this is kind of where I usually go to when I'm  looking at a binary, so your signer here in this case is AndresDS, and on the right, you've got  your legitimate binary, which is not directly related, but it's a better example of a good  binary is MSBuild from Microsoft, so it has the metadata that tells you it's MSBuild. It's  specific about what it is. It has a pretty good, it's signed by Microsoft, so it has that in the  name. Hit it. So, for a code signing certificate, you have your name, so this is like the friendly  name you kind of use to identify who signed the code, who made the code, who's the developer for  it, so, and then you have your certificate authority, so in this case, it, I think it's  Cictego. Actually, this is one reason I used, for the previous example, I used MSBuild because the  malicious binary is also signed, then the legitimate signer for Notion are both Cictego,  so it was really actually smart on the actor to choose something that also is from Cictego, so  it's harder to compare apples to apples with those, and then you have your valid to from cert  date window, and then your certificate thumbprint, so the valid to from is kind of helpful if you're  trying to establish a timeline of events. If you find a malicious binary on the box, and the to  from cert is recent, then you know it's a recent binary if you don't have that kind of historical  context, so I used to do a lot of incident response, and it's nice to have those timelines,  and then the thumbprint, that's the thing you want to focus on when you're trying to get this  stuff revoked, that's at the bottom, and the serial number, something I work with Matt Graber,  and he pointed out something interesting is you can spoof one of these, and I don't remember which,  and I should remember that, but you can't spoof the other, so I think it's the thumbprint is  spoofable, so they're both important, and they both individually identify it, but I think focus  on the serial number for this. Next. So, like I said, these are kind of inconsistencies with your  kind of malicious stuff on the left is the bad one, it's a usually really short timeline from  creation to being seen in the wild, so for virus total, like on this timeline, you have your  creation time, your signature date, first seen in the wild, I'm not going to talk about that,  because it's confusing as hell, because like virus total doesn't make any sense, it's like  shows MS build like a year before it was created, which doesn't make sense, but anyways, first  submission, all those last three are specific to virus total, when it was first uploaded, the last  time it was uploaded, and whenever, like if you're in virus total, and you say rerun this binary,  that's the last analysis date. So, yeah, so like with my MS build example, you got like  a much longer timeline of activity, so it gives that sign binary more credence that it's probably  legitimate, because if it was bad, it probably would have been revoked by now, but I've seen  examples where stuff sits on its valid signers for a long time. Next. So, this is kind of a  screen shot from this binary on an actual box, and you can see it kind of does a couple things,  this binary is called notion updater.exe, but like I showed before, it's just really generic,  so they can package it as whatever piece of software they want to pretend to be, but you see  it hits, and you guys are familiar with Vidar, it usually talks to telegram and steam, and I know in  the steam community example, it actually, you go to the URL it goes to, and it's the  profile picture is just an IP address, so you're like, oh, that's kind of a weird name to choose,  but whatever, but then that points it to the next, the actual C2 to send the data, so that the  stealer developer, whoever's pushing this out, can change that whenever they want. So, yeah,  whenever you're looking at binaries like this, it's, for me, when I'm doing analysis, because  I'm doing that kind of analyst work, I kind of think, why would a binary for an installer for  home software be talking to steam or telegram and this other stuff, and what's this random IP  address it's connecting to as opposed to an actual domain, hit it. So, our next example is yellow  cockatoo, it's kind of one we see a lot as well, and it's kind of in the wild a lot, it's off,  they kind of come and go, but on the left, you got your signer information, in this case,  it's heart craft brewery, so it's kind of weird that a place that makes beer would be making  software for that PDF icon, and on the right is, yeah, like our timeline here, again, it's a very  short timeline, I pretty much took this maybe probably the last analysis date, I can't quite  see it from here, but it's only a couple days, so it's pretty obvious if there's some weirdness  going on here, and this binary just got put in the wild, so, yep, next. So, yeah, if you just  Google it, like, I find a lot of stuff, a lot of the times, I'm kind of in Intel, but not in Intel,  but, like, I'm really good at Intel when it's on Google, so, if you just Google the heart craft  brewery, you find this Twitter post from squiggly do, and it actually shows, hey, this is kind of  weird that a brewery is signing a binary, and, yeah, next. So, call to action, like I said,  I have a good example here, Russian panda, I can't remember where she works, but I think it's ESET,  but she revoked, her team revoked the certificates for defact loader, which is a really hard  malware name to pronounce, but the developer had to basically pay everybody back, because their  certs were revoked, and that's the English translation, because it was all in Russian,  and you've got some links here, those are just some examples for SSL.com and Sectigo,  for Sectigo, you have to send it to an email, for SSL.com, they have an actual web form you fill out,  and, yeah, and they'll usually rely on, like, malware repositories, and stuff like that,  and squiggly do has a tool on GitHub that you can just give it the hash, you don't have to download  it or have the file, you just have to have the hash, you just provide it the hash, it will pull  down all the information about it, and basically make you an email that you can send to them,  and give you the instructions on how to get that cert revoked. Next. So, yeah, so, if you're going  to revoke these certs, the things you need to include, a name and email, just contact info,  those will usually help them if they're not sure why it needs to be revoked, some stuff like  non-binaries, like MSIX files, and malicious signed JavaScript is a little harder to explain to them,  because the certificate's not readily visible if you search virus huddle, and then the certificate  thumbprint serial, and then the reason why, and I usually kind of, sometimes you have to get really  specific about it, like I said, if it's on malware bazaar and it's really obvious it's bad,  they'll probably just revoke it, in some examples you might have to explain the attack chain and  how it works so that maybe they can replicate it or something on their end, and providing all that  information up front will shorten that time to revocation, I think with the example of MSIX  files, if the cert is revoked, that installer will not work, period, so it really screws up their day.  Next. Yep, that's it. My slides will be on GitHub, but the Wi-Fi here has been kind of spotty,  so I haven't had time to upload them.