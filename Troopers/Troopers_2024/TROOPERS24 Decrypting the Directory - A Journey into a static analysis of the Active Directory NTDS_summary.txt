**Introduction**
- Talk by **Bastien Cacace** and **Florian Duthu** at **TROOPERS24 IT Security Conference**
- Focuses on **static analysis** of the **Active Directory NTDS** database

**Overview of NTDS**
- NTDS stands for **NT Directory Service**
- A large file stored on each **domain controller** in **EAC format**
- Introduced with **Windows NT** in **1995** and later used in other Windows solutions
- Contains all data on Active Directory objects, including users, machines, and groups
- Size can range from **30 MB to 15 GB** or more, depending on the age and activity of the domain

**Why Analyze NTDS?**
- Provides an **offline** and **lightweight** alternative to dynamic tools like **Bloodhound** or **Purple Knight**
- Useful for **auditing sensitive environments** where direct network connections are not preferred
- Contains valuable security information, including **password hashes**, user activity, delegations, and group memberships
- Allows for analysis of **password strength** and identification of **weak or reused passwords**
- Provides insights into system properties, trust relationships, and **LAPS** installation

**NTDS Structure and Parsing**
- Dumping NTDS requires **domain admin rights** and can be done using the **NTDS util tool**
- NTDS util also dumps the **system hive**, which is necessary for decrypting sensitive data
- NTDS consists of multiple **tables**, including the **MISC subject data table**, **data table**, **link table**, and **SD table**
- Data table is the largest and most important, containing information on Active Directory objects
- Column names in the data table are **abstract** and require translation using the **MC subject** table
- Various libraries and tools are available for parsing NTDS, including **IMPAKET**, **DESECT**, and **mPacket**
- Parsing large NTDS files can be time-consuming, and storing data in a separate database is recommended

**ACL and Control Path Analysis**
- **ACL** (Access Control List) and **control path** analysis is a **trending topic** in Active Directory security
- Florian discusses their Python script for analyzing ACLs and identifying potential vulnerabilities
- The script utilizes the **DSEC library** from Fox IT for efficient parsing of the NTDS
- It identifies and reports suspicious ACLs, such as **write property** and **control access** permissions
- The script automates the process of parsing NTDS and its tables, outputting data into **CSV files**
- Future improvements include using a **proper DB** for object storage and interacting with **Bloodhound** for enhanced analysis

**Conclusion**
- The talk provides an overview of the value of analyzing the Active Directory NTDS database
- It highlights the security insights that can be gained, especially regarding password and access control vulnerabilities
- The presented Python script offers a useful tool for ACL and control path analysis, with potential for further enhancements.