{
  "metadata": {
    "webpage_url": "https://www.youtube.com/watch?v=t4fUvfzgUbY",
    "title": "TROOPERS24: IBM i for Wintel Hackers",
    "description": "Talk by B\u00e1lint Varga-Perke, Zolt\u00e1n P\u00e1ncz\u00e9l - June 26th, 2024 at TROOPERS24 IT security conference in Heidelberg, Germany hosted by @ERNW_ITSec\n\n#TROOPERS24 #ITsecurity \nhttps://troopers.de/troopers24/talks/7sfsbf/\n\nMore impressions:\nhttps://twitter.com/WEareTROOPERS\nhttps://twitter.com/ERNW_ITSec\nhttps://infosec.exchange/@WEareTROOPERS\nhttps://infosec.exchange/@ERNW https://ernw.de",
    "channel_url": "https://www.youtube.com/channel/UCPY5aUREHmbDO4PtR6AYLfQ",
    "duration": 3475,
    "channel": "TROOPERS IT Security Conference",
    "uploader": "TROOPERS IT Security Conference",
    "upload_date": "20240902"
  },
  "segments": {
    "metadata": {
      "webpage_url": "https://www.youtube.com/watch?v=t4fUvfzgUbY",
      "title": "TROOPERS24: IBM i for Wintel Hackers",
      "description": "Talk by B\u00e1lint Varga-Perke, Zolt\u00e1n P\u00e1ncz\u00e9l - June 26th, 2024 at TROOPERS24 IT security conference in Heidelberg, Germany hosted by @ERNW_ITSec\n\n#TROOPERS24 #ITsecurity \nhttps://troopers.de/troopers24/talks/7sfsbf/\n\nMore impressions:\nhttps://twitter.com/WEareTROOPERS\nhttps://twitter.com/ERNW_ITSec\nhttps://infosec.exchange/@WEareTROOPERS\nhttps://infosec.exchange/@ERNW https://ernw.de",
      "channel_url": "https://www.youtube.com/channel/UCPY5aUREHmbDO4PtR6AYLfQ",
      "duration": 3475,
      "channel": "TROOPERS IT Security Conference",
      "uploader": "TROOPERS IT Security Conference",
      "upload_date": "20240902"
    },
    "segments": [
      {
        "Time_Start": 0.0,
        "Time_End": 11.8,
        "Text": "This text was transcribed using whisper model: large-v2\n\n Thank you very much."
      },
      {
        "Time_Start": 11.8,
        "Time_End": 17.400000000000002,
        "Text": " So yeah, the talk is titled IBMi for Wintel Hackers."
      },
      {
        "Time_Start": 17.400000000000002,
        "Time_End": 20.06,
        "Text": " This needs a little deciphering, maybe."
      },
      {
        "Time_Start": 20.06,
        "Time_End": 29.76,
        "Text": " So IBMi is the brand new name for AS400, which is an IBM product from the 1980s, basically."
      },
      {
        "Time_Start": 29.76,
        "Time_End": 36.260000000000005,
        "Text": " And Wintel is a word for, like, the Intel-based Windows-like systems, but it really covers"
      },
      {
        "Time_Start": 36.260000000000005,
        "Time_End": 38.7,
        "Text": " also Linux and Unix."
      },
      {
        "Time_Start": 38.7,
        "Time_End": 47.46,
        "Text": " So the presentation is basically about how to hack AS400s if you only have experience"
      },
      {
        "Time_Start": 47.46,
        "Time_End": 53.620000000000005,
        "Text": " in Windows, Linux, Unix, and all the regular stuff."
      },
      {
        "Time_Start": 53.620000000000005,
        "Time_End": 55.78,
        "Text": " So a few words about us."
      },
      {
        "Time_Start": 55.78,
        "Time_End": 59.02,
        "Text": " My name is Valent Varga-Perka, and here with me is Zoltan Pantsev."
      },
      {
        "Time_Start": 59.28,
        "Time_End": 62.7,
        "Text": " We are co-founders of a company called Silent Signal."
      },
      {
        "Time_Start": 62.7,
        "Time_End": 71.9,
        "Text": " Our main focus is on penetration testing, and since 2022, we've been focusing on IBMi"
      },
      {
        "Time_Start": 71.9,
        "Time_End": 78.62,
        "Text": " as the platform, because it turns out many of our clients have these systems, but they"
      },
      {
        "Time_Start": 78.62,
        "Time_End": 84.42,
        "Text": " don't really know, didn't really know how to test and pen test it."
      },
      {
        "Time_Start": 84.42,
        "Time_End": 92.9,
        "Text": " So we bought our own machine, our own IBMi, and started to experiment on that."
      },
      {
        "Time_Start": 92.9,
        "Time_End": 94.9,
        "Text": " So what is IBMi?"
      },
      {
        "Time_Start": 94.9,
        "Time_End": 101.86,
        "Text": " IBMi is called a mid-range or mini-computer platform, which is kind of similar, but really"
      },
      {
        "Time_Start": 101.86,
        "Time_End": 104.42,
        "Text": " not the same as mainframes."
      },
      {
        "Time_Start": 104.42,
        "Time_End": 110.54,
        "Text": " It provides high reliability, backwards compatibility, which are really important features if you"
      },
      {
        "Time_Start": 110.54,
        "Time_End": 115.62,
        "Text": " plan for the long term and need to serve your customers constantly."
      },
      {
        "Time_Start": 115.62,
        "Time_End": 122.86000000000001,
        "Text": " It is really a critical system at financial institutions, telecommunications sector, retail,"
      },
      {
        "Time_Start": 122.86000000000001,
        "Time_End": 123.86000000000001,
        "Text": " et cetera."
      },
      {
        "Time_Start": 123.86000000000001,
        "Time_End": 129.02,
        "Text": " So there are not many of these systems, but when you face them, they probably do a really"
      },
      {
        "Time_Start": 129.02,
        "Time_End": 131.06,
        "Text": " important job."
      },
      {
        "Time_Start": 131.06,
        "Time_End": 137.18,
        "Text": " So yeah, and IBMi was a platform that was produced to make such a system affordable"
      },
      {
        "Time_Start": 137.26000000000002,
        "Time_End": 143.18,
        "Text": " to small, medium businesses, but over time, those businesses grew, and now you can find"
      },
      {
        "Time_Start": 143.18,
        "Time_End": 146.98000000000002,
        "Text": " these systems in the largest corporations, basically."
      },
      {
        "Time_Start": 146.98000000000002,
        "Time_End": 154.14000000000001,
        "Text": " IBMi has been revolutionary in many aspects, the first of which is the object-oriented"
      },
      {
        "Time_Start": 154.14000000000001,
        "Time_End": 155.42000000000002,
        "Text": " operating system."
      },
      {
        "Time_Start": 155.42000000000002,
        "Time_End": 162.54000000000002,
        "Text": " On IBMi, everything is an object that lives on the so-called single-level storage, which"
      },
      {
        "Time_Start": 162.54,
        "Time_End": 170.06,
        "Text": " is like a huge address space that covers both disk and memory."
      },
      {
        "Time_Start": 170.06,
        "Time_End": 174.5,
        "Text": " So you don't have a file system."
      },
      {
        "Time_Start": 174.5,
        "Time_End": 181.34,
        "Text": " Everything is an object, and just like in Java, objects can encapsulate data, and some"
      },
      {
        "Time_Start": 181.34,
        "Time_End": 188.38,
        "Text": " data, some properties can be made private, and these private properties can be only accessed"
      },
      {
        "Time_Start": 188.38,
        "Time_End": 190.14,
        "Text": " via public methods."
      },
      {
        "Time_Start": 190.14000000000001,
        "Time_End": 194.44000000000003,
        "Text": " So the simplest example is that the system doesn't really distinguish between program"
      },
      {
        "Time_Start": 194.44000000000003,
        "Time_End": 200.14000000000001,
        "Text": " files and running processes or running jobs, but treats programs as objects that can be"
      },
      {
        "Time_Start": 200.14000000000001,
        "Time_End": 201.62,
        "Text": " executed."
      },
      {
        "Time_Start": 201.62,
        "Time_End": 206.86,
        "Text": " On execution control, it's transferred to code inside the single-level storage, but"
      },
      {
        "Time_Start": 206.86,
        "Time_End": 211.82000000000002,
        "Text": " most users cannot see the actual code, what's inside the system."
      },
      {
        "Time_Start": 211.82000000000002,
        "Time_End": 218.18,
        "Text": " On the other hand, users are free to look into the contents of file objects, because"
      },
      {
        "Time_Start": 218.18,
        "Time_End": 225.06,
        "Text": " we have file objects, and read and write from them, but they cannot be executed, because"
      },
      {
        "Time_Start": 225.06,
        "Time_End": 232.38,
        "Text": " files are for serialized data streams and not for executable code, right?"
      },
      {
        "Time_Start": 232.38,
        "Time_End": 238.70000000000002,
        "Text": " In IBMi also means integration, an example of which is the integrated database, so basically"
      },
      {
        "Time_Start": 238.70000000000002,
        "Time_End": 247.82,
        "Text": " all these objects that exist on the system are accessible via a SQL database, DB2, like"
      },
      {
        "Time_Start": 247.94,
        "Time_End": 252.1,
        "Text": " a regular relational schema."
      },
      {
        "Time_Start": 252.1,
        "Time_End": 257.74,
        "Text": " So since this is a security conference, we won't really go into the deep details of how"
      },
      {
        "Time_Start": 257.74,
        "Time_End": 263.5,
        "Text": " the system works and how it can be operated, instead we will try to give you a crash course"
      },
      {
        "Time_Start": 263.5,
        "Time_End": 269.98,
        "Text": " basically on the attack surfaces that we exploited, so you will be able to apply your existing"
      },
      {
        "Time_Start": 269.98,
        "Time_End": 272.5,
        "Text": " hacking skills to IBMi."
      },
      {
        "Time_Start": 272.5,
        "Time_End": 280.98,
        "Text": " We will cover a lot of bugs, a lot of demos, and a lot of new material, so fasten your seatbelts."
      },
      {
        "Time_Start": 280.98,
        "Time_End": 283.9,
        "Text": " First of all, what are our targets?"
      },
      {
        "Time_Start": 283.9,
        "Time_End": 289.14,
        "Text": " IBMi can run on different security levels, we are targeting now security level 40, which"
      },
      {
        "Time_Start": 289.14,
        "Time_End": 296.22,
        "Text": " is the first security level that provides any meaningful security in the modern sense."
      },
      {
        "Time_Start": 296.22,
        "Time_End": 301.08,
        "Text": " Processes are isolated, users need a password to log in, etc."
      },
      {
        "Time_Start": 301.08,
        "Time_End": 306.28,
        "Text": " There is also a different higher security level, and this is the last one, security"
      },
      {
        "Time_Start": 306.28,
        "Time_End": 312.2,
        "Text": " level 50, but the exploits that we will show also work on that."
      },
      {
        "Time_Start": 312.2,
        "Time_End": 314.36,
        "Text": " So it doesn't really matter."
      },
      {
        "Time_Start": 314.36,
        "Time_End": 319.59999999999997,
        "Text": " We will work in the user domain, you can think of this as user space exploits, and we will"
      },
      {
        "Time_Start": 319.59999999999997,
        "Time_End": 324.28,
        "Text": " work above the so-called machine interface."
      },
      {
        "Time_Start": 324.28,
        "Time_End": 330.12,
        "Text": " You can think of machine interface as a form of byte code, a byte code interpreter built"
      },
      {
        "Time_Start": 330.2,
        "Time_End": 336.92,
        "Text": " into the operating system that hides the low-level system architecture from programmers, and"
      },
      {
        "Time_Start": 336.92,
        "Time_End": 343.12,
        "Text": " we will demonstrate basic logic bugs so we don't have to dig into the nitty-gritty details"
      },
      {
        "Time_Start": 343.12,
        "Time_End": 345.98,
        "Text": " of risk."
      },
      {
        "Time_Start": 345.98,
        "Time_End": 350.6,
        "Text": " The first things to discuss in terms of security are authorities."
      },
      {
        "Time_Start": 350.6,
        "Time_End": 354.36,
        "Text": " Authorities are equivalents basically to access control entries."
      },
      {
        "Time_Start": 354.36,
        "Time_End": 358.8,
        "Text": " They define who can do what with a particular object."
      },
      {
        "Time_Start": 358.8,
        "Time_End": 365.0,
        "Text": " There is a well-defined list of authorities, but the type of control they provide can differ"
      },
      {
        "Time_Start": 365.0,
        "Time_End": 370.48,
        "Text": " depending on the type of the object they are applied on, and here I show you an example."
      },
      {
        "Time_Start": 370.48,
        "Time_End": 378.56,
        "Text": " Here we can see the authorities of a service program, here you can see the object type,"
      },
      {
        "Time_Start": 378.56,
        "Time_End": 387.12,
        "Text": " and a user profile, here you can see the object type again, and both have this use authority"
      },
      {
        "Time_Start": 387.12,
        "Time_End": 388.12,
        "Text": " set."
      },
      {
        "Time_Start": 388.12,
        "Time_End": 395.76,
        "Text": " In a service program, this use authority means that the public, meaning all users, can execute"
      },
      {
        "Time_Start": 395.76,
        "Time_End": 402.36,
        "Text": " this program, while the same use authority in terms of this user profile means that the"
      },
      {
        "Time_Start": 402.36,
        "Time_End": 410.88,
        "Text": " escalate user, which is a different user, can become basically user A1 if they want"
      },
      {
        "Time_Start": 410.88,
        "Time_End": 412.72,
        "Text": " to."
      },
      {
        "Time_Start": 413.68,
        "Time_End": 419.56,
        "Text": " Confusingly, privileges given to users are also called authorities or special authorities."
      },
      {
        "Time_Start": 419.56,
        "Time_End": 425.06,
        "Text": " We are now mostly interested in all object that surprisingly provides full control over"
      },
      {
        "Time_Start": 425.06,
        "Time_End": 433.88000000000005,
        "Text": " all objects, this is God mode basically, and here I wrote to the slide a security administrator"
      },
      {
        "Time_Start": 433.88000000000005,
        "Time_End": 441.90000000000003,
        "Text": " that can manage users basically, and one of the default user accounts is called the Q"
      },
      {
        "Time_Start": 441.90000000000003,
        "Time_End": 447.3,
        "Text": " security officer, we will see that in the demos."
      },
      {
        "Time_Start": 447.3,
        "Time_End": 455.46000000000004,
        "Text": " It is like the root account on the system, and this account has both of these privileges."
      },
      {
        "Time_Start": 455.46000000000004,
        "Time_End": 461.1,
        "Text": " The next thing to discuss are libraries, libraries are object containers or namespaces similar"
      },
      {
        "Time_Start": 461.1,
        "Time_End": 468.46000000000004,
        "Text": " to directories, only they cannot be nested, so libraries form a single level structure."
      },
      {
        "Time_Start": 468.46000000000004,
        "Time_End": 474.22,
        "Text": " Libraries may seem innocious, but they are key elements of multiple vulnerability classes."
      },
      {
        "Time_Start": 474.22,
        "Time_End": 476.08000000000004,
        "Text": " Here we can see an example."
      },
      {
        "Time_Start": 476.08000000000004,
        "Time_End": 482.62000000000006,
        "Text": " This is the command that we are executing work on the object, which is called obj bar,"
      },
      {
        "Time_Start": 482.62000000000006,
        "Time_End": 489.3,
        "Text": " and it lives inside the library libfoo, it's simple as that."
      },
      {
        "Time_Start": 489.3,
        "Time_End": 494.66,
        "Text": " Libraries are useful to organise objects, but sometimes you don't know in which library"
      },
      {
        "Time_Start": 494.66,
        "Time_End": 499.86,
        "Text": " to look for a particular object, and this is where the library list comes into the picture."
      },
      {
        "Time_Start": 499.86,
        "Time_End": 506.58000000000004,
        "Text": " This is a special property associated to a logon session that defines a default look-up"
      },
      {
        "Time_Start": 506.58000000000004,
        "Time_End": 512.78,
        "Text": " order for object references that don't include a library name, so if I want to work with"
      },
      {
        "Time_Start": 512.78,
        "Time_End": 519.5400000000001,
        "Text": " an object, I know the object's name but I have no idea where the object lives, the system"
      },
      {
        "Time_Start": 519.5400000000001,
        "Time_End": 522.46,
        "Text": " will use the library list to look it up for me."
      },
      {
        "Time_Start": 522.46,
        "Time_End": 525.02,
        "Text": " This is how the library list looks like."
      },
      {
        "Time_Start": 525.02,
        "Time_End": 527.74,
        "Text": " Here at the top, you see the system part."
      },
      {
        "Time_Start": 527.74,
        "Time_End": 534.7,
        "Text": " This cannot be modified by users, and it holds the most important libraries for the system."
      },
      {
        "Time_Start": 534.7,
        "Time_End": 537.58,
        "Text": " Then come the product libraries."
      },
      {
        "Time_Start": 537.58,
        "Time_End": 543.1800000000001,
        "Text": " Applications can set this part of the library list for themselves, then the current library,"
      },
      {
        "Time_Start": 543.1800000000001,
        "Time_End": 550.62,
        "Text": " and last, the users can manipulate this user part to include their favourite libraries"
      },
      {
        "Time_Start": 550.62,
        "Time_End": 554.58,
        "Text": " where their objects usually live, for example."
      },
      {
        "Time_Start": 554.58,
        "Time_End": 558.9,
        "Text": " The library list is, of course, really similar to the path environment variable that you're"
      },
      {
        "Time_Start": 558.9,
        "Time_End": 564.54,
        "Text": " all familiar with from Windows, Linux, whatever, and, of course, you may already be familiar"
      },
      {
        "Time_Start": 564.54,
        "Time_End": 568.66,
        "Text": " with vulnerabilities arising from incorrect path definition, right?"
      },
      {
        "Time_Start": 568.66,
        "Time_End": 574.38,
        "Text": " Just like the one shown here, this configuration, when we just list the path on our Windows"
      },
      {
        "Time_Start": 574.38,
        "Time_End": 581.42,
        "Text": " system includes this C slash Oracle directory, and, of course, because of inherited privileges,"
      },
      {
        "Time_Start": 581.42,
        "Time_End": 588.02,
        "Text": " if I just drop DLLs or EXEs in the directory, this can lead to horizontal or vertical privilege"
      },
      {
        "Time_Start": 588.02,
        "Time_End": 596.58,
        "Text": " escalation on Windows, and this is very similar to what's happening on IBM I, as we will see."
      },
      {
        "Time_Start": 596.58,
        "Time_End": 603.18,
        "Text": " This is why IBM explicitly discourages the so-called unqualified library calls when we"
      },
      {
        "Time_Start": 603.1800000000001,
        "Time_End": 611.94,
        "Text": " try to call a program like this instead of this, because, as the manual shows, the user"
      },
      {
        "Time_Start": 611.94,
        "Time_End": 617.2600000000001,
        "Text": " may end up working with an unexpected malicious object in the end."
      },
      {
        "Time_Start": 617.2600000000001,
        "Time_End": 622.82,
        "Text": " Unfortunately, not everyone takes IBM's advice to heart."
      },
      {
        "Time_Start": 622.82,
        "Time_End": 629.6200000000001,
        "Text": " We sent a bunch of reports to IBM, and then we started to see IBM fixing bugs in their"
      },
      {
        "Time_Start": 629.62,
        "Time_End": 636.74,
        "Text": " own software, and this is one of the very typical descriptions of the program, and"
      },
      {
        "Time_Start": 636.74,
        "Time_End": 646.02,
        "Text": " this basically describes an unqualified library call program where QGPR, for example, it's"
      },
      {
        "Time_Start": 646.02,
        "Time_End": 653.0600000000001,
        "Text": " a publicly writeable library, anyone can place objects in them, but the vulnerable programs,"
      },
      {
        "Time_Start": 653.0600000000001,
        "Time_End": 661.0600000000001,
        "Text": " for example, this facsimile support performs unqualified calls, so the one user who innocently"
      },
      {
        "Time_Start": 661.0600000000001,
        "Time_End": 667.86,
        "Text": " wants to run facsimile support may end up running attacker code instead."
      },
      {
        "Time_Start": 667.86,
        "Time_End": 673.98,
        "Text": " But this is not what we showed IBM in our original vulnerability reports."
      },
      {
        "Time_Start": 673.98,
        "Time_End": 679.98,
        "Text": " We are pentesters, and we usually don't have time or opportunity to wait for users to fall"
      },
      {
        "Time_Start": 679.98,
        "Time_End": 684.7,
        "Text": " into our traps to execute the right programs the right way."
      },
      {
        "Time_Start": 684.7,
        "Time_End": 690.1800000000001,
        "Text": " To perform privilege escalation without user interaction, we needed to add another ingredient,"
      },
      {
        "Time_Start": 690.1800000000001,
        "Time_End": 693.14,
        "Text": " which is called adopted authority."
      },
      {
        "Time_Start": 693.14,
        "Time_End": 697.02,
        "Text": " Adopted authority is basically set UID for IBM."
      },
      {
        "Time_Start": 697.02,
        "Time_End": 702.38,
        "Text": " It is a property you can set on program objects that makes the program inherit the privileges"
      },
      {
        "Time_Start": 702.38,
        "Time_End": 707.7,
        "Text": " of its owner instead of the invoker of the program, just like set UID."
      },
      {
        "Time_Start": 707.7,
        "Time_End": 710.7,
        "Text": " This is how it looks like in practice."
      },
      {
        "Time_Start": 710.7,
        "Time_End": 720.4200000000001,
        "Text": " Here we can see this QFFSTR FCPP program which has the Q out prof user profile as its owner,"
      },
      {
        "Time_Start": 720.4200000000001,
        "Time_End": 727.9000000000001,
        "Text": " and here these two lines show that this program, when executed, it will run with the privileges"
      },
      {
        "Time_Start": 727.9000000000001,
        "Time_End": 732.34,
        "Text": " of the owner."
      },
      {
        "Time_Start": 732.34,
        "Time_End": 737.86,
        "Text": " Set UID with the control of the environment variable is of course a vulnerability class"
      },
      {
        "Time_Start": 737.86,
        "Time_End": 739.34,
        "Text": " on Unix-like systems."
      },
      {
        "Time_Start": 739.34,
        "Time_End": 746.1,
        "Text": " This is, for example, a local privilege escalation exploit for AIX from 2013, abusing this very"
      },
      {
        "Time_Start": 746.1,
        "Time_End": 747.1,
        "Text": " same issue."
      },
      {
        "Time_Start": 747.1,
        "Time_End": 751.72,
        "Text": " As we will see, this knowledge was not really transferred between IBM's teams."
      },
      {
        "Time_Start": 751.72,
        "Time_End": 756.5400000000001,
        "Text": " The only question is how do we find vulnerable programs on IBM that can be used for privilege"
      },
      {
        "Time_Start": 756.5400000000001,
        "Time_End": 757.7800000000001,
        "Text": " escalation?"
      },
      {
        "Time_Start": 757.7800000000001,
        "Time_End": 761.0600000000001,
        "Text": " So let's talk about research methodology a bit."
      },
      {
        "Time_Start": 761.0600000000001,
        "Time_End": 766.98,
        "Text": " To harvest some low-hanging fruits, we can use the integrated database that I told before"
      },
      {
        "Time_Start": 766.98,
        "Time_End": 772.4200000000001,
        "Text": " to filter program objects that can be executed by anyone and run with owner privileges."
      },
      {
        "Time_Start": 772.4200000000001,
        "Time_End": 780.5000000000001,
        "Text": " And now Zsoly will show you how to check the selected candidates for library-related vulnerabilities."
      },
      {
        "Time_Start": 780.5000000000001,
        "Time_End": 782.94,
        "Text": " Thank you."
      },
      {
        "Time_Start": 782.94,
        "Time_End": 788.3000000000001,
        "Text": " These basic tools are surprisingly effective in discovering potential vulnerabilities in"
      },
      {
        "Time_Start": 788.46,
        "Time_End": 792.5000000000001,
        "Text": " BGM and SRVBGN objects."
      },
      {
        "Time_Start": 792.5000000000001,
        "Time_End": 798.0200000000001,
        "Text": " IBM uses EBCDIC character encoding scheme, therefore I need a converter to view strings"
      },
      {
        "Time_Start": 798.0200000000001,
        "Time_End": 801.1800000000001,
        "Text": " in a human-readable format."
      },
      {
        "Time_Start": 801.1800000000001,
        "Time_End": 806.98,
        "Text": " Strings and grab commands are used for collecting, searching, and filtering."
      },
      {
        "Time_Start": 806.98,
        "Time_End": 814.9000000000001,
        "Text": " The display program references IBM ICL command is used to verify the potential library list-based"
      },
      {
        "Time_Start": 814.9000000000001,
        "Time_End": 817.0200000000001,
        "Text": " findings."
      },
      {
        "Time_Start": 817.02,
        "Time_End": 826.22,
        "Text": " The save object is also an IBM ICL command, and I use it to save the BGM and SRVBGN objects"
      },
      {
        "Time_Start": 826.22,
        "Time_End": 829.18,
        "Text": " for local analysis."
      },
      {
        "Time_Start": 829.18,
        "Time_End": 837.22,
        "Text": " And of course, I need a Java decompiler, and you will see why soon."
      },
      {
        "Time_Start": 837.22,
        "Time_End": 845.26,
        "Text": " Let's look at a real-world example through the vulnerability of the Crufax package."
      },
      {
        "Time_Start": 845.26,
        "Time_End": 848.78,
        "Text": " Here is one of the affected BGM objects."
      },
      {
        "Time_Start": 848.78,
        "Time_End": 857.3,
        "Text": " As you can see, the public authority is set to use, so every user can call it."
      },
      {
        "Time_Start": 857.3,
        "Time_End": 864.38,
        "Text": " The affected BGM object owner is qoutprof, and it runs with the elevated privileges of"
      },
      {
        "Time_Start": 864.38,
        "Time_End": 869.22,
        "Text": " this user."
      },
      {
        "Time_Start": 869.22,
        "Time_End": 875.26,
        "Text": " This simple shell command prints the references based on the library list."
      },
      {
        "Time_Start": 875.26,
        "Time_End": 879.5400000000001,
        "Text": " Libel is the object type of the library list."
      },
      {
        "Time_Start": 879.5400000000001,
        "Time_End": 884.78,
        "Text": " At this point, we cannot determine the types of the referenced objects."
      },
      {
        "Time_Start": 884.78,
        "Time_End": 890.02,
        "Text": " It is possible they are only message files, and we cannot exploit it using the technique"
      },
      {
        "Time_Start": 890.02,
        "Time_End": 892.78,
        "Text": " that will be demonstrated."
      },
      {
        "Time_Start": 892.78,
        "Time_End": 899.54,
        "Text": " So how can we determine the types of the referenced objects?"
      },
      {
        "Time_Start": 899.54,
        "Time_End": 907.62,
        "Text": " For example, we can use the display-program-references-cl command to verify there is at least one BGM"
      },
      {
        "Time_Start": 907.62,
        "Time_End": 910.26,
        "Text": " or SRVBGN object."
      },
      {
        "Time_Start": 910.26,
        "Time_End": 917.3399999999999,
        "Text": " The highlighted object below is a BGM and is referenced through the library list."
      },
      {
        "Time_Start": 917.34,
        "Time_End": 925.0600000000001,
        "Text": " If the seemingly vulnerable BGM object does not set the Crufax library during runtime,"
      },
      {
        "Time_Start": 925.0600000000001,
        "Time_End": 934.62,
        "Text": " this unqualified library call can potentially be exploited for privilege escalation."
      },
      {
        "Time_Start": 934.62,
        "Time_End": 939.22,
        "Text": " This is the basic exploitation concept of unqualified library calls."
      },
      {
        "Time_Start": 939.22,
        "Time_End": 946.58,
        "Text": " The user B1 user calls the vulnerable Crufax program object and that runs with the elevated"
      },
      {
        "Time_Start": 946.58,
        "Time_End": 954.74,
        "Text": " privileges of the CruoutProf user and makes unqualified calls to other program objects,"
      },
      {
        "Time_Start": 954.74,
        "Time_End": 958.5400000000001,
        "Text": " in this case the CrufQsys."
      },
      {
        "Time_Start": 958.5400000000001,
        "Time_End": 964.34,
        "Text": " If the user B1 can modify the library list and the vulnerable program does not set the"
      },
      {
        "Time_Start": 964.34,
        "Time_End": 970.7,
        "Text": " library containing the original CrufQsys, this could lead to arbitrary command execution"
      },
      {
        "Time_Start": 970.7,
        "Time_End": 975.62,
        "Text": " with the CruoutProf privileges."
      },
      {
        "Time_Start": 975.66,
        "Time_End": 983.14,
        "Text": " Let's assume at this point, the red one, we have CruoutProf authority, but this user does"
      },
      {
        "Time_Start": 983.14,
        "Time_End": 986.66,
        "Text": " not have any special authority."
      },
      {
        "Time_Start": 986.66,
        "Time_End": 990.38,
        "Text": " Or does it?"
      },
      {
        "Time_Start": 990.38,
        "Time_End": 998.58,
        "Text": " The CruoutProf user has use authority on the Crufax MSF profile and the Crufax MSF profile"
      },
      {
        "Time_Start": 998.62,
        "Time_End": 1009.9000000000001,
        "Text": " has all special authorities such as all object, IDDQD, if you know what I mean, and second"
      },
      {
        "Time_Start": 1009.9000000000001,
        "Time_End": 1010.9000000000001,
        "Text": " min."
      },
      {
        "Time_Start": 1010.9000000000001,
        "Time_End": 1014.1800000000001,
        "Text": " So, what can we do?"
      },
      {
        "Time_Start": 1014.1800000000001,
        "Time_End": 1021.4200000000001,
        "Text": " In the IBMI environment, there is a term called profile swapping."
      },
      {
        "Time_Start": 1021.4200000000001,
        "Time_End": 1027.5,
        "Text": " Profile swapping is a legitimate mechanism on IBMI to change the current user of a job"
      },
      {
        "Time_Start": 1027.5,
        "Time_End": 1029.54,
        "Text": " to another user."
      },
      {
        "Time_Start": 1029.54,
        "Time_End": 1036.62,
        "Text": " Basically, it can be done if you know the username or the profile name and the password"
      },
      {
        "Time_Start": 1036.62,
        "Time_End": 1045.38,
        "Text": " combination or if you have use authority on the profile being swapped."
      },
      {
        "Time_Start": 1045.38,
        "Time_End": 1054.74,
        "Text": " If you have use authority, surprise, the password is not required."
      },
      {
        "Time_Start": 1054.74,
        "Time_End": 1057.26,
        "Text": " Let's continue with the exploit chain."
      },
      {
        "Time_Start": 1057.26,
        "Time_End": 1062.6200000000001,
        "Text": " I used the highlighted CL script to perform profile swapping."
      },
      {
        "Time_Start": 1062.6200000000001,
        "Time_End": 1068.6200000000001,
        "Text": " It gets and sets the new profile handler, assuming the current user has use authority"
      },
      {
        "Time_Start": 1068.6200000000001,
        "Time_End": 1070.42,
        "Text": " on that profile."
      },
      {
        "Time_Start": 1070.42,
        "Time_End": 1075.42,
        "Text": " As I mentioned, the password is not necessary."
      },
      {
        "Time_Start": 1075.42,
        "Time_End": 1083.82,
        "Text": " That's why I used the highlighted noPVD parameter in the getProfileHandle API."
      },
      {
        "Time_Start": 1083.8999999999999,
        "Time_End": 1087.22,
        "Text": " Let's see this in action."
      },
      {
        "Time_Start": 1087.22,
        "Time_End": 1096.22,
        "Text": " Maybe the picture will be clearer."
      },
      {
        "Time_Start": 1096.22,
        "Time_End": 1108.22,
        "Text": " I'm logging in with user B1 and this user doesn't have any special authorities."
      },
      {
        "Time_Start": 1114.82,
        "Time_End": 1123.3,
        "Text": " Printing the profile and as you can see, none."
      },
      {
        "Time_Start": 1123.3,
        "Time_End": 1129.9399999999998,
        "Text": " I have already compiled the necessary PGMs in the user B1 library, but let's see the"
      },
      {
        "Time_Start": 1129.9399999999998,
        "Time_End": 1138.7,
        "Text": " source of the QFQSS PGM."
      },
      {
        "Time_Start": 1138.7,
        "Time_End": 1147.3,
        "Text": " Here is the malicious PGM called by the vulnerable QFX component and as you can see, I only"
      },
      {
        "Time_Start": 1147.3,
        "Time_End": 1155.22,
        "Text": " call a command line."
      },
      {
        "Time_Start": 1155.22,
        "Time_End": 1171.78,
        "Text": " I'm adding the user B1 library to the library list and displaying the accessible user profile."
      },
      {
        "Time_Start": 1171.78,
        "Time_End": 1177.38,
        "Text": " We have access to these four user profiles."
      },
      {
        "Time_Start": 1177.38,
        "Time_End": 1178.94,
        "Text": " Do you know why?"
      },
      {
        "Time_Start": 1178.94,
        "Time_End": 1179.94,
        "Text": " Violent?"
      },
      {
        "Time_Start": 1180.66,
        "Time_End": 1186.14,
        "Text": " Yeah, because we only have proper access over these user objects, obviously."
      },
      {
        "Time_Start": 1186.14,
        "Time_End": 1193.14,
        "Text": " Yes, but the system contains dozens of other user profiles."
      },
      {
        "Time_Start": 1193.14,
        "Time_End": 1210.8600000000001,
        "Text": " After that, I'm calling the vulnerable component and I have a command shell, so-called."
      },
      {
        "Time_Start": 1210.8600000000001,
        "Time_End": 1214.5400000000002,
        "Text": " Printing again the accessible user profile."
      },
      {
        "Time_Start": 1214.54,
        "Time_End": 1226.42,
        "Text": " As you can see, we have access to the QLProf and the QFXMSF profiles and I only have one"
      },
      {
        "Time_Start": 1226.42,
        "Time_End": 1242.94,
        "Text": " step to this exploit process, the profile swapping and if I print the accessible users,"
      },
      {
        "Time_Start": 1242.94,
        "Time_End": 1259.9,
        "Text": " you can see all the system users."
      },
      {
        "Time_Start": 1259.9,
        "Time_End": 1267.46,
        "Text": " One thing to know about these library list issues is that we've already discovered literally"
      },
      {
        "Time_Start": 1267.46,
        "Time_End": 1269.42,
        "Text": " hundreds of these."
      },
      {
        "Time_Start": 1269.42,
        "Time_End": 1272.46,
        "Text": " This is not an exception, it seems to be the rule."
      },
      {
        "Time_Start": 1272.98,
        "Time_End": 1281.06,
        "Text": " IBM is cleaning up the place right now, as you can see in their advisories."
      },
      {
        "Time_Start": 1281.06,
        "Time_End": 1286.5,
        "Text": " But yeah, it's a really rich attack surface and as you can see, it's like basic logic"
      },
      {
        "Time_Start": 1286.5,
        "Time_End": 1291.66,
        "Text": " bugs, you can find it if you have access to such a system really easily using basically"
      },
      {
        "Time_Start": 1291.66,
        "Time_End": 1293.06,
        "Text": " strings."
      },
      {
        "Time_Start": 1293.06,
        "Time_End": 1297.58,
        "Text": " But this is not the only way to elevate our privileges."
      },
      {
        "Time_Start": 1297.58,
        "Time_End": 1305.4199999999998,
        "Text": " There is also a command injection which is not a usual thing to use for local privilege"
      },
      {
        "Time_Start": 1305.4199999999998,
        "Time_End": 1312.1,
        "Text": " escalations, but on IBMI, it really works and the following example will also be useful"
      },
      {
        "Time_Start": 1312.1,
        "Time_End": 1314.1799999999998,
        "Text": " to introduce some new concepts."
      },
      {
        "Time_Start": 1314.1799999999998,
        "Time_End": 1319.74,
        "Text": " One of these new concepts is the concept of service programs."
      },
      {
        "Time_Start": 1319.74,
        "Time_End": 1324.02,
        "Text": " Service programs are objects that expose reusable code."
      },
      {
        "Time_Start": 1324.02,
        "Time_End": 1329.26,
        "Text": " If you want to reuse this code, you don't have to load it from some shared file because"
      },
      {
        "Time_Start": 1329.26,
        "Time_End": 1335.98,
        "Text": " we don't have a file system or anything like that, so there are no SOs or DLLs, but all"
      },
      {
        "Time_Start": 1335.98,
        "Time_End": 1342.94,
        "Text": " the code is already available as addressable objects inside the single level storage."
      },
      {
        "Time_Start": 1342.94,
        "Time_End": 1348.82,
        "Text": " So you can think of service programs as the love children of shared libraries and maybe"
      },
      {
        "Time_Start": 1348.82,
        "Time_End": 1350.34,
        "Text": " Windows services."
      },
      {
        "Time_Start": 1350.34,
        "Time_End": 1356.3,
        "Text": " You can call an external thing like a service, but you are still technically in the same"
      },
      {
        "Time_Start": 1356.3,
        "Time_End": 1358.6,
        "Text": " address space."
      },
      {
        "Time_Start": 1358.6,
        "Time_End": 1360.8999999999999,
        "Text": " So what does this mean?"
      },
      {
        "Time_Start": 1360.8999999999999,
        "Time_End": 1363.6599999999999,
        "Text": " Yeah, important things first."
      },
      {
        "Time_Start": 1363.6599999999999,
        "Time_End": 1369.26,
        "Text": " Service programs can also run with adopted authority, of course, because they are programs."
      },
      {
        "Time_Start": 1369.26,
        "Time_End": 1374.62,
        "Text": " Just like you can call a Windows service that runs with system, so it seems like a really"
      },
      {
        "Time_Start": 1374.62,
        "Time_End": 1376.54,
        "Text": " good previous opportunity, right?"
      },
      {
        "Time_Start": 1376.86,
        "Time_End": 1381.98,
        "Text": " At the same time, if we think about calling a service program like a call to a DLL, it"
      },
      {
        "Time_Start": 1381.98,
        "Time_End": 1388.94,
        "Text": " seems logical that control is just transferred inside their address space and there should"
      },
      {
        "Time_Start": 1388.94,
        "Time_End": 1393.1,
        "Text": " be no trust boundaries present, right?"
      },
      {
        "Time_Start": 1393.1,
        "Time_End": 1399.1399999999999,
        "Text": " And this is kind of how the situation looks like, so combining these two ideas, we end"
      },
      {
        "Time_Start": 1399.14,
        "Time_End": 1407.98,
        "Text": " up in a setup where higher privilege code is accessible basically without authentication."
      },
      {
        "Time_Start": 1407.98,
        "Time_End": 1414.5,
        "Text": " And this is kind of similar to permissive pseudo configuration, as I show you here."
      },
      {
        "Time_Start": 1414.5,
        "Time_End": 1423.46,
        "Text": " For example, this service program called QGAD lib A can be used by anyone, so the code inside"
      },
      {
        "Time_Start": 1423.6200000000001,
        "Time_End": 1433.6200000000001,
        "Text": " can be called by anyone, but it also runs with adopted authority, so this can be basically"
      },
      {
        "Time_Start": 1433.6200000000001,
        "Time_End": 1438.06,
        "Text": " translated to this pseudo configuration."
      },
      {
        "Time_Start": 1438.06,
        "Time_End": 1450.82,
        "Text": " The QADR SRV user can be impersonated to run this command without password."
      },
      {
        "Time_Start": 1451.62,
        "Time_End": 1459.1,
        "Text": " It would be a shame if there were some trivial exploitable bug in there, and Zsoli will of"
      },
      {
        "Time_Start": 1459.1,
        "Time_End": 1464.1399999999999,
        "Text": " course show you that there was."
      },
      {
        "Time_Start": 1464.1399999999999,
        "Time_End": 1473.34,
        "Text": " My first step during an offline analysis is to check the strings in a PGM or SRV PGM object."
      },
      {
        "Time_Start": 1473.34,
        "Time_End": 1481.54,
        "Text": " This SRV PGM object contains quite interesting strings, as the picture shows."
      },
      {
        "Time_Start": 1481.54,
        "Time_End": 1491.4199999999998,
        "Text": " The SRV PGM calls Java to run code from multiple jars, therefore I examined all of them."
      },
      {
        "Time_Start": 1491.4199999999998,
        "Time_End": 1497.5,
        "Text": " After a while, I identified the following vulnerable code section."
      },
      {
        "Time_Start": 1497.62,
        "Time_End": 1501.9,
        "Text": " It's too trivial, but can you spot the issue?"
      },
      {
        "Time_Start": 1507.3,
        "Time_End": 1515.3,
        "Text": " The vulnerable code section creates a process using the parameter of the SRV PGM's one and"
      },
      {
        "Time_Start": 1515.3,
        "Time_End": 1522.82,
        "Text": " only exported procedure, and of course, why not, arbitrary user can set this parameter"
      },
      {
        "Time_Start": 1523.02,
        "Time_End": 1528.1399999999999,
        "Text": " and call the vulnerable SRV PGM."
      },
      {
        "Time_Start": 1528.1399999999999,
        "Time_End": 1535.1799999999998,
        "Text": " This is the relevant part of the exploit, based on the JT open library."
      },
      {
        "Time_Start": 1535.1799999999998,
        "Time_End": 1543.9399999999998,
        "Text": " The proper parameter convention is extracted from the healthmanager.jar."
      },
      {
        "Time_Start": 1543.9399999999998,
        "Time_End": 1547.22,
        "Text": " This is too easy, isn't it?"
      },
      {
        "Time_Start": 1547.22,
        "Time_End": 1556.06,
        "Text": " I didn't believe it until I saw the created test file owned by a CUSAC officer."
      },
      {
        "Time_Start": 1556.06,
        "Time_End": 1561.98,
        "Text": " So another demo about this."
      },
      {
        "Time_Start": 1562.02,
        "Time_End": 1573.3,
        "Text": " I'm logging in with the user B1 profile and call CUSA to run Java."
      },
      {
        "Time_Start": 1573.3,
        "Time_End": 1576.26,
        "Text": " And the second terminal."
      },
      {
        "Time_Start": 1579.94,
        "Time_End": 1584.94,
        "Text": " Yeah, we are using two terminals, one with the CUSAC officer, which is basically root,"
      },
      {
        "Time_Start": 1584.94,
        "Time_End": 1591.1,
        "Text": " as you know, just to show you the users on the system."
      },
      {
        "Time_Start": 1592.1000000000001,
        "Time_End": 1595.8600000000001,
        "Text": " I'm checking, there is no hacker user in the system."
      },
      {
        "Time_Start": 1595.8600000000001,
        "Time_End": 1598.9800000000002,
        "Text": " Yeah, it's hopefully."
      },
      {
        "Time_Start": 1598.9800000000002,
        "Time_End": 1607.3400000000001,
        "Text": " And I run this exploit with the user B1."
      },
      {
        "Time_Start": 1613.3400000000001,
        "Time_End": 1616.0600000000002,
        "Text": " Refreshing the console."
      },
      {
        "Time_Start": 1616.0600000000002,
        "Time_End": 1618.8600000000001,
        "Text": " And there is the hacker user."
      },
      {
        "Time_Start": 1622.1000000000001,
        "Time_End": 1630.1000000000001,
        "Text": " With all object and second main special authorities."
      },
      {
        "Time_Start": 1640.1000000000001,
        "Time_End": 1650.1000000000001,
        "Text": " Yeah, my favorite part, sometimes there is no need for an injection, low-hanging fruit."
      },
      {
        "Time_Start": 1652.1000000000001,
        "Time_End": 1657.1000000000001,
        "Text": " The affected SRVPGM exports a bunch of procedures."
      },
      {
        "Time_Start": 1657.1000000000001,
        "Time_End": 1663.1000000000001,
        "Text": " Most of them are used for creating files, directories, and so on."
      },
      {
        "Time_Start": 1663.1000000000001,
        "Time_End": 1667.1000000000001,
        "Text": " And there is this system procedure."
      },
      {
        "Time_Start": 1667.1000000000001,
        "Time_End": 1671.1000000000001,
        "Text": " You can find it in the last line."
      },
      {
        "Time_Start": 1671.1000000000001,
        "Time_End": 1673.1000000000001,
        "Text": " What could possibly go wrong?"
      },
      {
        "Time_Start": 1673.1000000000001,
        "Time_End": 1679.1000000000001,
        "Text": " I guess the parameter convention based on the C library function system."
      },
      {
        "Time_Start": 1680.1000000000001,
        "Time_End": 1685.1000000000001,
        "Text": " After that, the exploit was trivial, as you can see."
      },
      {
        "Time_Start": 1685.1000000000001,
        "Time_End": 1688.1000000000001,
        "Text": " So, demo time."
      },
      {
        "Time_Start": 1696.1000000000001,
        "Time_End": 1699.1000000000001,
        "Text": " Little twist."
      },
      {
        "Time_Start": 1699.1000000000001,
        "Time_End": 1707.1000000000001,
        "Text": " For the demo, I created the exploit in CL, not in Java, to present a different approach."
      },
      {
        "Time_Start": 1709.1000000000001,
        "Time_End": 1712.1000000000001,
        "Text": " So, let's see the source."
      },
      {
        "Time_Start": 1712.1000000000001,
        "Time_End": 1716.1000000000001,
        "Text": " Also, because you like to hurt yourself sometimes."
      },
      {
        "Time_Start": 1716.1000000000001,
        "Time_End": 1719.1000000000001,
        "Text": " I like the challenges."
      },
      {
        "Time_Start": 1719.1000000000001,
        "Time_End": 1722.1000000000001,
        "Text": " This exploit runs two commands."
      },
      {
        "Time_Start": 1722.1000000000001,
        "Time_End": 1728.1000000000001,
        "Text": " Creates a file object and sets the new owner to QDeerSRV."
      },
      {
        "Time_Start": 1728.1000000000001,
        "Time_End": 1736.1000000000001,
        "Text": " Do you know why I had to use hex represented ASCII for the commands instead of strings?"
      },
      {
        "Time_Start": 1740.1000000000001,
        "Time_End": 1743.1000000000001,
        "Text": " Yeah, close."
      },
      {
        "Time_Start": 1743.1000000000001,
        "Time_End": 1755.1000000000001,
        "Text": " These strings will be stored in fcdic after compilation."
      },
      {
        "Time_Start": 1755.1000000000001,
        "Time_End": 1760.1000000000001,
        "Text": " But the SRVPGM expects ASCII as an input."
      },
      {
        "Time_Start": 1760.1000000000001,
        "Time_End": 1763.1000000000001,
        "Text": " So, that's why."
      },
      {
        "Time_Start": 1763.1000000000001,
        "Time_End": 1766.1000000000001,
        "Text": " Exit."
      },
      {
        "Time_Start": 1768.1000000000001,
        "Time_End": 1775.1000000000001,
        "Text": " Let's check this file with QSACOfficer."
      },
      {
        "Time_Start": 1775.1000000000001,
        "Time_End": 1777.1000000000001,
        "Text": " No such file in the system."
      },
      {
        "Time_Start": 1777.1000000000001,
        "Time_End": 1782.1000000000001,
        "Text": " And call the exploit."
      },
      {
        "Time_Start": 1786.1000000000001,
        "Time_End": 1789.1000000000001,
        "Text": " Sorry."
      },
      {
        "Time_Start": 1790.1000000000001,
        "Time_End": 1798.1000000000001,
        "Text": " Yeah, and maybe, after refreshing, there is a new file."
      },
      {
        "Time_Start": 1798.1000000000001,
        "Time_End": 1807.1000000000001,
        "Text": " And as you can see, the owner is QDeerSRV."
      },
      {
        "Time_Start": 1807.1000000000001,
        "Time_End": 1810.1000000000001,
        "Text": " That's all."
      },
      {
        "Time_Start": 1819.1000000000001,
        "Time_End": 1826.1000000000001,
        "Text": " So, I have another one, of course."
      },
      {
        "Time_Start": 1826.1000000000001,
        "Time_End": 1831.1000000000001,
        "Text": " Multiple JAR files belong to the management central service."
      },
      {
        "Time_Start": 1831.1000000000001,
        "Time_End": 1841.1000000000001,
        "Text": " During the assessment of these JAR files, I constructed the following code to achieve command execution with an SQL query."
      },
      {
        "Time_Start": 1841.1000000000001,
        "Time_End": 1847.1000000000001,
        "Text": " This query is run by the management central Java server profile."
      },
      {
        "Time_Start": 1847.1000000000001,
        "Time_End": 1855.1000000000001,
        "Text": " You can extract the exploit code from the mcclient.jar file."
      },
      {
        "Time_Start": 1855.1000000000001,
        "Time_End": 1862.1000000000001,
        "Text": " And Balint will explain the QCMD ASCII function later."
      },
      {
        "Time_Start": 1862.1000000000001,
        "Time_End": 1867.1000000000001,
        "Text": " So, let's see how this exploit works."
      },
      {
        "Time_Start": 1868.1000000000001,
        "Time_End": 1882.1000000000001,
        "Text": " This exploit, we run a command that creates a new file object with the authority of the management central Java server profile."
      },
      {
        "Time_Start": 1882.1000000000001,
        "Time_End": 1884.1000000000001,
        "Text": " I'm logging in with the user ribbon."
      },
      {
        "Time_Start": 1884.1000000000001,
        "Time_End": 1889.1000000000001,
        "Text": " And call QSACOfficer."
      },
      {
        "Time_Start": 1903.1000000000001,
        "Time_End": 1909.1000000000001,
        "Text": " Checking this file. No such file in the system. Great."
      },
      {
        "Time_Start": 1914.1000000000001,
        "Time_End": 1924.1000000000001,
        "Text": " Yeah, running the exploit."
      },
      {
        "Time_Start": 1924.1000000000001,
        "Time_End": 1934.1000000000001,
        "Text": " Oh, no, I'm just joking. The error message doesn't matter."
      },
      {
        "Time_Start": 1935.1000000000001,
        "Time_End": 1938.1000000000001,
        "Text": " Okay, refreshing the console."
      },
      {
        "Time_Start": 1938.1000000000001,
        "Time_End": 1945.1000000000001,
        "Text": " And as you can see, the owner is the management central Java server profile."
      },
      {
        "Time_Start": 1955.1000000000001,
        "Time_End": 1959.1000000000001,
        "Text": " So, I have another one."
      },
      {
        "Time_Start": 1960.1000000000001,
        "Time_End": 1967.1000000000001,
        "Text": " This service program exports a profile swapping procedure. Why not? Accessible to everyone, of course."
      },
      {
        "Time_Start": 1967.1000000000001,
        "Time_End": 1971.1000000000001,
        "Text": " And this exploit only calls the exported procedure."
      },
      {
        "Time_Start": 1971.1000000000001,
        "Time_End": 1976.1000000000001,
        "Text": " And the current JAR will have QBRMS authority."
      },
      {
        "Time_Start": 1976.1000000000001,
        "Time_End": 1978.1000000000001,
        "Text": " The funny story about this."
      },
      {
        "Time_Start": 1978.1000000000001,
        "Time_End": 1987.1000000000001,
        "Text": " After I had sent the bug report to IBM, they sent back an email informing me that this issue already had a patch."
      },
      {
        "Time_Start": 1987.1000000000001,
        "Time_End": 1993.1000000000001,
        "Text": " My question was, where can I find the CVA for this patch?"
      },
      {
        "Time_Start": 1993.1000000000001,
        "Time_End": 1999.1000000000001,
        "Text": " Oh, we plan on generating a CVA, blah, blah, blah."
      },
      {
        "Time_Start": 1999.1000000000001,
        "Time_End": 2003.1000000000001,
        "Text": " But after they did it, so case closed."
      },
      {
        "Time_Start": 2006.1000000000001,
        "Time_End": 2015.1000000000001,
        "Text": " Digging deeper into the management central JAR files, I identified an interesting code section in mcprefserver.jar."
      },
      {
        "Time_Start": 2016.1000000000001,
        "Time_End": 2024.1000000000001,
        "Text": " The IBM-developed code uses this service program, which has two important procedures."
      },
      {
        "Time_Start": 2025.1000000000001,
        "Time_End": 2033.1000000000001,
        "Text": " We can use these procedures for profile swapping, and because of the adopted authority of the Qsys user,"
      },
      {
        "Time_Start": 2033.1000000000001,
        "Time_End": 2043.1000000000001,
        "Text": " we can run operating system commands with all object authority without a password."
      },
      {
        "Time_Start": 2043.1000000000001,
        "Time_End": 2047.1000000000001,
        "Text": " Almost the entire exploit code is in the JAR."
      },
      {
        "Time_Start": 2047.1000000000001,
        "Time_End": 2059.1000000000004,
        "Text": " You can only need to extend it with the command execution function, so house of GABA, or homework to do this."
      },
      {
        "Time_Start": 2060.1000000000004,
        "Time_End": 2062.1000000000004,
        "Text": " Okay, a little bit of demo."
      },
      {
        "Time_Start": 2063.1,
        "Time_End": 2067.1,
        "Text": " Yeah, we already signed in. Okay."
      },
      {
        "Time_Start": 2069.1,
        "Time_End": 2076.1,
        "Text": " This exploit, we run a command that creates a new file object with the authority of the Qsys officer."
      },
      {
        "Time_Start": 2079.1,
        "Time_End": 2081.1,
        "Text": " Let's check this file."
      },
      {
        "Time_Start": 2085.1,
        "Time_End": 2088.1,
        "Text": " Okay, there is no such file in the system."
      },
      {
        "Time_Start": 2089.1,
        "Time_End": 2099.1,
        "Text": " Another CUSA, and here is the exploit."
      },
      {
        "Time_Start": 2101.1,
        "Time_End": 2102.1,
        "Text": " Running it."
      },
      {
        "Time_Start": 2106.1,
        "Time_End": 2114.1,
        "Text": " Refreshing the console, and as you can see, there is a new file owned by Qsys officer."
      },
      {
        "Time_Start": 2119.1,
        "Time_End": 2120.1,
        "Text": " Thank you."
      },
      {
        "Time_Start": 2127.1,
        "Time_End": 2129.1,
        "Text": " Yeah, so it's almost getting boring, right?"
      },
      {
        "Time_Start": 2130.1,
        "Time_End": 2136.1,
        "Text": " There are so many venues for attack locally, but the question is how do we get there, right?"
      },
      {
        "Time_Start": 2137.1,
        "Time_End": 2140.1,
        "Text": " So far we've shown multiple ways for local privilege escalation."
      },
      {
        "Time_Start": 2141.1,
        "Time_End": 2150.1,
        "Text": " And also previous publications about IBMI, security in particular, highlighted the common configuration issues,"
      },
      {
        "Time_Start": 2150.1,
        "Time_End": 2158.1,
        "Text": " including default passwords, weak passwords, misuse of the limited privilege on user profile, for example,"
      },
      {
        "Time_Start": 2158.1,
        "Time_End": 2167.1,
        "Text": " which is highly misunderstood, and unfortunately these are still problems, but you can read up on this in the literature."
      },
      {
        "Time_Start": 2167.1,
        "Time_End": 2168.1,
        "Text": " We'll have some links."
      },
      {
        "Time_Start": 2170.1,
        "Time_End": 2181.1,
        "Text": " Of course, the unique subsystem running inside IBM called PACE, and from this subsystem it's not virtualized or separated in any way,"
      },
      {
        "Time_Start": 2181.1,
        "Time_End": 2188.1,
        "Text": " so you can just run commands from there, and from the native command line you can run PACE commands and vice versa."
      },
      {
        "Time_Start": 2189.1,
        "Time_End": 2195.1,
        "Text": " So that's also an easy venue, I would say, and of course there are always web applications."
      },
      {
        "Time_Start": 2195.1,
        "Time_End": 2200.1,
        "Text": " Everyone's favorite web application, Vulnerability Test, is of course SQL injection."
      },
      {
        "Time_Start": 2200.1,
        "Time_End": 2207.1,
        "Text": " That can also affect IBMI programs locally and remotely in a similar fashion that we showed,"
      },
      {
        "Time_Start": 2207.1,
        "Time_End": 2212.1,
        "Text": " because stored procedures are also compiled to program objects at the end of the day."
      },
      {
        "Time_Start": 2213.1,
        "Time_End": 2221.1,
        "Text": " The important thing to highlight here is that the integrated nature of the system really blurs the lines"
      },
      {
        "Time_Start": 2221.1,
        "Time_End": 2225.1,
        "Text": " between the database component and the operating system component."
      },
      {
        "Time_Start": 2225.1,
        "Time_End": 2227.1,
        "Text": " These are not really components."
      },
      {
        "Time_Start": 2227.1,
        "Time_End": 2235.1,
        "Text": " The database is the system and the OS is the database, sort of, and this makes things interesting."
      },
      {
        "Time_Start": 2235.1,
        "Time_End": 2242.1,
        "Text": " So hunting for SQL injection vulnerabilities is of course easiest during SQL."
      },
      {
        "Time_Start": 2242.1,
        "Time_End": 2247.1,
        "Text": " I ran similar queries on the system to find some nice bugs,"
      },
      {
        "Time_Start": 2248.1,
        "Time_End": 2254.1,
        "Text": " but first of all, some of the system components are obfuscated or wrapped in IBM's terminology,"
      },
      {
        "Time_Start": 2254.1,
        "Time_End": 2257.1,
        "Text": " so their source code is not really visible."
      },
      {
        "Time_Start": 2258.1,
        "Time_End": 2265.1,
        "Text": " I even found some actual injection issues, but they were so limited in terms of character length,"
      },
      {
        "Time_Start": 2265.1,
        "Time_End": 2271.1,
        "Text": " like you could inject two characters into a SQL query, which is kind of impossible to exploit."
      },
      {
        "Time_Start": 2272.1,
        "Time_End": 2275.1,
        "Text": " So this didn't lead anywhere."
      },
      {
        "Time_Start": 2276.1,
        "Time_End": 2283.1,
        "Text": " Also, I have to emphasize that in DB2, the infamous execute immediate statement"
      },
      {
        "Time_Start": 2283.1,
        "Time_End": 2289.1,
        "Text": " that basically evaluates this string as an SQL statement,"
      },
      {
        "Time_Start": 2289.1,
        "Time_End": 2294.1,
        "Text": " is limited in the sense that you cannot run selects like this,"
      },
      {
        "Time_Start": 2294.1,
        "Time_End": 2299.1,
        "Text": " so a foot gun is taken away from developers, and this is good."
      },
      {
        "Time_Start": 2300.1,
        "Time_End": 2305.1,
        "Text": " But at the same time, our usual dynamic tools just work as expected"
      },
      {
        "Time_Start": 2305.1,
        "Time_End": 2311.1,
        "Text": " and can find vulnerabilities at each layer of the software stack,"
      },
      {
        "Time_Start": 2311.1,
        "Time_End": 2318.1,
        "Text": " from the web scripts to the translated SQL programs that exist on the system."
      },
      {
        "Time_Start": 2319.1,
        "Time_End": 2322.1,
        "Text": " And if you find an injection like this,"
      },
      {
        "Time_Start": 2323.1,
        "Time_End": 2330.1,
        "Text": " first of all, you will be tempted to play around with the system objects,"
      },
      {
        "Time_Start": 2330.1,
        "Time_End": 2334.1,
        "Text": " because they are, again, translated to this relational schema,"
      },
      {
        "Time_Start": 2334.1,
        "Time_End": 2337.1,
        "Text": " but there is an even better way for post-exploitation."
      },
      {
        "Time_Start": 2337.1,
        "Time_End": 2342.1,
        "Text": " This image shows the default permissions of QCMD exec,"
      },
      {
        "Time_Start": 2342.1,
        "Time_End": 2351.1,
        "Text": " which is a SQL function, which is kind of equivalent to XP command shell from Microsoft SQL Server,"
      },
      {
        "Time_Start": 2351.1,
        "Time_End": 2354.1,
        "Text": " so you can execute OS commands with it,"
      },
      {
        "Time_Start": 2354.1,
        "Time_End": 2359.1,
        "Text": " and as you can see, the public can use, aka execute, this function,"
      },
      {
        "Time_Start": 2359.1,
        "Time_End": 2364.1,
        "Text": " so SQL injection likely means remote code execution on IBMI."
      },
      {
        "Time_Start": 2365.1,
        "Time_End": 2370.1,
        "Text": " We unfortunately cannot show you a demo of this on the base system,"
      },
      {
        "Time_Start": 2370.1,
        "Time_End": 2373.1,
        "Text": " but here's an example from one of our Pentest projects,"
      },
      {
        "Time_Start": 2373.1,
        "Time_End": 2377.1,
        "Text": " and as you can see, here's a trivial SQL injection vulnerability"
      },
      {
        "Time_Start": 2377.1,
        "Time_End": 2381.1,
        "Text": " that we used to call QCMD exec,"
      },
      {
        "Time_Start": 2382.1,
        "Time_End": 2388.1,
        "Text": " and here's the result giving us the output of the native command,"
      },
      {
        "Time_Start": 2388.1,
        "Time_End": 2392.1,
        "Text": " in this case, with the rights of the core accounting system,"
      },
      {
        "Time_Start": 2392.1,
        "Time_End": 2395.1,
        "Text": " if you recognize that name, maybe."
      },
      {
        "Time_Start": 2395.1,
        "Time_End": 2399.1,
        "Text": " I have to emphasize that this component was not the vulnerable one,"
      },
      {
        "Time_Start": 2399.1,
        "Time_End": 2403.1,
        "Text": " it was an external extra development,"
      },
      {
        "Time_Start": 2403.1,
        "Time_End": 2409.1,
        "Text": " but still, the core accounting system became vulnerable because of this."
      },
      {
        "Time_Start": 2410.1,
        "Time_End": 2418.1,
        "Text": " So, we still kind of want to have an authenticated remote code execution on the base system,"
      },
      {
        "Time_Start": 2418.1,
        "Time_End": 2422.1,
        "Text": " and this is, as of today, not enough,"
      },
      {
        "Time_Start": 2422.1,
        "Time_End": 2424.1,
        "Text": " so we have to knock it on the knop a notch,"
      },
      {
        "Time_Start": 2424.1,
        "Time_End": 2427.1,
        "Text": " and Zoj will lead the way in that."
      },
      {
        "Time_Start": 2429.1,
        "Time_End": 2430.1,
        "Text": " Thank you."
      },
      {
        "Time_Start": 2431.1,
        "Time_End": 2436.1,
        "Text": " This is one of our unauthenticated remote code execution vulnerabilities,"
      },
      {
        "Time_Start": 2436.1,
        "Time_End": 2439.1,
        "Text": " and its explanation."
      },
      {
        "Time_Start": 2440.1,
        "Time_End": 2443.1,
        "Text": " Honestly, I like dumbfuzzing."
      },
      {
        "Time_Start": 2443.1,
        "Time_End": 2447.1,
        "Text": " It's easy to do, quick, and can be very effective."
      },
      {
        "Time_Start": 2447.1,
        "Time_End": 2450.1,
        "Text": " I have found some issues with this technique,"
      },
      {
        "Time_Start": 2450.1,
        "Time_End": 2456.1,
        "Text": " for example, a format string vulnerability in the Apple Remote Desktop service,"
      },
      {
        "Time_Start": 2456.1,
        "Time_End": 2462.1,
        "Text": " and the buffer overflow in the SSL implementation of Ascada software."
      },
      {
        "Time_Start": 2463.1,
        "Time_End": 2466.1,
        "Text": " When I tested the DDM architecture,"
      },
      {
        "Time_Start": 2466.1,
        "Time_End": 2471.1,
        "Text": " I focused only on the unencrypted version of the DRDA service,"
      },
      {
        "Time_Start": 2471.1,
        "Time_End": 2476.1,
        "Text": " and I'm not a huge fan of reinventing the wheel,"
      },
      {
        "Time_Start": 2476.1,
        "Time_End": 2483.1,
        "Text": " which is why I used this really good paycab-based fuzzer with some modifications."
      },
      {
        "Time_Start": 2487.1,
        "Time_End": 2493.1,
        "Text": " So, how does the DRDA protocol work, and what is it?"
      },
      {
        "Time_Start": 2493.1,
        "Time_End": 2499.1,
        "Text": " DRDA means distributed relational database architecture,"
      },
      {
        "Time_Start": 2499.1,
        "Time_End": 2505.1,
        "Text": " and this is a standard protocol to interconnect databases and applications."
      },
      {
        "Time_Start": 2506.1,
        "Time_End": 2513.1,
        "Text": " This protocol, by design, allows command execution after authentication,"
      },
      {
        "Time_Start": 2513.1,
        "Time_End": 2520.1,
        "Text": " and you can see the normal and simplified way of this protocol."
      },
      {
        "Time_Start": 2520.1,
        "Time_End": 2526.1,
        "Text": " The client sends authentication information to the sign-on service."
      },
      {
        "Time_Start": 2527.1,
        "Time_End": 2533.1,
        "Text": " The sign-on service sends back some kind of token after successful authentication,"
      },
      {
        "Time_Start": 2534.1,
        "Time_End": 2540.1,
        "Text": " and then the client uses this token to re-authenticate to the DRDA service,"
      },
      {
        "Time_Start": 2540.1,
        "Time_End": 2546.1,
        "Text": " and after that, the client is capable to send commands."
      },
      {
        "Time_Start": 2548.1,
        "Time_End": 2554.1,
        "Text": " This picture shows the expected behavior in case of incorrect credentials,"
      },
      {
        "Time_Start": 2555.1,
        "Time_End": 2558.1,
        "Text": " but what does the fuzzer do?"
      },
      {
        "Time_Start": 2560.1,
        "Time_End": 2567.1,
        "Text": " It completely ignores the sign-on packets and works only with the DRDA packets."
      },
      {
        "Time_Start": 2568.1,
        "Time_End": 2573.1,
        "Text": " We can send a whole DRDA PCAP without any problem."
      },
      {
        "Time_Start": 2575.1,
        "Time_End": 2583.1,
        "Text": " If the authentication information is wrong, the service will run the command with its own authority."
      },
      {
        "Time_Start": 2584.1,
        "Time_End": 2590.1,
        "Text": " So, let's review the steps of this discovery."
      },
      {
        "Time_Start": 2590.1,
        "Time_End": 2608.1,
        "Text": " First, I'm running the fuzzer to identify the authentication issue in the DDM architecture."
      },
      {
        "Time_Start": 2613.1,
        "Time_End": 2618.1,
        "Text": " Here is the DRDA communication saved in a PCAP file."
      },
      {
        "Time_Start": 2621.1,
        "Time_End": 2628.1,
        "Text": " The strings are in EPSIL format, so I have to change the encoding."
      },
      {
        "Time_Start": 2629.1,
        "Time_End": 2643.1,
        "Text": " So, this command creates a testcmd file object in the QGPL library,"
      },
      {
        "Time_Start": 2644.1,
        "Time_End": 2654.1,
        "Text": " and uses the user v1 user and uses the scrambled password and token mix."
      },
      {
        "Time_Start": 2659.1,
        "Time_End": 2665.1,
        "Text": " The important part here is you cannot just replay packets because of the authentication mechanism,"
      },
      {
        "Time_Start": 2666.1,
        "Time_End": 2673.1,
        "Text": " but if you just send corrupt enough packets, then it will just work, hopefully."
      },
      {
        "Time_Start": 2675.1,
        "Time_End": 2679.1,
        "Text": " Let's check this object."
      },
      {
        "Time_Start": 2680.1,
        "Time_End": 2682.1,
        "Text": " Sorry."
      },
      {
        "Time_Start": 2686.1,
        "Time_End": 2688.1,
        "Text": " Yeah, no such file in the system."
      },
      {
        "Time_Start": 2689.1,
        "Time_End": 2691.1,
        "Text": " I'm running the fuzzer."
      },
      {
        "Time_Start": 2692.1,
        "Time_End": 2693.1,
        "Text": " It's really quick."
      },
      {
        "Time_Start": 2694.1,
        "Time_End": 2699.1,
        "Text": " Yeah, it's not every day that you see a fuzzer finding a bug on stage, but this is live, actually."
      },
      {
        "Time_Start": 2700.1,
        "Time_End": 2707.1,
        "Text": " Yeah, refreshing the console, and as you can see, there is a new testcmd file object"
      },
      {
        "Time_Start": 2707.1,
        "Time_End": 2711.1,
        "Text": " and the owner is a Q user."
      },
      {
        "Time_Start": 2712.1,
        "Time_End": 2719.1,
        "Text": " As I mentioned, because the authentication information is wrong,"
      },
      {
        "Time_Start": 2720.1,
        "Time_End": 2730.1,
        "Text": " so the service will run this file object creation command, and this service has a Q user authority."
      },
      {
        "Time_Start": 2731.1,
        "Time_End": 2739.1,
        "Text": " Based on the PK file, I wrote an exploit that can run arbitrary CI commands."
      },
      {
        "Time_Start": 2740.1,
        "Time_End": 2744.1,
        "Text": " Next, I'm going to present the exploit which runs a BindShell."
      },
      {
        "Time_Start": 2745.1,
        "Time_End": 2746.1,
        "Text": " Yeah, BindShell."
      },
      {
        "Time_Start": 2747.1,
        "Time_End": 2751.1,
        "Text": " Is the font size visible? Sorry. On the back? Okay, thanks."
      },
      {
        "Time_Start": 2752.1,
        "Time_End": 2759.1,
        "Text": " Yeah, BindShell, because during Pentest projects, we use a VPN and cannot use ConnectBackShell."
      },
      {
        "Time_Start": 2760.1,
        "Time_End": 2763.1,
        "Text": " So, before that, sorry."
      },
      {
        "Time_Start": 2767.1,
        "Time_End": 2774.1,
        "Text": " I'm checking. There is no listening service on the port 4444."
      },
      {
        "Time_Start": 2775.1,
        "Time_End": 2777.1,
        "Text": " Yeah, good."
      },
      {
        "Time_Start": 2778.1,
        "Time_End": 2780.1,
        "Text": " And I'm running the exploit."
      },
      {
        "Time_Start": 2781.1,
        "Time_End": 2783.1,
        "Text": " Fingers crossed."
      },
      {
        "Time_Start": 2785.1,
        "Time_End": 2788.1,
        "Text": " And we have got a shell."
      },
      {
        "Time_Start": 2788.1,
        "Time_End": 2790.1,
        "Text": " We have got a shell."
      },
      {
        "Time_Start": 2802.1,
        "Time_End": 2804.1,
        "Text": " Yeah, so it's not looking good, is it?"
      },
      {
        "Time_Start": 2805.1,
        "Time_End": 2812.1,
        "Text": " So, you're probably wondering what defenders can do to prevent the compromise of their IBI systems."
      },
      {
        "Time_Start": 2812.1,
        "Time_End": 2816.1,
        "Text": " And honestly, we are attackers. This is the attack research track."
      },
      {
        "Time_Start": 2817.1,
        "Time_End": 2825.1,
        "Text": " So, we are not really going into details, but I tried to give you some ideas or ways to think about."
      },
      {
        "Time_Start": 2826.1,
        "Time_End": 2839.1,
        "Text": " First of all, the main issue seems to be is that IBIs seem to live on islands with little interaction from other parts from IT."
      },
      {
        "Time_Start": 2839.1,
        "Time_End": 2848.1,
        "Text": " And by little interaction, I don't mean that these systems are isolated, so they can be definitely reached after a client-side attack."
      },
      {
        "Time_Start": 2849.1,
        "Time_End": 2851.1,
        "Text": " And they can even be reached via the Internet."
      },
      {
        "Time_Start": 2852.1,
        "Time_End": 2856.1,
        "Text": " There are some IBMI exposed services out there. You can find them and show them."
      },
      {
        "Time_Start": 2857.1,
        "Time_End": 2867.1,
        "Text": " By little interaction, I mean that the IBMI administrators and the security team don't really talk to each other."
      },
      {
        "Time_Start": 2867.1,
        "Time_End": 2881.1,
        "Text": " So, for example, the IBMI might be connected into a log management system, but the blue team, the SOC, doesn't really know how to interpret the log messages at all."
      },
      {
        "Time_Start": 2882.1,
        "Time_End": 2883.1,
        "Text": " Because the system is just so different."
      },
      {
        "Time_Start": 2884.1,
        "Time_End": 2894.1,
        "Text": " And also, the other way around, many sysadmins still think that, for example, setting a user profile to limited is a security guarantee,"
      },
      {
        "Time_Start": 2895.1,
        "Time_End": 2908.1,
        "Text": " while even IBM documents that this limitation, which means that you basically cannot get a command-line shell, sort of, only applies to some services, but not all."
      },
      {
        "Time_Start": 2908.1,
        "Time_End": 2914.1,
        "Text": " And if those other services are reachable, then your defense doesn't worth anything."
      },
      {
        "Time_Start": 2915.1,
        "Time_End": 2925.1,
        "Text": " So, at more fortunate places, I would say, we see a good number of exit programs deployed."
      },
      {
        "Time_Start": 2926.1,
        "Time_End": 2934.1,
        "Text": " Exit programs are automatically executed programs that are hooked to different system events."
      },
      {
        "Time_Start": 2935.1,
        "Time_End": 2944.1,
        "Text": " Like, when you execute a SQL query, an exit program can analyze that query and interrupt the execution for security reasons."
      },
      {
        "Time_Start": 2945.1,
        "Time_End": 2954.1,
        "Text": " And these solutions, I can say, are working just fine, but they also suffer from the same problems like antiviruses and EDRs."
      },
      {
        "Time_Start": 2955.1,
        "Time_End": 2957.1,
        "Text": " Namely, where do you hook into the system?"
      },
      {
        "Time_Start": 2958.1,
        "Time_End": 2963.1,
        "Text": " How do you determine about the piece of data, whether it's malicious or not, etc."
      },
      {
        "Time_Start": 2964.1,
        "Time_End": 2968.1,
        "Text": " You can think of any antivirus bypass."
      },
      {
        "Time_Start": 2969.1,
        "Time_End": 2970.1,
        "Text": " How do they work?"
      },
      {
        "Time_Start": 2970.1,
        "Time_End": 2973.1,
        "Text": " And this is kind of a similar issue with the exit programs."
      },
      {
        "Time_Start": 2974.1,
        "Time_End": 2984.1,
        "Text": " But if you have them, especially if you implement some custom defenses that the attackers cannot prepare themselves for, they can be really useful."
      },
      {
        "Time_Start": 2985.1,
        "Time_End": 2992.1,
        "Text": " Also, speaking of custom defenses, we also propose a simple way to implement canaries on IBMI."
      },
      {
        "Time_Start": 2993.1,
        "Time_End": 3002.1,
        "Text": " And we would love to see such deceptive technologies being deployed on IBMI and catching actual bad guys."
      },
      {
        "Time_Start": 3003.1,
        "Time_End": 3008.1,
        "Text": " Because my working theory, personally, is that the attackers are already on these systems."
      },
      {
        "Time_Start": 3009.1,
        "Time_End": 3015.1,
        "Text": " We just don't have the telemetry to tell where they are or whether they are on this system or this system."
      },
      {
        "Time_Start": 3016.1,
        "Time_End": 3019.1,
        "Text": " So, you can read this in our blog."
      },
      {
        "Time_Start": 3019.1,
        "Time_End": 3028.1,
        "Text": " It basically works with placing triggers on file objects, which is like mixing the file system with SQL, which is really interesting."
      },
      {
        "Time_Start": 3029.1,
        "Time_End": 3032.1,
        "Text": " But a little bit out of scope for this presentation, please read our blog post."
      },
      {
        "Time_Start": 3033.1,
        "Time_End": 3036.1,
        "Text": " For robust mitigation, we believe in configuration hardening."
      },
      {
        "Time_Start": 3037.1,
        "Time_End": 3045.1,
        "Text": " If you listen carefully, you could probably spot opportunities like limiting the profile swapping API seems like a good idea, right?"
      },
      {
        "Time_Start": 3046.1,
        "Time_End": 3054.1,
        "Text": " And also reducing the attack surface by discovering which programs have adopted the authority and maybe reducing that number."
      },
      {
        "Time_Start": 3055.1,
        "Time_End": 3058.1,
        "Text": " So, there are not that many bugs that we just showed you."
      },
      {
        "Time_Start": 3059.1,
        "Time_End": 3072.1,
        "Text": " In our experience, such hardenings can make a huge difference, but they have to be really carefully tested because sometimes really crazy configurations are required for the normal operations of the system."
      },
      {
        "Time_Start": 3072.1,
        "Time_End": 3079.1,
        "Text": " Fortunately, there are usually test systems, so this is doable, but it's not trivial, unfortunately."
      },
      {
        "Time_Start": 3080.1,
        "Time_End": 3100.1,
        "Text": " So, the most important message that I want to convey here is we have to have stronger integrations, both for ideas and both for data to come across the regular IT and the IBMI world."
      },
      {
        "Time_Start": 3101.1,
        "Time_End": 3115.1,
        "Text": " So, we can exchange knowledge about this very special system and exchange knowledge that is known about the current threat landscape and how attackers work and how do we catch them."
      },
      {
        "Time_Start": 3116.1,
        "Time_End": 3130.1,
        "Text": " And these bridges, I think, are the only way to make sure that this actually really great platform can operate securely in the decades to come."
      },
      {
        "Time_Start": 3131.1,
        "Time_End": 3143.1,
        "Text": " So, this was the main part of the presentation. We will just show you one last demonstration, which kind of puts all the things that we talked about together."
      },
      {
        "Time_Start": 3144.1,
        "Time_End": 3159.1,
        "Text": " Yeah. I chained remote command execution and local privilege escalation, and this exploit will create a new user called hacker."
      },
      {
        "Time_Start": 3160.1,
        "Time_End": 3167.1,
        "Text": " So, quickly check. There is no hacker user in the system. Yes, it's good."
      },
      {
        "Time_Start": 3168.1,
        "Time_End": 3172.1,
        "Text": " And I'm running the exploit."
      },
      {
        "Time_Start": 3177.1,
        "Time_End": 3178.1,
        "Text": " Bless you."
      },
      {
        "Time_Start": 3181.1,
        "Time_End": 3187.1,
        "Text": " Yeah, and refreshing the console. There is the hacker user. Thank you for your attention."
      },
      {
        "Time_Start": 3198.1,
        "Time_End": 3204.1,
        "Text": " So, are there any questions? Is this my task to ask this?"
      },
      {
        "Time_Start": 3205.1,
        "Time_End": 3213.1,
        "Text": " Usually, I do that, but you can also ask for questions, of course. Yeah, we have time for some questions. Are there any in the room?"
      },
      {
        "Time_Start": 3214.1,
        "Time_End": 3215.1,
        "Text": " Yeah."
      },
      {
        "Time_Start": 3216.1,
        "Time_End": 3227.1,
        "Text": " Yeah, from my side, at first, thank you for the interesting talk, and my question is, how common are attacks against IBM IA systems?"
      },
      {
        "Time_Start": 3228.1,
        "Time_End": 3233.1,
        "Text": " Like, do you actually see that something like this is exploited in the wild?"
      },
      {
        "Time_Start": 3234.1,
        "Time_End": 3246.1,
        "Text": " That's the point. We don't know, really. We are not doing, like, DFIR work, so we don't really have that kind of insight."
      },
      {
        "Time_Start": 3247.1,
        "Time_End": 3264.1,
        "Text": " But, for example, I wouldn't recall the name of the person who does this kind of jobs, and he has some posts about people beware, because there are hackers on IBM IA, too."
      },
      {
        "Time_Start": 3264.1,
        "Time_End": 3276.1,
        "Text": " But, of course, because of MDA and la-la-la, we don't have anything specific, and especially we don't have anything like technical details about how the attacks actually work."
      },
      {
        "Time_Start": 3277.1,
        "Time_End": 3282.1,
        "Text": " Do they exploit these particular vulnerabilities or something completely different? What kind of data are they after?"
      },
      {
        "Time_Start": 3283.1,
        "Time_End": 3287.1,
        "Text": " So, we would really need more telemetry from this."
      },
      {
        "Time_Start": 3288.1,
        "Time_End": 3289.1,
        "Text": " Thank you."
      },
      {
        "Time_Start": 3290.1,
        "Time_End": 3293.1,
        "Text": " Any more questions? Over there."
      },
      {
        "Time_Start": 3294.1,
        "Time_End": 3295.1,
        "Text": " Thank you."
      },
      {
        "Time_Start": 3302.1,
        "Time_End": 3316.1,
        "Text": " At the beginning of this interesting talk, you were telling us that you're dealing with midframe, IBM midframe. Do you know if that's the same problem, the mainframe, with the big systems?"
      },
      {
        "Time_Start": 3316.1,
        "Time_End": 3332.1,
        "Text": " We don't have experience with System Z and the big guys, but I would say you can find much more hacking content about proper mainframes than for IBM IA."
      },
      {
        "Time_Start": 3332.1,
        "Time_End": 3344.1,
        "Text": " That's why we choose this niche. Like, how come that, okay, the PC world has all the hacking stuff going on. Even the mainframe world has the hacking stuff going on. Not that much, of course."
      },
      {
        "Time_Start": 3345.1,
        "Time_End": 3354.1,
        "Text": " But, somehow, there was very little information about this middle ground. I cannot say anything about the big iron."
      },
      {
        "Time_Start": 3355.1,
        "Time_End": 3358.1,
        "Text": " Yeah, and we don't have money to buy a machine."
      },
      {
        "Time_Start": 3363.1,
        "Time_End": 3378.1,
        "Text": " Thank you for the talk. It was awesome. Do you have any indications as to how many of those systems are still being used out there? I mean, they used to be pretty popular in the late 80s, early 90s, but how many of those are still being used?"
      },
      {
        "Time_Start": 3380.1,
        "Time_End": 3382.1,
        "Text": " Do you have numbers, maybe, Sully?"
      },
      {
        "Time_Start": 3383.1,
        "Time_End": 3388.1,
        "Text": " On Shodan, maybe 3,000 or 4,000. I don't know."
      },
      {
        "Time_Start": 3389.1,
        "Time_End": 3390.1,
        "Text": " And those are internet reachable, obviously."
      },
      {
        "Time_Start": 3390.1,
        "Time_End": 3401.1,
        "Text": " Yeah, but most of our clients are using this technology. That's why we try to learn the IBMI system and the exploitation."
      },
      {
        "Time_Start": 3402.1,
        "Time_End": 3403.1,
        "Text": " Yeah, I would say that..."
      },
      {
        "Time_Start": 3404.1,
        "Time_End": 3406.1,
        "Text": " Banks, telecommunication companies."
      },
      {
        "Time_Start": 3407.1,
        "Time_End": 3422.1,
        "Text": " Yeah, retail is huge. And just a wide estimate that if you see 3,000 exposed systems, then you can easily multiply it by 10, maybe."
      },
      {
        "Time_Start": 3423.1,
        "Time_End": 3435.1,
        "Text": " Yeah, and there is a homepage, maybe all400s.com, something like this. And this collects all the machines."
      },
      {
        "Time_Start": 3437.1,
        "Time_End": 3446.1,
        "Text": " Yeah, from public information, they are keeping a list. But the fact that they can keep a list kind of tells us that it's not the same like PCs."
      },
      {
        "Time_Start": 3449.1,
        "Time_End": 3450.1,
        "Text": " Yeah, it's really prevalent."
      },
      {
        "Time_Start": 3453.1,
        "Time_End": 3455.1,
        "Text": " All right, any more questions?"
      },
      {
        "Time_Start": 3459.1,
        "Time_End": 3462.1,
        "Text": " Then please thank the speakers with another round of applause."
      },
      {
        "Time_Start": 3463.1,
        "Time_End": 3464.1,
        "Text": " Thank you."
      },
      {
        "Time_Start": 3465.1,
        "Time_End": 3466.1,
        "Text": " And we have a coffee break."
      }
    ]
  }
}