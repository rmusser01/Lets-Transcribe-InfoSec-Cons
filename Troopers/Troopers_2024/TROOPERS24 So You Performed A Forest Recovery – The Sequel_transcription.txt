{
  "webpage_url": "https://www.youtube.com/watch?v=ZIYa_1Nbp78",
  "title": "TROOPERS24: So You Performed A Forest Recovery \u2013 The Sequel",
  "description": "Talk by Jorge de Almeida Pinto - June 26th, 2024 at TROOPERS24 IT security conference in Heidelberg, Germany hosted by @ERNW_ITSec\n\n#TROOPERS24 #ITsecurity \nhttps://troopers.de/troopers24/talks/jt97ha/\n\nMore impressions:\nhttps://twitter.com/WEareTROOPERS\nhttps://twitter.com/ERNW_ITSec\nhttps://infosec.exchange/@WEareTROOPERS\nhttps://infosec.exchange/@ERNW https://ernw.de",
  "channel_url": "https://www.youtube.com/channel/UCPY5aUREHmbDO4PtR6AYLfQ",
  "duration": 3839,
  "channel": "TROOPERS IT Security Conference",
  "uploader": "TROOPERS IT Security Conference",
  "upload_date": "20240902"
}

This text was transcribed using whisper model: large-v2

 Yeah, so as mentioned before, in 2022, I spoke the first time at Troopers, where I talked  about all the stuff pre-attack, post-attack, regarding a forced recovery.  Last year, I spent some more time about, let's call it the presentation mode of the whole  thing, how to reconnect your AD after doing a forced recovery back to Azure AD or Enter  ID.  And this year, I made a proposal to actually show it to you, how it could be done.  It's a concept, I'm still not finished, because there's a lot of research that I've done and  still have to do to make sure it's complete.  So that's why it's called the sequel.  Well, for those that don't know me, my name is Jorzy Almeida-Pinto.  I'm working for Semperis, based in the Netherlands, as an incident response consultant.  I've been working for quite a few years with identity security and recovery.  And these days, I'm working on the service regarding incident response within Semperis,  but also helping customers out when they are breached, attacked, ransomed.  And then we try to help those customers to get up and running as soon as possible.  So to make sure the whole thing is understood as best as possible, an introduction and recap,  the whole process and steps, a few details, and also the setup of my environment, and  obviously the real thing.  And well, I've got a backup of everything if anything goes wrong, but there's one thing  I was just joking about.  My kids at home, if they fool with my internet or whatever, then I'm going to kill one of  those at home.  But OK, this is not being recorded, right?  So recap.  What's the impact when you perform a forced recovery on your intra-ID and reconnecting?  So let's imagine an Active Directory being in sync with your intra-ID, and everything  is happy and in sync, no issues.  And suddenly, somebody drops the bomb on your AD.  You have to perform a forced recovery, meaning you go back in time.  And as you can see, the backup that was used does not contain the objects that were created  after the backup.  But it might also contain the objects that were deleted after the backup.  So you have to deal with that.  And especially the ones that do not exist in the backup, those are the ones that require  more attention.  The ones that exist again because they were deleted after backup, you could say, well,  you can worry about it later in cleaning those up.  The whole goal in fixing your AD is preventing deletions of objects in your intra-ID.  That's the main goal.  So when you look at this, the nonexistent objects, and obviously the row 5, the ones  that exist, what can you do?  You need to perform a gap analysis.  In a normal scenario, your Active Directory is authoritative compared to intra-ID because  intra-ID basically gets a copy of whatever you sync.  But now your intra-ID knows more.  So you could use intra-ID to look in your AD and see what is missing.  Is it a 100% solution?  No.  Because you have to think about it.  Your AD might contain data that is not being synced into intra-ID.  So you need some other system, IDM system, or something else, that completes that data.  This is just focusing on making sure that the data in intra, or at least the identities  and objects in intra that are being synced are not being deleted at all.  So you're using intra-ID to perform a gap analysis against your Active Directory, and  then you determine a few objects are missing.  And what do you need to do?  You basically recreate those objects.  It's as simple as that.  At least that's the easy part.  In addition, to make sure that those objects, again, glue back together, the on-prem representation  together with the intra-ID representation, you need the immutable ID, hard matching.  Where do you get the immutable ID from?  Intra-ID.  But think about it.  The immutable ID is only exposed by intra in a normal scenario through graph for users.  Not for contacts, not for groups, not from computers.  But they are there.  So you need to get those.  I will talk about it later how I get them.  So you populate the immutable IDs by recreating.  So you recreate the objects, you populate immutable ID, and then you perform the checks.  In this case, it's talking about Connect Sync.  And then as you see, if there are no pending deletions, you could enable sync and everything  is fine.  That's let's say how you would do it in Connect Sync.  Because in Cloud Sync, there's not that much control because it's more an on and off scenario.  Questions?  Who is using Connect Sync still?  Okay.  Cloud Sync?  Both?  Nothing?  Okay.  So, which backup?  And there's also important reason to keep in your mind which backup is important.  Think about your intra ID.  Bomb is dropped on your ID.  You have a backup of yesterday.  You have a backup of 10 days ago.  Which one do you choose?  To cut a very long story short, when you go back to production, the most important thing  to keep in mind is going back to production means recovering your environment, assuming  it has been burned to the ground, your ID, and making sure it is as secure as possible.  Not 100% secure, because that probably is impossible to do, because it's so much work.  But you have to secure it as best as possible.  Look at your critical stuff, most important stuff, to secure it.  Because if you just go back to production, you are as vulnerable as you were before,  because that's why you were attacked.  You need to fix it.  But again, which backup do you choose?  Do you choose the one from yesterday, or do you choose the one from 10 days ago?  And it's all about the delta of changes.  Which ones do you choose?  So you can say, when you look at these backups, the one from yesterday has a bad security state.  The one from 10 days ago has a great security state, but the change of deltas is bigger.  The delta of changes is bigger, it's the other way around.  Which one do you choose?  In this case, it's an easy choice.  Keep the gap of changes, the gap of differences, as small as possible.  Because fixing the security of your ID is easier than fixing the gaps.  Think about gaps in terms of machines that you need to rejoin.  It's a huge amount of work.  It's not just working on your ID, it's working on all kinds of systems so that they work  again with your ID.  Think about passwords mismatching.  Think about all kinds of things because of those deltas.  So the smaller the delta, the less the headaches you will have.  Fixing ID is literally just fixing stuff in your ID itself.  Think about accounts, group memberships, permissions, configurations, it's just against  your ID.  That is easier.  It might still be a lot of work, but it's easier.  And when you put Entra ID into the mix, into the story, again, the same applies.  The bigger the delta of changes, the more stuff you have to repair to make sure it might  not be deleted in Entra.  And I'm saying might not, because, again, it depends on the scenario.  When your synchronization engines are still running and you just enable them after recovery,  because of the absence of the objects, stuff gets deleted.  It's not because it was deleted, no, it's the absence that causes the deletions.  So the people that have, let's say, a MIM background or FIM or whatever it's called,  those people understand how that whole absence and deletions work in the process.  And connect sync is no different than cloud sync, although it's in the cloud, same story.  The detailed steps from start to end.  So these are literally all the steps, including some, let's call it bullshit steps that are  not necessarily needed, but it's just to explain what I'm doing.  I'm loading all kinds of functions that I'm going to authenticate against Entra ID.  Then I'm going to disable the synchronization, because I'm performing a forced recovery.  So I need to disable the synchronization to make sure that as soon as your ID is back  up and running again, it doesn't start to sync.  Disable cloud sync and connect sync.  In this demo, I have both.  I will explain about it more later on.  Then to simulate the forced recovery, to simulate the absence of objects, I'm going to delete  a few objects.  That's because I'm not going to perform forced recovery now, because that's too much work.  I'm going to delete objects, because that's the whole goal.  If you don't have, and let's say that if your connect sync configuration is also burned  to the ground, you also have to restore that.  Where do you get the information from?  From Entra ID, you can get quite a lot of information how your connect sync was set  up.  There's one thing that you will not get from anywhere unless you have an export or a backup.  The synchronization rules.  Those are stored nowhere unless you export them.  Those are really, really important.  If you have the default set up, you're fine.  But if you've been fiddling around, changing all kinds of customizations and doing all  kinds of funky stuff, you need to put that back in place.  Because if suddenly you are using the default, your data transformation is suddenly different,  and then you might end up with weird stuff in Entra or deletions or whatever.  Then I'm going to get all the synchronized objects.  Those are the only ones that I'm interested in.  Users, contacts, computers or devices and groups.  I'm going to create a database.  And tables, obviously.  I'm going to populate that data into that specific database.  Check the database content so that you guys can see what I'm doing.  Create a domain translation list.  The domain translation list is in this case, it's a single domain forest.  But if you have a multiple domain forest, you need to know the domain names.  You need to know the SIDs and those kind of things that are related to the domain.  Why?  Because Entra stores that information.  And that will help you determine to which domain in which domain objects should be created.  Think about the SID.  Some objects store the SID.  Some objects store the DNS name.  Others store nothing.  I will talk about it later.  And some of them store both of them.  But that information helps you to determine in which domain and also, therefore, to which  domain control you should talk to create those objects.  So I'm creating a list up front.  Because otherwise I'm continuously doing that work.  So that's why I'm doing that domain translation list.  I'm checking the objects against AD.  Which ones exist?  Which ones don't exist?  Again check the DB content.  I'm going to recreate the missing objects.  Based on that database.  Because the database is, let's say, a copy of what's in Azure AD.  And why also the database, I forgot to say, is I want to perform all the checks locally.  Not continuously against Azure AD.  Because in a very small environment, that will work.  I also tried this against an environment with 100,000 plus users.  And then it takes time.  So the bigger the environment, the more painful it will get.  Fix object relations.  So first I have to create all the objects.  Only then I can fix relationships.  Because you can only establish a relationship when both objects exist.  So you cannot say let's create users, then the relationships, no.  Users, contacts, computers, whatever.  And then you can apply the object relationships.  Enable Cloud Sync and Connect Sync.  Perform checks in Connect Sync to make sure nothing will be exported as a deletion.  That's the most important part.  Check the state in Cloud Sync to see what's going on.  And also fix as needed.  Going back to this one.  Before exporting to Azure, I can already see if something would go wrong.  And if you remember the slide from last year, as soon as you enable Cloud Sync, pray that  everything goes right.  It's exactly as it is.  Because you cannot do anything about it.  Restart Cloud Sync.  Restarting Cloud Sync means trigger a full sync.  You need to do a full sync.  Re-enable the scheduler for Connect Sync.  So that one also starts to work.  And then compare the state.  And it's done.  Things to be aware of.  Forced recovery means you go back in time.  AD is authoritative.  But now due to the restore, Entron knows more.  Identity needs to be fixed.  As I mentioned, deletion of objects.  So you want to prevent that part.  Remember, you have a recycle bin in Azure or Entron.  But it's only for users and applications and service principles.  But not for groups and the other stuff.  Hopefully, Microsoft will change that for all the objects.  The question is, when do you start the process that I'm just going to show you?  Especially in a very large environment, it is very important that you start as soon as possible.  If you have made the decision, I'm going to perform a forced recovery,  start with this process immediately in parallel.  So that you can get the data from Entron, populate the database,  get ready to actually start doing the work as soon as your AD is back up and running again.  Main goal, prevent deletion.  And as I mentioned before, it's not the goal to fully restore the object.  Why?  Although from a synchronized object perspective,  Entron knows more than AD itself.  It does not have all the data.  And it does not have all the objects that were in AD.  Because objects might not be synced to Entron.  Recreating objects.  As I mentioned, recreate, reestablish object relationships, need immutable ID.  You can get it for users, you can't get it for the other devices.  But if you use the DeerSync API, you get everything.  Because when you think about Azure AD Connect or Entron Connect,  it has and it knows about the immutable ID.  So I'm talking to the exact same API and it will tell you all the information that you need  to then fix whatever needs to be fixed in your Active Directory.  So the DeerSync API is used as a source to get almost all the attributes.  That's my main source.  And then I enrich it by using the graph API for reference attributes.  In the beginning, I tried to get all the data from the DeerSync API.  Because the data is there.  Connect Sync can deal with it, so I should also be able to deal with it.  But for whatever reason, I had a challenge and I was not able to understand how,  let's call it, the synchronization engine deals with reference attributes.  It has all kinds of operations and I was not able to get a complete list.  It looks as if it combines lists together.  At some point in time, I saw through the DeerSync API that the user had two managers.  Yes, I saw two managers, which when you look in AD technical, that's not possible.  But they were there.  I got two managers.  And I was like, how do I know which one was there?  Because I was fiddling around with changes to see what would happen.  It made me nuts.  So then I ended up, OK, let's just ask graph to get that data.  As I mentioned, if data is not synchronized,  get it from another system, like, for example, your identity management  system.  Be aware that a contact in Enter ID, it could be a contact or a user in your AD.  Sorry, Enter will not tell you what it was in your AD.  You have to know your data that was in AD, what was synced.  The same applies for user.  If you have a user in AD or an in-network person in AD,  it will be a user in Enter.  You don't know which one.  It will never tell you.  As I mentioned earlier, if you have a multiple domain forest,  for groups, users, and computers, it is, let's say,  able to determine from which domain they came.  Contacts, if those are important for you, it's not possible to determine.  My decision was basically create everything in the first route  and then deal with it later, if that's important for you.  Because the contacts do not have a SID, do not have a DN,  do not have DNS name, nothing.  Syncing groups, same story.  Azure has a groups type, but it will not tell you what it was in AD.  Was it domain local, universal, or global?  Well, the membership rules will help you.  If you try to apply members and it fails,  probably you're trying to add users that  go against the membership rule of that specific group.  Eddie?  Yes, but I'm assuming in this case, it's true,  because also getting the immutable IDs, getting all kind of data,  it's all there.  But I'm assuming everything is burned to the ground.  I cannot assume on something will be available,  because if your AD is down,  it could be that Connect is also down the drain.  So, I'm basically thinking about everything is burned.  But the whole deletion is more if it is up and running.  Sure, you could use Azure AD Connect if it's still up and running,  because it has all the data.  And if you do, make sure to perform a full import first,  so that you get fresh data, the latest data from your intra,  and then you could create a connector space  to get all the information.  That is true.  But then again, I had to take into account,  everything is burned to the ground,  and then every scenario in between.  So, that's why I chose this.  One of the things also to take into account is,  I'm doing it in my code, is fixing memberships.  And I'm only focusing on memberships.  So, whatever Azure knows about the memberships,  I'm injecting that into Active Directory.  But I'm also looking for,  hey, are there any memberships in Active Directory  that do not exist in intra?  So, if that's the case, I'm deleting those memberships.  In my case, that's possible,  because the group memberships and all the objects  are synchronized to intra.  But if you have a group that is being synced to intra,  and that group has memberships of objects  also being synced with intra,  but also object that are not being synced,  then you will be destroying those memberships.  So, be very careful if you remove memberships.  That's why I'm saying it's very tricky,  and you need to know your data.  UPN, another one.  If you use alternate logon ID, it might not be the same UPN.  So, all kinds of variations.  Directory extensions.  There's also something to think about.  You can determine the directory extension  based on the last part of the attribute name.  But then again, my challenge was,  how can I dynamically determine all kinds of stuff?  And with this, it was really tough,  because then I would need to maintain some kind of a list.  So, it's tough.  Know your data model, synchronization rules.  Fixing the data.  Enable data sync, but don't enable PHS.  If you would enable PHS,  imagine that users would have changed their password.  And if you suddenly enable PHS,  that new password that they know about  is suddenly overwritten with the data  that is in Active Directory.  So, I would say, do first self-service password reset,  wait right back, and then enable PHS.  Oh, yeah, by the way, before somebody makes that question,  this is an assumption of one forest, one tenant.  Because I've already had the question,  what about if you have one tenant with multiple forests?  No, no, no, don't go there.  It's even more complicated.  Because then, think about that domain translation list,  then you have to maintain where is the damn thing coming from.  And then if you look at memberships,  it becomes even worse.  So, my environment, single domain forest,  no exchange, tenant, basic free,  CloudSync, one OU with 25 contacts,  25 users, 25 groups and references.  Same for ConnectSync.  There is no overlap between synchronization engines.  One engine does the CloudSync OU,  the other one does the ConnectSync OU.  And the data is predictable so that I  know when I'm testing to see if something goes wrong.  But now I'm delivering the demo, and I know my data.  So, I understand everything.  But you guys see this for the first time.  And if you don't understand the data,  whatever is going through that screen is like, yeah, fine,  probably.  So, because the data is predictable  and I will explain that data, you  will also understand at least as best as possible  to see what's going on.  What I will be doing is for CloudSync and ConnectSync,  delete the first 12 objects, not just random,  now the first 12 objects of each object type of each sync  engine.  So, the last 13 remain in place.  The naming is also very specific so that you  recognize what's going on.  And also in the naming, it tells you  is the object coming from ConnectSync or CloudSync.  So, all kinds of recognizable stuff  so that you can see what's going on.  And I will help you with that.  PHS is used, not really important for now,  but just for completeness.  Immutable ID, it's using the default MSDS consistency  group, it can be anything.  And it's fully synced before I start this exercise.  And for ConnectSync, I have updated,  fixed all kinds of multiple sync rules  because the default ones have a few issues for which I think  you need to fix this before doing this.  And I presented this about last year.  If you have questions, feel free to contact me.  At first, I would like to thank Nestori.  He's sitting over there.  He's the guy that wrote AAD internals.  And I've been, let's say, looking for quite a long time  how to deal with this.  And I banged my head many times against the wall  until I found that AAD internals was using the DeerSync API.  And it gave me all the information that I wanted.  So thank you, Nestori, for that tool.  Thank you.  And so I'm using the DeerSync API as the main source,  as I mentioned.  But there's one issue.  It got so popular that it is considered as malware.  As soon as you download it, Windows Defender or probably  any browser these days, it will whine about being malware.  So what I've done is, from AAD internals,  I created a new script that I just gave it a name that  is not really important.  And I copied over specific functions that I needed.  And I also fixed a few things in that code,  added additional stuff, but also additional functions  to make sure that this whole exercise works.  And the code, obviously, it's really rough.  It would need to be predefined.  And I'm using the MS Graph to get the references.  Storing the data, also important.  As I mentioned, I don't want to be continuously talking  against Azure AD.  I want to do it one time, and that's it.  So I want to get it once.  And then you have all kinds of solutions,  file-based solutions, which are like, eh.  I want to be able to update, query, update, query, et cetera.  So I needed a database-like solution.  SQL would be too heavy.  I needed something light.  So I found two solutions, LightDB and SQLite.  And I'm using the first one, LightDB, in this session demo.  But that's something that I will use for now.  But obviously, you can use something else if you want to.  The code, before I release the code,  I will create a blog post explaining everything.  Also explaining how to create the test environment.  Everything will be in that blog post.  Probably will be multiple blog posts on my blog page.  And then the demo code, which is not there yet,  but you can scan for the URL, it will end up there.  And then you can try it yourself,  update it as you want, and do whatever you want with it.  Obviously, you can ask questions,  but don't expect support.  This is broken or whatever.  So let's see what happens.  No, not yet.  Yes.  No kids.  So the first thing that I'm going to do is authenticate.  And I need to authenticate to both AAD Graph and Microsoft  Graph.  And I'm using, by the way, a GA account in this case.  Oh, sorry.  I need to look into the camera.  There it is.  So disabling Cloud Sync and Connect Sync.  Oh, no, Cloud Sync first.  As you can see, it's active.  It has password, has sync.  It has password, has sync.  This is what it wants to do.  And there it goes.  It's now paused.  So the important thing is, if you're using Cloud Sync,  disable the configuration.  I can't see what you're saying.  Sorry.  You've got 30 minutes.  OK, sorry.  Don't say that.  Disable the Cloud Sync configuration  and disable the scheduler.  Do not disable sync in Entra ID.  Because as soon as you disable the sync in Entra ID,  you're basically converting your identities  from hybrid to native.  And then Entra starts deleting the data  that you need to perform this work.  Don't disable the sync.  I'm talking about the sync config for Cloud Sync,  sync scheduler for Connect Sync.  Trust me, it's easy to make a mistake.  Disabling the scheduler.  It's now true.  It's enabled.  It's false.  And there it is.  And now, I'm going to delete a few objects.  And as I mentioned, predictability.  Could have automated this.  But then again, what do I have nothing to do?  OK, this is the setup.  As you can see, one OU for Cloud Sync, one for Connect Sync,  and a missing OU.  The missing OU is the OU that I've  chosen to recreate all the objects in.  I don't recall from the top of my mind,  but I think it's for users only.  Entra stores a distinguished name.  Is it important to know in which OU it was created?  No.  The domain, it is.  The OU, don't care.  So I'm going to delete the first objects, the first 12.  And as you can see, they're all numbered.  There go the first 12.  The staff, the groups, the users.  Cloud Sync, same story.  So deleted the objects.  And again, this is the simulation  of the forest recovery.  It went back in time.  It's missing the objects, et cetera.  So if you're connect, thank you.  You're paying attention.  I just was looking if somebody's paying attention.  Thank you for that.  Let's check.  Yeah, there it is.  We were right.  So if your Azure AD Connect is burned to the ground,  where do you get the information from?  Hopefully, you have an export.  If you don't have an export, this  is a way to get at least part of the data.  You can talk to the Deer Sync API  and find all kinds of details, like the version of Azure AD  Connect Sync, even which attribute was being used,  the features that were enabled, all kinds of information  that help you to determine how was Connect Sync configured  at a very high level.  So that's OK.  But then again, why is it not?  Ah, there it is.  And all the features that are enabled on Connect Sync.  So you have a lot.  One thing is still missing.  The sync rules.  There's no way you can get those unless you have an export.  But if you have an export, you don't have to do this exercise.  So just import the export, and your configuration is done.  Now I'm getting all the synchronized objects.  So for Connect Sync, it's 75 objects.  For Cloud Sync, also 75 objects.  But it's getting more objects because it's  all the iterations of the data.  And as you can see, it also retrieved.  So here you can see that it got the objects,  how much time it took.  And then I'm going to use, for the users,  I'm only focusing on a few reference attributes.  By the way, it's not just 50, but it's 75 users  because I have a few additional.  And there are two in addition that I always  take into account that it's also getting.  The account in Entra ID for Cloud Sync  and the account for Connect Sync in Entra  also count as a synced object.  So those need to be filtered out.  So in the end, you now see 57.  But in the end, it will just be 55.  Then I'm getting the groups, all the memberships,  and as you can see, really fast.  I'm going to create a database, again, using Lightdb.  Now, from that data that I retrieved from Entra,  at this point in time, still in a variable,  I also, if something went wrong, also  stored that data in an XML file so  that I can read that XML file and then redo  as needed to populate the data.  But in this case, that's not needed.  I'm immediately populating the database.  So I'm creating a users table, and there it is.  Really fast.  So imagine if you have thousands and thousands of objects.  This will take time.  Just the preparation to get this done, it will take time.  Then this one is for computers, two of them.  And the groups, again, 50.  Populating the members.  Getting the members, that was a funny one, at least  an interesting one.  Obviously, after fiddling around with the DeerSync API,  I tried to use the graph.  Then I was using the expand option,  which is limited to 20 objects.  Sorry, 20 members.  And then also, when you get objects,  it's limited to, I think, 100, something like that.  And obviously, my small environment,  I had forgotten about this.  And then in my small environment, everything worked.  And then I moved to my environment  with 100,000 plus objects, and basically the whole thing  blew up.  And then I was like, oh, damn.  Oh, yeah, right.  I need to do differently.  And that's when I started to think  about how I'm going to deal with this.  I was using paging, basically paging.  And I was also using paging for the membership.  So the whole damn thing in the background  was paging and paging and paging to get all the data.  It works.  Took me some time, but it works.  These are the groups.  So let's have a look at the database.  So basically, all the attributes from Entra that are synced  are now in the database.  But I also added a few additional attributes  to tell me the state of the objects in AD,  but also at the end in Entra ID.  Because in AD, does it exist in AD or not?  And what is the latest SIT and GUID?  Because I need to compare with Entra.  And in the end, I need to be able,  did I do my work correctly?  Let's have a look at the users, for example.  There it is.  These are the attributes that provide me  the state of both AD and Entra ID.  So when you look at this column, it's  still empty because that's the active object ID  after the whole fixing.  That's going to tell me, does it still match with what  I retrieved from Entra?  Because after the synchronization,  it might be replaced if I made a mistake.  That's how I check if I did my work correctly or not.  Obviously, with Connect Sync, you already get a feeling.  But the more important one, what will happen with Cloud Sync?  Then if you move to the right, you  can see all kinds of data that I retrieved  from Entra that will help me do whatever I need to do.  Groups, same story.  And then at the end somewhere, the memberships.  There it is.  Membership stored as a JSON blob, proxy addresses,  everything.  Creating the domain translation table.  There it is.  Single domain forest, easy.  And I'm going to check which objects are missing.  Remember, if you have a single domain forest,  remember, I deleted the first 12 objects.  So when you look at the name of the object somewhere  around here, and you see the numbers, if it's gone, it's red.  If it's green, it's still there.  So every object with 12 or lower is the one that should be red.  And it waits a moment so that you can see what's going on.  And obviously, these scripts contain lots of output,  telling you all kinds of states, et cetera.  But if you choose to use this, you obviously  can change the output.  And as you can see, total of 58 objects.  24 were deleted, which is correct.  24 users were deleted.  12 for Cloud, 12 for ConnectSync.  And by the way, this, what I'm doing right now,  applies to both Cloud Syncfixing and also ConnectSyncfixing.  So there's no difference in the whole procedure.  It's just at the end when you enable synchronization.  Same story for, in this case, contacts.  Everything with 12 or lower is gone.  And 24 were deleted.  Computers, one is gone.  Groups, same story.  Sorry.  So whatever the data is in that database,  that's what I'm using to check against AD.  So people were more active of it as well.  Not just checking for the leads.  Yes.  Yes.  Yes, attribute changes, differences.  That makes it even more difficult.  Because then you have to do all kinds of checks.  Because for the existing objects,  you have to think about, oh, whatever is in Azure,  is it still the same attribute?  Sorry, attribute value.  Whatever.  All, everything.  So you can get as complicated as you want.  But the main thing is, how important is that?  I think it's more important to, oh, god.  True.  Could be a security issue, or loss of features, or whatever.  So true.  It's very true scenario.  And good luck.  So let's have a look at the database quickly.  And then only looking for the users.  It will now tell you which ones exist in AD,  what's the object type, object EN, the GUID, the SID, et  cetera.  So now I have the state of the object.  Shit.  I know something had to go wrong.  Um.  Is this one?  Yeah.  Oh.  OK.  Now I don't want to recreate the database.  OK.  Um.  All right.  I need the database fast.  So check the existence.  OK.  Let's see if this works.  Oh, wait, wait.  I almost forgot it.  OK.  This is what happens when you do a live demo.  Damn.  Sorry?  No, but it depends on values in variables.  Yeah, but it will take time.  So.  OK.  Let's get all the synced objects.  Connect details.  Yeah.  OK.  OK.  Um.  Um.  I'm going to go through it more quickly.  OK.  Um.  Um.  Um.  If you have any questions, by the way,  feel free to ask them while this is repeating.  Eddie.  Well, it's a very good comment that you're thinking.  Because when you think about it, what  I'm doing right now in PowerShell is basically reversing  the whole thing for Connect Sync.  And I was able to use Connect Sync to basically reverse  all the rules and basically pump all the data back.  It would be easy.  Sorry, MIM would also be an option.  Sure.  You have to set up MIM, the rules, everything, et cetera,  to basically.  Yeah.  Because.  No.  I do think with MIM, if you would use MIM,  the initial effort to get it running is higher.  But then in the end, you have more benefit.  Because everything is automated.  And you can check all the attributes, everything,  at every level.  Then it makes it easier.  Because if you try to do it in code,  at attribute level and all kinds of shitty details,  then I'm not saying it's impossible.  But it's a lot of coding.  Very good question.  Yes.  And I already got the question, a similar question,  where somebody asked, is this still needed?  Well, no.  Because AD suddenly is a following system, whatever  is in Entra.  But is your work then done or easier?  No.  You have another problem.  Because as any system following an authoritative system,  you're missing objects.  So whatever you sync that is missing to your AD, for example,  I got a new user account with a new password  with all kinds of new stuff.  So that needs to be communicated to the user.  What I'm trying to say is, you suddenly get another problem.  So what I'm doing is trying to prevent impact on a user  account.  But now you get another problem.  You don't have to deal with all the authoritative stuff  that I'm doing right now.  But you get something else in return.  So is it easier?  It depends.  Let's recreate.  Come on.  You can do it.  Also, you have the people include exchange, I guess,  for a reason.  Well, yes, that is true.  But then again, what is the state of exchange?  On-prem only?  Probably not.  Exchange only?  Sorry.  Online only?  Combination of both?  So that's why I was like, well, let's get the basis.  So that's why I was like, well, let's get the basis working.  And then I'll deal with the additional scenario.  So it is true.  It is true.  And obviously, do you have write-back or not  when you have online?  So is there a full-blown solution that will cover everything?  Hell no.  No, no.  You have the basis.  And then you have to, let's say, customize it.  And then you come back to the moment where you say,  this is basically ConnectSync.  You have a basis stuff.  And then you tweak and you customize all the stuff  to get it to work as you like that it should work.  This is nothing different.  So let's have a look at the recreation of the objects.  20 objects.  Sorry, 24.  24.  24 objects, as you can see, predictable data.  One computer account was created.  I'm going to skip the check the database,  moving right away to the memberships.  Hey, live dangerously.  So one of the things that I forgot to do  was in the other one, was like this.  The missing objects, as you can see,  were created in the same way.  Was like this.  The missing objects, as you can see, were created here.  And let's use this group just as an example  by adding members that are in the backup  but were not known in Entra.  Yes.  Thank you, Eddie.  So just adding a few accounts.  In this case, just one group is enough.  And if I'm not mistaken, the code will stop when it hits.  As you can see, 20 members continuously.  There's one with 26 or something.  And it should stop at one in red.  It didn't?  Oh, sorry.  No, no, no.  Apparently it hasn't replicated yet.  Too quick.  No, it's just too...  It's slow.  Come on, come on.  You can do it.  There it is.  Yes.  Seriously, I need a beer after this one.  I'll come continue.  So go ahead.  Go ahead.  You mean the backup?  Well, let's first talk about if they have a backup.  The most recent one.  The most recent one.  Let's see.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  Yes.  And the most recent one, which is, for example, a day old, which was created yesterday, something.  Well, I've had a company...  Oh, shit.  I need to continue.  We'll talk about it later.  So I'm reconfiguring the deletion threshold in Cloud Sync to one.  Because as soon as there's one deletion, it will block immediately.  And then I'm going to...  Restart it.  I'm going to perform checks in Cloud Sync...  Sorry, in Connect Sync.  Need to perform a full import.  In Entra.  Full import in AD, which can happen at the same time, by the way.  Only for the import.  Then I'm going to simulate a sync by just one object.  So that you can see what happens.  So you can see the missing one.  Preview.  And this is what I want to see.  This is the old representation of the object that has been disconnected from the metaverse object.  And this is the new one.  Which is connected to the metaverse object.  And this is the Entra one.  So let's have a look at the...  Sorry.  This one.  And everything is unchanged.  That's a good sign.  But now you might see a deletion.  Is this expected or not?  The answer is to this one.  It's an expected deletion.  Why?  I'm simulating one object only.  And because I'm not taking the manager with me during that simulation, it will end up as...  Oh, it's a deletion.  So it's okay.  Membership.  Same story.  If I check the membership of a group, it will see as all members are being removed.  Which is not the case.  So let's perform a full sync.  Okay.  No, that's not possible.  That's the easy part.  But I'm almost done.  So I'm going to give you a hint what's going to happen.  You won't like the answer.  So in this case, with connect sync, I'm going to check for pending exports.  Deletions.  There's probably one.  Which is the computer account.  There it is.  Why?  Because I just wanted to show you this.  There's a synchronization rule that I had to update.  After updating that synchronization rule, this will disappear.  And then it's not deleted anymore.  Which is...  I think this one.  Enable.  Then I'm going to perform a full sync again.  Because the data didn't change, but the rules did.  So I have to perform...  If I'm not mistaken, nothing.  Nothing.  Because I changed the rules.  How much time?  Oh, I can do this.  So I'm going to give you a spoiler.  You could see that everything in connect sync is not going to be deleted.  So it's fine.  It has been glued together.  And the new data in connect sync will just flow.  Think about new sits.  Think about new files.  Think about new images.  Think about new images.  Connect sync will just flow.  Think about new sits, new GUIs, new whatever.  That will sync to Azure AD.  Not so with cloud sync.  Although I fixed everything as I believe should be fixed.  The following will happen.  Cloud sync, as soon as I restart the sync,  it will delete all the objects.  The ones that have been recreated are seen as new.  But for whatever reason, it doesn't glue it to the other ones.  It just deletes those 12 groups contacts.  It just deletes them.  And this is what then happens.  You will see in the audit logs.  It tries to update the objects that are not there.  Which is weird.  And then suddenly you got your users back.  Why?  Because you have the recycle bin.  So your users are back.  But everything else has been recreated.  In connect sync, I have been able to fix this  with my eyes closed.  No issues.  With cloud sync, I have not been able to fix this a single time.  Which worries me.  So in a normal scenario, everything works fine.  In a scenario like this, that's troublesome.  I've also thought about the scenario.  If you remember correctly how I deleted the objects.  I just deleted them.  It was not a forced recovery.  So this is what I did.  I deleted the objects.  Went to the recycle bin of AD.  Recreated the objects with the immutable ID.  I hoped it would glue up with the objects in Entra.  It did not.  I did not remove the threshold.  I deleted the recreated objects.  And then I undeleted the original objects from the AD recycle bin.  I performed a full sync in cloud sync.  And it still deleted all the objects.  So something got messed up.  I don't know why.  So in connect sync, as I mentioned, I had to fix a few rules.  I was able to fix everything to prevent loss of data.  And I succeeded.  Unfortunately, I cannot show it anymore because of the time.  But in cloud sync, it was a mess.  So if you are using cloud sync, please test this in your environment.  Don't do this in production.  So it's recorded.  Don't do it in production.  I would have loved.  So to compare the database states.  To explain, I don't have the time.  So basically what I do is check if the GUID that I had in my database still exists in Entra.  If I can't find the object, that means it was recreated.  So what I'm going to do is use the active SID that I also have in my database.  And then try to find the object using the SID or the GUID.  And then if I find it, I get the GUID.  And then I can see was the object fixed?  Was it still as is?  Or has it been deleted or recreated?  And that tells me then in the database, but also in the output, did I do my work correctly?  And to summarize and to be very honest about it.  In Connect Sync, I've been able to do this perfectly.  No issues.  Cloud sync.  It was a mess.  I know.  I know.  But think about it.  There are a few scenarios that Microsoft built their systems,  not taking disaster recovery of AD and all kinds of other scenarios into account.  Is it an edge case?  I don't know.  These days it happens quite a lot because companies are ransomware.  And then you have to perform a recovery or they basically just screw up.  I've been called by a company where they told me, hey, we have an active directory.  It's running perfectly.  But all the domain controllers have a corrupt database.  We had to go back two months in time because their backups contained a corrupt database.  Oops.  That was painful.  So do you have any questions?  One question.  I got a beer on stage.  Picture, please.  Actually, not a question.  More like a comment.  So if you are using the Cloud Connect, you can configure it in staging mode.  And then you can run the sync and it doesn't synchronize anything in Cloud.  But it kind of simulates locally.  The Connect Sync, yes.  Yes.  That's true.  Another option is to still configure the deletion threshold for Connect Sync  because both have their own threshold.  And then you can see if something would delete it.  In my case, I didn't show you.  But in my case, it wasn't just about showing you the deletions but also updates.  Because updates can also be tricky.  And then is it possible to check everything?  If you have a huge environment, that's just freaking impossible.  So you have to pick objects, have a look at it, maybe automate it if it's possible  and to see what has changed.  And then determine can I go or not.  Because think about critical objects.  Think about critical people.  For example, your CEO.  That's one you don't want to impact.  Or critical whatever.  Licensing.  I don't know.  If you use group-based licensing in your intro ID,  you want to make sure that the memberships are not being deleted  because an update in the Connect Sync,  it could be an add or a removal of a membership.  So you have to click on it to see if members,  and not just members but object relationships,  are being added or removed.  So you have to look at it and then make the decisions on what's going on.  I automated this, but not everything is automatable.  Quite a lot is, but if you don't, it's a huge amount of work.  Thank you.  Unfortunately, we have to move on with the next talk.  So if you have more questions,  Josh is around today, tomorrow, so get in touch with him.  Thank you.