**Introduction**
- Talk by **Hannah NÃ¶ttgen** at **TROOPERS24 IT security conference**
- Research topic: **Apple CarPlay**
- **Reversing talk** with some security aspects

**What is CarPlay?**
- Allows integration of iPhone applications and functionalities into a car's system
- Enables wireless or cabled connections
- Offers native apps like **Siri**, phone calls, **iMessages**, and navigation
- Supports third-party apps and peripheral devices like sound systems and touch displays
- Upcoming CarPlay 2.0 will include integration with digital instrument clusters

**Why CarPlay as an Attack Target?**
- Remote execution and access to private information (e.g., iMessages, emails)
- Influence on driver safety through potential distractions
- Default setting allows CarPlay access without unlocking the iPhone

**Research Setup**
- Two different head units: Ford Sync 3 and Sony standalone
- Wired and wireless CarPlay setups using iPhone 8 jailbroken
- Wireless connection via CarLink Kit 4.0 adapter
- Notebook connected via **Frida** for packet capturing and dynamic reversing

**CarPlay System Deep Dive**
- Important processes: CarPlay, CarPlay Wallpaper, CarPlay Settings, Springboard, Backboard Daemon
- Accessory Daemon for iApp version 2.0 communication
- Media Server Daemon and CarKit Daemon for instrumenting CarPlay services
- Important workflows: starting CarPlay, forwarding data over iApp version 2.0, distributing information within the CarPlay system

**Important Protocols in CarPlay**
- **iApp version 2 protocol** for accessory communication and authentication
- **AirPlay protocol** for streaming audio and video content
- **iPod accessory protocol (iOp) version 2** for transmitting accessory data, authentication, and Wi-Fi connection establishment

**iOp Version 2 Packet Types**
- FF55 type for protocol setup, with a one-byte checksum
- FF58 type with additional bytes for acknowledgement and session data flag
- Session data includes accessory capsule and data headers, with its own checksum

**Authentication in iOp Version 2**
- Head unit sends a certificate and private key material for verification
- iPhone sends a nonce for signing and returns it
- Only the accessory authenticates, not the iPhone

**Wireless CarPlay Wi-Fi Handover**
- Bluetooth device and service discovery, pairing, and RF com channel establishment
- Version 2 data transmission and Wi-Fi credential exchange

**AirPlay in CarPlay**
- Devices must be on the same network
- Developer information and open-source implementations available
- MFI authentication requires additional hardware (MFI chip)
- Timeline: device discovery (IPv6/IPv4), Bonjour discovery, stream setup, and synchronization

**AirPlay Streams**
- HTTP request/response for AirPlay receiver ID exchange
- Control stream for setup, authentication, and encryption
- CarPlay control stream for further tasks like setting up other streams, HID (touch display), Bluetooth control, and feedback
- CarPlay event stream with similar communication to iAP version 2, including authentication and touch event data
- Video stream encoding and transmission

**Security Analysis**
- SYN flooding attack successful, but requires connection to the car hotspot
- Manipulating cache files had no effect
- Authentication is challenging due to multiple rounds and strong encryption
- Confidentiality attack requires physical access and session key extraction
- Overall, Apple has done a decent job with custom protocols and security measures

**Future Work**
- Defeating the MFI chip is a challenge for hardware experts
- Building a fuzzer for iApp version 2 and exploring touch event manipulation
- CarPlay 2.0 launch planned for the end of the year with Aston Martin

**Conclusion**
- Identified and reversed underlying protocols of CarPlay
- Analyzed Airplay usage and performed a security assessment
- Image sources credited