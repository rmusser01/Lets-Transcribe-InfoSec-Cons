{
  "metadata": {
    "webpage_url": "https://www.youtube.com/watch?v=FtQiaSDrJaw",
    "title": "TROOPERS24: The Registry Rundown",
    "description": "Talk by Cedric Van Bockhaven and Max Grim - June 27th, 2024 at TROOPERS24 IT security conference in Heidelberg, Germany hosted by @ERNW_ITSec\n\n#TROOPERS24 #ITsecurity \nhttps://troopers.de/troopers24/talks/jlaupj/\n\nMore impressions:\n  / wearetroopers  \n  / ernw_itsec  \nhttps://infosec.exchange/@WEareTROOPERS\nhttps://infosec.exchange/@ERNW https://ernw.de",
    "channel_url": "https://www.youtube.com/channel/UCPY5aUREHmbDO4PtR6AYLfQ",
    "duration": 1905,
    "channel": "TROOPERS IT Security Conference",
    "uploader": "TROOPERS IT Security Conference",
    "upload_date": "20240909"
  },
  "segments": {
    "metadata": {
      "webpage_url": "https://www.youtube.com/watch?v=FtQiaSDrJaw",
      "title": "TROOPERS24: The Registry Rundown",
      "description": "Talk by Cedric Van Bockhaven and Max Grim - June 27th, 2024 at TROOPERS24 IT security conference in Heidelberg, Germany hosted by @ERNW_ITSec\n\n#TROOPERS24 #ITsecurity \nhttps://troopers.de/troopers24/talks/jlaupj/\n\nMore impressions:\n  / wearetroopers  \n  / ernw_itsec  \nhttps://infosec.exchange/@WEareTROOPERS\nhttps://infosec.exchange/@ERNW https://ernw.de",
      "channel_url": "https://www.youtube.com/channel/UCPY5aUREHmbDO4PtR6AYLfQ",
      "duration": 1905,
      "channel": "TROOPERS IT Security Conference",
      "uploader": "TROOPERS IT Security Conference",
      "upload_date": "20240909"
    },
    "segments": [
      {
        "Time_Start": 0.0,
        "Time_End": 15.56,
        "Text": "This text was transcribed using whisper model: large-v2\n\n Hi everyone, today indeed we'll be talking about the Windows Registry, hopefully also"
      },
      {
        "Time_Start": 15.56,
        "Time_End": 17.82,
        "Text": " teach you something new."
      },
      {
        "Time_Start": 17.82,
        "Time_End": 23.12,
        "Text": " My name is Cedric, I'm here with my colleague Max, and we are two red teamers and offensive"
      },
      {
        "Time_Start": 23.12,
        "Time_End": 25.52,
        "Text": " researchers at Outflank."
      },
      {
        "Time_Start": 25.52,
        "Time_End": 33.08,
        "Text": " We're a niche company that performs red team consultancy gigs and next to that we develop"
      },
      {
        "Time_Start": 33.08,
        "Time_End": 40.32,
        "Text": " offensive security tooling, Outflank security tooling that we then also have other red teams"
      },
      {
        "Time_Start": 40.32,
        "Time_End": 43.28,
        "Text": " reuse around the world."
      },
      {
        "Time_Start": 43.28,
        "Time_End": 46.480000000000004,
        "Text": " Personally I have a network security background, my colleague Max has more of a software engineering"
      },
      {
        "Time_Start": 46.480000000000004,
        "Time_End": 53.56,
        "Text": " background and in our spare time we like to also hack other things like hardware or develop"
      },
      {
        "Time_Start": 53.56,
        "Time_End": 57.400000000000006,
        "Text": " more hardware hacking challenges for students."
      },
      {
        "Time_Start": 57.400000000000006,
        "Time_End": 61.24,
        "Text": " Today's agenda is a bit about the history and anatomy of the Windows Registry, probably"
      },
      {
        "Time_Start": 61.24,
        "Time_End": 66.34,
        "Text": " known for a lot of you already, then we'll move on to how can we interface with the registry"
      },
      {
        "Time_Start": 66.34,
        "Time_End": 73.48,
        "Text": " remotely using a remote registry protocol, we'll look into ways we can abuse this and"
      },
      {
        "Time_Start": 73.48,
        "Time_End": 77.34,
        "Text": " then we'll summarise to conclude."
      },
      {
        "Time_Start": 77.34,
        "Time_End": 82.12,
        "Text": " So starting with the history and anatomy, the Windows Registry was first introduced"
      },
      {
        "Time_Start": 82.12,
        "Time_End": 89.2,
        "Text": " with Windows 3.1 back in 1992, I think that's when Max was born basically."
      },
      {
        "Time_Start": 89.2,
        "Time_End": 96.24000000000001,
        "Text": " So for com-based components only, so registered CLS IDs and then in Windows 95 it was extended"
      },
      {
        "Time_Start": 96.24000000000001,
        "Time_End": 100.84,
        "Text": " also for including all sorts of application settings, computer settings that were traditionally"
      },
      {
        "Time_Start": 100.84,
        "Time_End": 104.16,
        "Text": " stored in any files."
      },
      {
        "Time_Start": 104.16,
        "Time_End": 111.24000000000001,
        "Text": " So hierarchical database and it looks a bit like this, we have a number of root keys that"
      },
      {
        "Time_Start": 111.32000000000001,
        "Time_End": 116.28000000000002,
        "Text": " we can access and the ones we see here in dark are the ones that you will also see in"
      },
      {
        "Time_Start": 116.28000000000002,
        "Time_End": 120.52000000000001,
        "Text": " the Windows Registry editor in Windows and we have a few ones that are greyed out on"
      },
      {
        "Time_Start": 120.52000000000001,
        "Time_End": 126.12,
        "Text": " this slide that are actually not visible to end users, also because they're just aliases"
      },
      {
        "Time_Start": 126.12,
        "Time_End": 131.64000000000001,
        "Text": " or well they're not that relevant for this talk."
      },
      {
        "Time_Start": 131.64000000000001,
        "Time_End": 136.20000000000002,
        "Text": " Starting with hklm, hklocal machine contains computer specific data, so computer settings,"
      },
      {
        "Time_Start": 136.20000000000002,
        "Time_End": 140.24,
        "Text": " local policies, group policies you will find here."
      },
      {
        "Time_Start": 140.24,
        "Time_End": 141.96,
        "Text": " Basically settings that apply to the entire computer."
      },
      {
        "Time_Start": 141.96,
        "Time_End": 147.64000000000001,
        "Text": " This is in contrast to hkeyusers, this is another hive containing all the user specific"
      },
      {
        "Time_Start": 147.64000000000001,
        "Time_End": 153.76000000000002,
        "Text": " settings and this one is a bit more interesting for us today, so in hkeyusers we'll find the"
      },
      {
        "Time_Start": 153.76000000000002,
        "Time_End": 160.52,
        "Text": " hives related to individual users that connect or interface with the system, so we have S1521"
      },
      {
        "Time_Start": 160.52,
        "Time_End": 166.56,
        "Text": " SIDs, these are hives related to for example domain users and also the local users that"
      },
      {
        "Time_Start": 166.56,
        "Time_End": 173.24,
        "Text": " log on to the system and we have some other SIDs here, S1518 for local system, 19 for"
      },
      {
        "Time_Start": 173.24,
        "Time_End": 179.36,
        "Text": " local service and 24 network service, so also these system services they also have settings"
      },
      {
        "Time_Start": 179.36,
        "Time_End": 181.12,
        "Text": " stored in the registry."
      },
      {
        "Time_Start": 181.12,
        "Time_End": 186.0,
        "Text": " Now there's a few ones here that have the block sign next to them, so not necessarily"
      },
      {
        "Time_Start": 186.0,
        "Time_End": 191.76,
        "Text": " everything we can access using the permissions that we work with."
      },
      {
        "Time_Start": 191.76,
        "Time_End": 196.95999999999998,
        "Text": " There's an interesting one here on the slide which is S1518, it's actually a symbolic link"
      },
      {
        "Time_Start": 196.95999999999998,
        "Time_End": 204.67999999999998,
        "Text": " to the default hive, the default hive is for usage for the local system account for storing"
      },
      {
        "Time_Start": 204.67999999999998,
        "Time_End": 212.76,
        "Text": " its settings, so for example used by win logon and logon UI, so basically programs that display"
      },
      {
        "Time_Start": 212.76,
        "Time_End": 216.85999999999999,
        "Text": " the interface for logging into the system."
      },
      {
        "Time_Start": 216.86,
        "Time_End": 221.5,
        "Text": " Some people think that this default hive is used as sort of a template that other new"
      },
      {
        "Time_Start": 221.5,
        "Time_End": 227.22000000000003,
        "Text": " users are based on, it's actually not the case, so if you want to use a template for"
      },
      {
        "Time_Start": 227.22000000000003,
        "Time_End": 231.42000000000002,
        "Text": " creating new users and have settings applied to that user, you can actually make use of"
      },
      {
        "Time_Start": 231.42000000000002,
        "Time_End": 239.9,
        "Text": " the default user, so C user, default user and the user.dot file and work with that instead."
      },
      {
        "Time_Start": 239.9,
        "Time_End": 246.62,
        "Text": " So HKLM and HKEY users, they are real hives, they are disk backed, in contrast to some"
      },
      {
        "Time_Start": 246.62,
        "Time_End": 252.5,
        "Text": " other hives, so HKEY classes root and HKEY current user specifically, they're a bit different"
      },
      {
        "Time_Start": 252.5,
        "Time_End": 259.22,
        "Text": " than that, so HKEY current user here gives you the view of the registry as a current"
      },
      {
        "Time_Start": 259.22,
        "Time_End": 263.18,
        "Text": " user that you're working with, the token of current user that you can access the registry"
      },
      {
        "Time_Start": 263.18,
        "Time_End": 267.54,
        "Text": " with and display that information."
      },
      {
        "Time_Start": 267.54,
        "Time_End": 270.82,
        "Text": " Settings related to the user are stored here but also COM object registrations you will"
      },
      {
        "Time_Start": 270.82,
        "Time_End": 279.46000000000004,
        "Text": " also find here in the registry, then we have HKEY classes root, which is a combination"
      },
      {
        "Time_Start": 279.46000000000004,
        "Time_End": 285.06,
        "Text": " of two views, HKLM software class and HKCU software classes and then provides you a consolidated"
      },
      {
        "Time_Start": 285.06,
        "Time_End": 292.02000000000004,
        "Text": " view containing those two overlaid on one another."
      },
      {
        "Time_Start": 292.02000000000004,
        "Time_End": 295.58000000000004,
        "Text": " What's important here to remember is that HKCU takes precedence over HKLM, so if you"
      },
      {
        "Time_Start": 295.58,
        "Time_End": 302.94,
        "Text": " specify specific settings or COM object registrations for your user and you launch an application"
      },
      {
        "Time_Start": 302.94,
        "Time_End": 307.9,
        "Text": " under your own user context, then the settings from HKCU will be respected, which will become"
      },
      {
        "Time_Start": 307.9,
        "Time_End": 311.21999999999997,
        "Text": " important later on."
      },
      {
        "Time_Start": 311.21999999999997,
        "Time_End": 316.14,
        "Text": " Specifically what we'll find here in HKEY class roots are also the COM object registrations"
      },
      {
        "Time_Start": 316.14,
        "Time_End": 325.14,
        "Text": " as well as file extension mappings, so what is COM very briefly, component object model"
      },
      {
        "Time_Start": 325.14,
        "Time_End": 330.18,
        "Text": " and it provides you a way of doing inter-process communication, so this framework that allows"
      },
      {
        "Time_Start": 330.18,
        "Time_End": 335.46,
        "Text": " software components to interact with one another, not only locally but also across the network"
      },
      {
        "Time_Start": 335.46,
        "Time_End": 342.78,
        "Text": " if we're talking about DCOM, which we heard about in the potato attacks, so there's a"
      },
      {
        "Time_Start": 342.78,
        "Time_End": 347.78,
        "Text": " small example over here in the slides where we are using a piece of VBA to instantiate"
      },
      {
        "Time_Start": 347.78000000000003,
        "Time_End": 354.3,
        "Text": " an object of the internet portal application class and then navigate towards a website"
      },
      {
        "Time_Start": 354.3,
        "Time_End": 359.74,
        "Text": " and how that object is instantiated, that's information you will find in the registry"
      },
      {
        "Time_Start": 359.74,
        "Time_End": 368.96000000000004,
        "Text": " then which DLL is responsible for providing the interface that you work with."
      },
      {
        "Time_Start": 368.96000000000004,
        "Time_End": 374.62,
        "Text": " When you install Java, for example, you will find a huge dump of CLS IDs in the registry"
      },
      {
        "Time_Start": 374.62,
        "Time_End": 382.02,
        "Text": " containing or prefixed with CAFE, so if you look into your own registry it's actually"
      },
      {
        "Time_Start": 382.02,
        "Time_End": 390.62,
        "Text": " quite a huge list of CLS IDs that are in there."
      },
      {
        "Time_Start": 390.62,
        "Time_End": 395.7,
        "Text": " So now that we know how the registry works roughly, we're going to look at how we are"
      },
      {
        "Time_Start": 395.7,
        "Time_End": 400.8,
        "Text": " going to access it remotely and there's at least two ways that we know of on how to connect"
      },
      {
        "Time_Start": 400.8,
        "Time_End": 402.58,
        "Text": " to it remotely."
      },
      {
        "Time_Start": 402.58,
        "Time_End": 406.76,
        "Text": " The first one is via MSRRP, the remote registry protocol."
      },
      {
        "Time_Start": 406.76,
        "Time_End": 413.24,
        "Text": " This is handled by the remote registry service and by default this is configured as autostart"
      },
      {
        "Time_Start": 413.24,
        "Time_End": 418.8,
        "Text": " on servers and unfortunately on clients it's disabled, but on servers you can trigger it"
      },
      {
        "Time_Start": 418.8,
        "Time_End": 423.8,
        "Text": " by accessing a name pipe and it will shut down after an activity."
      },
      {
        "Time_Start": 423.8,
        "Time_End": 429.84000000000003,
        "Text": " So if we start this, we access the IPC dollar share and in there we retrieve the WINREG"
      },
      {
        "Time_Start": 429.84000000000003,
        "Time_End": 436.88,
        "Text": " file and that will remotely trigger the service to start and you don't need local admin privilege"
      },
      {
        "Time_Start": 436.88,
        "Time_End": 441.68,
        "Text": " to do that, any user can actually start this service remotely and then we can start interacting"
      },
      {
        "Time_Start": 441.68,
        "Time_End": 443.04,
        "Text": " with it."
      },
      {
        "Time_Start": 443.04,
        "Time_End": 450.48,
        "Text": " This is used amongst others in the RectalPy from impact but it's also built into the registry"
      },
      {
        "Time_Start": 450.48,
        "Time_End": 453.2,
        "Text": " editor of Windows itself."
      },
      {
        "Time_Start": 453.2,
        "Time_End": 457.24,
        "Text": " It's very well documented, so you can see here that there's like different functions"
      },
      {
        "Time_Start": 457.24,
        "Time_End": 462.59999999999997,
        "Text": " to open a key, enumerate it, delete it, save it to disk, whatever you want to do."
      },
      {
        "Time_Start": 462.59999999999997,
        "Time_End": 470.08,
        "Text": " And then there's one alternative via WMI, WMI uses DCOM and DCOM in turn works over"
      },
      {
        "Time_Start": 470.08,
        "Time_End": 477.15999999999997,
        "Text": " RPC via high random number TCP port and the advantage of this is that it's both available"
      },
      {
        "Time_Start": 477.15999999999997,
        "Time_End": 481.84,
        "Text": " on clients and on servers, but the downside is that you require local admin on the remote"
      },
      {
        "Time_Start": 481.84000000000003,
        "Time_End": 486.72,
        "Text": " machine and in this research we were more interested in what you can do as a domain"
      },
      {
        "Time_Start": 486.72,
        "Time_End": 493.56000000000006,
        "Text": " user remotely, so we're going to primarily focus on the remote registry protocol."
      },
      {
        "Time_Start": 493.56000000000006,
        "Time_End": 501.68,
        "Text": " We still extended impact with WMI RectalPy that uses WMI instead of the SMB RPC and as"
      },
      {
        "Time_Start": 501.68,
        "Time_End": 505.24,
        "Text": " you can see here as a regular user you are not allowed to do it, but if you are an admin"
      },
      {
        "Time_Start": 505.24,
        "Time_End": 511.00000000000006,
        "Text": " user you can do similar things as with the remote registry protocol."
      },
      {
        "Time_Start": 511.16,
        "Time_End": 516.8,
        "Text": " So now that we know how to remotely interact with the registry, how can we as attackers"
      },
      {
        "Time_Start": 516.8,
        "Time_End": 519.04,
        "Text": " abuse this?"
      },
      {
        "Time_Start": 519.04,
        "Time_End": 524.02,
        "Text": " There's already some stuff out there, so for example with secretsdump.py you can remotely"
      },
      {
        "Time_Start": 524.02,
        "Time_End": 528.72,
        "Text": " dump credentials from the SOM and security hive, but obviously for this you need local"
      },
      {
        "Time_Start": 528.72,
        "Time_End": 532.88,
        "Text": " admin on the machine and there's various other things that you can do, you can configure"
      },
      {
        "Time_Start": 532.88,
        "Time_End": 537.0,
        "Text": " persistency via the run key, you can do COM hijacks, there's many more things that you"
      },
      {
        "Time_Start": 537.0,
        "Time_End": 542.24,
        "Text": " can do as an admin in the registry."
      },
      {
        "Time_Start": 542.24,
        "Time_End": 545.96,
        "Text": " But what can we do as a domain user?"
      },
      {
        "Time_Start": 545.96,
        "Time_End": 551.38,
        "Text": " So reading HKLM is not allowed as a domain user, you need to be admin on the remote system"
      },
      {
        "Time_Start": 551.38,
        "Time_End": 552.48,
        "Text": " to do so."
      },
      {
        "Time_Start": 552.48,
        "Time_End": 556.94,
        "Text": " If you are admin you can read AV exclusions, you can read group policies, you can enumerate"
      },
      {
        "Time_Start": 556.94,
        "Time_End": 561.68,
        "Text": " for EDR software, et cetera, et cetera, but it turns out as a domain user you can still"
      },
      {
        "Time_Start": 561.68,
        "Time_End": 564.32,
        "Text": " see quite some things."
      },
      {
        "Time_Start": 564.32,
        "Time_End": 573.1600000000001,
        "Text": " So as a regular domain joint user you can read HKU and HKCR and if you access the HKU"
      },
      {
        "Time_Start": 573.1600000000001,
        "Time_End": 577.72,
        "Text": " you have access to both the dot defaults that Cedric earlier mentioned and if the domain"
      },
      {
        "Time_Start": 577.72,
        "Time_End": 582.88,
        "Text": " user remotely is logged in in some way you can also enumerate everything that's under"
      },
      {
        "Time_Start": 582.88,
        "Time_End": 586.08,
        "Text": " the domain user SID."
      },
      {
        "Time_Start": 586.08,
        "Time_End": 594.9200000000001,
        "Text": " For HKCU it's similar, so you normally no, sorry, HKCU is the current user, HKU is all"
      },
      {
        "Time_Start": 594.9200000000001,
        "Time_End": 601.2,
        "Text": " the users, so if you would query HKCU, if the user is not logged in remotely you will"
      },
      {
        "Time_Start": 601.2,
        "Time_End": 606.36,
        "Text": " get a sublisting of dot default and if the user is logged in you will get the user SID"
      },
      {
        "Time_Start": 606.36,
        "Time_End": 608.96,
        "Text": " enumeration instead."
      },
      {
        "Time_Start": 608.96,
        "Time_End": 614.9200000000001,
        "Text": " And this dot default already reveals quite some information about the remote system."
      },
      {
        "Time_Start": 614.92,
        "Time_End": 616.8399999999999,
        "Text": " So what can we see in there?"
      },
      {
        "Time_Start": 616.8399999999999,
        "Time_End": 622.8399999999999,
        "Text": " We modified the reg.py a little bit, because normally if you query HKU it will default"
      },
      {
        "Time_Start": 622.8399999999999,
        "Time_End": 628.16,
        "Text": " to HKCU and then you won't see everything, but in this case if you enumerate it you will"
      },
      {
        "Time_Start": 628.16,
        "Time_End": 633.4799999999999,
        "Text": " see all the SIDs of users that are at that moment interactively logged into the machine"
      },
      {
        "Time_Start": 633.4799999999999,
        "Time_End": 637.12,
        "Text": " and this is also how, for example, PS logged on works and how Bloodhound collects some"
      },
      {
        "Time_Start": 637.12,
        "Time_End": 642.0,
        "Text": " of its data so that you can see who is actually logged into the computer at that point."
      },
      {
        "Time_Start": 642.0,
        "Time_End": 645.4,
        "Text": " So if the user is logged in, the SID will be in the entries, if it's not logged in,"
      },
      {
        "Time_Start": 645.4,
        "Time_End": 651.12,
        "Text": " the Hive will not be loaded and it will not be accessible."
      },
      {
        "Time_Start": 651.12,
        "Time_End": 652.28,
        "Text": " But it turns out there's more."
      },
      {
        "Time_Start": 652.28,
        "Time_End": 658.5,
        "Text": " We found another key in the dot default subkey and this contains an overview of all the SIDs"
      },
      {
        "Time_Start": 658.5,
        "Time_End": 664.36,
        "Text": " of users that have ever logged in interactively on the machine and the UTC timestamp of the"
      },
      {
        "Time_Start": 664.36,
        "Time_End": 668.56,
        "Text": " first time that they logged in, so if you want to see how a system is being used in"
      },
      {
        "Time_Start": 668.5600000000001,
        "Time_End": 672.84,
        "Text": " the past and not at that specific moment, you can here see whoever has logged in to"
      },
      {
        "Time_Start": 672.84,
        "Time_End": 676.6,
        "Text": " the machine, which is quite nice for attackers to know."
      },
      {
        "Time_Start": 676.6,
        "Time_End": 682.72,
        "Text": " Now I did mention that for HKLM you need to be local admin to read the keys, but there"
      },
      {
        "Time_Start": 682.72,
        "Time_End": 685.08,
        "Text": " are exceptions of course."
      },
      {
        "Time_Start": 685.08,
        "Time_End": 690.8800000000001,
        "Text": " There's two specific keys configured, allowed exact paths and allowed paths and they give"
      },
      {
        "Time_Start": 690.8800000000001,
        "Time_End": 695.2,
        "Text": " a list of things that you are still allowed as a regular domain user to read."
      },
      {
        "Time_Start": 696.0400000000001,
        "Time_End": 701.24,
        "Text": " With exact paths you are allowed to only read that specific key and no subkeys and with"
      },
      {
        "Time_Start": 701.24,
        "Time_End": 705.2800000000001,
        "Text": " allowed paths you are also allowed to view all the subkeys that are under there and all"
      },
      {
        "Time_Start": 705.2800000000001,
        "Time_End": 706.2800000000001,
        "Text": " the data."
      },
      {
        "Time_Start": 706.2800000000001,
        "Time_End": 710.6400000000001,
        "Text": " I highlighted a few examples here which I'm going to dive deeper into, but first I want"
      },
      {
        "Time_Start": 710.6400000000001,
        "Time_End": 715.84,
        "Text": " to mention that before when we were doing this research, we actually found out that"
      },
      {
        "Time_Start": 715.84,
        "Time_End": 720.6400000000001,
        "Text": " even though something was marked as an exact path, you were still allowed to read the subkeys"
      },
      {
        "Time_Start": 720.6400000000001,
        "Time_End": 723.08,
        "Text": " as well, which was a vulnerability."
      },
      {
        "Time_Start": 723.08,
        "Time_End": 727.44,
        "Text": " But unfortunately somebody else was earlier than us and probably less lazier in reporting"
      },
      {
        "Time_Start": 727.44,
        "Time_End": 733.76,
        "Text": " it to Microsoft and they reported it and got the CVE assigned."
      },
      {
        "Time_Start": 733.76,
        "Time_End": 737.94,
        "Text": " So what you can, for example, see remotely is like the exact build and the server version"
      },
      {
        "Time_Start": 737.94,
        "Time_End": 739.32,
        "Text": " that is running."
      },
      {
        "Time_Start": 739.32,
        "Time_End": 742.8000000000001,
        "Text": " If it's not a volume license ID, you can also view the digital product ID, I don't know"
      },
      {
        "Time_Start": 742.8000000000001,
        "Time_End": 748.2,
        "Text": " why, but you can see the activation key of remote systems."
      },
      {
        "Time_Start": 748.2,
        "Time_End": 751.48,
        "Text": " You can also see which event log providers are installed."
      },
      {
        "Time_Start": 751.48,
        "Time_End": 755.2,
        "Text": " So you can, for example, see if CrowdStrike is installed on the machine, which is also"
      },
      {
        "Time_Start": 755.2,
        "Time_End": 758.14,
        "Text": " again nice for an attacker to know."
      },
      {
        "Time_Start": 758.14,
        "Time_End": 762.48,
        "Text": " You can enumerate printer drivers, this is what we used for print nightmare, because"
      },
      {
        "Time_Start": 762.48,
        "Time_End": 767.08,
        "Text": " the original exploit actually used the printer protocol enumerated drivers, but we wanted"
      },
      {
        "Time_Start": 767.08,
        "Time_End": 770.96,
        "Text": " to be a bit more stealthy and it turns out you can read it from the registry remotely"
      },
      {
        "Time_Start": 770.96,
        "Time_End": 775.36,
        "Text": " as a domain user, so we used that instead."
      },
      {
        "Time_Start": 775.36,
        "Time_End": 779.32,
        "Text": " And you can read HQCR, so you can get com objects, you can see what kind of software"
      },
      {
        "Time_Start": 779.32,
        "Time_End": 784.9200000000001,
        "Text": " is installed, what is regularly opened with the open with list on devices, et cetera,"
      },
      {
        "Time_Start": 784.9200000000001,
        "Time_End": 785.9200000000001,
        "Text": " et cetera."
      },
      {
        "Time_Start": 785.9200000000001,
        "Time_End": 789.5600000000001,
        "Text": " So this is just a nice bit of overview of recon that you can do as a regular domain"
      },
      {
        "Time_Start": 789.5600000000001,
        "Time_End": 792.12,
        "Text": " user."
      },
      {
        "Time_Start": 792.12,
        "Time_End": 796.6600000000001,
        "Text": " But now comes the interesting stuff, because we actually found some RPC information leaks"
      },
      {
        "Time_Start": 796.6600000000001,
        "Time_End": 801.7600000000001,
        "Text": " and they leak limited information about the remote system, which is unintended."
      },
      {
        "Time_Start": 801.7600000000001,
        "Time_End": 803.44,
        "Text": " And we have two of them."
      },
      {
        "Time_Start": 803.44,
        "Time_End": 809.44,
        "Text": " So the first one, again, as a regular domain user, you cannot read HKLM keys remotely,"
      },
      {
        "Time_Start": 809.44,
        "Time_End": 810.6800000000001,
        "Text": " that's not allowed."
      },
      {
        "Time_Start": 810.6800000000001,
        "Time_End": 816.9200000000001,
        "Text": " But we discovered that with the remote registry RPC calls, you can actually still deduct if"
      },
      {
        "Time_Start": 816.9200000000001,
        "Time_End": 819.44,
        "Text": " the remote key exists or not."
      },
      {
        "Time_Start": 819.44,
        "Time_End": 824.1400000000001,
        "Text": " So what we do in step one, we try to open the key and we give it a sum desired of key"
      },
      {
        "Time_Start": 824.1400000000001,
        "Time_End": 829.84,
        "Text": " set value, so we want to write to it, we want to delete it, and this should always for a"
      },
      {
        "Time_Start": 829.84,
        "Time_End": 833.48,
        "Text": " domain user result in our access denied."
      },
      {
        "Time_Start": 833.48,
        "Time_End": 836.6800000000001,
        "Text": " And we do this as a safety measure, because the next step is we're actually going to try"
      },
      {
        "Time_Start": 836.6800000000001,
        "Time_End": 838.5600000000001,
        "Text": " to delete the key."
      },
      {
        "Time_Start": 838.5600000000001,
        "Time_End": 841.0400000000001,
        "Text": " And generally you don't want to delete keys on a production system."
      },
      {
        "Time_Start": 841.0400000000001,
        "Time_End": 843.2,
        "Text": " So that's why we do this."
      },
      {
        "Time_Start": 843.2,
        "Time_End": 847.7800000000001,
        "Text": " And then the response code to this delete call actually leaks some information."
      },
      {
        "Time_Start": 847.7800000000001,
        "Time_End": 851.0,
        "Text": " So here's it visually, we first open the key."
      },
      {
        "Time_Start": 851.0,
        "Time_End": 853.2800000000001,
        "Text": " We're going to check if we get access denied."
      },
      {
        "Time_Start": 853.2800000000001,
        "Time_End": 857.6800000000001,
        "Text": " And if we get if we don't get an access denied, we abort, we say, okay, you shouldn't run"
      },
      {
        "Time_Start": 857.6800000000001,
        "Time_End": 860.1,
        "Text": " it under a different user."
      },
      {
        "Time_Start": 860.1,
        "Time_End": 861.5200000000001,
        "Text": " Then we try to delete the key."
      },
      {
        "Time_Start": 861.5200000000001,
        "Time_End": 866.32,
        "Text": " And on the basis of this response, we can actually get two responses."
      },
      {
        "Time_Start": 866.32,
        "Time_End": 872.1600000000001,
        "Text": " One is error file not found, which means that the key does not exist on the remote system."
      },
      {
        "Time_Start": 872.1600000000001,
        "Time_End": 875.9000000000001,
        "Text": " But if we get an access denied, then we know that the key exists."
      },
      {
        "Time_Start": 875.9000000000001,
        "Time_End": 881.2800000000001,
        "Text": " So if you put this in a script, which we did, you can feed it with a list of known subkeys"
      },
      {
        "Time_Start": 881.2800000000001,
        "Time_End": 886.7600000000001,
        "Text": " of what you want to see if it exists on the remote system and then get a sense of what's"
      },
      {
        "Time_Start": 886.84,
        "Time_End": 887.84,
        "Text": " installed there."
      },
      {
        "Time_Start": 887.84,
        "Time_End": 889.52,
        "Text": " So you can see what kind of services are installed."
      },
      {
        "Time_Start": 889.52,
        "Time_End": 893.4,
        "Text": " You can see what kind of programs are configured in some way."
      },
      {
        "Time_Start": 893.4,
        "Time_End": 894.4,
        "Text": " And there's probably more."
      },
      {
        "Time_Start": 894.4,
        "Time_End": 900.16,
        "Text": " But this is just a nice example of what you can see."
      },
      {
        "Time_Start": 900.16,
        "Time_End": 902.88,
        "Text": " And the second one is about remote file existence."
      },
      {
        "Time_Start": 902.88,
        "Time_End": 909.16,
        "Text": " So as a domain user, you cannot generally check like for random files if they exist"
      },
      {
        "Time_Start": 909.16,
        "Time_End": 910.16,
        "Text": " or not."
      },
      {
        "Time_Start": 910.16,
        "Time_End": 913.72,
        "Text": " But with these RPC calls, you can remotely as a domain user."
      },
      {
        "Time_Start": 913.72,
        "Time_End": 918.4,
        "Text": " So what we do is we open the root HKU key, which we should be allowed because we're a"
      },
      {
        "Time_Start": 918.4,
        "Time_End": 921.5600000000001,
        "Text": " domain user and that's how remote registry works."
      },
      {
        "Time_Start": 921.5600000000001,
        "Time_End": 925.2,
        "Text": " And then we try to save that key to a specific place on disk."
      },
      {
        "Time_Start": 925.2,
        "Time_End": 930.64,
        "Text": " And here, again, the response code leaks information on if the file exists or not."
      },
      {
        "Time_Start": 930.64,
        "Time_End": 932.64,
        "Text": " So we first open the key."
      },
      {
        "Time_Start": 932.64,
        "Time_End": 935.36,
        "Text": " Then we try to save it to a specific place."
      },
      {
        "Time_Start": 935.36,
        "Time_End": 937.6600000000001,
        "Text": " And then we check the return status."
      },
      {
        "Time_Start": 937.6600000000001,
        "Time_End": 941.72,
        "Text": " And if it gets an invalid name or a path not found, we know that the directory does not"
      },
      {
        "Time_Start": 941.72,
        "Time_End": 944.12,
        "Text": " exist and there's still distinction in there."
      },
      {
        "Time_Start": 944.12,
        "Time_End": 948.64,
        "Text": " If it says path not found, it means that somewhere along the path already a directory does not"
      },
      {
        "Time_Start": 948.64,
        "Time_End": 949.64,
        "Text": " exist."
      },
      {
        "Time_Start": 949.64,
        "Time_End": 953.1800000000001,
        "Text": " So it's recursive, right?"
      },
      {
        "Time_Start": 953.1800000000001,
        "Time_End": 958.76,
        "Text": " And then if you get an invalid name, you know that the directory itself does not exist."
      },
      {
        "Time_Start": 958.76,
        "Time_End": 963.6,
        "Text": " And again, if you get an already exist, then you know that the directory exists."
      },
      {
        "Time_Start": 963.6,
        "Time_End": 965.84,
        "Text": " And this you can also put into a script."
      },
      {
        "Time_Start": 965.84,
        "Time_End": 969.84,
        "Text": " So here would be a numerate for known installation paths for EDRs."
      },
      {
        "Time_Start": 969.84,
        "Time_End": 972.88,
        "Text": " That can be really anything on disk that you want to check."
      },
      {
        "Time_Start": 972.88,
        "Time_End": 976.6,
        "Text": " And then it tells you if this exists or not."
      },
      {
        "Time_Start": 976.6,
        "Time_End": 979.24,
        "Text": " We reported both of these to Microsoft."
      },
      {
        "Time_Start": 979.24,
        "Time_End": 981.44,
        "Text": " That's still in process."
      },
      {
        "Time_Start": 981.44,
        "Time_End": 983.48,
        "Text": " But unintended information leaks."
      },
      {
        "Time_Start": 983.48,
        "Time_End": 989.32,
        "Text": " With in process, he means the ticket got closed after we provided the book and slides and"
      },
      {
        "Time_Start": 989.32,
        "Time_End": 990.32,
        "Text": " yeah."
      },
      {
        "Time_Start": 990.32,
        "Time_End": 995.08,
        "Text": " We had a whole zip with these slides in it and videos and example codes and we got a"
      },
      {
        "Time_Start": 995.08,
        "Time_End": 998.36,
        "Text": " reply in an hour that said you need to provide more information."
      },
      {
        "Time_Start": 998.36,
        "Time_End": 999.36,
        "Text": " Okay."
      },
      {
        "Time_Start": 999.36,
        "Time_End": 1002.12,
        "Text": " On to the next thing."
      },
      {
        "Time_Start": 1002.12,
        "Time_End": 1005.88,
        "Text": " And ADCS, I think it's already been mentioned in the past two days quite a bit."
      },
      {
        "Time_Start": 1005.88,
        "Time_End": 1007.6800000000001,
        "Text": " So I'm going to be very quick on what it is."
      },
      {
        "Time_Start": 1007.6800000000001,
        "Time_End": 1014.36,
        "Text": " It's the PKI implementation and based on certificate templates, you can request certificates."
      },
      {
        "Time_Start": 1014.36,
        "Time_End": 1018.7,
        "Text": " And often these are misconfigured, which we abuse as hackers."
      },
      {
        "Time_Start": 1018.7,
        "Time_End": 1023.26,
        "Text": " And it turns out that these certificate templates are also cached in the registry."
      },
      {
        "Time_Start": 1023.26,
        "Time_End": 1028.62,
        "Text": " So this is by default in the default domain policy of a domain controller."
      },
      {
        "Time_Start": 1028.62,
        "Time_End": 1037.02,
        "Text": " It says that here it says with the configuration model, it says not configured, which is default."
      },
      {
        "Time_Start": 1037.02,
        "Time_End": 1039.22,
        "Text": " And this is used for auto-enrollment."
      },
      {
        "Time_Start": 1039.22,
        "Time_End": 1043.3,
        "Text": " So within ADCS you also have an auto-enrollment feature, so that the computer will enroll"
      },
      {
        "Time_Start": 1043.3,
        "Time_End": 1045.34,
        "Text": " the certificates for you."
      },
      {
        "Time_Start": 1045.34,
        "Time_End": 1050.34,
        "Text": " And by default, all the certificate templates that are configured will be cached on every"
      },
      {
        "Time_Start": 1050.6999999999998,
        "Time_End": 1056.4599999999998,
        "Text": " domain-joined machine and they're also remotely readable by domain-joined users."
      },
      {
        "Time_Start": 1056.4599999999998,
        "Time_End": 1060.82,
        "Text": " And you would think with such a feature that it would only cache the certificate templates"
      },
      {
        "Time_Start": 1060.82,
        "Time_End": 1065.8,
        "Text": " that are configured for auto-enrollment, but no, no, no, they are all in there."
      },
      {
        "Time_Start": 1065.8,
        "Time_End": 1071.9399999999998,
        "Text": " And that means that if you write a nice little Python tool, you can either from a local machine"
      },
      {
        "Time_Start": 1071.9399999999998,
        "Time_End": 1077.6999999999998,
        "Text": " export the registry or query it remotely, feed it into this tool, which we're going"
      },
      {
        "Time_Start": 1077.7,
        "Time_End": 1080.14,
        "Text": " to release in the coming weeks."
      },
      {
        "Time_Start": 1080.14,
        "Time_End": 1085.68,
        "Text": " And then you can offline already see if there's escalation paths in your ADCS without triggering"
      },
      {
        "Time_Start": 1085.68,
        "Time_End": 1089.04,
        "Text": " any known detections."
      },
      {
        "Time_Start": 1089.04,
        "Time_End": 1090.1000000000001,
        "Text": " At this moment."
      },
      {
        "Time_Start": 1090.1000000000001,
        "Time_End": 1092.14,
        "Text": " At this moment."
      },
      {
        "Time_Start": 1092.14,
        "Time_End": 1095.64,
        "Text": " All right."
      },
      {
        "Time_Start": 1095.64,
        "Time_End": 1097.46,
        "Text": " This was for the reconnaissance part."
      },
      {
        "Time_Start": 1097.46,
        "Time_End": 1101.06,
        "Text": " We have a few other tricks up our sleeve."
      },
      {
        "Time_Start": 1101.06,
        "Time_End": 1105.3,
        "Text": " While testing some of these APIs that we could call with the remote registry protocol, we"
      },
      {
        "Time_Start": 1105.3,
        "Time_End": 1112.54,
        "Text": " also noticed that some of these calls had some other unintended side effects."
      },
      {
        "Time_Start": 1112.54,
        "Time_End": 1118.44,
        "Text": " For example, with the base reg safe key call, while you normally specify a path on the local"
      },
      {
        "Time_Start": 1118.44,
        "Time_End": 1122.98,
        "Text": " system to save a key, you could also specify a network path."
      },
      {
        "Time_Start": 1122.98,
        "Time_End": 1127.58,
        "Text": " So point it simply to an SMB share and then it does need some magic flavoring because"
      },
      {
        "Time_Start": 1127.58,
        "Time_End": 1130.1399999999999,
        "Text": " otherwise you don't receive the hash."
      },
      {
        "Time_Start": 1130.1399999999999,
        "Time_End": 1134.1,
        "Text": " And then it tells you error, you don't have the privileges needed, and in the meantime"
      },
      {
        "Time_Start": 1134.1000000000001,
        "Time_End": 1136.5800000000002,
        "Text": " you receive a hash."
      },
      {
        "Time_Start": 1136.5800000000002,
        "Time_End": 1138.3400000000001,
        "Text": " Magic."
      },
      {
        "Time_Start": 1138.3400000000001,
        "Time_End": 1140.0600000000002,
        "Text": " Funny little side effect of this."
      },
      {
        "Time_Start": 1140.0600000000002,
        "Time_End": 1143.22,
        "Text": " While you do this, even though you do not have permissions as a local administrator,"
      },
      {
        "Time_Start": 1143.22,
        "Time_End": 1148.0600000000002,
        "Text": " for example, you do this against a domain controller and you specify a local path on"
      },
      {
        "Time_Start": 1148.0600000000002,
        "Time_End": 1149.0600000000002,
        "Text": " the system."
      },
      {
        "Time_Start": 1149.0600000000002,
        "Time_End": 1154.6200000000001,
        "Text": " So it needs to be, for example, C Windows temp, where all users should be able to write"
      },
      {
        "Time_Start": 1154.6200000000001,
        "Time_End": 1156.22,
        "Text": " if they're logged in locally."
      },
      {
        "Time_Start": 1156.22,
        "Time_End": 1161.3400000000001,
        "Text": " If you specify that sort of path, you can create these empty files, but they will be"
      },
      {
        "Time_Start": 1161.3400000000001,
        "Time_End": 1163.7800000000002,
        "Text": " empty."
      },
      {
        "Time_Start": 1163.78,
        "Time_End": 1166.66,
        "Text": " But you can make it look like your domain controller is being crypto awkward, which"
      },
      {
        "Time_Start": 1166.66,
        "Time_End": 1173.26,
        "Text": " is sort of a mayhem thing, it's not really useful, but we thought it was funny."
      },
      {
        "Time_Start": 1173.26,
        "Time_End": 1178.72,
        "Text": " Then let's move on to some lateral movement ideas, and so this is based on just regular"
      },
      {
        "Time_Start": 1178.72,
        "Time_End": 1184.18,
        "Text": " registry persistence through com hijacks, there are other ways to do this as well."
      },
      {
        "Time_Start": 1184.18,
        "Time_End": 1189.26,
        "Text": " But the same mechanisms can be leveraged for lateral movement as well."
      },
      {
        "Time_Start": 1189.26,
        "Time_End": 1193.42,
        "Text": " So if you want to execute code via remote registry protocol, the simplest way to go"
      },
      {
        "Time_Start": 1193.42,
        "Time_End": 1200.82,
        "Text": " about that would be to modify the hklmhive remotely, or hqhive remotely, and then modify"
      },
      {
        "Time_Start": 1200.82,
        "Time_End": 1205.82,
        "Text": " a com object, and when that com object is loaded, you get code execution."
      },
      {
        "Time_Start": 1205.82,
        "Time_End": 1212.1,
        "Text": " And there's also ways to do this without having to drop a DLL on the disk if you want to."
      },
      {
        "Time_Start": 1212.1,
        "Time_End": 1218.3799999999999,
        "Text": " So there's one issue with that sometimes, is that when you want to modify these CLS"
      },
      {
        "Time_Start": 1218.38,
        "Time_End": 1223.7,
        "Text": " keys under hklm, you'll find that a lot of them are owned by the trusted installer user,"
      },
      {
        "Time_Start": 1223.7,
        "Time_End": 1229.42,
        "Text": " which means that we cannot modify them remotely, as if we log in with a local admin."
      },
      {
        "Time_Start": 1229.42,
        "Time_End": 1235.38,
        "Text": " Instead we found that there's this magical key called software Microsoft app model lookaside"
      },
      {
        "Time_Start": 1235.38,
        "Time_End": 1241.5,
        "Text": " machine, and if this key exists, the registry will also attempt to lookaside into a different"
      },
      {
        "Time_Start": 1241.5,
        "Time_End": 1247.5,
        "Text": " registry key, whether or not you have created a similar looking key."
      },
      {
        "Time_Start": 1247.5,
        "Time_End": 1252.62,
        "Text": " So you get a second chance, and this second key does not have trusted installer permission"
      },
      {
        "Time_Start": 1252.62,
        "Time_End": 1257.3,
        "Text": " set, which means that with our local admin permissions, we can now actually do that com"
      },
      {
        "Time_Start": 1257.3,
        "Time_End": 1261.14,
        "Text": " hijack that we wanted to do in the first place."
      },
      {
        "Time_Start": 1261.14,
        "Time_End": 1265.42,
        "Text": " We still don't know what this functionality is really used for, but if anybody knows,"
      },
      {
        "Time_Start": 1265.42,
        "Time_End": 1268.02,
        "Text": " let us know."
      },
      {
        "Time_Start": 1268.02,
        "Time_End": 1271.38,
        "Text": " Still we have one more problem, we need to trigger somehow our com object to be loaded"
      },
      {
        "Time_Start": 1271.38,
        "Time_End": 1273.54,
        "Text": " or wait to be loaded."
      },
      {
        "Time_Start": 1273.6599999999999,
        "Time_End": 1278.74,
        "Text": " It happens quite quickly usually, com objects are loaded all the time, the difficulty is"
      },
      {
        "Time_Start": 1278.74,
        "Time_End": 1285.94,
        "Text": " mostly in finding a com object that doesn't crash the entire system and lock you out."
      },
      {
        "Time_Start": 1285.94,
        "Time_End": 1291.78,
        "Text": " There's a few services actually on the system that are not that often used, so what we did"
      },
      {
        "Time_Start": 1291.78,
        "Time_End": 1297.3799999999999,
        "Text": " is find some services that weren't in use and modify a com object related to those and"
      },
      {
        "Time_Start": 1297.3799999999999,
        "Time_End": 1300.98,
        "Text": " then trigger that service to start."
      },
      {
        "Time_Start": 1300.98,
        "Time_End": 1305.28,
        "Text": " It happens to be that around 50 servers also can actually be triggered using an RPC call"
      },
      {
        "Time_Start": 1305.28,
        "Time_End": 1308.42,
        "Text": " to be started automatically, even if it's a domain controller for example, it doesn't"
      },
      {
        "Time_Start": 1308.42,
        "Time_End": 1312.6200000000001,
        "Text": " really matter, as a regular domain user, you just send an RPC ping and that service will"
      },
      {
        "Time_Start": 1312.6200000000001,
        "Time_End": 1314.6200000000001,
        "Text": " magically start."
      },
      {
        "Time_Start": 1314.6200000000001,
        "Time_End": 1319.9,
        "Text": " With system rights or equivalent, might be running a network service, but then you use"
      },
      {
        "Time_Start": 1319.9,
        "Time_End": 1324.3,
        "Text": " a potato exploit and you get also system rights."
      },
      {
        "Time_Start": 1324.3,
        "Time_End": 1329.42,
        "Text": " These services also shut down afterwards, they will load that com object without any"
      },
      {
        "Time_Start": 1329.42,
        "Time_End": 1334.74,
        "Text": " form of authentication whatsoever, besides, yeah, sending that ping out."
      },
      {
        "Time_Start": 1334.74,
        "Time_End": 1341.66,
        "Text": " A quick demo of this, we use the Dev Query Broker service, it's stopped currently, then"
      },
      {
        "Time_Start": 1341.66,
        "Time_End": 1348.22,
        "Text": " we had a small script for sending the RPC ping, you see there's no credentials in here,"
      },
      {
        "Time_Start": 1348.22,
        "Time_End": 1354.38,
        "Text": " it sends this ping to the interface, it says triggered and then a few moments later we"
      },
      {
        "Time_Start": 1354.38,
        "Time_End": 1357.38,
        "Text": " see that the Dev Query Broker service is actually running."
      },
      {
        "Time_Start": 1357.38,
        "Time_End": 1360.74,
        "Text": " And the weird thing to me still is that you can do this with also services that run on"
      },
      {
        "Time_Start": 1360.74,
        "Time_End": 1365.7800000000002,
        "Text": " domain controller, no issue whatsoever, no authentication."
      },
      {
        "Time_Start": 1365.7800000000002,
        "Time_End": 1372.64,
        "Text": " Okay, so this was about modifying HKLM with admin rights, so there are also a few things"
      },
      {
        "Time_Start": 1372.64,
        "Time_End": 1377.98,
        "Text": " we can do as a regular domain user, so no admin rights."
      },
      {
        "Time_Start": 1377.98,
        "Time_End": 1382.48,
        "Text": " As Max explained, we can modify the HKCU of the user, which means that we can also modify"
      },
      {
        "Time_Start": 1382.48,
        "Time_End": 1385.14,
        "Text": " com objects under that user."
      },
      {
        "Time_Start": 1385.14,
        "Time_End": 1392.5800000000002,
        "Text": " So remember for the classes root, root key, HKCU has precedence over HKLM, so if we modify"
      },
      {
        "Time_Start": 1392.5800000000002,
        "Time_End": 1401.26,
        "Text": " a com object under HKCU, we can then get a com hijack working under that user."
      },
      {
        "Time_Start": 1401.26,
        "Time_End": 1408.3400000000001,
        "Text": " So the difficulty is still in which com objects to target, so we have a little demo here which"
      },
      {
        "Time_Start": 1408.3400000000001,
        "Time_End": 1412.7800000000002,
        "Text": " modifies a CLS ID as well."
      },
      {
        "Time_Start": 1412.78,
        "Time_End": 1426.54,
        "Text": " In this case, I forget what we actually modified, but now we get a nice little calculator popped."
      },
      {
        "Time_Start": 1426.54,
        "Time_End": 1427.54,
        "Text": " What else can we do?"
      },
      {
        "Time_Start": 1427.54,
        "Time_End": 1434.94,
        "Text": " If we want to find something that doesn't, so difficulty with modifying these com objects"
      },
      {
        "Time_Start": 1434.94,
        "Time_End": 1440.36,
        "Text": " is sometimes we have to wait for a com object to be triggered and get code execution."
      },
      {
        "Time_Start": 1440.3600000000001,
        "Time_End": 1444.68,
        "Text": " If we want to find a way to actually trigger it ourselves, there are a few other ways to"
      },
      {
        "Time_Start": 1444.68,
        "Time_End": 1445.68,
        "Text": " go about it."
      },
      {
        "Time_Start": 1445.68,
        "Time_End": 1450.72,
        "Text": " We can find handles to registry keys that are open with notify access, which basically"
      },
      {
        "Time_Start": 1450.72,
        "Time_End": 1455.5800000000002,
        "Text": " means that there's applications monitoring for these keys to be modified, or anything"
      },
      {
        "Time_Start": 1455.5800000000002,
        "Time_End": 1457.5000000000002,
        "Text": " else happens with them."
      },
      {
        "Time_Start": 1457.5000000000002,
        "Time_End": 1461.48,
        "Text": " So this is a screenshot of system informer in which we see a number of processes with"
      },
      {
        "Time_Start": 1461.48,
        "Time_End": 1468.22,
        "Text": " open handles, and there's a key on the screen here that they're waiting for and looking"
      },
      {
        "Time_Start": 1468.22,
        "Time_End": 1471.1200000000001,
        "Text": " for any modifications to it."
      },
      {
        "Time_Start": 1471.1200000000001,
        "Time_End": 1476.8600000000001,
        "Text": " So if we take that key and we just modify some things around there, it wasn't rocket"
      },
      {
        "Time_Start": 1476.8600000000001,
        "Time_End": 1483.78,
        "Text": " science, we just modified some values, and oops, suddenly process crashes, great."
      },
      {
        "Time_Start": 1483.78,
        "Time_End": 1490.5,
        "Text": " We crash explore.exe, which triggers in this case the error reporting service and magically"
      },
      {
        "Time_Start": 1490.5,
        "Time_End": 1494.98,
        "Text": " the error reporting service loads com objects that we can hijack as well."
      },
      {
        "Time_Start": 1494.98,
        "Time_End": 1499.66,
        "Text": " So that's useful."
      },
      {
        "Time_Start": 1499.66,
        "Time_End": 1503.9,
        "Text": " Then we also found some other interesting side effects when looking into some client"
      },
      {
        "Time_Start": 1503.9,
        "Time_End": 1506.92,
        "Text": " environments that were using Citrix."
      },
      {
        "Time_Start": 1506.92,
        "Time_End": 1511.7,
        "Text": " Maybe some of you have seen this screenshot before where Citrix says you do not have access"
      },
      {
        "Time_Start": 1511.7,
        "Time_End": 1515.92,
        "Text": " to this system directly because you're not part of the direct access group."
      },
      {
        "Time_Start": 1515.92,
        "Time_End": 1522.1,
        "Text": " So this is shown when you try to connect to a VDI remotely over RDP without going to the"
      },
      {
        "Time_Start": 1522.1000000000001,
        "Time_End": 1524.94,
        "Text": " Citrix gateway."
      },
      {
        "Time_Start": 1524.94,
        "Time_End": 1531.14,
        "Text": " And this message is actually being shown on the user desktop while their Hive is already"
      },
      {
        "Time_Start": 1531.14,
        "Time_End": 1532.14,
        "Text": " loaded."
      },
      {
        "Time_Start": 1532.14,
        "Time_End": 1535.3400000000001,
        "Text": " So you can already see the implication there."
      },
      {
        "Time_Start": 1535.3400000000001,
        "Time_End": 1541.5000000000002,
        "Text": " Since the Hive is already loaded, we can connect again to the remote registry of this user,"
      },
      {
        "Time_Start": 1541.5000000000002,
        "Time_End": 1550.2600000000002,
        "Text": " modify some com objects related to the user, and afterwards click okay."
      },
      {
        "Time_Start": 1550.26,
        "Time_End": 1555.94,
        "Text": " And figure out that, yeah, apparently normally you would be logged out instantly again, but"
      },
      {
        "Time_Start": 1555.94,
        "Time_End": 1559.9,
        "Text": " since we broke something now, that mechanism doesn't work anymore and instead we get access"
      },
      {
        "Time_Start": 1559.9,
        "Time_End": 1564.62,
        "Text": " simply to the remote desktop of the user."
      },
      {
        "Time_Start": 1564.62,
        "Time_End": 1569.82,
        "Text": " So this bypassed potentially also some MFA requirements that the customer might have"
      },
      {
        "Time_Start": 1569.82,
        "Time_End": 1574.62,
        "Text": " set because you instantly connect to the VDI without maybe going through that gateway that"
      },
      {
        "Time_Start": 1574.62,
        "Time_End": 1578.54,
        "Text": " mandates MFA."
      },
      {
        "Time_Start": 1578.54,
        "Time_End": 1579.54,
        "Text": " Quick summary."
      },
      {
        "Time_Start": 1579.54,
        "Time_End": 1589.54,
        "Text": " So we looked at some remote reconnaissance, some information leaks related to RPC, ADCS"
      },
      {
        "Time_Start": 1589.54,
        "Time_End": 1594.26,
        "Text": " has some certificate templates stored in the registry that we can obtain."
      },
      {
        "Time_Start": 1594.26,
        "Time_End": 1601.82,
        "Text": " We can figure out a course authentication in the registry and there's also ways to use"
      },
      {
        "Time_Start": 1602.22,
        "Time_End": 1609.22,
        "Text": " basically still com hijacking, a known technique, but also use that for lateral movement."
      },
      {
        "Time_Start": 1609.22,
        "Time_End": 1612.9399999999998,
        "Text": " If you want to learn more about registry, there's some great resources, Mysteries of"
      },
      {
        "Time_Start": 1612.9399999999998,
        "Time_End": 1616.1399999999999,
        "Text": " the Registry by Pavel Josifovic."
      },
      {
        "Time_Start": 1616.1399999999999,
        "Time_End": 1623.86,
        "Text": " There's also a great write-up by Joru on Project Zero blog on exploitation of registry vulnerabilities."
      },
      {
        "Time_Start": 1623.86,
        "Time_End": 1625.74,
        "Text": " And yeah, thank you."
      },
      {
        "Time_Start": 1625.74,
        "Time_End": 1633.9,
        "Text": " So we'll be sharing some blog posts in the next few weeks about remote registry."
      },
      {
        "Time_Start": 1633.9,
        "Time_End": 1640.46,
        "Text": " We'll also share blog posts about Grim Resource that may or may not have been a payload of"
      },
      {
        "Time_Start": 1640.46,
        "Time_End": 1642.8,
        "Text": " one of ours."
      },
      {
        "Time_Start": 1642.8,
        "Time_End": 1648.22,
        "Text": " And also Max has been working on this new tool for automating phishing attacks for device"
      },
      {
        "Time_Start": 1648.22,
        "Time_End": 1654.34,
        "Text": " code off based on research of Derek Young and yeah, something to look forward to."
      },
      {
        "Time_Start": 1654.34,
        "Time_End": 1655.34,
        "Text": " Thank you very much."
      },
      {
        "Time_Start": 1655.3400000000001,
        "Time_End": 1656.3400000000001,
        "Text": " Any questions?"
      },
      {
        "Time_Start": 1656.3400000000001,
        "Time_End": 1657.3400000000001,
        "Text": " Yes."
      },
      {
        "Time_Start": 1657.3400000000001,
        "Time_End": 1658.3400000000001,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1658.3400000000001,
        "Time_End": 1659.3400000000001,
        "Text": " Great talk."
      },
      {
        "Time_Start": 1659.3400000000001,
        "Time_End": 1674.94,
        "Text": " Has Citrix, have you informed them about this MFA bypass, direct access?"
      },
      {
        "Time_Start": 1674.94,
        "Time_End": 1681.94,
        "Text": " So the thing is I only realized while presenting this could be an MFA bypass, so no."
      },
      {
        "Time_Start": 1681.94,
        "Time_End": 1689.66,
        "Text": " But even the direct access group bypass is I guess also a vulnerability."
      },
      {
        "Time_Start": 1689.66,
        "Time_End": 1695.8200000000002,
        "Text": " Even the direct group membership bypass is, you know, you have IDP but you're not a member"
      },
      {
        "Time_Start": 1695.8200000000002,
        "Time_End": 1696.8200000000002,
        "Text": " of the direct group."
      },
      {
        "Time_Start": 1696.8200000000002,
        "Time_End": 1697.8200000000002,
        "Text": " Yes."
      },
      {
        "Time_Start": 1697.8200000000002,
        "Time_End": 1700.42,
        "Text": " But this is a bypass of that."
      },
      {
        "Time_Start": 1700.42,
        "Time_End": 1701.42,
        "Text": " Yes."
      },
      {
        "Time_Start": 1701.42,
        "Time_End": 1708.7,
        "Text": " So this was like a client environment where we tried to figure out what mechanism was"
      },
      {
        "Time_Start": 1708.7,
        "Time_End": 1711.1000000000001,
        "Text": " in place here, but we couldn't really find that back."
      },
      {
        "Time_Start": 1711.1000000000001,
        "Time_End": 1719.46,
        "Text": " Or even if it is a bypass in Citrix, but maybe it is."
      },
      {
        "Time_Start": 1719.46,
        "Time_End": 1726.38,
        "Text": " So the thing is normally the system shouldn't be directly reachable anyway, but here it"
      },
      {
        "Time_Start": 1726.38,
        "Time_End": 1727.38,
        "Text": " was."
      },
      {
        "Time_Start": 1727.38,
        "Time_End": 1728.38,
        "Text": " I shared it."
      },
      {
        "Time_Start": 1728.38,
        "Time_End": 1729.38,
        "Text": " Hmm?"
      },
      {
        "Time_Start": 1729.38,
        "Time_End": 1730.38,
        "Text": " I shared it."
      },
      {
        "Time_Start": 1730.38,
        "Time_End": 1731.38,
        "Text": " Yes."
      },
      {
        "Time_Start": 1731.38,
        "Time_End": 1742.3000000000002,
        "Text": " Are you planning to release like a blog post with more details about that Citrix bypass?"
      },
      {
        "Time_Start": 1742.3000000000002,
        "Time_End": 1746.1000000000001,
        "Text": " Or is that the information that we will get?"
      },
      {
        "Time_Start": 1746.1000000000001,
        "Time_End": 1752.8200000000002,
        "Text": " So the funny thing is we didn't really see the Citrix thing as that big of a deal because"
      },
      {
        "Time_Start": 1752.8200000000002,
        "Time_End": 1760.38,
        "Text": " normally it shouldn't be accessible anyway, but yeah we will be blogging about these vulnerabilities"
      },
      {
        "Time_Start": 1760.38,
        "Time_End": 1765.8600000000001,
        "Text": " in the remote registry in the next few weeks."
      },
      {
        "Time_Start": 1765.8600000000001,
        "Time_End": 1772.5800000000002,
        "Text": " That's cool, yeah, because in the Bloodhound Enterprise team we hear a lot about like customers"
      },
      {
        "Time_Start": 1772.5800000000002,
        "Time_End": 1782.6200000000001,
        "Text": " complaining about invalid CAN-RDP edges to Citrix machines and it sounds like that they're"
      },
      {
        "Time_Start": 1782.6200000000001,
        "Time_End": 1786.96,
        "Text": " not invalid based on what you showed here, at least in some cases."
      },
      {
        "Time_Start": 1786.96,
        "Time_End": 1790.48,
        "Text": " So yeah, that's why I think it's quite interesting."
      },
      {
        "Time_Start": 1790.48,
        "Time_End": 1792.68,
        "Text": " But thanks for a really great talk."
      },
      {
        "Time_Start": 1792.68,
        "Time_End": 1793.68,
        "Text": " Cheers."
      },
      {
        "Time_Start": 1801.68,
        "Time_End": 1808.76,
        "Text": " So during your research was CrowdStrike flagging these connections over RPS suspicious?"
      },
      {
        "Time_Start": 1808.76,
        "Time_End": 1810.76,
        "Text": " So not yet, I guess."
      },
      {
        "Time_Start": 1810.76,
        "Time_End": 1811.76,
        "Text": " No."
      },
      {
        "Time_Start": 1811.76,
        "Time_End": 1812.76,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1817.76,
        "Time_End": 1820.48,
        "Text": " Thank you for your talk."
      },
      {
        "Time_Start": 1820.48,
        "Time_End": 1828.0,
        "Text": " With the RPC ping feature, would you be able to force, for example, the web client service"
      },
      {
        "Time_Start": 1828.0,
        "Time_End": 1832.2,
        "Text": " from WebDAV to run on a server?"
      },
      {
        "Time_Start": 1832.2,
        "Time_End": 1835.76,
        "Text": " What was the question?"
      },
      {
        "Time_Start": 1835.76,
        "Time_End": 1843.04,
        "Text": " With the RPC ping feature that you showed that you used to run the DevQuery service,"
      },
      {
        "Time_Start": 1843.04,
        "Time_End": 1845.24,
        "Text": " would that be usable against WebDAV?"
      },
      {
        "Time_Start": 1845.52,
        "Time_End": 1850.4,
        "Text": " If it's not enabled but installed on the server, to force it to run?"
      },
      {
        "Time_Start": 1850.4,
        "Time_End": 1857.4,
        "Text": " If that works against the WebDAV client, no, not to my knowledge, no."
      },
      {
        "Time_Start": 1857.4,
        "Time_End": 1861.58,
        "Text": " There's only a limited amount of services that actually allow you to trigger them using"
      },
      {
        "Time_Start": 1861.58,
        "Time_End": 1865.08,
        "Text": " an RPC call."
      },
      {
        "Time_Start": 1865.08,
        "Time_End": 1869.08,
        "Text": " If you want to have a look at those, System Informer makes that really easy to look at"
      },
      {
        "Time_Start": 1869.08,
        "Time_End": 1873.08,
        "Text": " which ones do have these RPC interfaces that are triggerable."
      },
      {
        "Time_Start": 1873.08,
        "Time_End": 1874.08,
        "Text": " Sorry?"
      },
      {
        "Time_Start": 1874.8999999999999,
        "Time_End": 1880.6399999999999,
        "Text": " Oh sorry, your question was about RPC filtering specifically."
      },
      {
        "Time_Start": 1880.6399999999999,
        "Time_End": 1883.28,
        "Text": " No?"
      },
      {
        "Time_Start": 1883.28,
        "Time_End": 1885.32,
        "Text": " Okay."
      },
      {
        "Time_Start": 1885.32,
        "Time_End": 1887.52,
        "Text": " No more questions."
      },
      {
        "Time_Start": 1887.52,
        "Time_End": 1893.0,
        "Text": " So thank you again, Cedric and Max, for your talk."
      },
      {
        "Time_Start": 1893.0,
        "Time_End": 1894.0,
        "Text": " Welcome."
      },
      {
        "Time_Start": 1894.0,
        "Time_End": 1895.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1895.0,
        "Time_End": 1896.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1896.0,
        "Time_End": 1897.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1897.0,
        "Time_End": 1898.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1898.0,
        "Time_End": 1899.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1899.0,
        "Time_End": 1900.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1900.0,
        "Time_End": 1901.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1901.0,
        "Time_End": 1902.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1902.0,
        "Time_End": 1903.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1903.0,
        "Time_End": 1904.0,
        "Text": " Thank you."
      },
      {
        "Time_Start": 1904.0,
        "Time_End": 1906.06,
        "Text": " you"
      }
    ]
  }
}